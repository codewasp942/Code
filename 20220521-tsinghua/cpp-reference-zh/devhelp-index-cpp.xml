<?xml version='1.0' encoding='utf-8'?>
<book xmlns="http://www.devhelp.net/book" title="C++ Standard Library reference" name="cppreference-doc-zh-cpp" base="D:/msys64/usr/share/cppreference/doc/html" link="cpp" version="2" language="c++">
  <chapters xmlns="http://www.devhelp.net/book">
    <sub name="Language" link="cpp/language"/>
    <sub name="Headers" link="cpp/header">
        <sub name="algorithm" link="cpp/header/algorithm"/>
        <sub name="any" link="cpp/header/any"/>
        <sub name="array" link="cpp/header/array"/>
        <sub name="atomic" link="cpp/header/atomic"/>
        <sub name="bit" link="cpp/header/bit"/>
        <sub name="bitset" link="cpp/header/bitset"/>
        <sub name="cassert" link="cpp/header/cassert"/>
        <sub name="ccomplex" link="cpp/header/ccomplex"/>
        <sub name="cctype" link="cpp/header/cctype"/>
        <sub name="cerrno" link="cpp/header/cerrno"/>
        <sub name="cfenv" link="cpp/header/cfenv"/>
        <sub name="cfloat" link="cpp/header/cfloat"/>
        <sub name="charconv" link="cpp/header/charconv"/>
        <sub name="chrono" link="cpp/header/chrono"/>
        <sub name="cinttypes" link="cpp/header/cinttypes"/>
        <sub name="ciso646" link="cpp/header/ciso646"/>
        <sub name="climits" link="cpp/header/climits"/>
        <sub name="clocale" link="cpp/header/clocale"/>
        <sub name="cmath" link="cpp/header/cmath"/>
        <sub name="codecvt" link="cpp/header/codecvt"/>
        <sub name="compare" link="cpp/header/compare"/>
        <sub name="complex" link="cpp/header/complex"/>
        <sub name="concepts" link="cpp/header/concepts"/>
        <sub name="condition_variable" link="cpp/header/condition_variable"/>
        <sub name="contract" link="cpp/header/contract"/>
        <sub name="csetjmp" link="cpp/header/csetjmp"/>
        <sub name="csignal" link="cpp/header/csignal"/>
        <sub name="cstdalign" link="cpp/header/cstdalign"/>
        <sub name="cstdarg" link="cpp/header/cstdarg"/>
        <sub name="cstdbool" link="cpp/header/cstdbool"/>
        <sub name="cstddef" link="cpp/header/cstddef"/>
        <sub name="cstdint" link="cpp/header/cstdint"/>
        <sub name="cstdio" link="cpp/header/cstdio"/>
        <sub name="cstdlib" link="cpp/header/cstdlib"/>
        <sub name="cstring" link="cpp/header/cstring"/>
        <sub name="ctgmath" link="cpp/header/ctgmath"/>
        <sub name="ctime" link="cpp/header/ctime"/>
        <sub name="cuchar" link="cpp/header/cuchar"/>
        <sub name="cwchar" link="cpp/header/cwchar"/>
        <sub name="cwctype" link="cpp/header/cwctype"/>
        <sub name="deque" link="cpp/header/deque"/>
        <sub name="exception" link="cpp/header/exception"/>
        <sub name="execution" link="cpp/header/execution"/>
        <sub name="filesystem" link="cpp/header/filesystem"/>
        <sub name="forward_list" link="cpp/header/forward_list"/>
        <sub name="fstream" link="cpp/header/fstream"/>
        <sub name="functional" link="cpp/header/functional"/>
        <sub name="future" link="cpp/header/future"/>
        <sub name="initializer_list" link="cpp/header/initializer_list"/>
        <sub name="iomanip" link="cpp/header/iomanip"/>
        <sub name="ios" link="cpp/header/ios"/>
        <sub name="iosfwd" link="cpp/header/iosfwd"/>
        <sub name="iostream" link="cpp/header/iostream"/>
        <sub name="istream" link="cpp/header/istream"/>
        <sub name="iterator" link="cpp/header/iterator"/>
        <sub name="limits" link="cpp/header/limits"/>
        <sub name="list" link="cpp/header/list"/>
        <sub name="locale" link="cpp/header/locale"/>
        <sub name="map" link="cpp/header/map"/>
        <sub name="memory" link="cpp/header/memory"/>
        <sub name="memory_resource" link="cpp/header/memory_resource"/>
        <sub name="mutex" link="cpp/header/mutex"/>
        <sub name="new" link="cpp/header/new"/>
        <sub name="numeric" link="cpp/header/numeric"/>
        <sub name="optional" link="cpp/header/optional"/>
        <sub name="ostream" link="cpp/header/ostream"/>
        <sub name="queue" link="cpp/header/queue"/>
        <sub name="random" link="cpp/header/random"/>
        <sub name="ranges" link="cpp/header/ranges"/>
        <sub name="ratio" link="cpp/header/ratio"/>
        <sub name="regex" link="cpp/header/regex"/>
        <sub name="scoped_allocator" link="cpp/header/scoped_allocator"/>
        <sub name="set" link="cpp/header/set"/>
        <sub name="shared_mutex" link="cpp/header/shared_mutex"/>
        <sub name="span" link="cpp/header/span"/>
        <sub name="sstream" link="cpp/header/sstream"/>
        <sub name="stack" link="cpp/header/stack"/>
        <sub name="stdexcept" link="cpp/header/stdexcept"/>
        <sub name="streambuf" link="cpp/header/streambuf"/>
        <sub name="string" link="cpp/header/string"/>
        <sub name="string_view" link="cpp/header/string_view"/>
        <sub name="strstream" link="cpp/header/strstream"/>
        <sub name="syncstream" link="cpp/header/syncstream"/>
        <sub name="system_error" link="cpp/header/system_error"/>
        <sub name="thread" link="cpp/header/thread"/>
        <sub name="tuple" link="cpp/header/tuple"/>
        <sub name="type_traits" link="cpp/header/type_traits"/>
        <sub name="typeindex" link="cpp/header/typeindex"/>
        <sub name="typeinfo" link="cpp/header/typeinfo"/>
        <sub name="unordered_map" link="cpp/header/unordered_map"/>
        <sub name="unordered_set" link="cpp/header/unordered_set"/>
        <sub name="utility" link="cpp/header/utility"/>
        <sub name="valarray" link="cpp/header/valarray"/>
        <sub name="variant" link="cpp/header/variant"/>
        <sub name="vector" link="cpp/header/vector"/>
        <sub name="version" link="cpp/header/version"/>
    </sub>
    <sub name="Named requirements" link="cpp/named_req"/>
    <sub name="Feature test macros" link="cpp/feature_test"/>
    <sub name="Concepts library" link="cpp/concepts"/>
    <sub name="Diagnostics library" link="cpp/error"/>
    <sub name="Utilities library" link="cpp/utility">
        <sub name="Type support" link="cpp/types"/>
        <sub name="Program utilities" link="cpp/utility/program"/>
        <sub name="Dynamic memory management" link="cpp/memory"/>
        <sub name="std::initializer_list" link="cpp/utility/initializer_list"/>
        <sub name="Date and time" link="cpp/chrono"/>
        <sub name="std::bitset" link="cpp/utility/bitset"/>
        <sub name="Function objects" link="cpp/utility/functional"/>
        <sub name="std::hash" link="cpp/utility/hash"/>
        <sub name="std::pair" link="cpp/utility/pair"/>
        <sub name="std::tuple" link="cpp/utility/tuple"/>
        <sub name="std::optional" link="cpp/utility/optional"/>
        <sub name="std::any" link="cpp/utility/any"/>
        <sub name="std::variant" link="cpp/utility/variant"/>
    </sub>
    <sub name="Strings library" link="cpp/string">
        <sub name="Null terminated byte strings" link="cpp/string/byte"/>
        <sub name="Null terminated multibyte strings" link="cpp/string/multibyte"/>
        <sub name="Null terminated wide strings" link="cpp/string/wide"/>
        <sub name="std::basic_string" link="cpp/string/basic_string"/>
        <sub name="std::basic_string_view" link="cpp/string/basic_string_view"/>
        <sub name="std::char_traits" link="cpp/string/char_traits"/>
    </sub>
    <sub name="Containers library" link="cpp/container">
        <sub name="std::array" link="cpp/container/array"/>
        <sub name="std::vector" link="cpp/container/vector"/>
        <sub name="std::deque" link="cpp/container/deque"/>
        <sub name="std::list" link="cpp/container/list"/>
        <sub name="std::forward_list" link="cpp/container/forward_list"/>
        <sub name="std::set" link="cpp/container/set"/>
        <sub name="std::multiset" link="cpp/container/multiset"/>
        <sub name="std::map" link="cpp/container/map"/>
        <sub name="std::multimap" link="cpp/container/multimap"/>
        <sub name="std::unordered_set" link="cpp/container/unordered_set"/>
        <sub name="std::unordered_multiset" link="cpp/container/unordered_multiset"/>
        <sub name="std::unordered_map" link="cpp/container/unordered_map"/>
        <sub name="std::unordered_multimap" link="cpp/container/unordered_multimap"/>
        <sub name="std::stack" link="cpp/container/stack"/>
        <sub name="std::queue" link="cpp/container/queue"/>
        <sub name="std::priority_queue" link="cpp/container/priority_queue"/>
        <sub name="std::span" link="cpp/container/span"/>
    </sub>
    <sub name="Algorithms library" link="cpp/algorithm"/>
    <sub name="Iterators library" link="cpp/iterator"/>
    <sub name="Ranges library" link="cpp/ranges"/>
    <sub name="Numerics library" link="cpp/numeric">
        <sub name="Common mathematical functions" link="cpp/numeric/math"/>
        <sub name="Special math functions" link="cpp/numeric/special_math"/>
        <sub name="Complex numbers" link="cpp/numeric/complex"/>
        <sub name="Compile time rational arithmetic" link="cpp/numeric/ratio"/>
        <sub name="Pseudo-random number generation" link="cpp/numeric/random"/>
        <sub name="Numeric arrays" link="cpp/numeric/valarray"/>
        <sub name="Floating-point environment" link="cpp/numeric/fenv"/>
    </sub>
    <sub name="Input/output library" link="cpp/io">
        <sub name="std::basic_streambuf" link="cpp/io/basic_streambuf"/>
        <sub name="std::basic_filebuf" link="cpp/io/basic_filebuf"/>
        <sub name="std::basic_stringbuf" link="cpp/io/basic_stringbuf"/>
        <sub name="std::ios_base" link="cpp/io/ios_base"/>
        <sub name="std::basic_ios" link="cpp/io/basic_ios"/>
        <sub name="std::basic_istream" link="cpp/io/basic_istream"/>
        <sub name="std::basic_ostream" link="cpp/io/basic_ostream"/>
        <sub name="std::basic_iostream" link="cpp/io/basic_iostream"/>
        <sub name="std::basic_ifstream" link="cpp/io/basic_ifstream"/>
        <sub name="std::basic_ofstream" link="cpp/io/basic_ofstream"/>
        <sub name="std::basic_fstream" link="cpp/io/basic_fstream"/>
        <sub name="std::basic_istringstream" link="cpp/io/basic_istringstream"/>
        <sub name="std::basic_ostringstream" link="cpp/io/basic_ostringstream"/>
        <sub name="std::basic_stringstream" link="cpp/io/basic_stringstream"/>
        <sub name="std::basic_syncbuf" link="cpp/io/basic_syncbuf"/>
        <sub name="std::basic_osyncstream" link="cpp/io/basic_osyncstream"/>
        <sub name="I/O Manipulators" link="cpp/io/manip"/>
        <sub name="C-style I/O" link="cpp/io/c"/>
    </sub>
    <sub name="Localizations library" link="cpp/locale"/>
    <sub name="Regular expression library" link="cpp/regex"/>
    <sub name="Atomic operations library" link="cpp/atomic"/>
    <sub name="Thread support library" link="cpp/thread"/>
    <sub name="Filesystem library" link="cpp/filesystem"/>
    <sub name="Technical specifications" link="cpp/experimental"/>
</chapters>
  <functions>
    <keyword type="typedef" name="std::size_t" link="cpp/types/size_t"/>
    <keyword type="typedef" name="std::ptrdiff_t" link="cpp/types/ptrdiff_t"/>
    <keyword type="typedef" name="std::nullptr_t" link="cpp/types/nullptr_t"/>
    <keyword type="macro" name="NULL" link="cpp/types/NULL"/>
    <keyword type="typedef" name="std::max_align_t" link="cpp/types/max_align_t"/>
    <keyword type="function" name="offsetof" link="cpp/types/offsetof"/>
    <keyword type="class" name="std::byte" link="cpp/types/byte"/>
    <keyword type="function" name="std::to_integer(std::byte)" link="cpp/types/byte"/>
    <keyword type="function" name="operator&lt;&lt;=(std::byte)" link="cpp/types/byte"/>
    <keyword type="function" name="operator&gt;&gt;=(std::byte)" link="cpp/types/byte"/>
    <keyword type="function" name="operator&lt;&lt;(std::byte)" link="cpp/types/byte"/>
    <keyword type="function" name="operator&gt;&gt;(std::byte)" link="cpp/types/byte"/>
    <keyword type="function" name="operator|=(std::byte)" link="cpp/types/byte"/>
    <keyword type="function" name="operator&amp;=(std::byte)" link="cpp/types/byte"/>
    <keyword type="function" name="operator^=(std::byte)" link="cpp/types/byte"/>
    <keyword type="function" name="operator|(std::byte)" link="cpp/types/byte"/>
    <keyword type="function" name="operator&amp;(std::byte)" link="cpp/types/byte"/>
    <keyword type="function" name="operator^(std::byte)" link="cpp/types/byte"/>
    <keyword type="function" name="operator~(std::byte)" link="cpp/types/byte"/>
    <keyword type="typedef" name="std::int8_t" link="cpp/types/integer"/>
    <keyword type="typedef" name="std::int16_t" link="cpp/types/integer"/>
    <keyword type="typedef" name="std::int32_t" link="cpp/types/integer"/>
    <keyword type="typedef" name="std::int64_t" link="cpp/types/integer"/>
    <keyword type="typedef" name="std::int_fast8_t" link="cpp/types/integer"/>
    <keyword type="typedef" name="std::int_fast16_t" link="cpp/types/integer"/>
    <keyword type="typedef" name="std::int_fast32_t" link="cpp/types/integer"/>
    <keyword type="typedef" name="std::int_fast64_t" link="cpp/types/integer"/>
    <keyword type="typedef" name="std::int_least8_t" link="cpp/types/integer"/>
    <keyword type="typedef" name="std::int_least16_t" link="cpp/types/integer"/>
    <keyword type="typedef" name="std::int_least32_t" link="cpp/types/integer"/>
    <keyword type="typedef" name="std::int_least64_t" link="cpp/types/integer"/>
    <keyword type="typedef" name="std::intmax_t" link="cpp/types/integer"/>
    <keyword type="typedef" name="std::intptr_t" link="cpp/types/integer"/>
    <keyword type="typedef" name="std::uint8_t" link="cpp/types/integer"/>
    <keyword type="typedef" name="std::uint16_t" link="cpp/types/integer"/>
    <keyword type="typedef" name="std::uint32_t" link="cpp/types/integer"/>
    <keyword type="typedef" name="std::uint64_t" link="cpp/types/integer"/>
    <keyword type="typedef" name="std::uint_fast8_t" link="cpp/types/integer"/>
    <keyword type="typedef" name="std::uint_fast16_t" link="cpp/types/integer"/>
    <keyword type="typedef" name="std::uint_fast32_t" link="cpp/types/integer"/>
    <keyword type="typedef" name="std::uint_fast64_t" link="cpp/types/integer"/>
    <keyword type="typedef" name="std::uint_least8_t" link="cpp/types/integer"/>
    <keyword type="typedef" name="std::uint_least16_t" link="cpp/types/integer"/>
    <keyword type="typedef" name="std::uint_least32_t" link="cpp/types/integer"/>
    <keyword type="typedef" name="std::uint_least64_t" link="cpp/types/integer"/>
    <keyword type="typedef" name="std::uintmax_t" link="cpp/types/integer"/>
    <keyword type="typedef" name="std::uintptr_t" link="cpp/types/integer"/>
    <keyword type="macro" name="INT8_MIN" link="cpp/types/integer"/>
    <keyword type="macro" name="INT16_MIN" link="cpp/types/integer"/>
    <keyword type="macro" name="INT32_MIN" link="cpp/types/integer"/>
    <keyword type="macro" name="INT64_MIN" link="cpp/types/integer"/>
    <keyword type="macro" name="INT_FAST8_MIN" link="cpp/types/integer"/>
    <keyword type="macro" name="INT_FAST16_MIN" link="cpp/types/integer"/>
    <keyword type="macro" name="INT_FAST32_MIN" link="cpp/types/integer"/>
    <keyword type="macro" name="INT_FAST64_MIN" link="cpp/types/integer"/>
    <keyword type="macro" name="INT_LEAST8_MIN" link="cpp/types/integer"/>
    <keyword type="macro" name="INT_LEAST16_MIN" link="cpp/types/integer"/>
    <keyword type="macro" name="INT_LEAST32_MIN" link="cpp/types/integer"/>
    <keyword type="macro" name="INT_LEAST64_MIN" link="cpp/types/integer"/>
    <keyword type="macro" name="INTPTR_MIN" link="cpp/types/integer"/>
    <keyword type="macro" name="INTMAX_MIN" link="cpp/types/integer"/>
    <keyword type="macro" name="INT8_MAX" link="cpp/types/integer"/>
    <keyword type="macro" name="INT16_MAX" link="cpp/types/integer"/>
    <keyword type="macro" name="INT32_MAX" link="cpp/types/integer"/>
    <keyword type="macro" name="INT64_MAX" link="cpp/types/integer"/>
    <keyword type="macro" name="INT_FAST8_MAX" link="cpp/types/integer"/>
    <keyword type="macro" name="INT_FAST16_MAX" link="cpp/types/integer"/>
    <keyword type="macro" name="INT_FAST32_MAX" link="cpp/types/integer"/>
    <keyword type="macro" name="INT_FAST64_MAX" link="cpp/types/integer"/>
    <keyword type="macro" name="INT_LEAST8_MAX" link="cpp/types/integer"/>
    <keyword type="macro" name="INT_LEAST16_MAX" link="cpp/types/integer"/>
    <keyword type="macro" name="INT_LEAST32_MAX" link="cpp/types/integer"/>
    <keyword type="macro" name="INT_LEAST64_MAX" link="cpp/types/integer"/>
    <keyword type="macro" name="INTPTR_MAX" link="cpp/types/integer"/>
    <keyword type="macro" name="INTMAX_MAX" link="cpp/types/integer"/>
    <keyword type="macro" name="UINT8_MAX" link="cpp/types/integer"/>
    <keyword type="macro" name="UINT16_MAX" link="cpp/types/integer"/>
    <keyword type="macro" name="UINT32_MAX" link="cpp/types/integer"/>
    <keyword type="macro" name="UINT64_MAX" link="cpp/types/integer"/>
    <keyword type="macro" name="UINT_FAST8_MAX" link="cpp/types/integer"/>
    <keyword type="macro" name="UINT_FAST16_MAX" link="cpp/types/integer"/>
    <keyword type="macro" name="UINT_FAST32_MAX" link="cpp/types/integer"/>
    <keyword type="macro" name="UINT_FAST64_MAX" link="cpp/types/integer"/>
    <keyword type="macro" name="UINT_LEAST8_MAX" link="cpp/types/integer"/>
    <keyword type="macro" name="UINT_LEAST16_MAX" link="cpp/types/integer"/>
    <keyword type="macro" name="UINT_LEAST32_MAX" link="cpp/types/integer"/>
    <keyword type="macro" name="UINT_LEAST64_MAX" link="cpp/types/integer"/>
    <keyword type="macro" name="UINTPTR_MAX" link="cpp/types/integer"/>
    <keyword type="macro" name="UINTMAX_MAX" link="cpp/types/integer"/>
    <keyword type="macro" name="PRId8" link="cpp/types/integer"/>
    <keyword type="macro" name="PRId16" link="cpp/types/integer"/>
    <keyword type="macro" name="PRId32" link="cpp/types/integer"/>
    <keyword type="macro" name="PRId64" link="cpp/types/integer"/>
    <keyword type="macro" name="PRIdLEAST8" link="cpp/types/integer"/>
    <keyword type="macro" name="PRIdLEAST16" link="cpp/types/integer"/>
    <keyword type="macro" name="PRIdLEAST32" link="cpp/types/integer"/>
    <keyword type="macro" name="PRIdLEAST64" link="cpp/types/integer"/>
    <keyword type="macro" name="PRIdFAST8" link="cpp/types/integer"/>
    <keyword type="macro" name="PRIdFAST16" link="cpp/types/integer"/>
    <keyword type="macro" name="PRIdFAST32" link="cpp/types/integer"/>
    <keyword type="macro" name="PRIdFAST64" link="cpp/types/integer"/>
    <keyword type="macro" name="PRIdMAX" link="cpp/types/integer"/>
    <keyword type="macro" name="PRIdPTR" link="cpp/types/integer"/>
    <keyword type="macro" name="PRIi8" link="cpp/types/integer"/>
    <keyword type="macro" name="PRIi16" link="cpp/types/integer"/>
    <keyword type="macro" name="PRIi32" link="cpp/types/integer"/>
    <keyword type="macro" name="PRIi64" link="cpp/types/integer"/>
    <keyword type="macro" name="PRIiLEAST8" link="cpp/types/integer"/>
    <keyword type="macro" name="PRIiLEAST16" link="cpp/types/integer"/>
    <keyword type="macro" name="PRIiLEAST32" link="cpp/types/integer"/>
    <keyword type="macro" name="PRIiLEAST64" link="cpp/types/integer"/>
    <keyword type="macro" name="PRIiFAST8" link="cpp/types/integer"/>
    <keyword type="macro" name="PRIiFAST16" link="cpp/types/integer"/>
    <keyword type="macro" name="PRIiFAST32" link="cpp/types/integer"/>
    <keyword type="macro" name="PRIiFAST64" link="cpp/types/integer"/>
    <keyword type="macro" name="PRIiMAX" link="cpp/types/integer"/>
    <keyword type="macro" name="PRIiPTR" link="cpp/types/integer"/>
    <keyword type="macro" name="PRIu8" link="cpp/types/integer"/>
    <keyword type="macro" name="PRIu16" link="cpp/types/integer"/>
    <keyword type="macro" name="PRIu32" link="cpp/types/integer"/>
    <keyword type="macro" name="PRIu64" link="cpp/types/integer"/>
    <keyword type="macro" name="PRIuLEAST8" link="cpp/types/integer"/>
    <keyword type="macro" name="PRIuLEAST16" link="cpp/types/integer"/>
    <keyword type="macro" name="PRIuLEAST32" link="cpp/types/integer"/>
    <keyword type="macro" name="PRIuLEAST64" link="cpp/types/integer"/>
    <keyword type="macro" name="PRIuFAST8" link="cpp/types/integer"/>
    <keyword type="macro" name="PRIuFAST16" link="cpp/types/integer"/>
    <keyword type="macro" name="PRIuFAST32" link="cpp/types/integer"/>
    <keyword type="macro" name="PRIuFAST64" link="cpp/types/integer"/>
    <keyword type="macro" name="PRIuMAX" link="cpp/types/integer"/>
    <keyword type="macro" name="PRIuPTR" link="cpp/types/integer"/>
    <keyword type="macro" name="PRIo8" link="cpp/types/integer"/>
    <keyword type="macro" name="PRIo16" link="cpp/types/integer"/>
    <keyword type="macro" name="PRIo32" link="cpp/types/integer"/>
    <keyword type="macro" name="PRIo64" link="cpp/types/integer"/>
    <keyword type="macro" name="PRIoLEAST8" link="cpp/types/integer"/>
    <keyword type="macro" name="PRIoLEAST16" link="cpp/types/integer"/>
    <keyword type="macro" name="PRIoLEAST32" link="cpp/types/integer"/>
    <keyword type="macro" name="PRIoLEAST64" link="cpp/types/integer"/>
    <keyword type="macro" name="PRIoFAST8" link="cpp/types/integer"/>
    <keyword type="macro" name="PRIoFAST16" link="cpp/types/integer"/>
    <keyword type="macro" name="PRIoFAST32" link="cpp/types/integer"/>
    <keyword type="macro" name="PRIoFAST64" link="cpp/types/integer"/>
    <keyword type="macro" name="PRIoMAX" link="cpp/types/integer"/>
    <keyword type="macro" name="PRIoPTR" link="cpp/types/integer"/>
    <keyword type="macro" name="PRIx8" link="cpp/types/integer"/>
    <keyword type="macro" name="PRIx16" link="cpp/types/integer"/>
    <keyword type="macro" name="PRIx32" link="cpp/types/integer"/>
    <keyword type="macro" name="PRIx64" link="cpp/types/integer"/>
    <keyword type="macro" name="PRIxLEAST8" link="cpp/types/integer"/>
    <keyword type="macro" name="PRIxLEAST16" link="cpp/types/integer"/>
    <keyword type="macro" name="PRIxLEAST32" link="cpp/types/integer"/>
    <keyword type="macro" name="PRIxLEAST64" link="cpp/types/integer"/>
    <keyword type="macro" name="PRIxFAST8" link="cpp/types/integer"/>
    <keyword type="macro" name="PRIxFAST16" link="cpp/types/integer"/>
    <keyword type="macro" name="PRIxFAST32" link="cpp/types/integer"/>
    <keyword type="macro" name="PRIxFAST64" link="cpp/types/integer"/>
    <keyword type="macro" name="PRIxMAX" link="cpp/types/integer"/>
    <keyword type="macro" name="PRIxPTR" link="cpp/types/integer"/>
    <keyword type="macro" name="PRIX8" link="cpp/types/integer"/>
    <keyword type="macro" name="PRIX16" link="cpp/types/integer"/>
    <keyword type="macro" name="PRIX32" link="cpp/types/integer"/>
    <keyword type="macro" name="PRIX64" link="cpp/types/integer"/>
    <keyword type="macro" name="PRIXLEAST8" link="cpp/types/integer"/>
    <keyword type="macro" name="PRIXLEAST16" link="cpp/types/integer"/>
    <keyword type="macro" name="PRIXLEAST32" link="cpp/types/integer"/>
    <keyword type="macro" name="PRIXLEAST64" link="cpp/types/integer"/>
    <keyword type="macro" name="PRIXFAST8" link="cpp/types/integer"/>
    <keyword type="macro" name="PRIXFAST16" link="cpp/types/integer"/>
    <keyword type="macro" name="PRIXFAST32" link="cpp/types/integer"/>
    <keyword type="macro" name="PRIXFAST64" link="cpp/types/integer"/>
    <keyword type="macro" name="PRIXMAX" link="cpp/types/integer"/>
    <keyword type="macro" name="PRIXPTR" link="cpp/types/integer"/>
    <keyword type="macro" name="SCNd8" link="cpp/types/integer"/>
    <keyword type="macro" name="SCNd16" link="cpp/types/integer"/>
    <keyword type="macro" name="SCNd32" link="cpp/types/integer"/>
    <keyword type="macro" name="SCNd64" link="cpp/types/integer"/>
    <keyword type="macro" name="SCNdLEAST8" link="cpp/types/integer"/>
    <keyword type="macro" name="SCNdLEAST16" link="cpp/types/integer"/>
    <keyword type="macro" name="SCNdLEAST32" link="cpp/types/integer"/>
    <keyword type="macro" name="SCNdLEAST64" link="cpp/types/integer"/>
    <keyword type="macro" name="SCNdFAST8" link="cpp/types/integer"/>
    <keyword type="macro" name="SCNdFAST16" link="cpp/types/integer"/>
    <keyword type="macro" name="SCNdFAST32" link="cpp/types/integer"/>
    <keyword type="macro" name="SCNdFAST64" link="cpp/types/integer"/>
    <keyword type="macro" name="SCNdMAX" link="cpp/types/integer"/>
    <keyword type="macro" name="SCNdPTR" link="cpp/types/integer"/>
    <keyword type="macro" name="SCNi8" link="cpp/types/integer"/>
    <keyword type="macro" name="SCNi16" link="cpp/types/integer"/>
    <keyword type="macro" name="SCNi32" link="cpp/types/integer"/>
    <keyword type="macro" name="SCNi64" link="cpp/types/integer"/>
    <keyword type="macro" name="SCNiLEAST8" link="cpp/types/integer"/>
    <keyword type="macro" name="SCNiLEAST16" link="cpp/types/integer"/>
    <keyword type="macro" name="SCNiLEAST32" link="cpp/types/integer"/>
    <keyword type="macro" name="SCNiLEAST64" link="cpp/types/integer"/>
    <keyword type="macro" name="SCNiFAST8" link="cpp/types/integer"/>
    <keyword type="macro" name="SCNiFAST16" link="cpp/types/integer"/>
    <keyword type="macro" name="SCNiFAST32" link="cpp/types/integer"/>
    <keyword type="macro" name="SCNiFAST64" link="cpp/types/integer"/>
    <keyword type="macro" name="SCNiMAX" link="cpp/types/integer"/>
    <keyword type="macro" name="SCNiPTR" link="cpp/types/integer"/>
    <keyword type="macro" name="SCNu8" link="cpp/types/integer"/>
    <keyword type="macro" name="SCNu16" link="cpp/types/integer"/>
    <keyword type="macro" name="SCNu32" link="cpp/types/integer"/>
    <keyword type="macro" name="SCNu64" link="cpp/types/integer"/>
    <keyword type="macro" name="SCNuLEAST8" link="cpp/types/integer"/>
    <keyword type="macro" name="SCNuLEAST16" link="cpp/types/integer"/>
    <keyword type="macro" name="SCNuLEAST32" link="cpp/types/integer"/>
    <keyword type="macro" name="SCNuLEAST64" link="cpp/types/integer"/>
    <keyword type="macro" name="SCNuFAST8" link="cpp/types/integer"/>
    <keyword type="macro" name="SCNuFAST16" link="cpp/types/integer"/>
    <keyword type="macro" name="SCNuFAST32" link="cpp/types/integer"/>
    <keyword type="macro" name="SCNuFAST64" link="cpp/types/integer"/>
    <keyword type="macro" name="SCNuMAX" link="cpp/types/integer"/>
    <keyword type="macro" name="SCNuPTR" link="cpp/types/integer"/>
    <keyword type="macro" name="SCNo8" link="cpp/types/integer"/>
    <keyword type="macro" name="SCNo16" link="cpp/types/integer"/>
    <keyword type="macro" name="SCNo32" link="cpp/types/integer"/>
    <keyword type="macro" name="SCNo64" link="cpp/types/integer"/>
    <keyword type="macro" name="SCNoLEAST8" link="cpp/types/integer"/>
    <keyword type="macro" name="SCNoLEAST16" link="cpp/types/integer"/>
    <keyword type="macro" name="SCNoLEAST32" link="cpp/types/integer"/>
    <keyword type="macro" name="SCNoLEAST64" link="cpp/types/integer"/>
    <keyword type="macro" name="SCNoFAST8" link="cpp/types/integer"/>
    <keyword type="macro" name="SCNoFAST16" link="cpp/types/integer"/>
    <keyword type="macro" name="SCNoFAST32" link="cpp/types/integer"/>
    <keyword type="macro" name="SCNoFAST64" link="cpp/types/integer"/>
    <keyword type="macro" name="SCNoMAX" link="cpp/types/integer"/>
    <keyword type="macro" name="SCNoPTR" link="cpp/types/integer"/>
    <keyword type="macro" name="SCNx8" link="cpp/types/integer"/>
    <keyword type="macro" name="SCNx16" link="cpp/types/integer"/>
    <keyword type="macro" name="SCNx32" link="cpp/types/integer"/>
    <keyword type="macro" name="SCNx64" link="cpp/types/integer"/>
    <keyword type="macro" name="SCNxLEAST8" link="cpp/types/integer"/>
    <keyword type="macro" name="SCNxLEAST16" link="cpp/types/integer"/>
    <keyword type="macro" name="SCNxLEAST32" link="cpp/types/integer"/>
    <keyword type="macro" name="SCNxLEAST64" link="cpp/types/integer"/>
    <keyword type="macro" name="SCNxFAST8" link="cpp/types/integer"/>
    <keyword type="macro" name="SCNxFAST16" link="cpp/types/integer"/>
    <keyword type="macro" name="SCNxFAST32" link="cpp/types/integer"/>
    <keyword type="macro" name="SCNxFAST64" link="cpp/types/integer"/>
    <keyword type="macro" name="SCNxMAX" link="cpp/types/integer"/>
    <keyword type="macro" name="SCNxPTR" link="cpp/types/integer"/>
    <keyword type="class" name="std::numeric_limits" link="cpp/types/numeric_limits"/>
    <keyword type="macro" name="std::numeric_limits::is_specialized" link="cpp/types/numeric_limits/is_specialized"/>
    <keyword type="macro" name="std::numeric_limits::is_signed" link="cpp/types/numeric_limits/is_signed"/>
    <keyword type="macro" name="std::numeric_limits::is_integer" link="cpp/types/numeric_limits/is_integer"/>
    <keyword type="macro" name="std::numeric_limits::is_exact" link="cpp/types/numeric_limits/is_exact"/>
    <keyword type="macro" name="std::numeric_limits::has_infinity" link="cpp/types/numeric_limits/has_infinity"/>
    <keyword type="macro" name="std::numeric_limits::has_quiet_NaN" link="cpp/types/numeric_limits/has_quiet_NaN"/>
    <keyword type="macro" name="std::numeric_limits::has_signaling_NaN" link="cpp/types/numeric_limits/has_signaling_NaN"/>
    <keyword type="macro" name="std::numeric_limits::has_denorm" link="cpp/types/numeric_limits/has_denorm"/>
    <keyword type="macro" name="std::numeric_limits::has_denorm_loss" link="cpp/types/numeric_limits/has_denorm_loss"/>
    <keyword type="macro" name="std::numeric_limits::round_style" link="cpp/types/numeric_limits/round_style"/>
    <keyword type="macro" name="std::numeric_limits::is_iec559" link="cpp/types/numeric_limits/is_iec559"/>
    <keyword type="macro" name="std::numeric_limits::is_bounded" link="cpp/types/numeric_limits/is_bounded"/>
    <keyword type="macro" name="std::numeric_limits::is_modulo" link="cpp/types/numeric_limits/is_modulo"/>
    <keyword type="macro" name="std::numeric_limits::digits" link="cpp/types/numeric_limits/digits"/>
    <keyword type="macro" name="std::numeric_limits::digits10" link="cpp/types/numeric_limits/digits10"/>
    <keyword type="macro" name="std::numeric_limits::max_digits10" link="cpp/types/numeric_limits/max_digits10"/>
    <keyword type="macro" name="std::numeric_limits::radix" link="cpp/types/numeric_limits/radix"/>
    <keyword type="macro" name="std::numeric_limits::min_exponent" link="cpp/types/numeric_limits/min_exponent"/>
    <keyword type="macro" name="std::numeric_limits::min_exponent10" link="cpp/types/numeric_limits/min_exponent10"/>
    <keyword type="macro" name="std::numeric_limits::max_exponent" link="cpp/types/numeric_limits/max_exponent"/>
    <keyword type="macro" name="std::numeric_limits::max_exponent10" link="cpp/types/numeric_limits/max_exponent10"/>
    <keyword type="macro" name="std::numeric_limits::traps" link="cpp/types/numeric_limits/traps"/>
    <keyword type="macro" name="std::numeric_limits::tinyness_before" link="cpp/types/numeric_limits/tinyness_before"/>
    <keyword type="function" name="std::numeric_limits::min" link="cpp/types/numeric_limits/min"/>
    <keyword type="function" name="std::numeric_limits::max" link="cpp/types/numeric_limits/max"/>
    <keyword type="function" name="std::numeric_limits::lowest" link="cpp/types/numeric_limits/lowest"/>
    <keyword type="function" name="std::numeric_limits::epsilon" link="cpp/types/numeric_limits/epsilon"/>
    <keyword type="function" name="std::numeric_limits::round_error" link="cpp/types/numeric_limits/round_error"/>
    <keyword type="function" name="std::numeric_limits::infinity" link="cpp/types/numeric_limits/infinity"/>
    <keyword type="function" name="std::numeric_limits::quiet_NaN" link="cpp/types/numeric_limits/quiet_NaN"/>
    <keyword type="function" name="std::numeric_limits::signaling_NaN" link="cpp/types/numeric_limits/signaling_NaN"/>
    <keyword type="function" name="std::numeric_limits::denorm_min" link="cpp/types/numeric_limits/denorm_min"/>
    <keyword type="enum" name="std::float_round_style" link="cpp/types/numeric_limits/float_round_style"/>
    <keyword type="macro" name="std::round_indeterminate" link="cpp/types/numeric_limits/float_round_style"/>
    <keyword type="macro" name="std::round_toward_zero" link="cpp/types/numeric_limits/float_round_style"/>
    <keyword type="macro" name="std::round_to_nearest" link="cpp/types/numeric_limits/float_round_style"/>
    <keyword type="macro" name="std::round_toward_infinity" link="cpp/types/numeric_limits/float_round_style"/>
    <keyword type="macro" name="std::round_toward_neg_infinity" link="cpp/types/numeric_limits/float_round_style"/>
    <keyword type="enum" name="std::float_denorm_style" link="cpp/types/numeric_limits/float_denorm_style"/>
    <keyword type="macro" name="std::denorm_indeterminate" link="cpp/types/numeric_limits/float_denorm_style"/>
    <keyword type="macro" name="std::denorm_absent" link="cpp/types/numeric_limits/float_denorm_style"/>
    <keyword type="macro" name="std::denorm_present" link="cpp/types/numeric_limits/float_denorm_style"/>
    <keyword type="macro" name="PTRDIFF_MIN" link="cpp/types/climits"/>
    <keyword type="macro" name="PTRDIFF_MAX" link="cpp/types/climits"/>
    <keyword type="macro" name="SIZE_MAX" link="cpp/types/climits"/>
    <keyword type="macro" name="SIG_ATOMIC_MIN" link="cpp/types/climits"/>
    <keyword type="macro" name="SIG_ATOMIC_MAX" link="cpp/types/climits"/>
    <keyword type="macro" name="WCHAR_MIN" link="cpp/types/climits"/>
    <keyword type="macro" name="WCHAR_MAX" link="cpp/types/climits"/>
    <keyword type="macro" name="WINT_MIN" link="cpp/types/climits"/>
    <keyword type="macro" name="WINT_MAX" link="cpp/types/climits"/>
    <keyword type="macro" name="CHAR_BIT" link="cpp/types/climits"/>
    <keyword type="macro" name="MB_LEN_MAX" link="cpp/types/climits"/>
    <keyword type="macro" name="CHAR_MIN" link="cpp/types/climits"/>
    <keyword type="macro" name="CHAR_MAX" link="cpp/types/climits"/>
    <keyword type="macro" name="SCHAR_MIN" link="cpp/types/climits"/>
    <keyword type="macro" name="SHRT_MIN" link="cpp/types/climits"/>
    <keyword type="macro" name="INT_MIN" link="cpp/types/climits"/>
    <keyword type="macro" name="LONG_MIN" link="cpp/types/climits"/>
    <keyword type="macro" name="LLONG_MIN" link="cpp/types/climits"/>
    <keyword type="macro" name="SCHAR_MAX" link="cpp/types/climits"/>
    <keyword type="macro" name="SHRT_MAX" link="cpp/types/climits"/>
    <keyword type="macro" name="INT_MAX" link="cpp/types/climits"/>
    <keyword type="macro" name="LONG_MAX" link="cpp/types/climits"/>
    <keyword type="macro" name="LLONG_MAX" link="cpp/types/climits"/>
    <keyword type="macro" name="UCHAR_MAX" link="cpp/types/climits"/>
    <keyword type="macro" name="USHRT_MAX" link="cpp/types/climits"/>
    <keyword type="macro" name="UINT_MAX" link="cpp/types/climits"/>
    <keyword type="macro" name="ULONG_MAX" link="cpp/types/climits"/>
    <keyword type="macro" name="ULLONG_MAX" link="cpp/types/climits"/>
    <keyword type="macro" name="FLT_RADIX" link="cpp/types/climits"/>
    <keyword type="macro" name="DECIMAL_DIG" link="cpp/types/climits"/>
    <keyword type="macro" name="FLT_DECIMAL_DIG" link="cpp/types/climits"/>
    <keyword type="macro" name="DBL_DECIMAL_DIG" link="cpp/types/climits"/>
    <keyword type="macro" name="LDBL_DECIMAL_DIG" link="cpp/types/climits"/>
    <keyword type="macro" name="FLT_MIN" link="cpp/types/climits"/>
    <keyword type="macro" name="DBL_MIN" link="cpp/types/climits"/>
    <keyword type="macro" name="LDBL_MIN" link="cpp/types/climits"/>
    <keyword type="macro" name="FLT_TRUE_MIN" link="cpp/types/climits"/>
    <keyword type="macro" name="DBL_TRUE_MIN" link="cpp/types/climits"/>
    <keyword type="macro" name="LDBL_TRUE_MIN" link="cpp/types/climits"/>
    <keyword type="macro" name="FLT_MAX" link="cpp/types/climits"/>
    <keyword type="macro" name="DBL_MAX" link="cpp/types/climits"/>
    <keyword type="macro" name="LDBL_MAX" link="cpp/types/climits"/>
    <keyword type="macro" name="FLT_EPSILON" link="cpp/types/climits"/>
    <keyword type="macro" name="DBL_EPSILON" link="cpp/types/climits"/>
    <keyword type="macro" name="LDBL_EPSILON" link="cpp/types/climits"/>
    <keyword type="macro" name="FLT_DIG" link="cpp/types/climits"/>
    <keyword type="macro" name="DBL_DIG" link="cpp/types/climits"/>
    <keyword type="macro" name="LDBL_DIG" link="cpp/types/climits"/>
    <keyword type="macro" name="FLT_MANT_DIG" link="cpp/types/climits"/>
    <keyword type="macro" name="DBL_MANT_DIG" link="cpp/types/climits"/>
    <keyword type="macro" name="LDBL_MANT_DIG" link="cpp/types/climits"/>
    <keyword type="macro" name="FLT_MIN_EXP" link="cpp/types/climits"/>
    <keyword type="macro" name="DBL_MIN_EXP" link="cpp/types/climits"/>
    <keyword type="macro" name="LDBL_MIN_EXP" link="cpp/types/climits"/>
    <keyword type="macro" name="FLT_MIN_10_EXP" link="cpp/types/climits"/>
    <keyword type="macro" name="DBL_MIN_10_EXP" link="cpp/types/climits"/>
    <keyword type="macro" name="LDBL_MIN_10_EXP" link="cpp/types/climits"/>
    <keyword type="macro" name="FLT_MAX_EXP" link="cpp/types/climits"/>
    <keyword type="macro" name="DBL_MAX_EXP" link="cpp/types/climits"/>
    <keyword type="macro" name="LDBL_MAX_EXP" link="cpp/types/climits"/>
    <keyword type="macro" name="FLT_MAX_10_EXP" link="cpp/types/climits"/>
    <keyword type="macro" name="DBL_MAX_10_EXP" link="cpp/types/climits"/>
    <keyword type="macro" name="LDBL_MAX_10_EXP" link="cpp/types/climits"/>
    <keyword type="macro" name="FLT_ROUNDS" link="cpp/types/climits/FLT_ROUNDS"/>
    <keyword type="macro" name="FLT_EVAL_METHOD" link="cpp/types/climits/FLT_EVAL_METHOD"/>
    <keyword type="macro" name="FLT_HAS_SUBNORM" link="cpp/types/climits"/>
    <keyword type="macro" name="DBL_HAS_SUBNORM" link="cpp/types/climits"/>
    <keyword type="macro" name="LDBL_HAS_SUBNORM" link="cpp/types/climits"/>
    <keyword type="class" name="std::type_info" link="cpp/types/type_info"/>
    <keyword type="function" name="std::type_info::operator==" link="cpp/types/type_info/operator_cmp"/>
    <keyword type="function" name="std::type_info::operator!=" link="cpp/types/type_info/operator_cmp"/>
    <keyword type="function" name="std::type_info::before" link="cpp/types/type_info/before"/>
    <keyword type="function" name="std::type_info::hash_code" link="cpp/types/type_info/hash_code"/>
    <keyword type="function" name="std::type_info::name" link="cpp/types/type_info/name"/>
    <keyword type="class" name="std::type_index" link="cpp/types/type_index"/>
    <keyword type="function" name="std::type_index::type_index" link="cpp/types/type_index/type_index"/>
    <keyword type="function" name="std::type_index::operator==" link="cpp/types/type_index/operator_cmp"/>
    <keyword type="function" name="std::type_index::operator!=" link="cpp/types/type_index/operator_cmp"/>
    <keyword type="function" name="std::type_index::operator&lt;=" link="cpp/types/type_index/operator_cmp"/>
    <keyword type="function" name="std::type_index::operator&lt;" link="cpp/types/type_index/operator_cmp"/>
    <keyword type="function" name="std::type_index::operator&gt;=" link="cpp/types/type_index/operator_cmp"/>
    <keyword type="function" name="std::type_index::operator&gt;" link="cpp/types/type_index/operator_cmp"/>
    <keyword type="function" name="std::type_index::hash_code" link="cpp/types/type_index/hash_code"/>
    <keyword type="function" name="std::type_index::name" link="cpp/types/type_index/name"/>
    <keyword type="class" name="std::hash&lt;std::type_index&gt;" link="cpp/types/type_index/hash"/>
    <keyword type="class" name="std::bad_typeid" link="cpp/types/bad_typeid"/>
    <keyword type="function" name="std::bad_typeid::what" link="cpp/error/exception/what"/>
    <keyword type="function" name="std::bad_typeid::bad_typeid" link="cpp/types/bad_typeid/bad_typeid"/>
    <keyword type="class" name="std::bad_cast" link="cpp/types/bad_cast"/>
    <keyword type="function" name="std::bad_cast::what" link="cpp/error/exception/what"/>
    <keyword type="function" name="std::bad_cast::bad_cast" link="cpp/types/bad_cast/bad_cast"/>
    <keyword type="class" name="std::is_void" link="cpp/types/is_void"/>
    <keyword type="" name="std::is_void_v" link="cpp/types/is_void"/>
    <keyword type="class" name="std::is_null_pointer" link="cpp/types/is_null_pointer"/>
    <keyword type="" name="std::is_null_pointer_v" link="cpp/types/is_null_pointer"/>
    <keyword type="class" name="std::is_integral" link="cpp/types/is_integral"/>
    <keyword type="" name="std::is_integral_v" link="cpp/types/is_integral"/>
    <keyword type="class" name="std::is_floating_point" link="cpp/types/is_floating_point"/>
    <keyword type="" name="std::is_floating_point_v" link="cpp/types/is_floating_point"/>
    <keyword type="class" name="std::is_array" link="cpp/types/is_array"/>
    <keyword type="" name="std::is_array_v" link="cpp/types/is_array"/>
    <keyword type="class" name="std::is_enum" link="cpp/types/is_enum"/>
    <keyword type="" name="std::is_enum_v" link="cpp/types/is_enum"/>
    <keyword type="class" name="std::is_union" link="cpp/types/is_union"/>
    <keyword type="" name="std::is_union_v" link="cpp/types/is_union"/>
    <keyword type="class" name="std::is_class" link="cpp/types/is_class"/>
    <keyword type="" name="std::is_class_v" link="cpp/types/is_class"/>
    <keyword type="class" name="std::is_function" link="cpp/types/is_function"/>
    <keyword type="" name="std::is_function_v" link="cpp/types/is_function"/>
    <keyword type="class" name="std::is_pointer" link="cpp/types/is_pointer"/>
    <keyword type="" name="std::is_pointer_v" link="cpp/types/is_pointer"/>
    <keyword type="class" name="std::is_lvalue_reference" link="cpp/types/is_lvalue_reference"/>
    <keyword type="" name="std::is_lvalue_reference_v" link="cpp/types/is_lvalue_reference"/>
    <keyword type="class" name="std::is_rvalue_reference" link="cpp/types/is_rvalue_reference"/>
    <keyword type="" name="std::is_rvalue_reference_v" link="cpp/types/is_rvalue_reference"/>
    <keyword type="class" name="std::is_member_object_pointer" link="cpp/types/is_member_object_pointer"/>
    <keyword type="" name="std::is_member_object_pointer_v" link="cpp/types/is_member_object_pointer"/>
    <keyword type="class" name="std::is_member_function_pointer" link="cpp/types/is_member_function_pointer"/>
    <keyword type="" name="std::is_member_function_pointer_v" link="cpp/types/is_member_function_pointer"/>
    <keyword type="class" name="std::is_fundamental" link="cpp/types/is_fundamental"/>
    <keyword type="" name="std::is_fundamental_v" link="cpp/types/is_fundamental"/>
    <keyword type="class" name="std::is_arithmetic" link="cpp/types/is_arithmetic"/>
    <keyword type="" name="std::is_arithmetic_v" link="cpp/types/is_arithmetic"/>
    <keyword type="class" name="std::is_scalar" link="cpp/types/is_scalar"/>
    <keyword type="" name="std::is_scalar_v" link="cpp/types/is_scalar"/>
    <keyword type="class" name="std::is_object" link="cpp/types/is_object"/>
    <keyword type="" name="std::is_object_v" link="cpp/types/is_object"/>
    <keyword type="class" name="std::is_compound" link="cpp/types/is_compound"/>
    <keyword type="" name="std::is_compound_v" link="cpp/types/is_compound"/>
    <keyword type="class" name="std::is_reference" link="cpp/types/is_reference"/>
    <keyword type="" name="std::is_reference_v" link="cpp/types/is_reference"/>
    <keyword type="class" name="std::is_member_pointer" link="cpp/types/is_member_pointer"/>
    <keyword type="" name="std::is_member_pointer_v" link="cpp/types/is_member_pointer"/>
    <keyword type="class" name="std::is_const" link="cpp/types/is_const"/>
    <keyword type="" name="std::is_const_v" link="cpp/types/is_const"/>
    <keyword type="class" name="std::is_volatile" link="cpp/types/is_volatile"/>
    <keyword type="" name="std::is_volatile_v" link="cpp/types/is_volatile"/>
    <keyword type="class" name="std::is_trivial" link="cpp/types/is_trivial"/>
    <keyword type="" name="std::is_trivial_v" link="cpp/types/is_trivial"/>
    <keyword type="class" name="std::is_trivially_copyable" link="cpp/types/is_trivially_copyable"/>
    <keyword type="" name="std::is_trivially_copyable_v" link="cpp/types/is_trivially_copyable"/>
    <keyword type="class" name="std::is_standard_layout" link="cpp/types/is_standard_layout"/>
    <keyword type="" name="std::is_standard_layout_v" link="cpp/types/is_standard_layout"/>
    <keyword type="class" name="std::is_pod" link="cpp/types/is_pod"/>
    <keyword type="" name="std::is_pod_v" link="cpp/types/is_pod"/>
    <keyword type="class" name="std::is_literal_type" link="cpp/types/is_literal_type"/>
    <keyword type="" name="std::is_literal_type_v" link="cpp/types/is_literal_type"/>
    <keyword type="class" name="std::has_unique_object_representations" link="cpp/types/has_unique_object_representations"/>
    <keyword type="" name="std::has_unique_object_representations_v" link="cpp/types/has_unique_object_representations"/>
    <keyword type="class" name="std::is_empty" link="cpp/types/is_empty"/>
    <keyword type="" name="std::is_empty_v" link="cpp/types/is_empty"/>
    <keyword type="class" name="std::is_polymorphic" link="cpp/types/is_polymorphic"/>
    <keyword type="" name="std::is_polymorphic_v" link="cpp/types/is_polymorphic"/>
    <keyword type="class" name="std::is_abstract" link="cpp/types/is_abstract"/>
    <keyword type="" name="std::is_abstract_v" link="cpp/types/is_abstract"/>
    <keyword type="class" name="std::is_final" link="cpp/types/is_final"/>
    <keyword type="" name="std::is_final_v" link="cpp/types/is_final"/>
    <keyword type="class" name="std::is_aggregate" link="cpp/types/is_aggregate"/>
    <keyword type="" name="std::is_aggregate_v" link="cpp/types/is_aggregate"/>
    <keyword type="class" name="std::is_signed" link="cpp/types/is_signed"/>
    <keyword type="" name="std::is_signed_v" link="cpp/types/is_signed"/>
    <keyword type="class" name="std::is_unsigned" link="cpp/types/is_unsigned"/>
    <keyword type="" name="std::is_unsigned_v" link="cpp/types/is_unsigned"/>
    <keyword type="class" name="std::is_bounded_array" link="cpp/types/is_bounded_array"/>
    <keyword type="" name="std::is_bounded_array_v" link="cpp/types/is_bounded_array"/>
    <keyword type="class" name="std::is_unbounded_array" link="cpp/types/is_unbounded_array"/>
    <keyword type="" name="std::is_unbounded_array_v" link="cpp/types/is_unbounded_array"/>
    <keyword type="class" name="std::is_constructible" link="cpp/types/is_constructible"/>
    <keyword type="" name="std::is_constructible_v" link="cpp/types/is_constructible"/>
    <keyword type="class" name="std::is_trivially_constructible" link="cpp/types/is_constructible"/>
    <keyword type="" name="std::is_trivially_constructible_v" link="cpp/types/is_constructible"/>
    <keyword type="class" name="std::is_nothrow_constructible" link="cpp/types/is_constructible"/>
    <keyword type="" name="std::is_nothrow_constructible_v" link="cpp/types/is_constructible"/>
    <keyword type="class" name="std::is_default_constructible" link="cpp/types/is_default_constructible"/>
    <keyword type="" name="std::is_default_constructible_v" link="cpp/types/is_default_constructible"/>
    <keyword type="class" name="std::is_trivially_default_constructible" link="cpp/types/is_default_constructible"/>
    <keyword type="" name="std::is_trivially_default_constructible_v" link="cpp/types/is_default_constructible"/>
    <keyword type="class" name="std::is_nothrow_default_constructible" link="cpp/types/is_default_constructible"/>
    <keyword type="" name="std::is_nothrow_default_constructible_v" link="cpp/types/is_default_constructible"/>
    <keyword type="class" name="std::is_copy_constructible" link="cpp/types/is_copy_constructible"/>
    <keyword type="" name="std::is_copy_constructible_v" link="cpp/types/is_copy_constructible"/>
    <keyword type="class" name="std::is_trivially_copy_constructible" link="cpp/types/is_copy_constructible"/>
    <keyword type="" name="std::is_trivially_copy_constructible_v" link="cpp/types/is_copy_constructible"/>
    <keyword type="class" name="std::is_nothrow_copy_constructible" link="cpp/types/is_copy_constructible"/>
    <keyword type="" name="std::is_nothrow_copy_constructible_v" link="cpp/types/is_copy_constructible"/>
    <keyword type="class" name="std::is_move_constructible" link="cpp/types/is_move_constructible"/>
    <keyword type="" name="std::is_move_constructible_v" link="cpp/types/is_move_constructible"/>
    <keyword type="class" name="std::is_trivially_move_constructible" link="cpp/types/is_move_constructible"/>
    <keyword type="" name="std::is_trivially_move_constructible_v" link="cpp/types/is_move_constructible"/>
    <keyword type="class" name="std::is_nothrow_move_constructible" link="cpp/types/is_move_constructible"/>
    <keyword type="" name="std::is_nothrow_move_constructible_v" link="cpp/types/is_move_constructible"/>
    <keyword type="class" name="std::is_assignable" link="cpp/types/is_assignable"/>
    <keyword type="" name="std::is_assignable_v" link="cpp/types/is_assignable"/>
    <keyword type="class" name="std::is_trivially_assignable" link="cpp/types/is_assignable"/>
    <keyword type="" name="std::is_trivially_assignable_v" link="cpp/types/is_assignable"/>
    <keyword type="class" name="std::is_nothrow_assignable" link="cpp/types/is_assignable"/>
    <keyword type="" name="std::is_nothrow_assignable_v" link="cpp/types/is_assignable"/>
    <keyword type="class" name="std::is_copy_assignable" link="cpp/types/is_copy_assignable"/>
    <keyword type="" name="std::is_copy_assignable_v" link="cpp/types/is_copy_assignable"/>
    <keyword type="class" name="std::is_trivially_copy_assignable" link="cpp/types/is_copy_assignable"/>
    <keyword type="" name="std::is_trivially_copy_assignable_v" link="cpp/types/is_copy_assignable"/>
    <keyword type="class" name="std::is_nothrow_copy_assignable" link="cpp/types/is_copy_assignable"/>
    <keyword type="" name="std::is_nothrow_copy_assignable_v" link="cpp/types/is_copy_assignable"/>
    <keyword type="class" name="std::is_move_assignable" link="cpp/types/is_move_assignable"/>
    <keyword type="" name="std::is_move_assignable_v" link="cpp/types/is_move_assignable"/>
    <keyword type="class" name="std::is_trivially_move_assignable" link="cpp/types/is_move_assignable"/>
    <keyword type="" name="std::is_trivially_move_assignable_v" link="cpp/types/is_move_assignable"/>
    <keyword type="class" name="std::is_nothrow_move_assignable" link="cpp/types/is_move_assignable"/>
    <keyword type="" name="std::is_nothrow_move_assignable_v" link="cpp/types/is_move_assignable"/>
    <keyword type="class" name="std::is_destructible" link="cpp/types/is_destructible"/>
    <keyword type="" name="std::is_destructible_v" link="cpp/types/is_destructible"/>
    <keyword type="class" name="std::is_trivially_destructible" link="cpp/types/is_destructible"/>
    <keyword type="" name="std::is_trivially_destructible_v" link="cpp/types/is_destructible"/>
    <keyword type="class" name="std::is_nothrow_destructible" link="cpp/types/is_destructible"/>
    <keyword type="" name="std::is_nothrow_destructible_v" link="cpp/types/is_destructible"/>
    <keyword type="class" name="std::is_swappable" link="cpp/types/is_swappable"/>
    <keyword type="" name="std::is_swappable_v" link="cpp/types/is_swappable"/>
    <keyword type="class" name="std::is_swappable_with" link="cpp/types/is_swappable"/>
    <keyword type="" name="std::is_swappable_with_v" link="cpp/types/is_swappable"/>
    <keyword type="class" name="std::is_nothrow_swappable" link="cpp/types/is_swappable"/>
    <keyword type="" name="std::is_nothrow_swappable_v" link="cpp/types/is_swappable"/>
    <keyword type="class" name="std::is_nothrow_swappable_with" link="cpp/types/is_swappable"/>
    <keyword type="" name="std::is_nothrow_swappable_with_v" link="cpp/types/is_swappable"/>
    <keyword type="class" name="std::has_virtual_destructor" link="cpp/types/has_virtual_destructor"/>
    <keyword type="" name="std::has_virtual_destructor_v" link="cpp/types/has_virtual_destructor"/>
    <keyword type="class" name="std::alignment_of" link="cpp/types/alignment_of"/>
    <keyword type="" name="std::alignment_of_v" link="cpp/types/alignment_of"/>
    <keyword type="class" name="std::rank" link="cpp/types/rank"/>
    <keyword type="" name="std::rank_v" link="cpp/types/rank"/>
    <keyword type="class" name="std::extent" link="cpp/types/extent"/>
    <keyword type="" name="std::extent_v" link="cpp/types/extent"/>
    <keyword type="class" name="std::is_same" link="cpp/types/is_same"/>
    <keyword type="" name="std::is_same_v" link="cpp/types/is_same"/>
    <keyword type="class" name="std::is_base_of" link="cpp/types/is_base_of"/>
    <keyword type="" name="std::is_base_of_v" link="cpp/types/is_base_of"/>
    <keyword type="class" name="std::is_convertible" link="cpp/types/is_convertible"/>
    <keyword type="" name="std::is_convertible_v" link="cpp/types/is_convertible"/>
    <keyword type="class" name="std::is_nothrow_convertible" link="cpp/types/is_convertible"/>
    <keyword type="" name="std::is_nothrow_convertible_v" link="cpp/types/is_convertible"/>
    <keyword type="class" name="std::is_invocable" link="cpp/types/is_invocable"/>
    <keyword type="" name="std::is_invocable_v" link="cpp/types/is_invocable"/>
    <keyword type="class" name="std::is_invocable_r" link="cpp/types/is_invocable"/>
    <keyword type="" name="std::is_invocable_r_v" link="cpp/types/is_invocable"/>
    <keyword type="class" name="std::is_nothrow_invocable" link="cpp/types/is_invocable"/>
    <keyword type="" name="std::is_nothrow_invocable_v" link="cpp/types/is_invocable"/>
    <keyword type="class" name="std::is_nothrow_invocable_r" link="cpp/types/is_invocable"/>
    <keyword type="" name="std::is_nothrow_invocable_r_v" link="cpp/types/is_invocable"/>
    <keyword type="class" name="std::remove_cv" link="cpp/types/remove_cv"/>
    <keyword type="class" name="std::remove_const" link="cpp/types/remove_cv"/>
    <keyword type="class" name="std::remove_volatile" link="cpp/types/remove_cv"/>
    <keyword type="typedef" name="std::remove_cv_t" link="cpp/types/remove_cv"/>
    <keyword type="typedef" name="std::remove_const_t" link="cpp/types/remove_cv"/>
    <keyword type="typedef" name="std::remove_volatile_t" link="cpp/types/remove_cv"/>
    <keyword type="class" name="std::add_cv" link="cpp/types/add_cv"/>
    <keyword type="class" name="std::add_const" link="cpp/types/add_cv"/>
    <keyword type="class" name="std::add_volatile" link="cpp/types/add_cv"/>
    <keyword type="typedef" name="std::add_cv_t" link="cpp/types/add_cv"/>
    <keyword type="typedef" name="std::add_const_t" link="cpp/types/add_cv"/>
    <keyword type="typedef" name="std::add_volatile_t" link="cpp/types/add_cv"/>
    <keyword type="class" name="std::remove_reference" link="cpp/types/remove_reference"/>
    <keyword type="typedef" name="std::remove_reference_t" link="cpp/types/remove_reference"/>
    <keyword type="class" name="std::add_lvalue_reference" link="cpp/types/add_reference"/>
    <keyword type="typedef" name="std::add_lvalue_reference_t" link="cpp/types/add_reference"/>
    <keyword type="class" name="std::add_rvalue_reference" link="cpp/types/add_reference"/>
    <keyword type="typedef" name="std::add_rvalue_reference_t" link="cpp/types/add_reference"/>
    <keyword type="class" name="std::remove_pointer" link="cpp/types/remove_pointer"/>
    <keyword type="typedef" name="std::remove_pointer_t" link="cpp/types/remove_pointer"/>
    <keyword type="class" name="std::add_pointer" link="cpp/types/add_pointer"/>
    <keyword type="typedef" name="std::add_pointer_t" link="cpp/types/add_pointer"/>
    <keyword type="class" name="std::make_signed" link="cpp/types/make_signed"/>
    <keyword type="typedef" name="std::make_signed_t" link="cpp/types/make_signed"/>
    <keyword type="class" name="std::make_unsigned" link="cpp/types/make_unsigned"/>
    <keyword type="typedef" name="std::make_unsigned_t" link="cpp/types/make_unsigned"/>
    <keyword type="class" name="std::remove_extent" link="cpp/types/remove_extent"/>
    <keyword type="typedef" name="std::remove_extent_t" link="cpp/types/remove_extent"/>
    <keyword type="class" name="std::remove_all_extents" link="cpp/types/remove_all_extents"/>
    <keyword type="typedef" name="std::remove_all_extents_t" link="cpp/types/remove_all_extents"/>
    <keyword type="class" name="std::aligned_storage" link="cpp/types/aligned_storage"/>
    <keyword type="typedef" name="std::aligned_storage_t" link="cpp/types/aligned_storage"/>
    <keyword type="class" name="std::aligned_union" link="cpp/types/aligned_union"/>
    <keyword type="typedef" name="std::aligned_union_t" link="cpp/types/aligned_union"/>
    <keyword type="class" name="std::decay" link="cpp/types/decay"/>
    <keyword type="typedef" name="std::decay_t" link="cpp/types/decay"/>
    <keyword type="class" name="std::remove_cvref" link="cpp/types/remove_cvref"/>
    <keyword type="typedef" name="std::remove_cvref_t" link="cpp/types/remove_cvref"/>
    <keyword type="class" name="std::enable_if" link="cpp/types/enable_if"/>
    <keyword type="typedef" name="std::enable_if_t" link="cpp/types/enable_if"/>
    <keyword type="class" name="std::conditional" link="cpp/types/conditional"/>
    <keyword type="typedef" name="std::conditional_t" link="cpp/types/conditional"/>
    <keyword type="class" name="std::common_type" link="cpp/types/common_type"/>
    <keyword type="typedef" name="std::common_type_t" link="cpp/types/common_type"/>
    <keyword type="class" name="std::common_reference" link="cpp/types/common_reference"/>
    <keyword type="typedef" name="std::common_reference_t" link="cpp/types/common_reference"/>
    <keyword type="class" name="std::basic_common_reference" link="cpp/types/common_reference"/>
    <keyword type="class" name="std::underlying_type" link="cpp/types/underlying_type"/>
    <keyword type="typedef" name="std::underlying_type_t" link="cpp/types/underlying_type"/>
    <keyword type="class" name="std::result_of" link="cpp/types/result_of"/>
    <keyword type="typedef" name="std::result_of_t" link="cpp/types/result_of"/>
    <keyword type="class" name="std::invoke_result" link="cpp/types/result_of"/>
    <keyword type="typedef" name="std::invoke_result_t" link="cpp/types/result_of"/>
    <keyword type="typedef" name="std::void_t" link="cpp/types/void_t"/>
    <keyword type="class" name="std::type_identity" link="cpp/types/type_identity"/>
    <keyword type="typedef" name="std::type_identity_t" link="cpp/types/type_identity"/>
    <keyword type="class" name="std::conjunction" link="cpp/types/conjunction"/>
    <keyword type="" name="std::conjunction_v" link="cpp/types/conjunction"/>
    <keyword type="class" name="std::disjunction" link="cpp/types/disjunction"/>
    <keyword type="" name="std::disjunction_v" link="cpp/types/disjunction"/>
    <keyword type="class" name="std::negation" link="cpp/types/negation"/>
    <keyword type="" name="std::negation_v" link="cpp/types/negation"/>
    <keyword type="class" name="std::integral_constant" link="cpp/types/integral_constant"/>
    <keyword type="typedef" name="std::bool_constant" link="cpp/types/integral_constant"/>
    <keyword type="typedef" name="std::true_type" link="cpp/types/integral_constant"/>
    <keyword type="typedef" name="std::false_type" link="cpp/types/integral_constant"/>
    <keyword type="enum" name="std::endian" link="cpp/types/endian"/>
    <keyword type="macro" name="std::endian::little" link="cpp/types/endian"/>
    <keyword type="macro" name="std::endian::big" link="cpp/types/endian"/>
    <keyword type="macro" name="std::endian::native" link="cpp/types/endian"/>
    <keyword type="function" name="std::is_constant_evaluated" link="cpp/types/is_constant_evaluated"/>
    <keyword type="class" name="std::iterator_traits" link="cpp/iterator/iterator_traits"/>
    <keyword type="class" name="std::input_iterator_tag" link="cpp/iterator/iterator_tags"/>
    <keyword type="class" name="std::output_iterator_tag" link="cpp/iterator/iterator_tags"/>
    <keyword type="class" name="std::forward_iterator_tag" link="cpp/iterator/iterator_tags"/>
    <keyword type="class" name="std::bidirectional_iterator_tag" link="cpp/iterator/iterator_tags"/>
    <keyword type="class" name="std::random_access_iterator_tag" link="cpp/iterator/iterator_tags"/>
    <keyword type="class" name="std::iterator" link="cpp/iterator/iterator"/>
    <keyword type="class" name="std::incrementable_traits" link="cpp/iterator/incrementable_traits"/>
    <keyword type="class" name="std::readable_traits" link="cpp/iterator/readable_traits"/>
    <keyword type="typedef" name="std::iter_value_t" link="cpp/iterator/iter_t"/>
    <keyword type="typedef" name="std::iter_reference_t" link="cpp/iterator/iter_t"/>
    <keyword type="typedef" name="std::iter_difference_t" link="cpp/iterator/iter_t"/>
    <keyword type="typedef" name="std::iter_rvalue_reference_t" link="cpp/iterator/iter_t"/>
    <keyword type="typedef" name="std::iter_common_reference_t" link="cpp/iterator/iter_t"/>
    <keyword type="class" name="std::reverse_iterator" link="cpp/iterator/reverse_iterator"/>
    <keyword type="function" name="std::reverse_iterator::reverse_iterator" link="cpp/iterator/reverse_iterator/reverse_iterator"/>
    <keyword type="function" name="std::reverse_iterator::operator=" link="cpp/iterator/reverse_iterator/operator="/>
    <keyword type="function" name="std::reverse_iterator::base" link="cpp/iterator/reverse_iterator/base"/>
    <keyword type="function" name="std::reverse_iterator::operator*" link="cpp/iterator/reverse_iterator/operator*"/>
    <keyword type="function" name="std::reverse_iterator::operator-&gt;" link="cpp/iterator/reverse_iterator/operator*"/>
    <keyword type="function" name="std::reverse_iterator::operator[]" link="cpp/iterator/reverse_iterator/operator_at"/>
    <keyword type="function" name="std::reverse_iterator::operator++" link="cpp/iterator/reverse_iterator/operator_arith"/>
    <keyword type="function" name="std::reverse_iterator::operator++(int)" link="cpp/iterator/reverse_iterator/operator_arith"/>
    <keyword type="function" name="std::reverse_iterator::operator+=" link="cpp/iterator/reverse_iterator/operator_arith"/>
    <keyword type="function" name="std::reverse_iterator::operator+" link="cpp/iterator/reverse_iterator/operator_arith"/>
    <keyword type="function" name="std::reverse_iterator::operator--" link="cpp/iterator/reverse_iterator/operator_arith"/>
    <keyword type="function" name="std::reverse_iterator::operator--(int)" link="cpp/iterator/reverse_iterator/operator_arith"/>
    <keyword type="function" name="std::reverse_iterator::operator-=" link="cpp/iterator/reverse_iterator/operator_arith"/>
    <keyword type="function" name="std::reverse_iterator::operator-" link="cpp/iterator/reverse_iterator/operator_arith"/>
    <keyword type="function" name="operator==(std::reverse_iterator)" link="cpp/iterator/reverse_iterator/operator_cmp"/>
    <keyword type="function" name="operator!=(std::reverse_iterator)" link="cpp/iterator/reverse_iterator/operator_cmp"/>
    <keyword type="function" name="operator&lt;(std::reverse_iterator)" link="cpp/iterator/reverse_iterator/operator_cmp"/>
    <keyword type="function" name="operator&lt;=(std::reverse_iterator)" link="cpp/iterator/reverse_iterator/operator_cmp"/>
    <keyword type="function" name="operator&gt;(std::reverse_iterator)" link="cpp/iterator/reverse_iterator/operator_cmp"/>
    <keyword type="function" name="operator&gt;=(std::reverse_iterator)" link="cpp/iterator/reverse_iterator/operator_cmp"/>
    <keyword type="function" name="operator+(std::reverse_iterator)" link="cpp/iterator/reverse_iterator/operator+"/>
    <keyword type="function" name="operator-(std::reverse_iterator)" link="cpp/iterator/reverse_iterator/operator-"/>
    <keyword type="class" name="std::move_iterator" link="cpp/iterator/move_iterator"/>
    <keyword type="function" name="std::move_iterator::move_iterator" link="cpp/iterator/move_iterator/move_iterator"/>
    <keyword type="function" name="std::move_iterator::operator=" link="cpp/iterator/move_iterator/operator="/>
    <keyword type="function" name="std::move_iterator::base" link="cpp/iterator/move_iterator/base"/>
    <keyword type="function" name="std::move_iterator::operator*" link="cpp/iterator/move_iterator/operator*"/>
    <keyword type="function" name="std::move_iterator::operator-&gt;" link="cpp/iterator/move_iterator/operator*"/>
    <keyword type="function" name="std::move_iterator::operator[]" link="cpp/iterator/move_iterator/operator_at"/>
    <keyword type="function" name="std::move_iterator::operator++" link="cpp/iterator/move_iterator/operator_arith"/>
    <keyword type="function" name="std::move_iterator::operator++(int)" link="cpp/iterator/move_iterator/operator_arith"/>
    <keyword type="function" name="std::move_iterator::operator+=" link="cpp/iterator/move_iterator/operator_arith"/>
    <keyword type="function" name="std::move_iterator::operator+" link="cpp/iterator/move_iterator/operator_arith"/>
    <keyword type="function" name="std::move_iterator::operator--" link="cpp/iterator/move_iterator/operator_arith"/>
    <keyword type="function" name="std::move_iterator::operator--(int)" link="cpp/iterator/move_iterator/operator_arith"/>
    <keyword type="function" name="std::move_iterator::operator-=" link="cpp/iterator/move_iterator/operator_arith"/>
    <keyword type="function" name="std::move_iterator::operator-" link="cpp/iterator/move_iterator/operator_arith"/>
    <keyword type="function" name="operator==(std::move_iterator)" link="cpp/iterator/move_iterator/operator_cmp"/>
    <keyword type="function" name="operator!=(std::move_iterator)" link="cpp/iterator/move_iterator/operator_cmp"/>
    <keyword type="function" name="operator&lt;(std::move_iterator)" link="cpp/iterator/move_iterator/operator_cmp"/>
    <keyword type="function" name="operator&lt;=(std::move_iterator)" link="cpp/iterator/move_iterator/operator_cmp"/>
    <keyword type="function" name="operator&gt;(std::move_iterator)" link="cpp/iterator/move_iterator/operator_cmp"/>
    <keyword type="function" name="operator&gt;=(std::move_iterator)" link="cpp/iterator/move_iterator/operator_cmp"/>
    <keyword type="function" name="operator+(std::move_iterator)" link="cpp/iterator/move_iterator/operator+"/>
    <keyword type="function" name="operator-(std::move_iterator)" link="cpp/iterator/move_iterator/operator-"/>
    <keyword type="class" name="std::back_insert_iterator" link="cpp/iterator/back_insert_iterator"/>
    <keyword type="function" name="std::back_insert_iterator::back_insert_iterator" link="cpp/iterator/back_insert_iterator/back_insert_iterator"/>
    <keyword type="function" name="std::back_insert_iterator::operator=" link="cpp/iterator/back_insert_iterator/operator="/>
    <keyword type="function" name="std::back_insert_iterator::operator*" link="cpp/iterator/back_insert_iterator/operator*"/>
    <keyword type="function" name="std::back_insert_iterator::operator++" link="cpp/iterator/back_insert_iterator/operator++"/>
    <keyword type="function" name="std::back_insert_iterator::operator++(int)" link="cpp/iterator/back_insert_iterator/operator++"/>
    <keyword type="" name="std::back_insert_iterator::container" link="cpp/iterator/back_insert_iterator"/>
    <keyword type="class" name="std::front_insert_iterator" link="cpp/iterator/front_insert_iterator"/>
    <keyword type="function" name="std::front_insert_iterator::front_insert_iterator" link="cpp/iterator/front_insert_iterator/front_insert_iterator"/>
    <keyword type="function" name="std::front_insert_iterator::operator=" link="cpp/iterator/front_insert_iterator/operator="/>
    <keyword type="function" name="std::front_insert_iterator::operator*" link="cpp/iterator/front_insert_iterator/operator*"/>
    <keyword type="function" name="std::front_insert_iterator::operator++" link="cpp/iterator/front_insert_iterator/operator++"/>
    <keyword type="function" name="std::front_insert_iterator::operator++(int)" link="cpp/iterator/front_insert_iterator/operator++"/>
    <keyword type="" name="std::front_insert_iterator::container" link="cpp/iterator/front_insert_iterator"/>
    <keyword type="class" name="std::insert_iterator" link="cpp/iterator/insert_iterator"/>
    <keyword type="function" name="std::insert_iterator::insert_iterator" link="cpp/iterator/insert_iterator/insert_iterator"/>
    <keyword type="function" name="std::insert_iterator::operator=" link="cpp/iterator/insert_iterator/operator="/>
    <keyword type="function" name="std::insert_iterator::operator*" link="cpp/iterator/insert_iterator/operator*"/>
    <keyword type="function" name="std::insert_iterator::operator++" link="cpp/iterator/insert_iterator/operator++"/>
    <keyword type="function" name="std::insert_iterator::operator++(int)" link="cpp/iterator/insert_iterator/operator++"/>
    <keyword type="" name="std::insert_iterator::container" link="cpp/iterator/insert_iterator"/>
    <keyword type="" name="std::insert_iterator::iter" link="cpp/iterator/insert_iterator"/>
    <keyword type="function" name="std::make_reverse_iterator" link="cpp/iterator/make_reverse_iterator"/>
    <keyword type="function" name="std::make_move_iterator" link="cpp/iterator/make_move_iterator"/>
    <keyword type="function" name="std::back_inserter" link="cpp/iterator/back_inserter"/>
    <keyword type="function" name="std::front_inserter" link="cpp/iterator/front_inserter"/>
    <keyword type="function" name="std::inserter" link="cpp/iterator/inserter"/>
    <keyword type="class" name="std::istream_iterator" link="cpp/iterator/istream_iterator"/>
    <keyword type="function" name="std::istream_iterator::istream_iterator" link="cpp/iterator/istream_iterator/istream_iterator"/>
    <keyword type="function" name="std::istream_iterator::~istream_iterator" link="cpp/iterator/istream_iterator/~istream_iterator"/>
    <keyword type="function" name="std::istream_iterator::operator*" link="cpp/iterator/istream_iterator/operator*"/>
    <keyword type="function" name="std::istream_iterator::operator-&gt;" link="cpp/iterator/istream_iterator/operator*"/>
    <keyword type="function" name="std::istream_iterator::operator++" link="cpp/iterator/istream_iterator/operator_arith"/>
    <keyword type="function" name="std::istream_iterator::operator++(int)" link="cpp/iterator/istream_iterator/operator_arith"/>
    <keyword type="function" name="operator==(std::istream_iterator)" link="cpp/iterator/istream_iterator/operator_cmp"/>
    <keyword type="function" name="operator!=(std::istream_iterator)" link="cpp/iterator/istream_iterator/operator_cmp"/>
    <keyword type="class" name="std::istreambuf_iterator" link="cpp/iterator/istreambuf_iterator"/>
    <keyword type="function" name="std::istreambuf_iterator::istreambuf_iterator" link="cpp/iterator/istreambuf_iterator/istreambuf_iterator"/>
    <keyword type="function" name="std::istreambuf_iterator::~istreambuf_iterator" link="cpp/iterator/istreambuf_iterator"/>
    <keyword type="function" name="std::istreambuf_iterator::operator*" link="cpp/iterator/istreambuf_iterator/operator*"/>
    <keyword type="function" name="std::istreambuf_iterator::operator-&gt;" link="cpp/iterator/istreambuf_iterator/operator*"/>
    <keyword type="function" name="std::istreambuf_iterator::operator++" link="cpp/iterator/istreambuf_iterator/operator_arith"/>
    <keyword type="function" name="std::istreambuf_iterator::operator++(int)" link="cpp/iterator/istreambuf_iterator/operator_arith"/>
    <keyword type="function" name="std::istreambuf_iterator::equal" link="cpp/iterator/istreambuf_iterator/equal"/>
    <keyword type="function" name="operator==(std::istreambuf_iterator)" link="cpp/iterator/istreambuf_iterator/operator_cmp"/>
    <keyword type="function" name="operator!=(std::istreambuf_iterator)" link="cpp/iterator/istreambuf_iterator/operator_cmp"/>
    <keyword type="class" name="std::ostream_iterator" link="cpp/iterator/ostream_iterator"/>
    <keyword type="function" name="std::ostream_iterator::ostream_iterator" link="cpp/iterator/ostream_iterator/ostream_iterator"/>
    <keyword type="function" name="std::ostream_iterator::~ostream_iterator" link="cpp/iterator/ostream_iterator/~ostream_iterator"/>
    <keyword type="function" name="std::ostream_iterator::operator=" link="cpp/iterator/ostream_iterator/operator="/>
    <keyword type="function" name="std::ostream_iterator::operator*" link="cpp/iterator/ostream_iterator/operator*"/>
    <keyword type="function" name="std::ostream_iterator::operator++" link="cpp/iterator/ostream_iterator/operator_arith"/>
    <keyword type="function" name="std::ostream_iterator::operator++(int)" link="cpp/iterator/ostream_iterator/operator_arith"/>
    <keyword type="class" name="std::ostreambuf_iterator" link="cpp/iterator/ostreambuf_iterator"/>
    <keyword type="function" name="std::ostreambuf_iterator::ostreambuf_iterator" link="cpp/iterator/ostreambuf_iterator/ostreambuf_iterator"/>
    <keyword type="function" name="std::ostreambuf_iterator::~ostreambuf_iterator" link="cpp/iterator/ostreambuf_iterator"/>
    <keyword type="function" name="std::ostreambuf_iterator::operator=" link="cpp/iterator/ostreambuf_iterator/operator="/>
    <keyword type="function" name="std::ostreambuf_iterator::operator*" link="cpp/iterator/ostreambuf_iterator/operator*"/>
    <keyword type="function" name="std::ostreambuf_iterator::operator++" link="cpp/iterator/ostreambuf_iterator/operator_arith"/>
    <keyword type="function" name="std::ostreambuf_iterator::operator++(int)" link="cpp/iterator/ostreambuf_iterator/operator_arith"/>
    <keyword type="function" name="std::ostreambuf_iterator::failed" link="cpp/iterator/ostreambuf_iterator/failed"/>
    <keyword type="function" name="std::advance" link="cpp/iterator/advance"/>
    <keyword type="function" name="std::distance" link="cpp/iterator/distance"/>
    <keyword type="function" name="std::next" link="cpp/iterator/next"/>
    <keyword type="function" name="std::prev" link="cpp/iterator/prev"/>
    <keyword type="function" name="std::begin" link="cpp/iterator/begin"/>
    <keyword type="function" name="std::cbegin" link="cpp/iterator/begin"/>
    <keyword type="function" name="std::rbegin" link="cpp/iterator/rbegin"/>
    <keyword type="function" name="std::crbegin" link="cpp/iterator/rbegin"/>
    <keyword type="function" name="std::end" link="cpp/iterator/end"/>
    <keyword type="function" name="std::cend" link="cpp/iterator/end"/>
    <keyword type="function" name="std::rend" link="cpp/iterator/rend"/>
    <keyword type="function" name="std::crend" link="cpp/iterator/rend"/>
    <keyword type="function" name="std::size" link="cpp/iterator/size"/>
    <keyword type="function" name="std::ssize" link="cpp/iterator/size"/>
    <keyword type="function" name="std::empty" link="cpp/iterator/empty"/>
    <keyword type="function" name="std::data" link="cpp/iterator/data"/>
    <keyword type="function" name="std::ranges::begin" link="cpp/ranges/begin"/>
    <keyword type="function" name="std::ranges::cbegin" link="cpp/ranges/begin"/>
    <keyword type="function" name="operator new" link="cpp/memory/new/operator_new"/>
    <keyword type="function" name="operator new[]" link="cpp/memory/new/operator_new"/>
    <keyword type="function" name="operator delete" link="cpp/memory/new/operator_delete"/>
    <keyword type="function" name="operator delete[]" link="cpp/memory/new/operator_delete"/>
    <keyword type="function" name="std::get_new_handler" link="cpp/memory/new/get_new_handler"/>
    <keyword type="function" name="std::set_new_handler" link="cpp/memory/new/set_new_handler"/>
    <keyword type="class" name="std::bad_alloc" link="cpp/memory/new/bad_alloc"/>
    <keyword type="function" name="std::bad_alloc::what" link="cpp/error/exception/what"/>
    <keyword type="function" name="std::bad_alloc::bad_alloc" link="cpp/memory/new/bad_alloc"/>
    <keyword type="function" name="std::bad_alloc::operator=" link="cpp/memory/new/bad_alloc"/>
    <keyword type="function" name="std::bad_alloc::what" link="cpp/memory/new/bad_alloc"/>
    <keyword type="class" name="std::bad_array_new_length" link="cpp/memory/new/bad_array_new_length"/>
    <keyword type="function" name="std::bad_array_new_length::what" link="cpp/memory/new/bad_alloc"/>
    <keyword type="function" name="std::bad_array_new_length::what" link="cpp/error/exception/what"/>
    <keyword type="function" name="std::bad_array_new_length::bad_array_new_length" link="cpp/memory/new/bad_array_new_length/bad_array_new_length"/>
    <keyword type="class" name="std::nothrow_t" link="cpp/memory/new/nothrow_t"/>
    <keyword type="class" name="std::align_val_t" link="cpp/memory/new/align_val_t"/>
    <keyword type="typedef" name="std::new_handler" link="cpp/memory/new/new_handler"/>
    <keyword type="macro" name="std::nothrow" link="cpp/memory/new/nothrow"/>
    <keyword type="class" name="std::allocator" link="cpp/memory/allocator"/>
    <keyword type="function" name="std::allocator::allocator" link="cpp/memory/allocator/allocator"/>
    <keyword type="function" name="std::allocator::~allocator" link="cpp/memory/allocator/~allocator"/>
    <keyword type="function" name="std::allocator::address" link="cpp/memory/allocator/address"/>
    <keyword type="function" name="std::allocator::allocate" link="cpp/memory/allocator/allocate"/>
    <keyword type="function" name="std::allocator::deallocate" link="cpp/memory/allocator/deallocate"/>
    <keyword type="function" name="std::allocator::max_size" link="cpp/memory/allocator/max_size"/>
    <keyword type="function" name="std::allocator::construct" link="cpp/memory/allocator/construct"/>
    <keyword type="function" name="std::allocator::destroy" link="cpp/memory/allocator/destroy"/>
    <keyword type="function" name="operator==(std::allocator)" link="cpp/memory/allocator/operator_cmp"/>
    <keyword type="function" name="operator!=(std::allocator)" link="cpp/memory/allocator/operator_cmp"/>
    <keyword type="class" name="std::allocator_traits" link="cpp/memory/allocator_traits"/>
    <keyword type="typedef" name="std::allocator_traits::rebind_alloc" link="cpp/memory/allocator_traits"/>
    <keyword type="typedef" name="std::allocator_traits::rebind_traits" link="cpp/memory/allocator_traits"/>
    <keyword type="function" name="std::allocator_traits::allocate" link="cpp/memory/allocator_traits/allocate"/>
    <keyword type="function" name="std::allocator_traits::deallocate" link="cpp/memory/allocator_traits/deallocate"/>
    <keyword type="function" name="std::allocator_traits::max_size" link="cpp/memory/allocator_traits/max_size"/>
    <keyword type="function" name="std::allocator_traits::construct" link="cpp/memory/allocator_traits/construct"/>
    <keyword type="function" name="std::allocator_traits::destroy" link="cpp/memory/allocator_traits/destroy"/>
    <keyword type="function" name="std::allocator_traits::select_on_container_copy_construction" link="cpp/memory/allocator_traits/select_on_container_copy_construction"/>
    <keyword type="class" name="std::allocator_arg_t" link="cpp/memory/allocator_arg_t"/>
    <keyword type="macro" name="std::allocator_arg" link="cpp/memory/allocator_arg"/>
    <keyword type="class" name="std::uses_allocator" link="cpp/memory/uses_allocator"/>
    <keyword type="" name="std::uses_allocator_v" link="cpp/memory/uses_allocator"/>
    <keyword type="function" name="std::uses_allocator_construction_args" link="cpp/memory/uses_allocator_construction_args"/>
    <keyword type="function" name="std::make_obj_using_allocator" link="cpp/memory/make_obj_using_allocator"/>
    <keyword type="function" name="std::uninitialized_construct_using_allocator" link="cpp/memory/uninitialized_construct_using_allocator"/>
    <keyword type="class" name="std::scoped_allocator_adaptor" link="cpp/memory/scoped_allocator_adaptor"/>
    <keyword type="function" name="std::scoped_allocator_adaptor::scoped_allocator_adaptor" link="cpp/memory/scoped_allocator_adaptor/scoped_allocator_adaptor"/>
    <keyword type="function" name="std::scoped_allocator_adaptor::~scoped_allocator_adaptor" link="cpp/memory/scoped_allocator_adaptor/~scoped_allocator_adaptor"/>
    <keyword type="function" name="std::scoped_allocator_adaptor::operator=" link="cpp/memory/scoped_allocator_adaptor/operator="/>
    <keyword type="function" name="std::scoped_allocator_adaptor::inner_allocator" link="cpp/memory/scoped_allocator_adaptor/inner_allocator"/>
    <keyword type="function" name="std::scoped_allocator_adaptor::outer_allocator" link="cpp/memory/scoped_allocator_adaptor/outer_allocator"/>
    <keyword type="function" name="std::scoped_allocator_adaptor::allocate" link="cpp/memory/scoped_allocator_adaptor/allocate"/>
    <keyword type="function" name="std::scoped_allocator_adaptor::deallocate" link="cpp/memory/scoped_allocator_adaptor/deallocate"/>
    <keyword type="function" name="std::scoped_allocator_adaptor::max_size" link="cpp/memory/scoped_allocator_adaptor/max_size"/>
    <keyword type="function" name="std::scoped_allocator_adaptor::construct" link="cpp/memory/scoped_allocator_adaptor/construct"/>
    <keyword type="function" name="std::scoped_allocator_adaptor::destroy" link="cpp/memory/scoped_allocator_adaptor/destroy"/>
    <keyword type="function" name="std::scoped_allocator_adaptor::select_on_container_copy_construction" link="cpp/memory/scoped_allocator_adaptor/select_on_container_copy_construction"/>
    <keyword type="function" name="operator==(std::scoped_allocator_adaptor)" link="cpp/memory/scoped_allocator_adaptor/operator_cmp"/>
    <keyword type="function" name="operator!=(std::scoped_allocator_adaptor)" link="cpp/memory/scoped_allocator_adaptor/operator_cmp"/>
    <keyword type="class" name="std::pmr::polymorphic_allocator" link="cpp/memory/polymorphic_allocator"/>
    <keyword type="function" name="std::pmr::polymorphic_allocator::polymorphic_allocator" link="cpp/memory/polymorphic_allocator/polymorphic_allocator"/>
    <keyword type="function" name="std::pmr::polymorphic_allocator::~polymorphic_allocator" link="cpp/memory/polymorphic_allocator"/>
    <keyword type="function" name="std::pmr::polymorphic_allocator::allocate" link="cpp/memory/polymorphic_allocator/allocate"/>
    <keyword type="function" name="std::pmr::polymorphic_allocator::deallocate" link="cpp/memory/polymorphic_allocator/deallocate"/>
    <keyword type="function" name="std::pmr::polymorphic_allocator::construct" link="cpp/memory/polymorphic_allocator/construct"/>
    <keyword type="function" name="std::pmr::polymorphic_allocator::destroy" link="cpp/memory/polymorphic_allocator/destroy"/>
    <keyword type="function" name="std::pmr::polymorphic_allocator::select_on_container_copy_construction" link="cpp/memory/polymorphic_allocator/select_on_container_copy_construction"/>
    <keyword type="function" name="std::pmr::polymorphic_allocator::resource" link="cpp/memory/polymorphic_allocator/resource"/>
    <keyword type="function" name="operator==(std::pmr::polymorphic_allocator)" link="cpp/memory/polymorphic_allocator/operator_eq"/>
    <keyword type="function" name="operator!=(std::pmr::polymorphic_allocator)" link="cpp/memory/polymorphic_allocator/operator_eq"/>
    <keyword type="class" name="std::pmr::memory_resource" link="cpp/memory/memory_resource"/>
    <keyword type="function" name="std::pmr::memory_resource::memory_resource" link="cpp/memory/memory_resource/memory_resource"/>
    <keyword type="function" name="std::pmr::memory_resource::allocate" link="cpp/memory/memory_resource/allocate"/>
    <keyword type="function" name="std::pmr::memory_resource::deallocate" link="cpp/memory/memory_resource/deallocate"/>
    <keyword type="function" name="std::pmr::memory_resource::is_equal" link="cpp/memory/memory_resource/is_equal"/>
    <keyword type="function" name="std::pmr::memory_resource::do_allocate" link="cpp/memory/memory_resource/do_allocate"/>
    <keyword type="function" name="std::pmr::memory_resource::do_deallocate" link="cpp/memory/memory_resource/do_deallocate"/>
    <keyword type="function" name="std::pmr::memory_resource::do_is_equal" link="cpp/memory/memory_resource/do_is_equal"/>
    <keyword type="function" name="operator==(std::pmr::memory_resource)" link="cpp/memory/memory_resource/operator_eq"/>
    <keyword type="function" name="operator!=(std::pmr::memory_resource)" link="cpp/memory/memory_resource/operator_eq"/>
    <keyword type="class" name="std::pmr::pool_options" link="cpp/memory/pool_options"/>
    <keyword type="" name="std::pmr::pool_options::max_blocks_per_chunk" link="cpp/memory/pool_options"/>
    <keyword type="" name="std::pmr::pool_options::largest_required_pool_block" link="cpp/memory/pool_options"/>
    <keyword type="class" name="std::pmr::synchronized_pool_resource" link="cpp/memory/synchronized_pool_resource"/>
    <keyword type="function" name="std::pmr::synchronized_pool_resource::allocate" link="cpp/memory/memory_resource/allocate"/>
    <keyword type="function" name="std::pmr::synchronized_pool_resource::deallocate" link="cpp/memory/memory_resource/deallocate"/>
    <keyword type="function" name="std::pmr::synchronized_pool_resource::is_equal" link="cpp/memory/memory_resource/is_equal"/>
    <keyword type="function" name="std::pmr::synchronized_pool_resource::do_allocate" link="cpp/memory/memory_resource/do_allocate"/>
    <keyword type="function" name="std::pmr::synchronized_pool_resource::do_deallocate" link="cpp/memory/memory_resource/do_deallocate"/>
    <keyword type="function" name="std::pmr::synchronized_pool_resource::do_is_equal" link="cpp/memory/memory_resource/do_is_equal"/>
    <keyword type="function" name="std::pmr::synchronized_pool_resource::synchronized_pool_resource" link="cpp/memory/synchronized_pool_resource/synchronized_pool_resource"/>
    <keyword type="function" name="std::pmr::synchronized_pool_resource::~synchronized_pool_resource" link="cpp/memory/synchronized_pool_resource/~synchronized_pool_resource"/>
    <keyword type="function" name="std::pmr::synchronized_pool_resource::release" link="cpp/memory/synchronized_pool_resource/release"/>
    <keyword type="function" name="std::pmr::synchronized_pool_resource::upstream_resource" link="cpp/memory/synchronized_pool_resource/upstream_resource"/>
    <keyword type="function" name="std::pmr::synchronized_pool_resource::options" link="cpp/memory/synchronized_pool_resource/options"/>
    <keyword type="function" name="std::pmr::synchronized_pool_resource::do_allocate" link="cpp/memory/synchronized_pool_resource/do_allocate"/>
    <keyword type="function" name="std::pmr::synchronized_pool_resource::do_deallocate" link="cpp/memory/synchronized_pool_resource/do_deallocate"/>
    <keyword type="function" name="std::pmr::synchronized_pool_resource::do_is_equal" link="cpp/memory/synchronized_pool_resource/do_is_equal"/>
    <keyword type="class" name="std::pmr::unsynchronized_pool_resource" link="cpp/memory/unsynchronized_pool_resource"/>
    <keyword type="function" name="std::pmr::unsynchronized_pool_resource::allocate" link="cpp/memory/memory_resource/allocate"/>
    <keyword type="function" name="std::pmr::unsynchronized_pool_resource::deallocate" link="cpp/memory/memory_resource/deallocate"/>
    <keyword type="function" name="std::pmr::unsynchronized_pool_resource::is_equal" link="cpp/memory/memory_resource/is_equal"/>
    <keyword type="function" name="std::pmr::unsynchronized_pool_resource::do_allocate" link="cpp/memory/memory_resource/do_allocate"/>
    <keyword type="function" name="std::pmr::unsynchronized_pool_resource::do_deallocate" link="cpp/memory/memory_resource/do_deallocate"/>
    <keyword type="function" name="std::pmr::unsynchronized_pool_resource::do_is_equal" link="cpp/memory/memory_resource/do_is_equal"/>
    <keyword type="function" name="std::pmr::unsynchronized_pool_resource::unsynchronized_pool_resource" link="cpp/memory/unsynchronized_pool_resource/unsynchronized_pool_resource"/>
    <keyword type="function" name="std::pmr::unsynchronized_pool_resource::~unsynchronized_pool_resource" link="cpp/memory/unsynchronized_pool_resource/~unsynchronized_pool_resource"/>
    <keyword type="function" name="std::pmr::unsynchronized_pool_resource::release" link="cpp/memory/unsynchronized_pool_resource/release"/>
    <keyword type="function" name="std::pmr::unsynchronized_pool_resource::upstream_resource" link="cpp/memory/unsynchronized_pool_resource/upstream_resource"/>
    <keyword type="function" name="std::pmr::unsynchronized_pool_resource::options" link="cpp/memory/unsynchronized_pool_resource/options"/>
    <keyword type="function" name="std::pmr::unsynchronized_pool_resource::do_allocate" link="cpp/memory/unsynchronized_pool_resource/do_allocate"/>
    <keyword type="function" name="std::pmr::unsynchronized_pool_resource::do_deallocate" link="cpp/memory/unsynchronized_pool_resource/do_deallocate"/>
    <keyword type="function" name="std::pmr::unsynchronized_pool_resource::do_is_equal" link="cpp/memory/unsynchronized_pool_resource/do_is_equal"/>
    <keyword type="class" name="std::pmr::monotonic_buffer_resource" link="cpp/memory/monotonic_buffer_resource"/>
    <keyword type="function" name="std::pmr::monotonic_buffer_resource::allocate" link="cpp/memory/memory_resource/allocate"/>
    <keyword type="function" name="std::pmr::monotonic_buffer_resource::deallocate" link="cpp/memory/memory_resource/deallocate"/>
    <keyword type="function" name="std::pmr::monotonic_buffer_resource::is_equal" link="cpp/memory/memory_resource/is_equal"/>
    <keyword type="function" name="std::pmr::monotonic_buffer_resource::do_allocate" link="cpp/memory/memory_resource/do_allocate"/>
    <keyword type="function" name="std::pmr::monotonic_buffer_resource::do_deallocate" link="cpp/memory/memory_resource/do_deallocate"/>
    <keyword type="function" name="std::pmr::monotonic_buffer_resource::do_is_equal" link="cpp/memory/memory_resource/do_is_equal"/>
    <keyword type="function" name="std::pmr::monotonic_buffer_resource::monotonic_buffer_resource" link="cpp/memory/monotonic_buffer_resource/monotonic_buffer_resource"/>
    <keyword type="function" name="std::pmr::monotonic_buffer_resource::~monotonic_buffer_resource" link="cpp/memory/monotonic_buffer_resource/~monotonic_buffer_resource"/>
    <keyword type="function" name="std::pmr::monotonic_buffer_resource::release" link="cpp/memory/monotonic_buffer_resource/release"/>
    <keyword type="function" name="std::pmr::monotonic_buffer_resource::upstream_resource" link="cpp/memory/monotonic_buffer_resource/upstream_resource"/>
    <keyword type="function" name="std::pmr::monotonic_buffer_resource::do_allocate" link="cpp/memory/monotonic_buffer_resource/do_allocate"/>
    <keyword type="function" name="std::pmr::monotonic_buffer_resource::do_deallocate" link="cpp/memory/monotonic_buffer_resource/do_deallocate"/>
    <keyword type="function" name="std::pmr::monotonic_buffer_resource::do_is_equal" link="cpp/memory/monotonic_buffer_resource/do_is_equal"/>
    <keyword type="function" name="std::pmr::new_delete_resource" link="cpp/memory/new_delete_resource"/>
    <keyword type="function" name="std::pmr::null_memory_resource" link="cpp/memory/null_memory_resource"/>
    <keyword type="function" name="std::pmr::get_default_resource" link="cpp/memory/get_default_resource"/>
    <keyword type="function" name="std::pmr::set_default_resource" link="cpp/memory/set_default_resource"/>
    <keyword type="function" name="std::uninitialized_copy" link="cpp/memory/uninitialized_copy"/>
    <keyword type="function" name="std::uninitialized_copy_n" link="cpp/memory/uninitialized_copy_n"/>
    <keyword type="function" name="std::uninitialized_fill" link="cpp/memory/uninitialized_fill"/>
    <keyword type="function" name="std::uninitialized_fill_n" link="cpp/memory/uninitialized_fill_n"/>
    <keyword type="function" name="std::uninitialized_move" link="cpp/memory/uninitialized_move"/>
    <keyword type="function" name="std::uninitialized_move_n" link="cpp/memory/uninitialized_move_n"/>
    <keyword type="function" name="std::uninitialized_default_construct" link="cpp/memory/uninitialized_default_construct"/>
    <keyword type="function" name="std::uninitialized_default_construct_n" link="cpp/memory/uninitialized_default_construct_n"/>
    <keyword type="function" name="std::uninitialized_value_construct" link="cpp/memory/uninitialized_value_construct"/>
    <keyword type="function" name="std::uninitialized_value_construct_n" link="cpp/memory/uninitialized_value_construct_n"/>
    <keyword type="function" name="std::destroy" link="cpp/memory/destroy"/>
    <keyword type="function" name="std::destroy_at" link="cpp/memory/destroy_at"/>
    <keyword type="function" name="std::destroy_n" link="cpp/memory/destroy_n"/>
    <keyword type="function" name="std::construct_at" link="cpp/memory/construct_at"/>
    <keyword type="function" name="std::ranges::uninitialized_copy" link="cpp/memory/ranges/uninitialized_copy"/>
    <keyword type="function" name="std::ranges::uninitialized_copy_n" link="cpp/memory/ranges/uninitialized_copy_n"/>
    <keyword type="function" name="std::ranges::uninitialized_fill" link="cpp/memory/ranges/uninitialized_fill"/>
    <keyword type="function" name="std::ranges::uninitialized_fill_n" link="cpp/memory/ranges/uninitialized_fill_n"/>
    <keyword type="function" name="std::ranges::uninitialized_move" link="cpp/memory/ranges/uninitialized_move"/>
    <keyword type="function" name="std::ranges::uninitialized_move_n" link="cpp/memory/ranges/uninitialized_move_n"/>
    <keyword type="function" name="std::ranges::uninitialized_default_construct" link="cpp/memory/ranges/uninitialized_default_construct"/>
    <keyword type="function" name="std::ranges::uninitialized_default_construct_n" link="cpp/memory/ranges/uninitialized_default_construct_n"/>
    <keyword type="function" name="std::ranges::uninitialized_value_construct" link="cpp/memory/ranges/uninitialized_value_construct"/>
    <keyword type="function" name="std::ranges::uninitialized_value_construct_n" link="cpp/memory/ranges/uninitialized_value_construct_n"/>
    <keyword type="function" name="std::ranges::destroy" link="cpp/memory/ranges/destroy"/>
    <keyword type="function" name="std::ranges::destroy_at" link="cpp/memory/ranges/destroy_at"/>
    <keyword type="function" name="std::ranges::destroy_n" link="cpp/memory/ranges/destroy_n"/>
    <keyword type="function" name="std::ranges::construct_at" link="cpp/memory/ranges/construct_at"/>
    <keyword type="class" name="std::raw_storage_iterator" link="cpp/memory/raw_storage_iterator"/>
    <keyword type="function" name="std::raw_storage_iterator::raw_storage_iterator" link="cpp/memory/raw_storage_iterator/raw_storage_iterator"/>
    <keyword type="function" name="std::raw_storage_iterator::operator*" link="cpp/memory/raw_storage_iterator/operator*"/>
    <keyword type="function" name="std::raw_storage_iterator::operator=" link="cpp/memory/raw_storage_iterator/operator="/>
    <keyword type="function" name="std::raw_storage_iterator::operator++" link="cpp/memory/raw_storage_iterator/operator_arith"/>
    <keyword type="function" name="std::get_temporary_buffer" link="cpp/memory/get_temporary_buffer"/>
    <keyword type="function" name="std::return_temporary_buffer" link="cpp/memory/return_temporary_buffer"/>
    <keyword type="class" name="std::unique_ptr" link="cpp/memory/unique_ptr"/>
    <keyword type="function" name="std::unique_ptr::unique_ptr" link="cpp/memory/unique_ptr/unique_ptr"/>
    <keyword type="function" name="std::unique_ptr::~unique_ptr" link="cpp/memory/unique_ptr/~unique_ptr"/>
    <keyword type="function" name="std::unique_ptr::operator=" link="cpp/memory/unique_ptr/operator="/>
    <keyword type="function" name="std::unique_ptr::release" link="cpp/memory/unique_ptr/release"/>
    <keyword type="function" name="std::unique_ptr::reset" link="cpp/memory/unique_ptr/reset"/>
    <keyword type="function" name="std::unique_ptr::swap" link="cpp/memory/unique_ptr/swap"/>
    <keyword type="function" name="std::unique_ptr::get" link="cpp/memory/unique_ptr/get"/>
    <keyword type="function" name="std::unique_ptr::get_deleter" link="cpp/memory/unique_ptr/get_deleter"/>
    <keyword type="function" name="std::unique_ptr::operator*" link="cpp/memory/unique_ptr/operator*"/>
    <keyword type="function" name="std::unique_ptr::operator-&gt;" link="cpp/memory/unique_ptr/operator*"/>
    <keyword type="function" name="std::unique_ptr::operator[]" link="cpp/memory/unique_ptr/operator_at"/>
    <keyword type="function" name="std::unique_ptr::operator bool" link="cpp/memory/unique_ptr/operator_bool"/>
    <keyword type="function" name="operator==(std::unique_ptr)" link="cpp/memory/unique_ptr/operator_cmp"/>
    <keyword type="function" name="operator!=(std::unique_ptr)" link="cpp/memory/unique_ptr/operator_cmp"/>
    <keyword type="function" name="operator&lt;(std::unique_ptr)" link="cpp/memory/unique_ptr/operator_cmp"/>
    <keyword type="function" name="operator&lt;=(std::unique_ptr)" link="cpp/memory/unique_ptr/operator_cmp"/>
    <keyword type="function" name="operator&gt;(std::unique_ptr)" link="cpp/memory/unique_ptr/operator_cmp"/>
    <keyword type="function" name="operator&gt;=(std::unique_ptr)" link="cpp/memory/unique_ptr/operator_cmp"/>
    <keyword type="function" name="operator&lt;&lt;(std::unique_ptr)" link="cpp/memory/unique_ptr/operator_ltlt"/>
    <keyword type="function" name="std::swap(std::unique_ptr)" link="cpp/memory/unique_ptr/swap2"/>
    <keyword type="class" name="std::hash&lt;std::unique_ptr&gt;" link="cpp/memory/unique_ptr/hash"/>
    <keyword type="class" name="std::shared_ptr" link="cpp/memory/shared_ptr"/>
    <keyword type="typedef" name="std::shared_ptr::weak_type" link="cpp/memory/shared_ptr"/>
    <keyword type="function" name="std::shared_ptr::shared_ptr" link="cpp/memory/shared_ptr/shared_ptr"/>
    <keyword type="function" name="std::shared_ptr::~shared_ptr" link="cpp/memory/shared_ptr/~shared_ptr"/>
    <keyword type="function" name="std::shared_ptr::operator=" link="cpp/memory/shared_ptr/operator="/>
    <keyword type="function" name="std::shared_ptr::reset" link="cpp/memory/shared_ptr/reset"/>
    <keyword type="function" name="std::shared_ptr::swap" link="cpp/memory/shared_ptr/swap"/>
    <keyword type="function" name="std::shared_ptr::get" link="cpp/memory/shared_ptr/get"/>
    <keyword type="function" name="std::shared_ptr::operator*" link="cpp/memory/shared_ptr/operator*"/>
    <keyword type="function" name="std::shared_ptr::operator-&gt;" link="cpp/memory/shared_ptr/operator*"/>
    <keyword type="function" name="std::shared_ptr::operator[]" link="cpp/memory/shared_ptr/operator_at"/>
    <keyword type="function" name="std::shared_ptr::unique" link="cpp/memory/shared_ptr/unique"/>
    <keyword type="function" name="std::shared_ptr::use_count" link="cpp/memory/shared_ptr/use_count"/>
    <keyword type="function" name="std::shared_ptr::operator bool" link="cpp/memory/shared_ptr/operator_bool"/>
    <keyword type="function" name="std::shared_ptr::owner_before" link="cpp/memory/shared_ptr/owner_before"/>
    <keyword type="function" name="operator==(std::shared_ptr)" link="cpp/memory/shared_ptr/operator_cmp"/>
    <keyword type="function" name="operator!=(std::shared_ptr)" link="cpp/memory/shared_ptr/operator_cmp"/>
    <keyword type="function" name="operator&lt;(std::shared_ptr)" link="cpp/memory/shared_ptr/operator_cmp"/>
    <keyword type="function" name="operator&lt;=(std::shared_ptr)" link="cpp/memory/shared_ptr/operator_cmp"/>
    <keyword type="function" name="operator&gt;(std::shared_ptr)" link="cpp/memory/shared_ptr/operator_cmp"/>
    <keyword type="function" name="operator&gt;=(std::shared_ptr)" link="cpp/memory/shared_ptr/operator_cmp"/>
    <keyword type="function" name="operator&lt;&lt;(std::shared_ptr)" link="cpp/memory/shared_ptr/operator_ltlt"/>
    <keyword type="function" name="std::swap(std::shared_ptr)" link="cpp/memory/shared_ptr/swap2"/>
    <keyword type="function" name="std::get_deleter(std::shared_ptr)" link="cpp/memory/shared_ptr/get_deleter"/>
    <keyword type="function" name="std::atomic_is_lock_free(std::shared_ptr)" link="cpp/memory/shared_ptr/atomic"/>
    <keyword type="function" name="std::atomic_load(std::shared_ptr)" link="cpp/memory/shared_ptr/atomic"/>
    <keyword type="function" name="std::atomic_load_explicit(std::shared_ptr)" link="cpp/memory/shared_ptr/atomic"/>
    <keyword type="function" name="std::atomic_store(std::shared_ptr)" link="cpp/memory/shared_ptr/atomic"/>
    <keyword type="function" name="std::atomic_store_explicit(std::shared_ptr)" link="cpp/memory/shared_ptr/atomic"/>
    <keyword type="function" name="std::atomic_exchange(std::shared_ptr)" link="cpp/memory/shared_ptr/atomic"/>
    <keyword type="function" name="std::atomic_exchange_explicit(std::shared_ptr)" link="cpp/memory/shared_ptr/atomic"/>
    <keyword type="function" name="std::atomic_compare_exchange_weak(std::shared_ptr)" link="cpp/memory/shared_ptr/atomic"/>
    <keyword type="function" name="std::atomic_compare_exchange_strong(std::shared_ptr)" link="cpp/memory/shared_ptr/atomic"/>
    <keyword type="function" name="std::atomic_compare_exchange_weak_explicit(std::shared_ptr)" link="cpp/memory/shared_ptr/atomic"/>
    <keyword type="function" name="std::atomic_compare_exchange_strong_explicit(std::shared_ptr)" link="cpp/memory/shared_ptr/atomic"/>
    <keyword type="class" name="std::hash&lt;std::shared_ptr&gt;" link="cpp/memory/shared_ptr/hash"/>
    <keyword type="function" name="std::make_unique" link="cpp/memory/unique_ptr/make_unique"/>
    <keyword type="function" name="std::make_unique_for_overwrite" link="cpp/memory/unique_ptr/make_unique"/>
    <keyword type="function" name="std::make_shared" link="cpp/memory/shared_ptr/make_shared"/>
    <keyword type="function" name="std::make_shared_for_overwrite" link="cpp/memory/shared_ptr/make_shared"/>
    <keyword type="function" name="std::allocate_shared" link="cpp/memory/shared_ptr/allocate_shared"/>
    <keyword type="function" name="std::allocate_shared_for_overwrite" link="cpp/memory/shared_ptr/allocate_shared"/>
    <keyword type="function" name="std::static_pointer_cast" link="cpp/memory/shared_ptr/pointer_cast"/>
    <keyword type="function" name="std::dynamic_pointer_cast" link="cpp/memory/shared_ptr/pointer_cast"/>
    <keyword type="function" name="std::const_pointer_cast" link="cpp/memory/shared_ptr/pointer_cast"/>
    <keyword type="function" name="std::reinterpret_pointer_cast" link="cpp/memory/shared_ptr/pointer_cast"/>
    <keyword type="class" name="std::weak_ptr" link="cpp/memory/weak_ptr"/>
    <keyword type="function" name="std::weak_ptr::weak_ptr" link="cpp/memory/weak_ptr/weak_ptr"/>
    <keyword type="function" name="std::weak_ptr::~weak_ptr" link="cpp/memory/weak_ptr/~weak_ptr"/>
    <keyword type="function" name="std::weak_ptr::operator=" link="cpp/memory/weak_ptr/operator="/>
    <keyword type="function" name="std::weak_ptr::reset" link="cpp/memory/weak_ptr/reset"/>
    <keyword type="function" name="std::weak_ptr::swap" link="cpp/memory/weak_ptr/swap"/>
    <keyword type="function" name="std::weak_ptr::use_count" link="cpp/memory/weak_ptr/use_count"/>
    <keyword type="function" name="std::weak_ptr::expired" link="cpp/memory/weak_ptr/expired"/>
    <keyword type="function" name="std::weak_ptr::lock" link="cpp/memory/weak_ptr/lock"/>
    <keyword type="function" name="std::weak_ptr::owner_before" link="cpp/memory/weak_ptr/owner_before"/>
    <keyword type="function" name="std::swap(std::weak_ptr)" link="cpp/memory/weak_ptr/swap"/>
    <keyword type="class" name="std::auto_ptr" link="cpp/memory/auto_ptr"/>
    <keyword type="function" name="std::auto_ptr::auto_ptr" link="cpp/memory/auto_ptr/auto_ptr"/>
    <keyword type="function" name="std::auto_ptr::~auto_ptr" link="cpp/memory/auto_ptr/~auto_ptr"/>
    <keyword type="function" name="std::auto_ptr::operator=" link="cpp/memory/auto_ptr/operator="/>
    <keyword type="function" name="std::auto_ptr::reset" link="cpp/memory/auto_ptr/reset"/>
    <keyword type="function" name="std::auto_ptr::release" link="cpp/memory/auto_ptr/release"/>
    <keyword type="function" name="std::auto_ptr::get" link="cpp/memory/auto_ptr/get"/>
    <keyword type="function" name="std::auto_ptr::operator*" link="cpp/memory/auto_ptr/operator*"/>
    <keyword type="function" name="std::auto_ptr::operator-&gt;" link="cpp/memory/auto_ptr/operator*"/>
    <keyword type="function" name="std::auto_ptr::operator auto_ptr&lt;Y&gt;" link="cpp/memory/auto_ptr/operator_auto_ptr"/>
    <keyword type="class" name="std::owner_less" link="cpp/memory/owner_less"/>
    <keyword type="function" name="std::owner_less::operator()" link="cpp/memory/owner_less"/>
    <keyword type="class" name="std::enable_shared_from_this" link="cpp/memory/enable_shared_from_this"/>
    <keyword type="function" name="std::enable_shared_from_this::enable_shared_from_this" link="cpp/memory/enable_shared_from_this/enable_shared_from_this"/>
    <keyword type="function" name="std::enable_shared_from_this::~enable_shared_from_this" link="cpp/memory/enable_shared_from_this/~enable_shared_from_this"/>
    <keyword type="function" name="std::enable_shared_from_this::operator=" link="cpp/memory/enable_shared_from_this/operator="/>
    <keyword type="function" name="std::enable_shared_from_this::shared_from_this" link="cpp/memory/enable_shared_from_this/shared_from_this"/>
    <keyword type="function" name="std::enable_shared_from_this::weak_from_this" link="cpp/memory/enable_shared_from_this/weak_from_this"/>
    <keyword type="class" name="std::bad_weak_ptr" link="cpp/memory/bad_weak_ptr"/>
    <keyword type="function" name="std::bad_weak_ptr::what" link="cpp/error/exception/what"/>
    <keyword type="function" name="std::bad_weak_ptr::bad_weak_ptr" link="cpp/memory/bad_weak_ptr"/>
    <keyword type="class" name="std::default_delete" link="cpp/memory/default_delete"/>
    <keyword type="function" name="std::default_delete::default_delete" link="cpp/memory/default_delete"/>
    <keyword type="function" name="std::default_delete::operator()" link="cpp/memory/default_delete"/>
    <keyword type="function" name="std::declare_reachable" link="cpp/memory/gc/declare_reachable"/>
    <keyword type="function" name="std::undeclare_reachable" link="cpp/memory/gc/undeclare_reachable"/>
    <keyword type="function" name="std::declare_no_pointers" link="cpp/memory/gc/declare_no_pointers"/>
    <keyword type="function" name="std::undeclare_no_pointers" link="cpp/memory/gc/undeclare_no_pointers"/>
    <keyword type="class" name="std::pointer_safety" link="cpp/memory/gc/pointer_safety"/>
    <keyword type="macro" name="std::pointer_safety::relaxed" link="cpp/memory/gc/pointer_safety"/>
    <keyword type="macro" name="std::pointer_safety::preferred" link="cpp/memory/gc/pointer_safety"/>
    <keyword type="macro" name="std::pointer_safety::strict" link="cpp/memory/gc/pointer_safety"/>
    <keyword type="function" name="std::get_pointer_safety" link="cpp/memory/gc/get_pointer_safety"/>
    <keyword type="class" name="std::pointer_traits" link="cpp/memory/pointer_traits"/>
    <keyword type="typedef" name="std::pointer_traits::rebind" link="cpp/memory/pointer_traits"/>
    <keyword type="function" name="std::pointer_traits::pointer_to" link="cpp/memory/pointer_traits/pointer_to"/>
    <keyword type="function" name="std::pointer_traits::to_address" link="cpp/memory/pointer_traits/to_address"/>
    <keyword type="function" name="std::to_address" link="cpp/memory/to_address"/>
    <keyword type="function" name="std::addressof" link="cpp/memory/addressof"/>
    <keyword type="function" name="std::align" link="cpp/memory/align"/>
    <keyword type="function" name="std::assume_aligned" link="cpp/memory/assume_aligned"/>
    <keyword type="function" name="std::malloc" link="cpp/memory/c/malloc"/>
    <keyword type="function" name="std::aligned_alloc" link="cpp/memory/c/aligned_alloc"/>
    <keyword type="function" name="std::calloc" link="cpp/memory/c/calloc"/>
    <keyword type="function" name="std::realloc" link="cpp/memory/c/realloc"/>
    <keyword type="function" name="std::free" link="cpp/memory/c/free"/>
    <keyword type="class" name="std::exception" link="cpp/error/exception"/>
    <keyword type="function" name="std::exception::exception" link="cpp/error/exception/exception"/>
    <keyword type="function" name="std::exception::~exception" link="cpp/error/exception/~exception"/>
    <keyword type="function" name="std::exception::operator=" link="cpp/error/exception/operator="/>
    <keyword type="function" name="std::exception::what" link="cpp/error/exception/what"/>
    <keyword type="class" name="std::logic_error" link="cpp/error/logic_error"/>
    <keyword type="function" name="std::logic_error::what" link="cpp/error/exception/what"/>
    <keyword type="function" name="std::logic_error::logic_error" link="cpp/error/logic_error"/>
    <keyword type="class" name="std::domain_error" link="cpp/error/domain_error"/>
    <keyword type="function" name="std::domain_error::what" link="cpp/error/exception/what"/>
    <keyword type="function" name="std::domain_error::domain_error" link="cpp/error/domain_error"/>
    <keyword type="class" name="std::length_error" link="cpp/error/length_error"/>
    <keyword type="function" name="std::length_error::what" link="cpp/error/exception/what"/>
    <keyword type="function" name="std::length_error::length_error" link="cpp/error/length_error"/>
    <keyword type="class" name="std::out_of_range" link="cpp/error/out_of_range"/>
    <keyword type="function" name="std::out_of_range::what" link="cpp/error/exception/what"/>
    <keyword type="function" name="std::out_of_range::out_of_range" link="cpp/error/out_of_range"/>
    <keyword type="class" name="std::invalid_argument" link="cpp/error/invalid_argument"/>
    <keyword type="function" name="std::invalid_argument::what" link="cpp/error/exception/what"/>
    <keyword type="function" name="std::invalid_argument::invalid_argument" link="cpp/error/invalid_argument"/>
    <keyword type="class" name="std::runtime_error" link="cpp/error/runtime_error"/>
    <keyword type="function" name="std::runtime_error::what" link="cpp/error/exception/what"/>
    <keyword type="function" name="std::runtime_error::runtime_error" link="cpp/error/runtime_error"/>
    <keyword type="class" name="std::range_error" link="cpp/error/range_error"/>
    <keyword type="function" name="std::range_error::what" link="cpp/error/exception/what"/>
    <keyword type="function" name="std::range_error::range_error" link="cpp/error/range_error"/>
    <keyword type="class" name="std::overflow_error" link="cpp/error/overflow_error"/>
    <keyword type="function" name="std::overflow_error::what" link="cpp/error/exception/what"/>
    <keyword type="function" name="std::overflow_error::overflow_error" link="cpp/error/overflow_error"/>
    <keyword type="class" name="std::underflow_error" link="cpp/error/underflow_error"/>
    <keyword type="function" name="std::underflow_error::what" link="cpp/error/exception/what"/>
    <keyword type="function" name="std::underflow_error::underflow_error" link="cpp/error/underflow_error"/>
    <keyword type="function" name="assert" link="cpp/error/assert"/>
    <keyword type="function" name="std::uncaught_exception" link="cpp/error/uncaught_exception"/>
    <keyword type="function" name="std::uncaught_exceptions" link="cpp/error/uncaught_exception"/>
    <keyword type="typedef" name="std::exception_ptr" link="cpp/error/exception_ptr"/>
    <keyword type="function" name="std::make_exception_ptr" link="cpp/error/make_exception_ptr"/>
    <keyword type="function" name="std::current_exception" link="cpp/error/current_exception"/>
    <keyword type="function" name="std::rethrow_exception" link="cpp/error/rethrow_exception"/>
    <keyword type="class" name="std::nested_exception" link="cpp/error/nested_exception"/>
    <keyword type="function" name="std::nested_exception::nested_exception" link="cpp/error/nested_exception/nested_exception"/>
    <keyword type="function" name="std::nested_exception::~nested_exception" link="cpp/error/nested_exception/~nested_exception"/>
    <keyword type="function" name="std::nested_exception::operator=" link="cpp/error/nested_exception/operator="/>
    <keyword type="function" name="std::nested_exception::rethrow_nested" link="cpp/error/nested_exception/rethrow_nested"/>
    <keyword type="function" name="std::nested_exception::nested_ptr" link="cpp/error/nested_exception/nested_ptr"/>
    <keyword type="function" name="std::throw_with_nested" link="cpp/error/throw_with_nested"/>
    <keyword type="function" name="std::rethrow_if_nested" link="cpp/error/rethrow_if_nested"/>
    <keyword type="function" name="std::terminate" link="cpp/error/terminate"/>
    <keyword type="typedef" name="std::terminate_handler" link="cpp/error/terminate_handler"/>
    <keyword type="function" name="std::get_terminate" link="cpp/error/get_terminate"/>
    <keyword type="function" name="std::set_terminate" link="cpp/error/set_terminate"/>
    <keyword type="function" name="std::unexpected" link="cpp/error/unexpected"/>
    <keyword type="class" name="std::bad_exception" link="cpp/error/bad_exception"/>
    <keyword type="typedef" name="std::unexpected_handler" link="cpp/error/unexpected_handler"/>
    <keyword type="function" name="std::get_unexpected" link="cpp/error/get_unexpected"/>
    <keyword type="function" name="std::set_unexpected" link="cpp/error/set_unexpected"/>
    <keyword type="macro" name="errno" link="cpp/error/errno"/>
    <keyword type="macro" name="E2BIG" link="cpp/error/errno_macros"/>
    <keyword type="macro" name="EACCESS" link="cpp/error/errno_macros"/>
    <keyword type="macro" name="EADDRINUSE" link="cpp/error/errno_macros"/>
    <keyword type="macro" name="EADDRNOTAVAIL" link="cpp/error/errno_macros"/>
    <keyword type="macro" name="EAFNOSUPPORT" link="cpp/error/errno_macros"/>
    <keyword type="macro" name="EAGAIN" link="cpp/error/errno_macros"/>
    <keyword type="macro" name="EALREADY" link="cpp/error/errno_macros"/>
    <keyword type="macro" name="EBADF" link="cpp/error/errno_macros"/>
    <keyword type="macro" name="EBADMSG" link="cpp/error/errno_macros"/>
    <keyword type="macro" name="EBUSY" link="cpp/error/errno_macros"/>
    <keyword type="macro" name="ECANCELED" link="cpp/error/errno_macros"/>
    <keyword type="macro" name="ECHILD" link="cpp/error/errno_macros"/>
    <keyword type="macro" name="ECONNABORTED" link="cpp/error/errno_macros"/>
    <keyword type="macro" name="ECONNREFUSED" link="cpp/error/errno_macros"/>
    <keyword type="macro" name="ECONNRESET" link="cpp/error/errno_macros"/>
    <keyword type="macro" name="EDEADLK" link="cpp/error/errno_macros"/>
    <keyword type="macro" name="EDESTADDRREQ" link="cpp/error/errno_macros"/>
    <keyword type="macro" name="EDOM" link="cpp/error/errno_macros"/>
    <keyword type="macro" name="EEXIST" link="cpp/error/errno_macros"/>
    <keyword type="macro" name="EFAULT" link="cpp/error/errno_macros"/>
    <keyword type="macro" name="EFBIG" link="cpp/error/errno_macros"/>
    <keyword type="macro" name="EHOSTUNREACH" link="cpp/error/errno_macros"/>
    <keyword type="macro" name="EIDRM" link="cpp/error/errno_macros"/>
    <keyword type="macro" name="EILSEQ" link="cpp/error/errno_macros"/>
    <keyword type="macro" name="EINPROGRESS" link="cpp/error/errno_macros"/>
    <keyword type="macro" name="EINTR" link="cpp/error/errno_macros"/>
    <keyword type="macro" name="EINVAL" link="cpp/error/errno_macros"/>
    <keyword type="macro" name="EIO" link="cpp/error/errno_macros"/>
    <keyword type="macro" name="EISCONN" link="cpp/error/errno_macros"/>
    <keyword type="macro" name="EISDIR" link="cpp/error/errno_macros"/>
    <keyword type="macro" name="ELOOP" link="cpp/error/errno_macros"/>
    <keyword type="macro" name="EMFILE" link="cpp/error/errno_macros"/>
    <keyword type="macro" name="EMLINK" link="cpp/error/errno_macros"/>
    <keyword type="macro" name="EMSGSIZE" link="cpp/error/errno_macros"/>
    <keyword type="macro" name="ENAMETOOLONG" link="cpp/error/errno_macros"/>
    <keyword type="macro" name="ENETDOWN" link="cpp/error/errno_macros"/>
    <keyword type="macro" name="ENETRESET" link="cpp/error/errno_macros"/>
    <keyword type="macro" name="ENETUNREACH" link="cpp/error/errno_macros"/>
    <keyword type="macro" name="ENFILE" link="cpp/error/errno_macros"/>
    <keyword type="macro" name="ENOBUFS" link="cpp/error/errno_macros"/>
    <keyword type="macro" name="ENODATA" link="cpp/error/errno_macros"/>
    <keyword type="macro" name="ENODEV" link="cpp/error/errno_macros"/>
    <keyword type="macro" name="ENOENT" link="cpp/error/errno_macros"/>
    <keyword type="macro" name="ENOEXEC" link="cpp/error/errno_macros"/>
    <keyword type="macro" name="ENOLCK" link="cpp/error/errno_macros"/>
    <keyword type="macro" name="ENOLINK" link="cpp/error/errno_macros"/>
    <keyword type="macro" name="ENOMEM" link="cpp/error/errno_macros"/>
    <keyword type="macro" name="ENOMSG" link="cpp/error/errno_macros"/>
    <keyword type="macro" name="ENOPROTOOPT" link="cpp/error/errno_macros"/>
    <keyword type="macro" name="ENOSPC" link="cpp/error/errno_macros"/>
    <keyword type="macro" name="ENOSR" link="cpp/error/errno_macros"/>
    <keyword type="macro" name="ENOSTR" link="cpp/error/errno_macros"/>
    <keyword type="macro" name="ENOSYS" link="cpp/error/errno_macros"/>
    <keyword type="macro" name="ENOTCONN" link="cpp/error/errno_macros"/>
    <keyword type="macro" name="ENOTDIR" link="cpp/error/errno_macros"/>
    <keyword type="macro" name="ENOTEMPTY" link="cpp/error/errno_macros"/>
    <keyword type="macro" name="ENOTRECOVERABLE" link="cpp/error/errno_macros"/>
    <keyword type="macro" name="ENOTSOCK" link="cpp/error/errno_macros"/>
    <keyword type="macro" name="ENOTSUP" link="cpp/error/errno_macros"/>
    <keyword type="macro" name="ENOTTY" link="cpp/error/errno_macros"/>
    <keyword type="macro" name="ENXIO" link="cpp/error/errno_macros"/>
    <keyword type="macro" name="EOPNOTSUPP" link="cpp/error/errno_macros"/>
    <keyword type="macro" name="EOVERFLOW" link="cpp/error/errno_macros"/>
    <keyword type="macro" name="EOWNERDEAD" link="cpp/error/errno_macros"/>
    <keyword type="macro" name="EPERM" link="cpp/error/errno_macros"/>
    <keyword type="macro" name="EPIPE" link="cpp/error/errno_macros"/>
    <keyword type="macro" name="EPROTO" link="cpp/error/errno_macros"/>
    <keyword type="macro" name="EPROTONOSUPPORT" link="cpp/error/errno_macros"/>
    <keyword type="macro" name="EPROTOTYPE" link="cpp/error/errno_macros"/>
    <keyword type="macro" name="ERANGE" link="cpp/error/errno_macros"/>
    <keyword type="macro" name="EROFS" link="cpp/error/errno_macros"/>
    <keyword type="macro" name="ESPIPE" link="cpp/error/errno_macros"/>
    <keyword type="macro" name="ESRCH" link="cpp/error/errno_macros"/>
    <keyword type="macro" name="ETIME" link="cpp/error/errno_macros"/>
    <keyword type="macro" name="ETIMEDOUT" link="cpp/error/errno_macros"/>
    <keyword type="macro" name="ETXTBSY" link="cpp/error/errno_macros"/>
    <keyword type="macro" name="EWOULDBLOCK" link="cpp/error/errno_macros"/>
    <keyword type="macro" name="EXDEV" link="cpp/error/errno_macros"/>
    <keyword type="class" name="std::error_category" link="cpp/error/error_category"/>
    <keyword type="function" name="std::error_category::error_category" link="cpp/error/error_category/error_category"/>
    <keyword type="function" name="std::error_category::~error_category" link="cpp/error/error_category/~error_category"/>
    <keyword type="function" name="std::error_category::name" link="cpp/error/error_category/name"/>
    <keyword type="function" name="std::error_category::default_error_condition" link="cpp/error/error_category/default_error_condition"/>
    <keyword type="function" name="std::error_category::equivalent" link="cpp/error/error_category/equivalent"/>
    <keyword type="function" name="std::error_category::message" link="cpp/error/error_category/message"/>
    <keyword type="function" name="std::error_category::operator==" link="cpp/error/error_category/operator_cmp"/>
    <keyword type="function" name="std::error_category::operator!=" link="cpp/error/error_category/operator_cmp"/>
    <keyword type="function" name="std::error_category::operator&lt;" link="cpp/error/error_category/operator_cmp"/>
    <keyword type="function" name="std::generic_category" link="cpp/error/generic_category"/>
    <keyword type="function" name="std::system_category" link="cpp/error/system_category"/>
    <keyword type="class" name="std::error_condition" link="cpp/error/error_condition"/>
    <keyword type="function" name="std::error_condition::error_condition" link="cpp/error/error_condition/error_condition"/>
    <keyword type="function" name="std::error_condition::operator=" link="cpp/error/error_condition/operator="/>
    <keyword type="function" name="std::error_condition::assign" link="cpp/error/error_condition/assign"/>
    <keyword type="function" name="std::error_condition::clear" link="cpp/error/error_condition/clear"/>
    <keyword type="function" name="std::error_condition::value" link="cpp/error/error_condition/value"/>
    <keyword type="function" name="std::error_condition::category" link="cpp/error/error_condition/category"/>
    <keyword type="function" name="std::error_condition::message" link="cpp/error/error_condition/message"/>
    <keyword type="function" name="std::error_condition::operator bool" link="cpp/error/error_condition/operator_bool"/>
    <keyword type="function" name="operator==(std::error_condition)" link="cpp/error/error_condition/operator_cmp"/>
    <keyword type="function" name="operator!=(std::error_condition)" link="cpp/error/error_condition/operator_cmp"/>
    <keyword type="function" name="operator&lt;(std::error_condition)" link="cpp/error/error_condition/operator_cmp"/>
    <keyword type="class" name="std::hash&lt;std::error_condition&gt;" link="cpp/error/error_condition/hash"/>
    <keyword type="class" name="std::is_error_condition_enum" link="cpp/error/error_condition/is_error_condition_enum"/>
    <keyword type="" name="std::is_error_condition_enum_v" link="cpp/error/error_condition/is_error_condition_enum"/>
    <keyword type="class" name="std::error_code" link="cpp/error/error_code"/>
    <keyword type="function" name="std::error_code::error_code" link="cpp/error/error_code/error_code"/>
    <keyword type="function" name="std::error_code::operator=" link="cpp/error/error_code/operator="/>
    <keyword type="function" name="std::error_code::assign" link="cpp/error/error_code/assign"/>
    <keyword type="function" name="std::error_code::clear" link="cpp/error/error_code/clear"/>
    <keyword type="function" name="std::error_code::value" link="cpp/error/error_code/value"/>
    <keyword type="function" name="std::error_code::category" link="cpp/error/error_code/category"/>
    <keyword type="function" name="std::error_code::default_error_condition" link="cpp/error/error_code/default_error_condition"/>
    <keyword type="function" name="std::error_code::message" link="cpp/error/error_code/message"/>
    <keyword type="function" name="std::error_code::operator bool" link="cpp/error/error_code/operator_bool"/>
    <keyword type="function" name="operator==(std::error_code)" link="cpp/error/error_code/operator_cmp"/>
    <keyword type="function" name="operator!=(std::error_code)" link="cpp/error/error_code/operator_cmp"/>
    <keyword type="function" name="operator&lt;(std::error_code)" link="cpp/error/error_code/operator_cmp"/>
    <keyword type="function" name="operator&lt;&lt;(std::error_code)" link="cpp/error/error_code/operator_ltlt"/>
    <keyword type="class" name="std::hash&lt;std::error_code&gt;" link="cpp/error/error_code/hash"/>
    <keyword type="class" name="std::is_error_code_enum" link="cpp/error/error_code/is_error_code_enum"/>
    <keyword type="class" name="std::is_error_code_enum_v" link="cpp/error/error_code/is_error_code_enum"/>
    <keyword type="class" name="std::errc" link="cpp/error/errc"/>
    <keyword type="macro" name="std::errc::address_family_not_supported" link="cpp/error/errc"/>
    <keyword type="macro" name="std::errc::address_in_use" link="cpp/error/errc"/>
    <keyword type="macro" name="std::errc::address_not_available" link="cpp/error/errc"/>
    <keyword type="macro" name="std::errc::already_connected" link="cpp/error/errc"/>
    <keyword type="macro" name="std::errc::argument_list_too_long" link="cpp/error/errc"/>
    <keyword type="macro" name="std::errc::argument_out_of_domain" link="cpp/error/errc"/>
    <keyword type="macro" name="std::errc::bad_address" link="cpp/error/errc"/>
    <keyword type="macro" name="std::errc::bad_file_descriptor" link="cpp/error/errc"/>
    <keyword type="macro" name="std::errc::bad_message" link="cpp/error/errc"/>
    <keyword type="macro" name="std::errc::broken_pipe" link="cpp/error/errc"/>
    <keyword type="macro" name="std::errc::connection_aborted" link="cpp/error/errc"/>
    <keyword type="macro" name="std::errc::connection_already_in_progress" link="cpp/error/errc"/>
    <keyword type="macro" name="std::errc::connection_refused" link="cpp/error/errc"/>
    <keyword type="macro" name="std::errc::connection_reset" link="cpp/error/errc"/>
    <keyword type="macro" name="std::errc::cross_device_link" link="cpp/error/errc"/>
    <keyword type="macro" name="std::errc::destination_address_required" link="cpp/error/errc"/>
    <keyword type="macro" name="std::errc::device_or_resource_busy" link="cpp/error/errc"/>
    <keyword type="macro" name="std::errc::directory_not_empty" link="cpp/error/errc"/>
    <keyword type="macro" name="std::errc::executable_format_error" link="cpp/error/errc"/>
    <keyword type="macro" name="std::errc::file_exists" link="cpp/error/errc"/>
    <keyword type="macro" name="std::errc::file_too_large" link="cpp/error/errc"/>
    <keyword type="macro" name="std::errc::filename_too_long" link="cpp/error/errc"/>
    <keyword type="macro" name="std::errc::function_not_supported" link="cpp/error/errc"/>
    <keyword type="macro" name="std::errc::host_unreachable" link="cpp/error/errc"/>
    <keyword type="macro" name="std::errc::identifier_removed" link="cpp/error/errc"/>
    <keyword type="macro" name="std::errc::illegal_byte_sequence" link="cpp/error/errc"/>
    <keyword type="macro" name="std::errc::inappropriate_io_control_operation" link="cpp/error/errc"/>
    <keyword type="macro" name="std::errc::interrupted" link="cpp/error/errc"/>
    <keyword type="macro" name="std::errc::invalid_argument" link="cpp/error/errc"/>
    <keyword type="macro" name="std::errc::invalid_seek" link="cpp/error/errc"/>
    <keyword type="macro" name="std::errc::io_error" link="cpp/error/errc"/>
    <keyword type="macro" name="std::errc::is_a_directory" link="cpp/error/errc"/>
    <keyword type="macro" name="std::errc::message_size" link="cpp/error/errc"/>
    <keyword type="macro" name="std::errc::network_down" link="cpp/error/errc"/>
    <keyword type="macro" name="std::errc::network_reset" link="cpp/error/errc"/>
    <keyword type="macro" name="std::errc::network_unreachable" link="cpp/error/errc"/>
    <keyword type="macro" name="std::errc::no_buffer_space" link="cpp/error/errc"/>
    <keyword type="macro" name="std::errc::no_child_process" link="cpp/error/errc"/>
    <keyword type="macro" name="std::errc::no_link" link="cpp/error/errc"/>
    <keyword type="macro" name="std::errc::no_lock_available" link="cpp/error/errc"/>
    <keyword type="macro" name="std::errc::no_message_available" link="cpp/error/errc"/>
    <keyword type="macro" name="std::errc::no_message" link="cpp/error/errc"/>
    <keyword type="macro" name="std::errc::no_protocol_option" link="cpp/error/errc"/>
    <keyword type="macro" name="std::errc::no_space_on_device" link="cpp/error/errc"/>
    <keyword type="macro" name="std::errc::no_stream_resources" link="cpp/error/errc"/>
    <keyword type="macro" name="std::errc::no_such_device_or_address" link="cpp/error/errc"/>
    <keyword type="macro" name="std::errc::no_such_device" link="cpp/error/errc"/>
    <keyword type="macro" name="std::errc::no_such_file_or_directory" link="cpp/error/errc"/>
    <keyword type="macro" name="std::errc::no_such_process" link="cpp/error/errc"/>
    <keyword type="macro" name="std::errc::not_a_directory" link="cpp/error/errc"/>
    <keyword type="macro" name="std::errc::not_a_socket" link="cpp/error/errc"/>
    <keyword type="macro" name="std::errc::not_a_stream" link="cpp/error/errc"/>
    <keyword type="macro" name="std::errc::not_connected" link="cpp/error/errc"/>
    <keyword type="macro" name="std::errc::not_enough_memory" link="cpp/error/errc"/>
    <keyword type="macro" name="std::errc::not_supported" link="cpp/error/errc"/>
    <keyword type="macro" name="std::errc::operation_canceled" link="cpp/error/errc"/>
    <keyword type="macro" name="std::errc::operation_in_progress" link="cpp/error/errc"/>
    <keyword type="macro" name="std::errc::operation_not_permitted" link="cpp/error/errc"/>
    <keyword type="macro" name="std::errc::operation_not_supported" link="cpp/error/errc"/>
    <keyword type="macro" name="std::errc::operation_would_block" link="cpp/error/errc"/>
    <keyword type="macro" name="std::errc::owner_dead" link="cpp/error/errc"/>
    <keyword type="macro" name="std::errc::permission_denied" link="cpp/error/errc"/>
    <keyword type="macro" name="std::errc::protocol_error" link="cpp/error/errc"/>
    <keyword type="macro" name="std::errc::protocol_not_supported" link="cpp/error/errc"/>
    <keyword type="macro" name="std::errc::read_only_file_system" link="cpp/error/errc"/>
    <keyword type="macro" name="std::errc::resource_deadlock_would_occur" link="cpp/error/errc"/>
    <keyword type="macro" name="std::errc::resource_unavailable_try_again" link="cpp/error/errc"/>
    <keyword type="macro" name="std::errc::result_out_of_range" link="cpp/error/errc"/>
    <keyword type="macro" name="std::errc::state_not_recoverable" link="cpp/error/errc"/>
    <keyword type="macro" name="std::errc::stream_timeout" link="cpp/error/errc"/>
    <keyword type="macro" name="std::errc::text_file_busy" link="cpp/error/errc"/>
    <keyword type="macro" name="std::errc::timed_out" link="cpp/error/errc"/>
    <keyword type="macro" name="std::errc::too_many_files_open_in_system" link="cpp/error/errc"/>
    <keyword type="macro" name="std::errc::too_many_files_open" link="cpp/error/errc"/>
    <keyword type="macro" name="std::errc::too_many_links" link="cpp/error/errc"/>
    <keyword type="macro" name="std::errc::too_many_symbolic_link_levels" link="cpp/error/errc"/>
    <keyword type="macro" name="std::errc::value_too_large" link="cpp/error/errc"/>
    <keyword type="macro" name="std::errc::wrong_protocol_type" link="cpp/error/errc"/>
    <keyword type="class" name="std::is_error_condition_enum&lt;std::errc&gt;" link="cpp/error/errc/is_error_condition_enum"/>
    <keyword type="function" name="std::make_error_code(std::errc)" link="cpp/error/errc/make_error_code"/>
    <keyword type="function" name="std::make_error_condition(std::errc)" link="cpp/error/errc/make_error_condition"/>
    <keyword type="class" name="std::system_error" link="cpp/error/system_error"/>
    <keyword type="function" name="std::system_error::what" link="cpp/error/exception/what"/>
    <keyword type="function" name="std::system_error::system_error" link="cpp/error/system_error/system_error"/>
    <keyword type="function" name="std::system_error::code" link="cpp/error/system_error/code"/>
    <keyword type="function" name="std::system_error::what" link="cpp/error/system_error/what"/>
    <keyword type="class" name="std::initializer_list" link="cpp/utility/initializer_list"/>
    <keyword type="function" name="std::initializer_list::initializer_list" link="cpp/utility/initializer_list/initializer_list"/>
    <keyword type="function" name="std::initializer_list::size" link="cpp/utility/initializer_list/size"/>
    <keyword type="function" name="std::initializer_list::begin" link="cpp/utility/initializer_list/begin"/>
    <keyword type="function" name="std::initializer_list::end" link="cpp/utility/initializer_list/end"/>
    <keyword type="function" name="std::begin(std::initializer_list)" link="cpp/utility/initializer_list/begin2"/>
    <keyword type="function" name="std::end(std::initializer_list)" link="cpp/utility/initializer_list/end2"/>
    <keyword type="function" name="std::rbegin(std::initializer_list)" link="cpp/utility/initializer_list/rbegin2"/>
    <keyword type="function" name="std::rend(std::initializer_list)" link="cpp/utility/initializer_list/rend2"/>
    <keyword type="function" name="va_start" link="cpp/utility/variadic/va_start"/>
    <keyword type="function" name="va_copy" link="cpp/utility/variadic/va_copy"/>
    <keyword type="function" name="va_arg" link="cpp/utility/variadic/va_arg"/>
    <keyword type="function" name="va_end" link="cpp/utility/variadic/va_end"/>
    <keyword type="class" name="va_list" link="cpp/utility/variadic/va_list"/>
    <keyword type="function" name="std::abort" link="cpp/utility/program/abort"/>
    <keyword type="function" name="std::exit" link="cpp/utility/program/exit"/>
    <keyword type="function" name="std::quick_exit" link="cpp/utility/program/quick_exit"/>
    <keyword type="function" name="std::_Exit" link="cpp/utility/program/_Exit"/>
    <keyword type="function" name="std::atexit" link="cpp/utility/program/atexit"/>
    <keyword type="function" name="std::at_quick_exit" link="cpp/utility/program/at_quick_exit"/>
    <keyword type="macro" name="EXIT_SUCCESS" link="cpp/utility/program/EXIT_status"/>
    <keyword type="macro" name="EXIT_FAILURE" link="cpp/utility/program/EXIT_status"/>
    <keyword type="function" name="std::system" link="cpp/utility/program/system"/>
    <keyword type="function" name="std::getenv" link="cpp/utility/program/getenv"/>
    <keyword type="function" name="std::signal" link="cpp/utility/program/signal"/>
    <keyword type="function" name="std::raise" link="cpp/utility/program/raise"/>
    <keyword type="typedef" name="std::sig_atomic_t" link="cpp/utility/program/sig_atomic_t"/>
    <keyword type="macro" name="SIG_DFL" link="cpp/utility/program/SIG_strategies"/>
    <keyword type="macro" name="SIG_IGN" link="cpp/utility/program/SIG_strategies"/>
    <keyword type="macro" name="SIG_ERR" link="cpp/utility/program/SIG_ERR"/>
    <keyword type="macro" name="SIGABRT" link="cpp/utility/program/SIG_types"/>
    <keyword type="macro" name="SIGFPE" link="cpp/utility/program/SIG_types"/>
    <keyword type="macro" name="SIGILL" link="cpp/utility/program/SIG_types"/>
    <keyword type="macro" name="SIGINT" link="cpp/utility/program/SIG_types"/>
    <keyword type="macro" name="SIGSEGV" link="cpp/utility/program/SIG_types"/>
    <keyword type="macro" name="SIGTERM" link="cpp/utility/program/SIG_types"/>
    <keyword type="function" name="std::longjmp" link="cpp/utility/program/longjmp"/>
    <keyword type="function" name="setjmp" link="cpp/utility/program/setjmp"/>
    <keyword type="typedef" name="std::jmp_buf" link="cpp/utility/program/jmp_buf"/>
    <keyword type="class" name="std::chrono::time_point" link="cpp/chrono/time_point"/>
    <keyword type="function" name="std::chrono::time_point::time_point" link="cpp/chrono/time_point/time_point"/>
    <keyword type="function" name="std::chrono::time_point::time_since_epoch" link="cpp/chrono/time_point/time_since_epoch"/>
    <keyword type="function" name="std::chrono::time_point::min" link="cpp/chrono/time_point/min"/>
    <keyword type="function" name="std::chrono::time_point::max" link="cpp/chrono/time_point/max"/>
    <keyword type="function" name="std::chrono::time_point::operator+=" link="cpp/chrono/time_point/operator_arith"/>
    <keyword type="function" name="std::chrono::time_point::operator-=" link="cpp/chrono/time_point/operator_arith"/>
    <keyword type="function" name="std::chrono::time_point::operator++" link="cpp/chrono/time_point/operator_inc_dec"/>
    <keyword type="function" name="std::chrono::time_point::operator--" link="cpp/chrono/time_point/operator_inc_dec"/>
    <keyword type="function" name="operator+(std::chrono::time_point)" link="cpp/chrono/time_point/operator_arith2"/>
    <keyword type="function" name="operator-(std::chrono::time_point)" link="cpp/chrono/time_point/operator_arith2"/>
    <keyword type="function" name="operator==(std::chrono::time_point)" link="cpp/chrono/time_point/operator_cmp"/>
    <keyword type="function" name="operator!=(std::chrono::time_point)" link="cpp/chrono/time_point/operator_cmp"/>
    <keyword type="function" name="operator&lt;(std::chrono::time_point)" link="cpp/chrono/time_point/operator_cmp"/>
    <keyword type="function" name="operator&lt;=(std::chrono::time_point)" link="cpp/chrono/time_point/operator_cmp"/>
    <keyword type="function" name="operator&gt;(std::chrono::time_point)" link="cpp/chrono/time_point/operator_cmp"/>
    <keyword type="function" name="operator&gt;=(std::chrono::time_point)" link="cpp/chrono/time_point/operator_cmp"/>
    <keyword type="function" name="std::chrono::floor(std::chrono::time_point)" link="cpp/chrono/time_point/floor"/>
    <keyword type="function" name="std::chrono::ceil(std::chrono::time_point)" link="cpp/chrono/time_point/ceil"/>
    <keyword type="function" name="std::chrono::round(std::chrono::time_point)" link="cpp/chrono/time_point/round"/>
    <keyword type="class" name="std::common_type&lt;std::chrono::time_point&gt;" link="cpp/chrono/time_point/common_type"/>
    <keyword type="function" name="std::chrono::time_point_cast" link="cpp/chrono/time_point/time_point_cast"/>
    <keyword type="class" name="std::chrono::duration" link="cpp/chrono/duration"/>
    <keyword type="function" name="std::chrono::duration::duration" link="cpp/chrono/duration/duration"/>
    <keyword type="function" name="std::chrono::duration::operator=" link="cpp/chrono/duration/operator="/>
    <keyword type="function" name="std::chrono::duration::count" link="cpp/chrono/duration/count"/>
    <keyword type="function" name="std::chrono::duration::zero" link="cpp/chrono/duration/zero"/>
    <keyword type="function" name="std::chrono::duration::min" link="cpp/chrono/duration/min"/>
    <keyword type="function" name="std::chrono::duration::max" link="cpp/chrono/duration/max"/>
    <keyword type="function" name="std::chrono::duration::operator+" link="cpp/chrono/duration/operator_arith"/>
    <keyword type="function" name="std::chrono::duration::operator-" link="cpp/chrono/duration/operator_arith"/>
    <keyword type="function" name="std::chrono::duration::operator++" link="cpp/chrono/duration/operator_arith2"/>
    <keyword type="function" name="std::chrono::duration::operator++(int)" link="cpp/chrono/duration/operator_arith2"/>
    <keyword type="function" name="std::chrono::duration::operator--" link="cpp/chrono/duration/operator_arith2"/>
    <keyword type="function" name="std::chrono::duration::operator--(int)" link="cpp/chrono/duration/operator_arith2"/>
    <keyword type="function" name="std::chrono::duration::operator+=" link="cpp/chrono/duration/operator_arith3"/>
    <keyword type="function" name="std::chrono::duration::operator-=" link="cpp/chrono/duration/operator_arith3"/>
    <keyword type="function" name="std::chrono::duration::operator*=" link="cpp/chrono/duration/operator_arith3"/>
    <keyword type="function" name="std::chrono::duration::operator/=" link="cpp/chrono/duration/operator_arith3"/>
    <keyword type="function" name="std::chrono::duration::operator%=" link="cpp/chrono/duration/operator_arith3"/>
    <keyword type="function" name="operator+(std::chrono::duration)" link="cpp/chrono/duration/operator_arith4"/>
    <keyword type="function" name="operator-(std::chrono::duration)" link="cpp/chrono/duration/operator_arith4"/>
    <keyword type="function" name="operator*(std::chrono::duration)" link="cpp/chrono/duration/operator_arith4"/>
    <keyword type="function" name="operator/(std::chrono::duration)" link="cpp/chrono/duration/operator_arith4"/>
    <keyword type="function" name="operator%(std::chrono::duration)" link="cpp/chrono/duration/operator_arith4"/>
    <keyword type="function" name="operator==(std::chrono::duration)" link="cpp/chrono/duration/operator_cmp"/>
    <keyword type="function" name="operator!=(std::chrono::duration)" link="cpp/chrono/duration/operator_cmp"/>
    <keyword type="function" name="operator&lt;(std::chrono::duration)" link="cpp/chrono/duration/operator_cmp"/>
    <keyword type="function" name="operator&lt;=(std::chrono::duration)" link="cpp/chrono/duration/operator_cmp"/>
    <keyword type="function" name="operator&gt;(std::chrono::duration)" link="cpp/chrono/duration/operator_cmp"/>
    <keyword type="function" name="operator&gt;=(std::chrono::duration)" link="cpp/chrono/duration/operator_cmp"/>
    <keyword type="function" name="operator&lt;=&gt;(std::chrono::duration)" link="cpp/chrono/duration/operator_cmp"/>
    <keyword type="function" name="std::chrono::floor(std::chrono::duration)" link="cpp/chrono/duration/floor"/>
    <keyword type="function" name="std::chrono::ceil(std::chrono::duration)" link="cpp/chrono/duration/ceil"/>
    <keyword type="function" name="std::chrono::round(std::chrono::duration)" link="cpp/chrono/duration/round"/>
    <keyword type="function" name="std::chrono::abs(std::chrono::duration)" link="cpp/chrono/duration/abs"/>
    <keyword type="function" name="operator&lt;&lt;(std::chrono::duration)" link="cpp/chrono/duration/operator_ltlt"/>
    <keyword type="function" name="std::chrono::from_stream(std::chrono::duration)" link="cpp/chrono/duration/from_stream"/>
    <keyword type="class" name="std::common_type&lt;std::chrono::duration&gt;" link="cpp/chrono/duration/common_type"/>
    <keyword type="class" name="std::formatter&lt;std::chrono::duration&gt;" link="cpp/chrono/duration/formatter"/>
    <keyword type="typedef" name="std::chrono::nanoseconds" link="cpp/chrono/duration"/>
    <keyword type="function" name="std::chrono::nanoseconds::nanoseconds" link="cpp/chrono/duration/duration"/>
    <keyword type="function" name="std::chrono::nanoseconds::operator=" link="cpp/chrono/duration/operator="/>
    <keyword type="function" name="std::chrono::nanoseconds::count" link="cpp/chrono/duration/count"/>
    <keyword type="function" name="std::chrono::nanoseconds::zero" link="cpp/chrono/duration/zero"/>
    <keyword type="function" name="std::chrono::nanoseconds::min" link="cpp/chrono/duration/min"/>
    <keyword type="function" name="std::chrono::nanoseconds::max" link="cpp/chrono/duration/max"/>
    <keyword type="function" name="std::chrono::nanoseconds::operator+" link="cpp/chrono/duration/operator_arith"/>
    <keyword type="function" name="std::chrono::nanoseconds::operator-" link="cpp/chrono/duration/operator_arith"/>
    <keyword type="function" name="std::chrono::nanoseconds::operator++" link="cpp/chrono/duration/operator_arith2"/>
    <keyword type="function" name="std::chrono::nanoseconds::operator++(int)" link="cpp/chrono/duration/operator_arith2"/>
    <keyword type="function" name="std::chrono::nanoseconds::operator--" link="cpp/chrono/duration/operator_arith2"/>
    <keyword type="function" name="std::chrono::nanoseconds::operator--(int)" link="cpp/chrono/duration/operator_arith2"/>
    <keyword type="function" name="std::chrono::nanoseconds::operator+=" link="cpp/chrono/duration/operator_arith3"/>
    <keyword type="function" name="std::chrono::nanoseconds::operator-=" link="cpp/chrono/duration/operator_arith3"/>
    <keyword type="function" name="std::chrono::nanoseconds::operator*=" link="cpp/chrono/duration/operator_arith3"/>
    <keyword type="function" name="std::chrono::nanoseconds::operator/=" link="cpp/chrono/duration/operator_arith3"/>
    <keyword type="function" name="std::chrono::nanoseconds::operator%=" link="cpp/chrono/duration/operator_arith3"/>
    <keyword type="function" name="operator+(std::chrono::nanoseconds)" link="cpp/chrono/duration/operator_arith4"/>
    <keyword type="function" name="operator-(std::chrono::nanoseconds)" link="cpp/chrono/duration/operator_arith4"/>
    <keyword type="function" name="operator*(std::chrono::nanoseconds)" link="cpp/chrono/duration/operator_arith4"/>
    <keyword type="function" name="operator/(std::chrono::nanoseconds)" link="cpp/chrono/duration/operator_arith4"/>
    <keyword type="function" name="operator%(std::chrono::nanoseconds)" link="cpp/chrono/duration/operator_arith4"/>
    <keyword type="function" name="operator==(std::chrono::nanoseconds)" link="cpp/chrono/duration/operator_cmp"/>
    <keyword type="function" name="operator!=(std::chrono::nanoseconds)" link="cpp/chrono/duration/operator_cmp"/>
    <keyword type="function" name="operator&lt;(std::chrono::nanoseconds)" link="cpp/chrono/duration/operator_cmp"/>
    <keyword type="function" name="operator&lt;=(std::chrono::nanoseconds)" link="cpp/chrono/duration/operator_cmp"/>
    <keyword type="function" name="operator&gt;(std::chrono::nanoseconds)" link="cpp/chrono/duration/operator_cmp"/>
    <keyword type="function" name="operator&gt;=(std::chrono::nanoseconds)" link="cpp/chrono/duration/operator_cmp"/>
    <keyword type="function" name="operator&lt;=&gt;(std::chrono::nanoseconds)" link="cpp/chrono/duration/operator_cmp"/>
    <keyword type="function" name="std::chrono::floor(std::chrono::nanoseconds)" link="cpp/chrono/duration/floor"/>
    <keyword type="function" name="std::chrono::ceil(std::chrono::nanoseconds)" link="cpp/chrono/duration/ceil"/>
    <keyword type="function" name="std::chrono::round(std::chrono::nanoseconds)" link="cpp/chrono/duration/round"/>
    <keyword type="function" name="std::chrono::abs(std::chrono::nanoseconds)" link="cpp/chrono/duration/abs"/>
    <keyword type="function" name="operator&lt;&lt;(std::chrono::nanoseconds)" link="cpp/chrono/duration/operator_ltlt"/>
    <keyword type="function" name="std::chrono::from_stream(std::chrono::nanoseconds)" link="cpp/chrono/duration/from_stream"/>
    <keyword type="class" name="std::common_type&lt;std::chrono::nanoseconds&gt;" link="cpp/chrono/duration/common_type"/>
    <keyword type="class" name="std::formatter&lt;std::chrono::nanoseconds&gt;" link="cpp/chrono/duration/formatter"/>
    <keyword type="typedef" name="std::chrono::microseconds" link="cpp/chrono/duration"/>
    <keyword type="function" name="std::chrono::microseconds::microseconds" link="cpp/chrono/duration/duration"/>
    <keyword type="function" name="std::chrono::microseconds::operator=" link="cpp/chrono/duration/operator="/>
    <keyword type="function" name="std::chrono::microseconds::count" link="cpp/chrono/duration/count"/>
    <keyword type="function" name="std::chrono::microseconds::zero" link="cpp/chrono/duration/zero"/>
    <keyword type="function" name="std::chrono::microseconds::min" link="cpp/chrono/duration/min"/>
    <keyword type="function" name="std::chrono::microseconds::max" link="cpp/chrono/duration/max"/>
    <keyword type="function" name="std::chrono::microseconds::operator+" link="cpp/chrono/duration/operator_arith"/>
    <keyword type="function" name="std::chrono::microseconds::operator-" link="cpp/chrono/duration/operator_arith"/>
    <keyword type="function" name="std::chrono::microseconds::operator++" link="cpp/chrono/duration/operator_arith2"/>
    <keyword type="function" name="std::chrono::microseconds::operator++(int)" link="cpp/chrono/duration/operator_arith2"/>
    <keyword type="function" name="std::chrono::microseconds::operator--" link="cpp/chrono/duration/operator_arith2"/>
    <keyword type="function" name="std::chrono::microseconds::operator--(int)" link="cpp/chrono/duration/operator_arith2"/>
    <keyword type="function" name="std::chrono::microseconds::operator+=" link="cpp/chrono/duration/operator_arith3"/>
    <keyword type="function" name="std::chrono::microseconds::operator-=" link="cpp/chrono/duration/operator_arith3"/>
    <keyword type="function" name="std::chrono::microseconds::operator*=" link="cpp/chrono/duration/operator_arith3"/>
    <keyword type="function" name="std::chrono::microseconds::operator/=" link="cpp/chrono/duration/operator_arith3"/>
    <keyword type="function" name="std::chrono::microseconds::operator%=" link="cpp/chrono/duration/operator_arith3"/>
    <keyword type="function" name="operator+(std::chrono::microseconds)" link="cpp/chrono/duration/operator_arith4"/>
    <keyword type="function" name="operator-(std::chrono::microseconds)" link="cpp/chrono/duration/operator_arith4"/>
    <keyword type="function" name="operator*(std::chrono::microseconds)" link="cpp/chrono/duration/operator_arith4"/>
    <keyword type="function" name="operator/(std::chrono::microseconds)" link="cpp/chrono/duration/operator_arith4"/>
    <keyword type="function" name="operator%(std::chrono::microseconds)" link="cpp/chrono/duration/operator_arith4"/>
    <keyword type="function" name="operator==(std::chrono::microseconds)" link="cpp/chrono/duration/operator_cmp"/>
    <keyword type="function" name="operator!=(std::chrono::microseconds)" link="cpp/chrono/duration/operator_cmp"/>
    <keyword type="function" name="operator&lt;(std::chrono::microseconds)" link="cpp/chrono/duration/operator_cmp"/>
    <keyword type="function" name="operator&lt;=(std::chrono::microseconds)" link="cpp/chrono/duration/operator_cmp"/>
    <keyword type="function" name="operator&gt;(std::chrono::microseconds)" link="cpp/chrono/duration/operator_cmp"/>
    <keyword type="function" name="operator&gt;=(std::chrono::microseconds)" link="cpp/chrono/duration/operator_cmp"/>
    <keyword type="function" name="operator&lt;=&gt;(std::chrono::microseconds)" link="cpp/chrono/duration/operator_cmp"/>
    <keyword type="function" name="std::chrono::floor(std::chrono::microseconds)" link="cpp/chrono/duration/floor"/>
    <keyword type="function" name="std::chrono::ceil(std::chrono::microseconds)" link="cpp/chrono/duration/ceil"/>
    <keyword type="function" name="std::chrono::round(std::chrono::microseconds)" link="cpp/chrono/duration/round"/>
    <keyword type="function" name="std::chrono::abs(std::chrono::microseconds)" link="cpp/chrono/duration/abs"/>
    <keyword type="function" name="operator&lt;&lt;(std::chrono::microseconds)" link="cpp/chrono/duration/operator_ltlt"/>
    <keyword type="function" name="std::chrono::from_stream(std::chrono::microseconds)" link="cpp/chrono/duration/from_stream"/>
    <keyword type="class" name="std::common_type&lt;std::chrono::microseconds&gt;" link="cpp/chrono/duration/common_type"/>
    <keyword type="class" name="std::formatter&lt;std::chrono::microseconds&gt;" link="cpp/chrono/duration/formatter"/>
    <keyword type="typedef" name="std::chrono::milliseconds" link="cpp/chrono/duration"/>
    <keyword type="function" name="std::chrono::milliseconds::milliseconds" link="cpp/chrono/duration/duration"/>
    <keyword type="function" name="std::chrono::milliseconds::operator=" link="cpp/chrono/duration/operator="/>
    <keyword type="function" name="std::chrono::milliseconds::count" link="cpp/chrono/duration/count"/>
    <keyword type="function" name="std::chrono::milliseconds::zero" link="cpp/chrono/duration/zero"/>
    <keyword type="function" name="std::chrono::milliseconds::min" link="cpp/chrono/duration/min"/>
    <keyword type="function" name="std::chrono::milliseconds::max" link="cpp/chrono/duration/max"/>
    <keyword type="function" name="std::chrono::milliseconds::operator+" link="cpp/chrono/duration/operator_arith"/>
    <keyword type="function" name="std::chrono::milliseconds::operator-" link="cpp/chrono/duration/operator_arith"/>
    <keyword type="function" name="std::chrono::milliseconds::operator++" link="cpp/chrono/duration/operator_arith2"/>
    <keyword type="function" name="std::chrono::milliseconds::operator++(int)" link="cpp/chrono/duration/operator_arith2"/>
    <keyword type="function" name="std::chrono::milliseconds::operator--" link="cpp/chrono/duration/operator_arith2"/>
    <keyword type="function" name="std::chrono::milliseconds::operator--(int)" link="cpp/chrono/duration/operator_arith2"/>
    <keyword type="function" name="std::chrono::milliseconds::operator+=" link="cpp/chrono/duration/operator_arith3"/>
    <keyword type="function" name="std::chrono::milliseconds::operator-=" link="cpp/chrono/duration/operator_arith3"/>
    <keyword type="function" name="std::chrono::milliseconds::operator*=" link="cpp/chrono/duration/operator_arith3"/>
    <keyword type="function" name="std::chrono::milliseconds::operator/=" link="cpp/chrono/duration/operator_arith3"/>
    <keyword type="function" name="std::chrono::milliseconds::operator%=" link="cpp/chrono/duration/operator_arith3"/>
    <keyword type="function" name="operator+(std::chrono::milliseconds)" link="cpp/chrono/duration/operator_arith4"/>
    <keyword type="function" name="operator-(std::chrono::milliseconds)" link="cpp/chrono/duration/operator_arith4"/>
    <keyword type="function" name="operator*(std::chrono::milliseconds)" link="cpp/chrono/duration/operator_arith4"/>
    <keyword type="function" name="operator/(std::chrono::milliseconds)" link="cpp/chrono/duration/operator_arith4"/>
    <keyword type="function" name="operator%(std::chrono::milliseconds)" link="cpp/chrono/duration/operator_arith4"/>
    <keyword type="function" name="operator==(std::chrono::milliseconds)" link="cpp/chrono/duration/operator_cmp"/>
    <keyword type="function" name="operator!=(std::chrono::milliseconds)" link="cpp/chrono/duration/operator_cmp"/>
    <keyword type="function" name="operator&lt;(std::chrono::milliseconds)" link="cpp/chrono/duration/operator_cmp"/>
    <keyword type="function" name="operator&lt;=(std::chrono::milliseconds)" link="cpp/chrono/duration/operator_cmp"/>
    <keyword type="function" name="operator&gt;(std::chrono::milliseconds)" link="cpp/chrono/duration/operator_cmp"/>
    <keyword type="function" name="operator&gt;=(std::chrono::milliseconds)" link="cpp/chrono/duration/operator_cmp"/>
    <keyword type="function" name="operator&lt;=&gt;(std::chrono::milliseconds)" link="cpp/chrono/duration/operator_cmp"/>
    <keyword type="function" name="std::chrono::floor(std::chrono::milliseconds)" link="cpp/chrono/duration/floor"/>
    <keyword type="function" name="std::chrono::ceil(std::chrono::milliseconds)" link="cpp/chrono/duration/ceil"/>
    <keyword type="function" name="std::chrono::round(std::chrono::milliseconds)" link="cpp/chrono/duration/round"/>
    <keyword type="function" name="std::chrono::abs(std::chrono::milliseconds)" link="cpp/chrono/duration/abs"/>
    <keyword type="function" name="operator&lt;&lt;(std::chrono::milliseconds)" link="cpp/chrono/duration/operator_ltlt"/>
    <keyword type="function" name="std::chrono::from_stream(std::chrono::milliseconds)" link="cpp/chrono/duration/from_stream"/>
    <keyword type="class" name="std::common_type&lt;std::chrono::milliseconds&gt;" link="cpp/chrono/duration/common_type"/>
    <keyword type="class" name="std::formatter&lt;std::chrono::milliseconds&gt;" link="cpp/chrono/duration/formatter"/>
    <keyword type="typedef" name="std::chrono::seconds" link="cpp/chrono/duration"/>
    <keyword type="function" name="std::chrono::seconds::seconds" link="cpp/chrono/duration/duration"/>
    <keyword type="function" name="std::chrono::seconds::operator=" link="cpp/chrono/duration/operator="/>
    <keyword type="function" name="std::chrono::seconds::count" link="cpp/chrono/duration/count"/>
    <keyword type="function" name="std::chrono::seconds::zero" link="cpp/chrono/duration/zero"/>
    <keyword type="function" name="std::chrono::seconds::min" link="cpp/chrono/duration/min"/>
    <keyword type="function" name="std::chrono::seconds::max" link="cpp/chrono/duration/max"/>
    <keyword type="function" name="std::chrono::seconds::operator+" link="cpp/chrono/duration/operator_arith"/>
    <keyword type="function" name="std::chrono::seconds::operator-" link="cpp/chrono/duration/operator_arith"/>
    <keyword type="function" name="std::chrono::seconds::operator++" link="cpp/chrono/duration/operator_arith2"/>
    <keyword type="function" name="std::chrono::seconds::operator++(int)" link="cpp/chrono/duration/operator_arith2"/>
    <keyword type="function" name="std::chrono::seconds::operator--" link="cpp/chrono/duration/operator_arith2"/>
    <keyword type="function" name="std::chrono::seconds::operator--(int)" link="cpp/chrono/duration/operator_arith2"/>
    <keyword type="function" name="std::chrono::seconds::operator+=" link="cpp/chrono/duration/operator_arith3"/>
    <keyword type="function" name="std::chrono::seconds::operator-=" link="cpp/chrono/duration/operator_arith3"/>
    <keyword type="function" name="std::chrono::seconds::operator*=" link="cpp/chrono/duration/operator_arith3"/>
    <keyword type="function" name="std::chrono::seconds::operator/=" link="cpp/chrono/duration/operator_arith3"/>
    <keyword type="function" name="std::chrono::seconds::operator%=" link="cpp/chrono/duration/operator_arith3"/>
    <keyword type="function" name="operator+(std::chrono::seconds)" link="cpp/chrono/duration/operator_arith4"/>
    <keyword type="function" name="operator-(std::chrono::seconds)" link="cpp/chrono/duration/operator_arith4"/>
    <keyword type="function" name="operator*(std::chrono::seconds)" link="cpp/chrono/duration/operator_arith4"/>
    <keyword type="function" name="operator/(std::chrono::seconds)" link="cpp/chrono/duration/operator_arith4"/>
    <keyword type="function" name="operator%(std::chrono::seconds)" link="cpp/chrono/duration/operator_arith4"/>
    <keyword type="function" name="operator==(std::chrono::seconds)" link="cpp/chrono/duration/operator_cmp"/>
    <keyword type="function" name="operator!=(std::chrono::seconds)" link="cpp/chrono/duration/operator_cmp"/>
    <keyword type="function" name="operator&lt;(std::chrono::seconds)" link="cpp/chrono/duration/operator_cmp"/>
    <keyword type="function" name="operator&lt;=(std::chrono::seconds)" link="cpp/chrono/duration/operator_cmp"/>
    <keyword type="function" name="operator&gt;(std::chrono::seconds)" link="cpp/chrono/duration/operator_cmp"/>
    <keyword type="function" name="operator&gt;=(std::chrono::seconds)" link="cpp/chrono/duration/operator_cmp"/>
    <keyword type="function" name="operator&lt;=&gt;(std::chrono::seconds)" link="cpp/chrono/duration/operator_cmp"/>
    <keyword type="function" name="std::chrono::floor(std::chrono::seconds)" link="cpp/chrono/duration/floor"/>
    <keyword type="function" name="std::chrono::ceil(std::chrono::seconds)" link="cpp/chrono/duration/ceil"/>
    <keyword type="function" name="std::chrono::round(std::chrono::seconds)" link="cpp/chrono/duration/round"/>
    <keyword type="function" name="std::chrono::abs(std::chrono::seconds)" link="cpp/chrono/duration/abs"/>
    <keyword type="function" name="operator&lt;&lt;(std::chrono::seconds)" link="cpp/chrono/duration/operator_ltlt"/>
    <keyword type="function" name="std::chrono::from_stream(std::chrono::seconds)" link="cpp/chrono/duration/from_stream"/>
    <keyword type="class" name="std::common_type&lt;std::chrono::seconds&gt;" link="cpp/chrono/duration/common_type"/>
    <keyword type="class" name="std::formatter&lt;std::chrono::seconds&gt;" link="cpp/chrono/duration/formatter"/>
    <keyword type="typedef" name="std::chrono::minutes" link="cpp/chrono/duration"/>
    <keyword type="function" name="std::chrono::minutes::minutes" link="cpp/chrono/duration/duration"/>
    <keyword type="function" name="std::chrono::minutes::operator=" link="cpp/chrono/duration/operator="/>
    <keyword type="function" name="std::chrono::minutes::count" link="cpp/chrono/duration/count"/>
    <keyword type="function" name="std::chrono::minutes::zero" link="cpp/chrono/duration/zero"/>
    <keyword type="function" name="std::chrono::minutes::min" link="cpp/chrono/duration/min"/>
    <keyword type="function" name="std::chrono::minutes::max" link="cpp/chrono/duration/max"/>
    <keyword type="function" name="std::chrono::minutes::operator+" link="cpp/chrono/duration/operator_arith"/>
    <keyword type="function" name="std::chrono::minutes::operator-" link="cpp/chrono/duration/operator_arith"/>
    <keyword type="function" name="std::chrono::minutes::operator++" link="cpp/chrono/duration/operator_arith2"/>
    <keyword type="function" name="std::chrono::minutes::operator++(int)" link="cpp/chrono/duration/operator_arith2"/>
    <keyword type="function" name="std::chrono::minutes::operator--" link="cpp/chrono/duration/operator_arith2"/>
    <keyword type="function" name="std::chrono::minutes::operator--(int)" link="cpp/chrono/duration/operator_arith2"/>
    <keyword type="function" name="std::chrono::minutes::operator+=" link="cpp/chrono/duration/operator_arith3"/>
    <keyword type="function" name="std::chrono::minutes::operator-=" link="cpp/chrono/duration/operator_arith3"/>
    <keyword type="function" name="std::chrono::minutes::operator*=" link="cpp/chrono/duration/operator_arith3"/>
    <keyword type="function" name="std::chrono::minutes::operator/=" link="cpp/chrono/duration/operator_arith3"/>
    <keyword type="function" name="std::chrono::minutes::operator%=" link="cpp/chrono/duration/operator_arith3"/>
    <keyword type="function" name="operator+(std::chrono::minutes)" link="cpp/chrono/duration/operator_arith4"/>
    <keyword type="function" name="operator-(std::chrono::minutes)" link="cpp/chrono/duration/operator_arith4"/>
    <keyword type="function" name="operator*(std::chrono::minutes)" link="cpp/chrono/duration/operator_arith4"/>
    <keyword type="function" name="operator/(std::chrono::minutes)" link="cpp/chrono/duration/operator_arith4"/>
    <keyword type="function" name="operator%(std::chrono::minutes)" link="cpp/chrono/duration/operator_arith4"/>
    <keyword type="function" name="operator==(std::chrono::minutes)" link="cpp/chrono/duration/operator_cmp"/>
    <keyword type="function" name="operator!=(std::chrono::minutes)" link="cpp/chrono/duration/operator_cmp"/>
    <keyword type="function" name="operator&lt;(std::chrono::minutes)" link="cpp/chrono/duration/operator_cmp"/>
    <keyword type="function" name="operator&lt;=(std::chrono::minutes)" link="cpp/chrono/duration/operator_cmp"/>
    <keyword type="function" name="operator&gt;(std::chrono::minutes)" link="cpp/chrono/duration/operator_cmp"/>
    <keyword type="function" name="operator&gt;=(std::chrono::minutes)" link="cpp/chrono/duration/operator_cmp"/>
    <keyword type="function" name="operator&lt;=&gt;(std::chrono::minutes)" link="cpp/chrono/duration/operator_cmp"/>
    <keyword type="function" name="std::chrono::floor(std::chrono::minutes)" link="cpp/chrono/duration/floor"/>
    <keyword type="function" name="std::chrono::ceil(std::chrono::minutes)" link="cpp/chrono/duration/ceil"/>
    <keyword type="function" name="std::chrono::round(std::chrono::minutes)" link="cpp/chrono/duration/round"/>
    <keyword type="function" name="std::chrono::abs(std::chrono::minutes)" link="cpp/chrono/duration/abs"/>
    <keyword type="function" name="operator&lt;&lt;(std::chrono::minutes)" link="cpp/chrono/duration/operator_ltlt"/>
    <keyword type="function" name="std::chrono::from_stream(std::chrono::minutes)" link="cpp/chrono/duration/from_stream"/>
    <keyword type="class" name="std::common_type&lt;std::chrono::minutes&gt;" link="cpp/chrono/duration/common_type"/>
    <keyword type="class" name="std::formatter&lt;std::chrono::minutes&gt;" link="cpp/chrono/duration/formatter"/>
    <keyword type="typedef" name="std::chrono::hours" link="cpp/chrono/duration"/>
    <keyword type="function" name="std::chrono::hours::hours" link="cpp/chrono/duration/duration"/>
    <keyword type="function" name="std::chrono::hours::operator=" link="cpp/chrono/duration/operator="/>
    <keyword type="function" name="std::chrono::hours::count" link="cpp/chrono/duration/count"/>
    <keyword type="function" name="std::chrono::hours::zero" link="cpp/chrono/duration/zero"/>
    <keyword type="function" name="std::chrono::hours::min" link="cpp/chrono/duration/min"/>
    <keyword type="function" name="std::chrono::hours::max" link="cpp/chrono/duration/max"/>
    <keyword type="function" name="std::chrono::hours::operator+" link="cpp/chrono/duration/operator_arith"/>
    <keyword type="function" name="std::chrono::hours::operator-" link="cpp/chrono/duration/operator_arith"/>
    <keyword type="function" name="std::chrono::hours::operator++" link="cpp/chrono/duration/operator_arith2"/>
    <keyword type="function" name="std::chrono::hours::operator++(int)" link="cpp/chrono/duration/operator_arith2"/>
    <keyword type="function" name="std::chrono::hours::operator--" link="cpp/chrono/duration/operator_arith2"/>
    <keyword type="function" name="std::chrono::hours::operator--(int)" link="cpp/chrono/duration/operator_arith2"/>
    <keyword type="function" name="std::chrono::hours::operator+=" link="cpp/chrono/duration/operator_arith3"/>
    <keyword type="function" name="std::chrono::hours::operator-=" link="cpp/chrono/duration/operator_arith3"/>
    <keyword type="function" name="std::chrono::hours::operator*=" link="cpp/chrono/duration/operator_arith3"/>
    <keyword type="function" name="std::chrono::hours::operator/=" link="cpp/chrono/duration/operator_arith3"/>
    <keyword type="function" name="std::chrono::hours::operator%=" link="cpp/chrono/duration/operator_arith3"/>
    <keyword type="function" name="operator+(std::chrono::hours)" link="cpp/chrono/duration/operator_arith4"/>
    <keyword type="function" name="operator-(std::chrono::hours)" link="cpp/chrono/duration/operator_arith4"/>
    <keyword type="function" name="operator*(std::chrono::hours)" link="cpp/chrono/duration/operator_arith4"/>
    <keyword type="function" name="operator/(std::chrono::hours)" link="cpp/chrono/duration/operator_arith4"/>
    <keyword type="function" name="operator%(std::chrono::hours)" link="cpp/chrono/duration/operator_arith4"/>
    <keyword type="function" name="operator==(std::chrono::hours)" link="cpp/chrono/duration/operator_cmp"/>
    <keyword type="function" name="operator!=(std::chrono::hours)" link="cpp/chrono/duration/operator_cmp"/>
    <keyword type="function" name="operator&lt;(std::chrono::hours)" link="cpp/chrono/duration/operator_cmp"/>
    <keyword type="function" name="operator&lt;=(std::chrono::hours)" link="cpp/chrono/duration/operator_cmp"/>
    <keyword type="function" name="operator&gt;(std::chrono::hours)" link="cpp/chrono/duration/operator_cmp"/>
    <keyword type="function" name="operator&gt;=(std::chrono::hours)" link="cpp/chrono/duration/operator_cmp"/>
    <keyword type="function" name="operator&lt;=&gt;(std::chrono::hours)" link="cpp/chrono/duration/operator_cmp"/>
    <keyword type="function" name="std::chrono::floor(std::chrono::hours)" link="cpp/chrono/duration/floor"/>
    <keyword type="function" name="std::chrono::ceil(std::chrono::hours)" link="cpp/chrono/duration/ceil"/>
    <keyword type="function" name="std::chrono::round(std::chrono::hours)" link="cpp/chrono/duration/round"/>
    <keyword type="function" name="std::chrono::abs(std::chrono::hours)" link="cpp/chrono/duration/abs"/>
    <keyword type="function" name="operator&lt;&lt;(std::chrono::hours)" link="cpp/chrono/duration/operator_ltlt"/>
    <keyword type="function" name="std::chrono::from_stream(std::chrono::hours)" link="cpp/chrono/duration/from_stream"/>
    <keyword type="class" name="std::common_type&lt;std::chrono::hours&gt;" link="cpp/chrono/duration/common_type"/>
    <keyword type="class" name="std::formatter&lt;std::chrono::hours&gt;" link="cpp/chrono/duration/formatter"/>
    <keyword type="typedef" name="std::chrono::days" link="cpp/chrono/duration"/>
    <keyword type="function" name="std::chrono::days::days" link="cpp/chrono/duration/duration"/>
    <keyword type="function" name="std::chrono::days::operator=" link="cpp/chrono/duration/operator="/>
    <keyword type="function" name="std::chrono::days::count" link="cpp/chrono/duration/count"/>
    <keyword type="function" name="std::chrono::days::zero" link="cpp/chrono/duration/zero"/>
    <keyword type="function" name="std::chrono::days::min" link="cpp/chrono/duration/min"/>
    <keyword type="function" name="std::chrono::days::max" link="cpp/chrono/duration/max"/>
    <keyword type="function" name="std::chrono::days::operator+" link="cpp/chrono/duration/operator_arith"/>
    <keyword type="function" name="std::chrono::days::operator-" link="cpp/chrono/duration/operator_arith"/>
    <keyword type="function" name="std::chrono::days::operator++" link="cpp/chrono/duration/operator_arith2"/>
    <keyword type="function" name="std::chrono::days::operator++(int)" link="cpp/chrono/duration/operator_arith2"/>
    <keyword type="function" name="std::chrono::days::operator--" link="cpp/chrono/duration/operator_arith2"/>
    <keyword type="function" name="std::chrono::days::operator--(int)" link="cpp/chrono/duration/operator_arith2"/>
    <keyword type="function" name="std::chrono::days::operator+=" link="cpp/chrono/duration/operator_arith3"/>
    <keyword type="function" name="std::chrono::days::operator-=" link="cpp/chrono/duration/operator_arith3"/>
    <keyword type="function" name="std::chrono::days::operator*=" link="cpp/chrono/duration/operator_arith3"/>
    <keyword type="function" name="std::chrono::days::operator/=" link="cpp/chrono/duration/operator_arith3"/>
    <keyword type="function" name="std::chrono::days::operator%=" link="cpp/chrono/duration/operator_arith3"/>
    <keyword type="function" name="operator+(std::chrono::days)" link="cpp/chrono/duration/operator_arith4"/>
    <keyword type="function" name="operator-(std::chrono::days)" link="cpp/chrono/duration/operator_arith4"/>
    <keyword type="function" name="operator*(std::chrono::days)" link="cpp/chrono/duration/operator_arith4"/>
    <keyword type="function" name="operator/(std::chrono::days)" link="cpp/chrono/duration/operator_arith4"/>
    <keyword type="function" name="operator%(std::chrono::days)" link="cpp/chrono/duration/operator_arith4"/>
    <keyword type="function" name="operator==(std::chrono::days)" link="cpp/chrono/duration/operator_cmp"/>
    <keyword type="function" name="operator!=(std::chrono::days)" link="cpp/chrono/duration/operator_cmp"/>
    <keyword type="function" name="operator&lt;(std::chrono::days)" link="cpp/chrono/duration/operator_cmp"/>
    <keyword type="function" name="operator&lt;=(std::chrono::days)" link="cpp/chrono/duration/operator_cmp"/>
    <keyword type="function" name="operator&gt;(std::chrono::days)" link="cpp/chrono/duration/operator_cmp"/>
    <keyword type="function" name="operator&gt;=(std::chrono::days)" link="cpp/chrono/duration/operator_cmp"/>
    <keyword type="function" name="operator&lt;=&gt;(std::chrono::days)" link="cpp/chrono/duration/operator_cmp"/>
    <keyword type="function" name="std::chrono::floor(std::chrono::days)" link="cpp/chrono/duration/floor"/>
    <keyword type="function" name="std::chrono::ceil(std::chrono::days)" link="cpp/chrono/duration/ceil"/>
    <keyword type="function" name="std::chrono::round(std::chrono::days)" link="cpp/chrono/duration/round"/>
    <keyword type="function" name="std::chrono::abs(std::chrono::days)" link="cpp/chrono/duration/abs"/>
    <keyword type="function" name="operator&lt;&lt;(std::chrono::days)" link="cpp/chrono/duration/operator_ltlt"/>
    <keyword type="function" name="std::chrono::from_stream(std::chrono::days)" link="cpp/chrono/duration/from_stream"/>
    <keyword type="class" name="std::common_type&lt;std::chrono::days&gt;" link="cpp/chrono/duration/common_type"/>
    <keyword type="class" name="std::formatter&lt;std::chrono::days&gt;" link="cpp/chrono/duration/formatter"/>
    <keyword type="typedef" name="std::chrono::weeks" link="cpp/chrono/duration"/>
    <keyword type="function" name="std::chrono::weeks::weeks" link="cpp/chrono/duration/duration"/>
    <keyword type="function" name="std::chrono::weeks::operator=" link="cpp/chrono/duration/operator="/>
    <keyword type="function" name="std::chrono::weeks::count" link="cpp/chrono/duration/count"/>
    <keyword type="function" name="std::chrono::weeks::zero" link="cpp/chrono/duration/zero"/>
    <keyword type="function" name="std::chrono::weeks::min" link="cpp/chrono/duration/min"/>
    <keyword type="function" name="std::chrono::weeks::max" link="cpp/chrono/duration/max"/>
    <keyword type="function" name="std::chrono::weeks::operator+" link="cpp/chrono/duration/operator_arith"/>
    <keyword type="function" name="std::chrono::weeks::operator-" link="cpp/chrono/duration/operator_arith"/>
    <keyword type="function" name="std::chrono::weeks::operator++" link="cpp/chrono/duration/operator_arith2"/>
    <keyword type="function" name="std::chrono::weeks::operator++(int)" link="cpp/chrono/duration/operator_arith2"/>
    <keyword type="function" name="std::chrono::weeks::operator--" link="cpp/chrono/duration/operator_arith2"/>
    <keyword type="function" name="std::chrono::weeks::operator--(int)" link="cpp/chrono/duration/operator_arith2"/>
    <keyword type="function" name="std::chrono::weeks::operator+=" link="cpp/chrono/duration/operator_arith3"/>
    <keyword type="function" name="std::chrono::weeks::operator-=" link="cpp/chrono/duration/operator_arith3"/>
    <keyword type="function" name="std::chrono::weeks::operator*=" link="cpp/chrono/duration/operator_arith3"/>
    <keyword type="function" name="std::chrono::weeks::operator/=" link="cpp/chrono/duration/operator_arith3"/>
    <keyword type="function" name="std::chrono::weeks::operator%=" link="cpp/chrono/duration/operator_arith3"/>
    <keyword type="function" name="operator+(std::chrono::weeks)" link="cpp/chrono/duration/operator_arith4"/>
    <keyword type="function" name="operator-(std::chrono::weeks)" link="cpp/chrono/duration/operator_arith4"/>
    <keyword type="function" name="operator*(std::chrono::weeks)" link="cpp/chrono/duration/operator_arith4"/>
    <keyword type="function" name="operator/(std::chrono::weeks)" link="cpp/chrono/duration/operator_arith4"/>
    <keyword type="function" name="operator%(std::chrono::weeks)" link="cpp/chrono/duration/operator_arith4"/>
    <keyword type="function" name="operator==(std::chrono::weeks)" link="cpp/chrono/duration/operator_cmp"/>
    <keyword type="function" name="operator!=(std::chrono::weeks)" link="cpp/chrono/duration/operator_cmp"/>
    <keyword type="function" name="operator&lt;(std::chrono::weeks)" link="cpp/chrono/duration/operator_cmp"/>
    <keyword type="function" name="operator&lt;=(std::chrono::weeks)" link="cpp/chrono/duration/operator_cmp"/>
    <keyword type="function" name="operator&gt;(std::chrono::weeks)" link="cpp/chrono/duration/operator_cmp"/>
    <keyword type="function" name="operator&gt;=(std::chrono::weeks)" link="cpp/chrono/duration/operator_cmp"/>
    <keyword type="function" name="operator&lt;=&gt;(std::chrono::weeks)" link="cpp/chrono/duration/operator_cmp"/>
    <keyword type="function" name="std::chrono::floor(std::chrono::weeks)" link="cpp/chrono/duration/floor"/>
    <keyword type="function" name="std::chrono::ceil(std::chrono::weeks)" link="cpp/chrono/duration/ceil"/>
    <keyword type="function" name="std::chrono::round(std::chrono::weeks)" link="cpp/chrono/duration/round"/>
    <keyword type="function" name="std::chrono::abs(std::chrono::weeks)" link="cpp/chrono/duration/abs"/>
    <keyword type="function" name="operator&lt;&lt;(std::chrono::weeks)" link="cpp/chrono/duration/operator_ltlt"/>
    <keyword type="function" name="std::chrono::from_stream(std::chrono::weeks)" link="cpp/chrono/duration/from_stream"/>
    <keyword type="class" name="std::common_type&lt;std::chrono::weeks&gt;" link="cpp/chrono/duration/common_type"/>
    <keyword type="class" name="std::formatter&lt;std::chrono::weeks&gt;" link="cpp/chrono/duration/formatter"/>
    <keyword type="typedef" name="std::chrono::months" link="cpp/chrono/duration"/>
    <keyword type="function" name="std::chrono::months::months" link="cpp/chrono/duration/duration"/>
    <keyword type="function" name="std::chrono::months::operator=" link="cpp/chrono/duration/operator="/>
    <keyword type="function" name="std::chrono::months::count" link="cpp/chrono/duration/count"/>
    <keyword type="function" name="std::chrono::months::zero" link="cpp/chrono/duration/zero"/>
    <keyword type="function" name="std::chrono::months::min" link="cpp/chrono/duration/min"/>
    <keyword type="function" name="std::chrono::months::max" link="cpp/chrono/duration/max"/>
    <keyword type="function" name="std::chrono::months::operator+" link="cpp/chrono/duration/operator_arith"/>
    <keyword type="function" name="std::chrono::months::operator-" link="cpp/chrono/duration/operator_arith"/>
    <keyword type="function" name="std::chrono::months::operator++" link="cpp/chrono/duration/operator_arith2"/>
    <keyword type="function" name="std::chrono::months::operator++(int)" link="cpp/chrono/duration/operator_arith2"/>
    <keyword type="function" name="std::chrono::months::operator--" link="cpp/chrono/duration/operator_arith2"/>
    <keyword type="function" name="std::chrono::months::operator--(int)" link="cpp/chrono/duration/operator_arith2"/>
    <keyword type="function" name="std::chrono::months::operator+=" link="cpp/chrono/duration/operator_arith3"/>
    <keyword type="function" name="std::chrono::months::operator-=" link="cpp/chrono/duration/operator_arith3"/>
    <keyword type="function" name="std::chrono::months::operator*=" link="cpp/chrono/duration/operator_arith3"/>
    <keyword type="function" name="std::chrono::months::operator/=" link="cpp/chrono/duration/operator_arith3"/>
    <keyword type="function" name="std::chrono::months::operator%=" link="cpp/chrono/duration/operator_arith3"/>
    <keyword type="function" name="operator+(std::chrono::months)" link="cpp/chrono/duration/operator_arith4"/>
    <keyword type="function" name="operator-(std::chrono::months)" link="cpp/chrono/duration/operator_arith4"/>
    <keyword type="function" name="operator*(std::chrono::months)" link="cpp/chrono/duration/operator_arith4"/>
    <keyword type="function" name="operator/(std::chrono::months)" link="cpp/chrono/duration/operator_arith4"/>
    <keyword type="function" name="operator%(std::chrono::months)" link="cpp/chrono/duration/operator_arith4"/>
    <keyword type="function" name="operator==(std::chrono::months)" link="cpp/chrono/duration/operator_cmp"/>
    <keyword type="function" name="operator!=(std::chrono::months)" link="cpp/chrono/duration/operator_cmp"/>
    <keyword type="function" name="operator&lt;(std::chrono::months)" link="cpp/chrono/duration/operator_cmp"/>
    <keyword type="function" name="operator&lt;=(std::chrono::months)" link="cpp/chrono/duration/operator_cmp"/>
    <keyword type="function" name="operator&gt;(std::chrono::months)" link="cpp/chrono/duration/operator_cmp"/>
    <keyword type="function" name="operator&gt;=(std::chrono::months)" link="cpp/chrono/duration/operator_cmp"/>
    <keyword type="function" name="operator&lt;=&gt;(std::chrono::months)" link="cpp/chrono/duration/operator_cmp"/>
    <keyword type="function" name="std::chrono::floor(std::chrono::months)" link="cpp/chrono/duration/floor"/>
    <keyword type="function" name="std::chrono::ceil(std::chrono::months)" link="cpp/chrono/duration/ceil"/>
    <keyword type="function" name="std::chrono::round(std::chrono::months)" link="cpp/chrono/duration/round"/>
    <keyword type="function" name="std::chrono::abs(std::chrono::months)" link="cpp/chrono/duration/abs"/>
    <keyword type="function" name="operator&lt;&lt;(std::chrono::months)" link="cpp/chrono/duration/operator_ltlt"/>
    <keyword type="function" name="std::chrono::from_stream(std::chrono::months)" link="cpp/chrono/duration/from_stream"/>
    <keyword type="class" name="std::common_type&lt;std::chrono::months&gt;" link="cpp/chrono/duration/common_type"/>
    <keyword type="class" name="std::formatter&lt;std::chrono::months&gt;" link="cpp/chrono/duration/formatter"/>
    <keyword type="typedef" name="std::chrono::years" link="cpp/chrono/duration"/>
    <keyword type="function" name="std::chrono::years::years" link="cpp/chrono/duration/duration"/>
    <keyword type="function" name="std::chrono::years::operator=" link="cpp/chrono/duration/operator="/>
    <keyword type="function" name="std::chrono::years::count" link="cpp/chrono/duration/count"/>
    <keyword type="function" name="std::chrono::years::zero" link="cpp/chrono/duration/zero"/>
    <keyword type="function" name="std::chrono::years::min" link="cpp/chrono/duration/min"/>
    <keyword type="function" name="std::chrono::years::max" link="cpp/chrono/duration/max"/>
    <keyword type="function" name="std::chrono::years::operator+" link="cpp/chrono/duration/operator_arith"/>
    <keyword type="function" name="std::chrono::years::operator-" link="cpp/chrono/duration/operator_arith"/>
    <keyword type="function" name="std::chrono::years::operator++" link="cpp/chrono/duration/operator_arith2"/>
    <keyword type="function" name="std::chrono::years::operator++(int)" link="cpp/chrono/duration/operator_arith2"/>
    <keyword type="function" name="std::chrono::years::operator--" link="cpp/chrono/duration/operator_arith2"/>
    <keyword type="function" name="std::chrono::years::operator--(int)" link="cpp/chrono/duration/operator_arith2"/>
    <keyword type="function" name="std::chrono::years::operator+=" link="cpp/chrono/duration/operator_arith3"/>
    <keyword type="function" name="std::chrono::years::operator-=" link="cpp/chrono/duration/operator_arith3"/>
    <keyword type="function" name="std::chrono::years::operator*=" link="cpp/chrono/duration/operator_arith3"/>
    <keyword type="function" name="std::chrono::years::operator/=" link="cpp/chrono/duration/operator_arith3"/>
    <keyword type="function" name="std::chrono::years::operator%=" link="cpp/chrono/duration/operator_arith3"/>
    <keyword type="function" name="operator+(std::chrono::years)" link="cpp/chrono/duration/operator_arith4"/>
    <keyword type="function" name="operator-(std::chrono::years)" link="cpp/chrono/duration/operator_arith4"/>
    <keyword type="function" name="operator*(std::chrono::years)" link="cpp/chrono/duration/operator_arith4"/>
    <keyword type="function" name="operator/(std::chrono::years)" link="cpp/chrono/duration/operator_arith4"/>
    <keyword type="function" name="operator%(std::chrono::years)" link="cpp/chrono/duration/operator_arith4"/>
    <keyword type="function" name="operator==(std::chrono::years)" link="cpp/chrono/duration/operator_cmp"/>
    <keyword type="function" name="operator!=(std::chrono::years)" link="cpp/chrono/duration/operator_cmp"/>
    <keyword type="function" name="operator&lt;(std::chrono::years)" link="cpp/chrono/duration/operator_cmp"/>
    <keyword type="function" name="operator&lt;=(std::chrono::years)" link="cpp/chrono/duration/operator_cmp"/>
    <keyword type="function" name="operator&gt;(std::chrono::years)" link="cpp/chrono/duration/operator_cmp"/>
    <keyword type="function" name="operator&gt;=(std::chrono::years)" link="cpp/chrono/duration/operator_cmp"/>
    <keyword type="function" name="operator&lt;=&gt;(std::chrono::years)" link="cpp/chrono/duration/operator_cmp"/>
    <keyword type="function" name="std::chrono::floor(std::chrono::years)" link="cpp/chrono/duration/floor"/>
    <keyword type="function" name="std::chrono::ceil(std::chrono::years)" link="cpp/chrono/duration/ceil"/>
    <keyword type="function" name="std::chrono::round(std::chrono::years)" link="cpp/chrono/duration/round"/>
    <keyword type="function" name="std::chrono::abs(std::chrono::years)" link="cpp/chrono/duration/abs"/>
    <keyword type="function" name="operator&lt;&lt;(std::chrono::years)" link="cpp/chrono/duration/operator_ltlt"/>
    <keyword type="function" name="std::chrono::from_stream(std::chrono::years)" link="cpp/chrono/duration/from_stream"/>
    <keyword type="class" name="std::common_type&lt;std::chrono::years&gt;" link="cpp/chrono/duration/common_type"/>
    <keyword type="class" name="std::formatter&lt;std::chrono::years&gt;" link="cpp/chrono/duration/formatter"/>
    <keyword type="function" name="std::chrono::duration_cast" link="cpp/chrono/duration/duration_cast"/>
    <keyword type="class" name="std::chrono::treat_as_floating_point" link="cpp/chrono/treat_as_floating_point"/>
    <keyword type="" name="std::chrono::treat_as_floating_point_v" link="cpp/chrono/treat_as_floating_point"/>
    <keyword type="class" name="std::chrono::duration_values" link="cpp/chrono/duration_values"/>
    <keyword type="function" name="std::chrono::duration_values::zero" link="cpp/chrono/duration_values/zero"/>
    <keyword type="function" name="std::chrono::duration_values::min" link="cpp/chrono/duration_values/min"/>
    <keyword type="function" name="std::chrono::duration_values::max" link="cpp/chrono/duration_values/max"/>
    <keyword type="function" name="std::literals::chrono_literals::operator&quot;&quot;h" link="cpp/chrono/operator&quot;&quot;h"/>
    <keyword type="function" name="std::literals::chrono_literals::operator&quot;&quot;min" link="cpp/chrono/operator&quot;&quot;min"/>
    <keyword type="function" name="std::literals::chrono_literals::operator&quot;&quot;s" link="cpp/chrono/operator&quot;&quot;s"/>
    <keyword type="function" name="std::literals::chrono_literals::operator&quot;&quot;ms" link="cpp/chrono/operator&quot;&quot;ms"/>
    <keyword type="function" name="std::literals::chrono_literals::operator&quot;&quot;us" link="cpp/chrono/operator&quot;&quot;us"/>
    <keyword type="function" name="std::literals::chrono_literals::operator&quot;&quot;ns" link="cpp/chrono/operator&quot;&quot;ns"/>
    <keyword type="class" name="std::chrono::system_clock" link="cpp/chrono/system_clock"/>
    <keyword type="macro" name="std::chrono::system_clock::is_steady" link="cpp/chrono/system_clock"/>
    <keyword type="function" name="std::chrono::system_clock::now" link="cpp/chrono/system_clock/now"/>
    <keyword type="function" name="std::chrono::system_clock::to_time_t" link="cpp/chrono/system_clock/to_time_t"/>
    <keyword type="function" name="std::chrono::system_clock::from_time_t" link="cpp/chrono/system_clock/from_time_t"/>
    <keyword type="class" name="std::chrono::sys_time" link="cpp/chrono/system_clock"/>
    <keyword type="function" name="operator&lt;&lt;(std::chrono::sys_time)" link="cpp/chrono/system_clock/operator_ltlt"/>
    <keyword type="function" name="std::chrono::from_stream(std::chrono::sys_time)" link="cpp/chrono/system_clock/from_stream"/>
    <keyword type="class" name="std::formatter&lt;std::chrono::sys_time&gt;" link="cpp/chrono/system_clock/formatter"/>
    <keyword type="typedef" name="std::chrono::sys_seconds" link="cpp/chrono/system_clock"/>
    <keyword type="function" name="operator&lt;&lt;(std::chrono::sys_seconds)" link="cpp/chrono/system_clock/operator_ltlt"/>
    <keyword type="function" name="std::chrono::from_stream(std::chrono::sys_seconds)" link="cpp/chrono/system_clock/from_stream"/>
    <keyword type="class" name="std::formatter&lt;std::chrono::sys_seconds&gt;" link="cpp/chrono/system_clock/formatter"/>
    <keyword type="typedef" name="std::chrono::sys_days" link="cpp/chrono/system_clock"/>
    <keyword type="function" name="operator&lt;&lt;(std::chrono::sys_days)" link="cpp/chrono/system_clock/operator_ltlt"/>
    <keyword type="function" name="std::chrono::from_stream(std::chrono::sys_days)" link="cpp/chrono/system_clock/from_stream"/>
    <keyword type="class" name="std::formatter&lt;std::chrono::sys_days&gt;" link="cpp/chrono/system_clock/formatter"/>
    <keyword type="class" name="std::chrono::steady_clock" link="cpp/chrono/steady_clock"/>
    <keyword type="macro" name="std::chrono::steady_clock::is_steady" link="cpp/chrono/steady_clock"/>
    <keyword type="function" name="std::chrono::steady_clock::now" link="cpp/chrono/steady_clock/now"/>
    <keyword type="class" name="std::chrono::high_resolution_clock" link="cpp/chrono/high_resolution_clock"/>
    <keyword type="macro" name="std::chrono::high_resolution_clock::is_steady" link="cpp/chrono/high_resolution_clock"/>
    <keyword type="function" name="std::chrono::high_resolution_clock::now" link="cpp/chrono/high_resolution_clock/now"/>
    <keyword type="class" name="std::chrono::utc_clock" link="cpp/chrono/utc_clock"/>
    <keyword type="macro" name="std::chrono::utc_clock::is_steady" link="cpp/chrono/utc_clock"/>
    <keyword type="function" name="std::chrono::utc_clock::now" link="cpp/chrono/utc_clock/now"/>
    <keyword type="function" name="std::chrono::utc_clock::to_sys" link="cpp/chrono/utc_clock/to_sys"/>
    <keyword type="function" name="std::chrono::utc_clock::from_sys" link="cpp/chrono/utc_clock/from_sys"/>
    <keyword type="class" name="std::chrono::utc_time" link="cpp/chrono/utc_clock"/>
    <keyword type="function" name="operator&lt;&lt;(std::chrono::utc_time)" link="cpp/chrono/utc_clock/operator_ltlt"/>
    <keyword type="function" name="std::chrono::from_stream(std::chrono::utc_time)" link="cpp/chrono/utc_clock/from_stream"/>
    <keyword type="class" name="std::formatter&lt;std::chrono::utc_time&gt;" link="cpp/chrono/utc_clock/formatter"/>
    <keyword type="typedef" name="std::chrono::utc_seconds" link="cpp/chrono/utc_clock"/>
    <keyword type="function" name="operator&lt;&lt;(std::chrono::utc_seconds)" link="cpp/chrono/utc_clock/operator_ltlt"/>
    <keyword type="function" name="std::chrono::from_stream(std::chrono::utc_seconds)" link="cpp/chrono/utc_clock/from_stream"/>
    <keyword type="class" name="std::formatter&lt;std::chrono::utc_seconds&gt;" link="cpp/chrono/utc_clock/formatter"/>
    <keyword type="class" name="std::chrono::tai_clock" link="cpp/chrono/tai_clock"/>
    <keyword type="macro" name="std::chrono::tai_clock::is_steady" link="cpp/chrono/tai_clock"/>
    <keyword type="function" name="std::chrono::tai_clock::now" link="cpp/chrono/tai_clock/now"/>
    <keyword type="function" name="std::chrono::tai_clock::to_utc" link="cpp/chrono/tai_clock/to_utc"/>
    <keyword type="function" name="std::chrono::tai_clock::from_utc" link="cpp/chrono/tai_clock/from_utc"/>
    <keyword type="class" name="std::chrono::tai_time" link="cpp/chrono/tai_clock"/>
    <keyword type="function" name="operator&lt;&lt;(std::chrono::tai_time)" link="cpp/chrono/tai_clock/operator_ltlt"/>
    <keyword type="function" name="std::chrono::from_stream(std::chrono::tai_time)" link="cpp/chrono/tai_clock/from_stream"/>
    <keyword type="class" name="std::formatter&lt;std::chrono::tai_time&gt;" link="cpp/chrono/tai_clock/formatter"/>
    <keyword type="typedef" name="std::chrono::tai_seconds" link="cpp/chrono/tai_clock"/>
    <keyword type="function" name="operator&lt;&lt;(std::chrono::tai_seconds)" link="cpp/chrono/tai_clock/operator_ltlt"/>
    <keyword type="function" name="std::chrono::from_stream(std::chrono::tai_seconds)" link="cpp/chrono/tai_clock/from_stream"/>
    <keyword type="class" name="std::formatter&lt;std::chrono::tai_seconds&gt;" link="cpp/chrono/tai_clock/formatter"/>
    <keyword type="class" name="std::chrono::gps_clock" link="cpp/chrono/gps_clock"/>
    <keyword type="macro" name="std::chrono::gps_clock::is_steady" link="cpp/chrono/gps_clock"/>
    <keyword type="function" name="std::chrono::gps_clock::now" link="cpp/chrono/gps_clock/now"/>
    <keyword type="function" name="std::chrono::gps_clock::to_utc" link="cpp/chrono/gps_clock/to_utc"/>
    <keyword type="function" name="std::chrono::gps_clock::from_utc" link="cpp/chrono/gps_clock/from_utc"/>
    <keyword type="class" name="std::chrono::gps_time" link="cpp/chrono/gps_clock"/>
    <keyword type="function" name="operator&lt;&lt;(std::chrono::gps_time)" link="cpp/chrono/gps_clock/operator_ltlt"/>
    <keyword type="function" name="std::chrono::from_stream(std::chrono::gps_time)" link="cpp/chrono/gps_clock/from_stream"/>
    <keyword type="class" name="std::formatter&lt;std::chrono::gps_time&gt;" link="cpp/chrono/gps_clock/formatter"/>
    <keyword type="typedef" name="std::chrono::gps_seconds" link="cpp/chrono/gps_clock"/>
    <keyword type="function" name="operator&lt;&lt;(std::chrono::gps_seconds)" link="cpp/chrono/gps_clock/operator_ltlt"/>
    <keyword type="function" name="std::chrono::from_stream(std::chrono::gps_seconds)" link="cpp/chrono/gps_clock/from_stream"/>
    <keyword type="class" name="std::formatter&lt;std::chrono::gps_seconds&gt;" link="cpp/chrono/gps_clock/formatter"/>
    <keyword type="class" name="std::chrono::file_clock" link="cpp/chrono/file_clock"/>
    <keyword type="macro" name="std::chrono::file_clock::is_steady" link="cpp/chrono/file_clock"/>
    <keyword type="function" name="std::chrono::file_clock::now" link="cpp/chrono/file_clock/now"/>
    <keyword type="function" name="std::chrono::file_clock::to_utc" link="cpp/chrono/file_clock/to_from_utc"/>
    <keyword type="function" name="std::chrono::file_clock::from_utc" link="cpp/chrono/file_clock/to_from_utc"/>
    <keyword type="function" name="std::chrono::file_clock::to_sys" link="cpp/chrono/file_clock/to_from_sys"/>
    <keyword type="function" name="std::chrono::file_clock::from_sys" link="cpp/chrono/file_clock/to_from_sys"/>
    <keyword type="class" name="std::chrono::file_time" link="cpp/chrono/file_clock"/>
    <keyword type="function" name="operator&lt;&lt;(std::chrono::file_time)" link="cpp/chrono/file_clock/operator_ltlt"/>
    <keyword type="function" name="std::chrono::from_stream(std::chrono::file_time)" link="cpp/chrono/file_clock/from_stream"/>
    <keyword type="class" name="std::formatter&lt;std::chrono::file_time&gt;" link="cpp/chrono/file_clock/formatter"/>
    <keyword type="class" name="std::chrono::local_t" link="cpp/chrono/local_t"/>
    <keyword type="class" name="std::chrono::local_time" link="cpp/chrono/local_t"/>
    <keyword type="function" name="operator&lt;&lt;(std::chrono::local_time)" link="cpp/chrono/local_t/operator_ltlt"/>
    <keyword type="function" name="std::chrono::from_stream(std::chrono::local_time)" link="cpp/chrono/local_t/from_stream"/>
    <keyword type="class" name="std::formatter&lt;std::chrono::local_time&gt;" link="cpp/chrono/local_t/formatter"/>
    <keyword type="typedef" name="std::chrono::local_seconds" link="cpp/chrono/local_t"/>
    <keyword type="function" name="operator&lt;&lt;(std::chrono::local_seconds)" link="cpp/chrono/local_t/operator_ltlt"/>
    <keyword type="function" name="std::chrono::from_stream(std::chrono::local_seconds)" link="cpp/chrono/local_t/from_stream"/>
    <keyword type="class" name="std::formatter&lt;std::chrono::local_seconds&gt;" link="cpp/chrono/local_t/formatter"/>
    <keyword type="typedef" name="std::chrono::local_days" link="cpp/chrono/local_t"/>
    <keyword type="function" name="operator&lt;&lt;(std::chrono::local_days)" link="cpp/chrono/local_t/operator_ltlt"/>
    <keyword type="function" name="std::chrono::from_stream(std::chrono::local_days)" link="cpp/chrono/local_t/from_stream"/>
    <keyword type="class" name="std::formatter&lt;std::chrono::local_days&gt;" link="cpp/chrono/local_t/formatter"/>
    <keyword type="class" name="std::chrono::is_clock" link="cpp/chrono/is_clock"/>
    <keyword type="macro" name="std::chrono::is_clock_v" link="cpp/chrono/is_clock"/>
    <keyword type="class" name="std::chrono::clock_time_conversion" link="cpp/chrono/clock_time_conversion"/>
    <keyword type="function" name="std::chrono::clock_cast" link="cpp/chrono/clock_cast"/>
    <keyword type="class" name="std::chrono::hh_mm_ss" link="cpp/chrono/hh_mm_ss"/>
    <keyword type="macro" name="std::chrono::hh_mm_ss::fractional_width" link="cpp/chrono/hh_mm_ss"/>
    <keyword type="typedef" name="std::chrono::hh_mm_ss::precision" link="cpp/chrono/hh_mm_ss"/>
    <keyword type="function" name="std::chrono::hh_mm_ss::hh_mm_ss" link="cpp/chrono/hh_mm_ss/hh_mm_ss"/>
    <keyword type="function" name="std::chrono::hh_mm_ss::is_negative" link="cpp/chrono/hh_mm_ss/accessors"/>
    <keyword type="function" name="std::chrono::hh_mm_ss::hours" link="cpp/chrono/hh_mm_ss/accessors"/>
    <keyword type="function" name="std::chrono::hh_mm_ss::minutes" link="cpp/chrono/hh_mm_ss/accessors"/>
    <keyword type="function" name="std::chrono::hh_mm_ss::seconds" link="cpp/chrono/hh_mm_ss/accessors"/>
    <keyword type="function" name="std::chrono::hh_mm_ss::subseconds" link="cpp/chrono/hh_mm_ss/accessors"/>
    <keyword type="function" name="std::chrono::hh_mm_ss::operator precision" link="cpp/chrono/hh_mm_ss/duration"/>
    <keyword type="function" name="std::chrono::hh_mm_ss::to_duration" link="cpp/chrono/hh_mm_ss/duration"/>
    <keyword type="function" name="operator&lt;&lt;(std::chrono::hh_mm_ss)" link="cpp/chrono/hh_mm_ss/operator_ltlt"/>
    <keyword type="class" name="std::formatter&lt;std::chrono::hh_mm_ss&gt;" link="cpp/chrono/hh_mm_ss/formatter"/>
    <keyword type="function" name="std::chrono::is_am" link="cpp/chrono/hour_fun"/>
    <keyword type="function" name="std::chrono::is_pm" link="cpp/chrono/hour_fun"/>
    <keyword type="function" name="std::chrono::make12" link="cpp/chrono/hour_fun"/>
    <keyword type="function" name="std::chrono::make24" link="cpp/chrono/hour_fun"/>
    <keyword type="class" name="std::chrono::last_spec" link="cpp/chrono/last_spec"/>
    <keyword type="class" name="std::chrono::last" link="cpp/chrono/last_spec"/>
    <keyword type="class" name="std::chrono::day" link="cpp/chrono/day"/>
    <keyword type="function" name="std::chrono::day::day" link="cpp/chrono/day/day"/>
    <keyword type="function" name="std::chrono::day::operator++" link="cpp/chrono/day/operator_inc_dec"/>
    <keyword type="function" name="std::chrono::day::operator++(int)" link="cpp/chrono/day/operator_inc_dec"/>
    <keyword type="function" name="std::chrono::day::operator--" link="cpp/chrono/day/operator_inc_dec"/>
    <keyword type="function" name="std::chrono::day::operator--(int)" link="cpp/chrono/day/operator_inc_dec"/>
    <keyword type="function" name="std::chrono::day::operator+=" link="cpp/chrono/day/operator_arith"/>
    <keyword type="function" name="std::chrono::day::operator-=" link="cpp/chrono/day/operator_arith"/>
    <keyword type="function" name="std::chrono::day::operator unsigned" link="cpp/chrono/day/operator_unsigned"/>
    <keyword type="function" name="std::chrono::day::ok" link="cpp/chrono/day/ok"/>
    <keyword type="function" name="operator==(std::chrono::day)" link="cpp/chrono/day/operator_cmp"/>
    <keyword type="function" name="operator&lt;=&gt;(std::chrono::day)" link="cpp/chrono/day/operator_cmp"/>
    <keyword type="function" name="operator+(std::chrono::day)" link="cpp/chrono/day/operator_arith_2"/>
    <keyword type="function" name="operator-(std::chrono::day)" link="cpp/chrono/day/operator_arith_2"/>
    <keyword type="function" name="operator&lt;&lt;(std::chrono::day)" link="cpp/chrono/day/operator_ltlt"/>
    <keyword type="function" name="std::chrono::from_stream(std::chrono::day)" link="cpp/chrono/day/from_stream"/>
    <keyword type="class" name="std::formatter&lt;std::chrono::day&gt;" link="cpp/chrono/day/formatter"/>
    <keyword type="function" name="std::literals::chrono_literals::operator&quot;&quot;d" link="cpp/chrono/operator&quot;&quot;d"/>
    <keyword type="class" name="std::chrono::month" link="cpp/chrono/month"/>
    <keyword type="function" name="std::chrono::month::month" link="cpp/chrono/month/month"/>
    <keyword type="function" name="std::chrono::month::operator++" link="cpp/chrono/month/operator_inc_dec"/>
    <keyword type="function" name="std::chrono::month::operator++(int)" link="cpp/chrono/month/operator_inc_dec"/>
    <keyword type="function" name="std::chrono::month::operator--" link="cpp/chrono/month/operator_inc_dec"/>
    <keyword type="function" name="std::chrono::month::operator--(int)" link="cpp/chrono/month/operator_inc_dec"/>
    <keyword type="function" name="std::chrono::month::operator+=" link="cpp/chrono/month/operator_arith"/>
    <keyword type="function" name="std::chrono::month::operator-=" link="cpp/chrono/month/operator_arith"/>
    <keyword type="function" name="std::chrono::month::operator unsigned" link="cpp/chrono/month/operator_unsigned"/>
    <keyword type="function" name="std::chrono::month::ok" link="cpp/chrono/month/ok"/>
    <keyword type="function" name="operator==(std::chrono::month)" link="cpp/chrono/month/operator_cmp"/>
    <keyword type="function" name="operator&lt;=&gt;(std::chrono::month)" link="cpp/chrono/month/operator_cmp"/>
    <keyword type="function" name="operator+(std::chrono::month)" link="cpp/chrono/month/operator_arith_2"/>
    <keyword type="function" name="operator-(std::chrono::month)" link="cpp/chrono/month/operator_arith_2"/>
    <keyword type="function" name="operator&lt;&lt;(std::chrono::month)" link="cpp/chrono/month/operator_ltlt"/>
    <keyword type="function" name="std::chrono::from_stream(std::chrono::month)" link="cpp/chrono/month/from_stream"/>
    <keyword type="class" name="std::formatter&lt;std::chrono::month&gt;" link="cpp/chrono/month/formatter"/>
    <keyword type="macro" name="std::chrono::January" link="cpp/chrono/month"/>
    <keyword type="macro" name="std::chrono::February" link="cpp/chrono/month"/>
    <keyword type="macro" name="std::chrono::March" link="cpp/chrono/month"/>
    <keyword type="macro" name="std::chrono::April" link="cpp/chrono/month"/>
    <keyword type="macro" name="std::chrono::May" link="cpp/chrono/month"/>
    <keyword type="macro" name="std::chrono::June" link="cpp/chrono/month"/>
    <keyword type="macro" name="std::chrono::July" link="cpp/chrono/month"/>
    <keyword type="macro" name="std::chrono::August" link="cpp/chrono/month"/>
    <keyword type="macro" name="std::chrono::September" link="cpp/chrono/month"/>
    <keyword type="macro" name="std::chrono::October" link="cpp/chrono/month"/>
    <keyword type="macro" name="std::chrono::November" link="cpp/chrono/month"/>
    <keyword type="macro" name="std::chrono::December" link="cpp/chrono/month"/>
    <keyword type="class" name="std::chrono::year" link="cpp/chrono/year"/>
    <keyword type="function" name="std::chrono::year::year" link="cpp/chrono/year/year"/>
    <keyword type="function" name="std::chrono::year::operator++" link="cpp/chrono/year/operator_inc_dec"/>
    <keyword type="function" name="std::chrono::year::operator++(int)" link="cpp/chrono/year/operator_inc_dec"/>
    <keyword type="function" name="std::chrono::year::operator--" link="cpp/chrono/year/operator_inc_dec"/>
    <keyword type="function" name="std::chrono::year::operator--(int)" link="cpp/chrono/year/operator_inc_dec"/>
    <keyword type="function" name="std::chrono::year::operator+=" link="cpp/chrono/year/operator_arith"/>
    <keyword type="function" name="std::chrono::year::operator-=" link="cpp/chrono/year/operator_arith"/>
    <keyword type="function" name="std::chrono::year::operator+" link="cpp/chrono/year/operator_sign"/>
    <keyword type="function" name="std::chrono::year::operator-" link="cpp/chrono/year/operator_sign"/>
    <keyword type="function" name="std::chrono::year::is_leap" link="cpp/chrono/year/is_leap"/>
    <keyword type="function" name="std::chrono::year::operator int" link="cpp/chrono/year/operator_int"/>
    <keyword type="function" name="std::chrono::year::ok" link="cpp/chrono/year/ok"/>
    <keyword type="function" name="std::chrono::year::min" link="cpp/chrono/year/min"/>
    <keyword type="function" name="std::chrono::year::max" link="cpp/chrono/year/max"/>
    <keyword type="function" name="operator==(std::chrono::year)" link="cpp/chrono/year/operator_cmp"/>
    <keyword type="function" name="operator&lt;=&gt;(std::chrono::year)" link="cpp/chrono/year/operator_cmp"/>
    <keyword type="function" name="operator+(std::chrono::year)" link="cpp/chrono/year/operator_arith_2"/>
    <keyword type="function" name="operator-(std::chrono::year)" link="cpp/chrono/year/operator_arith_2"/>
    <keyword type="function" name="operator&lt;&lt;(std::chrono::year)" link="cpp/chrono/year/operator_ltlt"/>
    <keyword type="function" name="std::chrono::from_stream(std::chrono::year)" link="cpp/chrono/year/from_stream"/>
    <keyword type="class" name="std::formatter&lt;std::chrono::year&gt;" link="cpp/chrono/year/formatter"/>
    <keyword type="function" name="std::literals::chrono_literals::operator&quot;&quot;y" link="cpp/chrono/operator&quot;&quot;y"/>
    <keyword type="class" name="std::chrono::weekday" link="cpp/chrono/weekday"/>
    <keyword type="function" name="std::chrono::weekday::weekday" link="cpp/chrono/weekday/weekday"/>
    <keyword type="function" name="std::chrono::weekday::operator++" link="cpp/chrono/weekday/operator_inc_dec"/>
    <keyword type="function" name="std::chrono::weekday::operator++(int)" link="cpp/chrono/weekday/operator_inc_dec"/>
    <keyword type="function" name="std::chrono::weekday::operator--" link="cpp/chrono/weekday/operator_inc_dec"/>
    <keyword type="function" name="std::chrono::weekday::operator--(int)" link="cpp/chrono/weekday/operator_inc_dec"/>
    <keyword type="function" name="std::chrono::weekday::operator+=" link="cpp/chrono/weekday/operator_arith"/>
    <keyword type="function" name="std::chrono::weekday::operator-=" link="cpp/chrono/weekday/operator_arith"/>
    <keyword type="function" name="std::chrono::weekday::c_encoding" link="cpp/chrono/weekday/encoding"/>
    <keyword type="function" name="std::chrono::weekday::iso_encoding" link="cpp/chrono/weekday/encoding"/>
    <keyword type="function" name="std::chrono::weekday::ok" link="cpp/chrono/weekday/ok"/>
    <keyword type="function" name="std::chrono::weekday::operator[]" link="cpp/chrono/weekday/operator_at"/>
    <keyword type="function" name="operator==(std::chrono::weekday)" link="cpp/chrono/weekday/operator_cmp"/>
    <keyword type="function" name="operator+(std::chrono::weekday)" link="cpp/chrono/weekday/operator_arith_2"/>
    <keyword type="function" name="operator-(std::chrono::weekday)" link="cpp/chrono/weekday/operator_arith_2"/>
    <keyword type="function" name="operator&lt;&lt;(std::chrono::weekday)" link="cpp/chrono/weekday/operator_ltlt"/>
    <keyword type="function" name="std::chrono::from_stream(std::chrono::weekday)" link="cpp/chrono/weekday/from_stream"/>
    <keyword type="class" name="std::formatter&lt;std::chrono::weekday&gt;" link="cpp/chrono/weekday/formatter"/>
    <keyword type="macro" name="std::chrono::Sunday" link="cpp/chrono/weekday"/>
    <keyword type="macro" name="std::chrono::Monday" link="cpp/chrono/weekday"/>
    <keyword type="macro" name="std::chrono::Tuesday" link="cpp/chrono/weekday"/>
    <keyword type="macro" name="std::chrono::Wednesday" link="cpp/chrono/weekday"/>
    <keyword type="macro" name="std::chrono::Thursday" link="cpp/chrono/weekday"/>
    <keyword type="macro" name="std::chrono::Friday" link="cpp/chrono/weekday"/>
    <keyword type="macro" name="std::chrono::Saturday" link="cpp/chrono/weekday"/>
    <keyword type="class" name="std::chrono::weekday_indexed" link="cpp/chrono/weekday_indexed"/>
    <keyword type="function" name="std::chrono::weekday_indexed::weekday_indexed" link="cpp/chrono/weekday_indexed/weekday_indexed"/>
    <keyword type="function" name="std::chrono::weekday_indexed::weekday" link="cpp/chrono/weekday_indexed/weekday"/>
    <keyword type="function" name="std::chrono::weekday_indexed::index" link="cpp/chrono/weekday_indexed/index"/>
    <keyword type="function" name="std::chrono::weekday_indexed::ok" link="cpp/chrono/weekday_indexed/ok"/>
    <keyword type="function" name="operator==(std::chrono::weekday_indexed)" link="cpp/chrono/weekday_indexed/operator_cmp"/>
    <keyword type="function" name="operator&lt;&lt;(std::chrono::weekday_indexed)" link="cpp/chrono/weekday_indexed/operator_ltlt"/>
    <keyword type="class" name="std::formatter&lt;std::chrono::weekday_indexed&gt;" link="cpp/chrono/weekday_indexed/formatter"/>
    <keyword type="class" name="std::chrono::weekday_last" link="cpp/chrono/weekday_last"/>
    <keyword type="function" name="std::chrono::weekday_last::weekday_last" link="cpp/chrono/weekday_last/weekday_last"/>
    <keyword type="function" name="std::chrono::weekday_last::weekday" link="cpp/chrono/weekday_last/weekday"/>
    <keyword type="function" name="std::chrono::weekday_last::ok" link="cpp/chrono/weekday_last/ok"/>
    <keyword type="function" name="operator==(std::chrono::weekday_last)" link="cpp/chrono/weekday_last/operator_cmp"/>
    <keyword type="function" name="operator&lt;&lt;(std::chrono::weekday_last)" link="cpp/chrono/weekday_last/operator_ltlt"/>
    <keyword type="class" name="std::formatter&lt;std::chrono::weekday_last&gt;" link="cpp/chrono/weekday_last/formatter"/>
    <keyword type="class" name="std::chrono::month_day" link="cpp/chrono/month_day"/>
    <keyword type="function" name="std::chrono::month_day::month_day" link="cpp/chrono/month_day/month_day"/>
    <keyword type="function" name="std::chrono::month_day::month" link="cpp/chrono/month_day/accessors"/>
    <keyword type="function" name="std::chrono::month_day::day" link="cpp/chrono/month_day/accessors"/>
    <keyword type="function" name="std::chrono::month_day::ok" link="cpp/chrono/month_day/ok"/>
    <keyword type="function" name="operator==(std::chrono::month_day)" link="cpp/chrono/month_day/operator_cmp"/>
    <keyword type="function" name="operator&lt;=&gt;(std::chrono::month_day)" link="cpp/chrono/month_day/operator_cmp"/>
    <keyword type="function" name="operator&lt;&lt;(std::chrono::month_day)" link="cpp/chrono/month_day/operator_ltlt"/>
    <keyword type="function" name="std::chrono::from_stream(std::chrono::month_day)" link="cpp/chrono/month_day/from_stream"/>
    <keyword type="class" name="std::formatter&lt;std::chrono::month_day&gt;" link="cpp/chrono/month_day/formatter"/>
    <keyword type="class" name="std::chrono::month_day_last" link="cpp/chrono/month_day_last"/>
    <keyword type="function" name="std::chrono::month_day_last::month_day_last" link="cpp/chrono/month_day_last/month_day_last"/>
    <keyword type="function" name="std::chrono::month_day_last::month" link="cpp/chrono/month_day_last/month"/>
    <keyword type="function" name="std::chrono::month_day_last::ok" link="cpp/chrono/month_day_last/ok"/>
    <keyword type="function" name="operator==(std::chrono::month_day_last)" link="cpp/chrono/month_day_last/operator_cmp"/>
    <keyword type="function" name="operator&lt;=&gt;(std::chrono::month_day_last)" link="cpp/chrono/month_day_last/operator_cmp"/>
    <keyword type="function" name="operator&lt;&lt;(std::chrono::month_day_last)" link="cpp/chrono/month_day_last/operator_ltlt"/>
    <keyword type="class" name="std::formatter&lt;std::chrono::month_day_last&gt;" link="cpp/chrono/month_day_last/formatter"/>
    <keyword type="class" name="std::chrono::month_weekday" link="cpp/chrono/month_weekday"/>
    <keyword type="function" name="std::chrono::month_weekday::month_weekday" link="cpp/chrono/month_weekday/month_weekday"/>
    <keyword type="function" name="std::chrono::month_weekday::month" link="cpp/chrono/month_weekday/accessors"/>
    <keyword type="function" name="std::chrono::month_weekday::weekday_indexed" link="cpp/chrono/month_weekday/accessors"/>
    <keyword type="function" name="std::chrono::month_weekday::ok" link="cpp/chrono/month_weekday/ok"/>
    <keyword type="function" name="operator==(std::chrono::month_weekday)" link="cpp/chrono/month_weekday/operator_cmp"/>
    <keyword type="function" name="operator&lt;&lt;(std::chrono::month_weekday)" link="cpp/chrono/month_weekday/operator_ltlt"/>
    <keyword type="class" name="std::formatter&lt;std::chrono::month_weekday&gt;" link="cpp/chrono/month_weekday/formatter"/>
    <keyword type="class" name="std::chrono::month_weekday_last" link="cpp/chrono/month_weekday_last"/>
    <keyword type="function" name="std::chrono::month_weekday_last::month_weekday_last" link="cpp/chrono/month_weekday_last/month_weekday_last"/>
    <keyword type="function" name="std::chrono::month_weekday_last::month" link="cpp/chrono/month_weekday_last/accessors"/>
    <keyword type="function" name="std::chrono::month_weekday_last::weekday_last" link="cpp/chrono/month_weekday_last/accessors"/>
    <keyword type="function" name="std::chrono::month_weekday_last::ok" link="cpp/chrono/month_weekday_last/ok"/>
    <keyword type="function" name="operator==(std::chrono::month_weekday_last)" link="cpp/chrono/month_weekday_last/operator_cmp"/>
    <keyword type="function" name="operator&lt;&lt;(std::chrono::month_weekday_last)" link="cpp/chrono/month_weekday_last/operator_ltlt"/>
    <keyword type="class" name="std::formatter&lt;std::chrono::month_weekday_last&gt;" link="cpp/chrono/month_weekday_last/formatter"/>
    <keyword type="class" name="std::chrono::year_month" link="cpp/chrono/year_month"/>
    <keyword type="function" name="std::chrono::year_month::year_month" link="cpp/chrono/year_month/year_month"/>
    <keyword type="function" name="std::chrono::year_month::operator+=" link="cpp/chrono/year_month/operator_arith"/>
    <keyword type="function" name="std::chrono::year_month::operator-=" link="cpp/chrono/year_month/operator_arith"/>
    <keyword type="function" name="std::chrono::year_month::year" link="cpp/chrono/year_month/accessors"/>
    <keyword type="function" name="std::chrono::year_month::month" link="cpp/chrono/year_month/accessors"/>
    <keyword type="function" name="std::chrono::year_month::ok" link="cpp/chrono/year_month/ok"/>
    <keyword type="function" name="operator==(std::chrono::year_month)" link="cpp/chrono/year_month/operator_cmp"/>
    <keyword type="function" name="operator&lt;=&gt;(std::chrono::year_month)" link="cpp/chrono/year_month/operator_cmp"/>
    <keyword type="function" name="operator+(std::chrono::year_month)" link="cpp/chrono/year_month/operator_arith_2"/>
    <keyword type="function" name="operator-(std::chrono::year_month)" link="cpp/chrono/year_month/operator_arith_2"/>
    <keyword type="function" name="operator&lt;&lt;(std::chrono::year_month)" link="cpp/chrono/year_month/operator_ltlt"/>
    <keyword type="function" name="std::chrono::from_stream(std::chrono::year_month)" link="cpp/chrono/year_month/from_stream"/>
    <keyword type="class" name="std::formatter&lt;std::chrono::year_month&gt;" link="cpp/chrono/year_month/formatter"/>
    <keyword type="class" name="std::chrono::year_month_day" link="cpp/chrono/year_month_day"/>
    <keyword type="function" name="std::chrono::year_month_day::year_month_day" link="cpp/chrono/year_month_day/year_month_day"/>
    <keyword type="function" name="std::chrono::year_month_day::operator+=" link="cpp/chrono/year_month_day/operator_arith"/>
    <keyword type="function" name="std::chrono::year_month_day::operator-=" link="cpp/chrono/year_month_day/operator_arith"/>
    <keyword type="function" name="std::chrono::year_month_day::year" link="cpp/chrono/year_month_day/accessors"/>
    <keyword type="function" name="std::chrono::year_month_day::month" link="cpp/chrono/year_month_day/accessors"/>
    <keyword type="function" name="std::chrono::year_month_day::day" link="cpp/chrono/year_month_day/accessors"/>
    <keyword type="function" name="std::chrono::year_month_day::operator sys_days" link="cpp/chrono/year_month_day/operator_days"/>
    <keyword type="function" name="std::chrono::year_month_day::operator local_days" link="cpp/chrono/year_month_day/operator_days"/>
    <keyword type="function" name="std::chrono::year_month_day::ok" link="cpp/chrono/year_month_day/ok"/>
    <keyword type="function" name="operator==(std::chrono::year_month_day)" link="cpp/chrono/year_month_day/operator_cmp"/>
    <keyword type="function" name="operator&lt;=&gt;(std::chrono::year_month_day)" link="cpp/chrono/year_month_day/operator_cmp"/>
    <keyword type="function" name="operator+(std::chrono::year_month_day)" link="cpp/chrono/year_month_day/operator_arith_2"/>
    <keyword type="function" name="operator-(std::chrono::year_month_day)" link="cpp/chrono/year_month_day/operator_arith_2"/>
    <keyword type="function" name="operator&lt;&lt;(std::chrono::year_month_day)" link="cpp/chrono/year_month_day/operator_ltlt"/>
    <keyword type="function" name="std::chrono::from_stream(std::chrono::year_month_day)" link="cpp/chrono/year_month_day/from_stream"/>
    <keyword type="class" name="std::formatter&lt;std::chrono::year_month_day&gt;" link="cpp/chrono/year_month_day/formatter"/>
    <keyword type="class" name="std::chrono::year_month_day_last" link="cpp/chrono/year_month_day_last"/>
    <keyword type="function" name="std::chrono::year_month_day_last::year_month_day_last" link="cpp/chrono/year_month_day_last/year_month_day_last"/>
    <keyword type="function" name="std::chrono::year_month_day_last::operator+=" link="cpp/chrono/year_month_day_last/operator_arith"/>
    <keyword type="function" name="std::chrono::year_month_day_last::operator-=" link="cpp/chrono/year_month_day_last/operator_arith"/>
    <keyword type="function" name="std::chrono::year_month_day_last::year" link="cpp/chrono/year_month_day_last/accessors"/>
    <keyword type="function" name="std::chrono::year_month_day_last::month" link="cpp/chrono/year_month_day_last/accessors"/>
    <keyword type="function" name="std::chrono::year_month_day_last::day" link="cpp/chrono/year_month_day_last/accessors"/>
    <keyword type="function" name="std::chrono::year_month_day_last::month_day_last" link="cpp/chrono/year_month_day_last/accessors"/>
    <keyword type="function" name="std::chrono::year_month_day_last::operator sys_days" link="cpp/chrono/year_month_day_last/operator_days"/>
    <keyword type="function" name="std::chrono::year_month_day_last::operator local_days" link="cpp/chrono/year_month_day_last/operator_days"/>
    <keyword type="function" name="std::chrono::year_month_day_last::ok" link="cpp/chrono/year_month_day_last/ok"/>
    <keyword type="function" name="operator==(std::chrono::year_month_day_last)" link="cpp/chrono/year_month_day_last/operator_cmp"/>
    <keyword type="function" name="operator&lt;=&gt;(std::chrono::year_month_day_last)" link="cpp/chrono/year_month_day_last/operator_cmp"/>
    <keyword type="function" name="operator+(std::chrono::year_month_day_last)" link="cpp/chrono/year_month_day_last/operator_arith_2"/>
    <keyword type="function" name="operator-(std::chrono::year_month_day_last)" link="cpp/chrono/year_month_day_last/operator_arith_2"/>
    <keyword type="function" name="operator&lt;&lt;(std::chrono::year_month_day_last)" link="cpp/chrono/year_month_day_last/operator_ltlt"/>
    <keyword type="class" name="std::formatter&lt;std::chrono::year_month_day_last&gt;" link="cpp/chrono/year_month_day_last/formatter"/>
    <keyword type="class" name="std::chrono::year_month_weekday" link="cpp/chrono/year_month_weekday"/>
    <keyword type="function" name="std::chrono::year_month_weekday::year_month_weekday" link="cpp/chrono/year_month_weekday/year_month_weekday"/>
    <keyword type="function" name="std::chrono::year_month_weekday::operator+=" link="cpp/chrono/year_month_weekday/operator_arith"/>
    <keyword type="function" name="std::chrono::year_month_weekday::operator-=" link="cpp/chrono/year_month_weekday/operator_arith"/>
    <keyword type="function" name="std::chrono::year_month_weekday::year" link="cpp/chrono/year_month_weekday/accessors"/>
    <keyword type="function" name="std::chrono::year_month_weekday::month" link="cpp/chrono/year_month_weekday/accessors"/>
    <keyword type="function" name="std::chrono::year_month_weekday::weekday" link="cpp/chrono/year_month_weekday/accessors"/>
    <keyword type="function" name="std::chrono::year_month_weekday::index" link="cpp/chrono/year_month_weekday/accessors"/>
    <keyword type="function" name="std::chrono::year_month_weekday::weekday_indexed" link="cpp/chrono/year_month_weekday/accessors"/>
    <keyword type="function" name="std::chrono::year_month_weekday::operator sys_days" link="cpp/chrono/year_month_weekday/operator_days"/>
    <keyword type="function" name="std::chrono::year_month_weekday::operator local_days" link="cpp/chrono/year_month_weekday/operator_days"/>
    <keyword type="function" name="std::chrono::year_month_weekday::ok" link="cpp/chrono/year_month_weekday/ok"/>
    <keyword type="function" name="operator==(std::chrono::year_month_weekday)" link="cpp/chrono/year_month_weekday/operator_cmp"/>
    <keyword type="function" name="operator+(std::chrono::year_month_weekday)" link="cpp/chrono/year_month_weekday/operator_arith_2"/>
    <keyword type="function" name="operator-(std::chrono::year_month_weekday)" link="cpp/chrono/year_month_weekday/operator_arith_2"/>
    <keyword type="function" name="operator&lt;&lt;(std::chrono::year_month_weekday)" link="cpp/chrono/year_month_weekday/operator_ltlt"/>
    <keyword type="class" name="std::formatter&lt;std::chrono::year_month_weekday&gt;" link="cpp/chrono/year_month_weekday/formatter"/>
    <keyword type="class" name="std::chrono::year_month_weekday_last" link="cpp/chrono/year_month_weekday_last"/>
    <keyword type="function" name="std::chrono::year_month_weekday_last::year_month_weekday_last" link="cpp/chrono/year_month_weekday_last/year_month_weekday_last"/>
    <keyword type="function" name="std::chrono::year_month_weekday_last::operator+=" link="cpp/chrono/year_month_weekday_last/operator_arith"/>
    <keyword type="function" name="std::chrono::year_month_weekday_last::operator-=" link="cpp/chrono/year_month_weekday_last/operator_arith"/>
    <keyword type="function" name="std::chrono::year_month_weekday_last::year" link="cpp/chrono/year_month_weekday_last/accessors"/>
    <keyword type="function" name="std::chrono::year_month_weekday_last::month" link="cpp/chrono/year_month_weekday_last/accessors"/>
    <keyword type="function" name="std::chrono::year_month_weekday_last::weekday" link="cpp/chrono/year_month_weekday_last/accessors"/>
    <keyword type="function" name="std::chrono::year_month_weekday_last::weekday_last" link="cpp/chrono/year_month_weekday_last/accessors"/>
    <keyword type="function" name="std::chrono::year_month_weekday_last::operator sys_days" link="cpp/chrono/year_month_weekday_last/operator_days"/>
    <keyword type="function" name="std::chrono::year_month_weekday_last::operator local_days" link="cpp/chrono/year_month_weekday_last/operator_days"/>
    <keyword type="function" name="std::chrono::year_month_weekday_last::ok" link="cpp/chrono/year_month_weekday_last/ok"/>
    <keyword type="function" name="operator==(std::chrono::year_month_weekday_last)" link="cpp/chrono/year_month_weekday_last/operator_cmp"/>
    <keyword type="function" name="operator+(std::chrono::year_month_weekday_last)" link="cpp/chrono/year_month_weekday_last/operator_arith_2"/>
    <keyword type="function" name="operator-(std::chrono::year_month_weekday_last)" link="cpp/chrono/year_month_weekday_last/operator_arith_2"/>
    <keyword type="function" name="operator&lt;&lt;(std::chrono::year_month_weekday_last)" link="cpp/chrono/year_month_weekday_last/operator_ltlt"/>
    <keyword type="class" name="std::formatter&lt;std::chrono::year_month_weekday_last&gt;" link="cpp/chrono/year_month_weekday_last/formatter"/>
    <keyword type="function" name="std::chrono::operator/" link="cpp/chrono/operator_slash"/>
    <keyword type="class" name="std::chrono::tzdb" link="cpp/chrono/tzdb"/>
    <keyword type="function" name="std::chrono::tzdb::locate_zone" link="cpp/chrono/tzdb/locate_zone"/>
    <keyword type="function" name="std::chrono::tzdb::current_zone" link="cpp/chrono/tzdb/current_zone"/>
    <keyword type="class" name="std::chrono::tzdb_list" link="cpp/chrono/tzdb_list"/>
    <keyword type="function" name="std::chrono::tzdb_list::front" link="cpp/chrono/tzdb_list/front"/>
    <keyword type="function" name="std::chrono::tzdb_list::erase_after" link="cpp/chrono/tzdb_list/erase_after"/>
    <keyword type="function" name="std::chrono::tzdb_list::begin" link="cpp/chrono/tzdb_list/begin"/>
    <keyword type="function" name="std::chrono::tzdb_list::cbegin" link="cpp/chrono/tzdb_list/begin"/>
    <keyword type="function" name="std::chrono::tzdb_list::end" link="cpp/chrono/tzdb_list/end"/>
    <keyword type="function" name="std::chrono::tzdb_list::cend" link="cpp/chrono/tzdb_list/end"/>
    <keyword type="function" name="std::chrono::get_tzdb_list" link="cpp/chrono/tzdb_functions"/>
    <keyword type="function" name="std::chrono::get_tzdb" link="cpp/chrono/tzdb_functions"/>
    <keyword type="function" name="std::chrono::remote_version" link="cpp/chrono/tzdb_functions"/>
    <keyword type="function" name="std::chrono::reload_tzdb" link="cpp/chrono/tzdb_functions"/>
    <keyword type="function" name="std::chrono::locate_zone" link="cpp/chrono/locate_zone"/>
    <keyword type="function" name="std::chrono::current_zone" link="cpp/chrono/current_zone"/>
    <keyword type="class" name="std::chrono::time_zone" link="cpp/chrono/time_zone"/>
    <keyword type="function" name="std::chrono::time_zone::name" link="cpp/chrono/time_zone/name"/>
    <keyword type="function" name="std::chrono::time_zone::get_info" link="cpp/chrono/time_zone/get_info"/>
    <keyword type="function" name="std::chrono::time_zone::to_sys" link="cpp/chrono/time_zone/to_sys"/>
    <keyword type="function" name="std::chrono::time_zone::to_local" link="cpp/chrono/time_zone/to_local"/>
    <keyword type="function" name="operator==(std::chrono::time_zone)" link="cpp/chrono/time_zone/operator_cmp"/>
    <keyword type="function" name="operator&lt;=&gt;(std::chrono::time_zone)" link="cpp/chrono/time_zone/operator_cmp"/>
    <keyword type="class" name="std::chrono::sys_info" link="cpp/chrono/sys_info"/>
    <keyword type="function" name="operator&lt;&lt;(std::chrono::sys_info)" link="cpp/chrono/sys_info/operator_ltlt"/>
    <keyword type="class" name="std::formatter&lt;std::chrono::sys_info&gt;" link="cpp/chrono/sys_info/formatter"/>
    <keyword type="class" name="std::chrono::local_info" link="cpp/chrono/local_info"/>
    <keyword type="function" name="operator&lt;&lt;(std::chrono::local_info)" link="cpp/chrono/local_info/operator_ltlt"/>
    <keyword type="class" name="std::formatter&lt;std::chrono::local_info&gt;" link="cpp/chrono/local_info/formatter"/>
    <keyword type="enum" name="std::chrono::choose" link="cpp/chrono/choose"/>
    <keyword type="class" name="std::chrono::zoned_traits" link="cpp/chrono/zoned_traits"/>
    <keyword type="class" name="std::chrono::zoned_time" link="cpp/chrono/zoned_time"/>
    <keyword type="function" name="std::chrono::zoned_time::zoned_time" link="cpp/chrono/zoned_time/zoned_time"/>
    <keyword type="function" name="std::chrono::zoned_time::operator=" link="cpp/chrono/zoned_time/operator="/>
    <keyword type="function" name="std::chrono::zoned_time::get_time_zone" link="cpp/chrono/zoned_time/get_time_zone"/>
    <keyword type="function" name="std::chrono::zoned_time::operator local_time" link="cpp/chrono/zoned_time/get_local_time"/>
    <keyword type="function" name="std::chrono::zoned_time::get_local_time" link="cpp/chrono/zoned_time/get_local_time"/>
    <keyword type="function" name="std::chrono::zoned_time::operator sys_time" link="cpp/chrono/zoned_time/get_sys_time"/>
    <keyword type="function" name="std::chrono::zoned_time::get_sys_time" link="cpp/chrono/zoned_time/get_sys_time"/>
    <keyword type="function" name="std::chrono::zoned_time::get_info" link="cpp/chrono/zoned_time/get_info"/>
    <keyword type="function" name="operator==(std::chrono::zoned_time)" link="cpp/chrono/zoned_time/operator_cmp"/>
    <keyword type="function" name="operator&lt;&lt;(std::chrono::zoned_time)" link="cpp/chrono/zoned_time/operator_ltlt"/>
    <keyword type="class" name="std::formatter&lt;std::chrono::zoned_time&gt;" link="cpp/chrono/zoned_time/formatter"/>
    <keyword type="class" name="std::chrono::leap_second" link="cpp/chrono/leap_second"/>
    <keyword type="function" name="std::chrono::leap_second::date" link="cpp/chrono/leap_second/date"/>
    <keyword type="function" name="operator==(std::chrono::leap_second)" link="cpp/chrono/leap_second/operator_cmp"/>
    <keyword type="function" name="operator&lt;(std::chrono::leap_second)" link="cpp/chrono/leap_second/operator_cmp"/>
    <keyword type="function" name="operator&lt;=(std::chrono::leap_second)" link="cpp/chrono/leap_second/operator_cmp"/>
    <keyword type="function" name="operator&gt;(std::chrono::leap_second)" link="cpp/chrono/leap_second/operator_cmp"/>
    <keyword type="function" name="operator&gt;=(std::chrono::leap_second)" link="cpp/chrono/leap_second/operator_cmp"/>
    <keyword type="function" name="operator&lt;=&gt;(std::chrono::leap_second)" link="cpp/chrono/leap_second/operator_cmp"/>
    <keyword type="class" name="std::chrono::leap_second_info" link="cpp/chrono/utc_clock/leap_second_info"/>
    <keyword type="class" name="std::chrono::get_leap_second_info" link="cpp/chrono/utc_clock/get_leap_second_info"/>
    <keyword type="class" name="std::chrono::time_zone_link" link="cpp/chrono/time_zone_link"/>
    <keyword type="function" name="std::chrono::time_zone_link::name" link="cpp/chrono/time_zone_link/accessors"/>
    <keyword type="function" name="std::chrono::time_zone_link::target" link="cpp/chrono/time_zone_link/accessors"/>
    <keyword type="function" name="operator==(std::chrono::time_zone_link)" link="cpp/chrono/time_zone_link/operator_cmp"/>
    <keyword type="function" name="operator&lt;=&gt;(std::chrono::time_zone_link)" link="cpp/chrono/time_zone_link/operator_cmp"/>
    <keyword type="class" name="std::chrono::nonexistent_local_time" link="cpp/chrono/nonexistent_local_time"/>
    <keyword type="function" name="std::chrono::nonexistent_local_time::what" link="cpp/error/exception/what"/>
    <keyword type="function" name="std::chrono::nonexistent_local_time::nonexistent_local_time" link="cpp/chrono/nonexistent_local_time"/>
    <keyword type="function" name="std::chrono::nonexistent_local_time::operator=" link="cpp/chrono/nonexistent_local_time"/>
    <keyword type="function" name="std::chrono::nonexistent_local_time::what" link="cpp/chrono/nonexistent_local_time"/>
    <keyword type="class" name="std::chrono::ambiguous_local_time" link="cpp/chrono/ambiguous_local_time"/>
    <keyword type="function" name="std::chrono::ambiguous_local_time::what" link="cpp/error/exception/what"/>
    <keyword type="function" name="std::chrono::ambiguous_local_time::ambiguous_local_time" link="cpp/chrono/ambiguous_local_time"/>
    <keyword type="function" name="std::chrono::ambiguous_local_time::operator=" link="cpp/chrono/ambiguous_local_time"/>
    <keyword type="function" name="std::chrono::ambiguous_local_time::what" link="cpp/chrono/ambiguous_local_time"/>
    <keyword type="function" name="std::chrono::parse" link="cpp/chrono/parse"/>
    <keyword type="function" name="std::difftime" link="cpp/chrono/c/difftime"/>
    <keyword type="function" name="std::time" link="cpp/chrono/c/time"/>
    <keyword type="function" name="std::clock" link="cpp/chrono/c/clock"/>
    <keyword type="function" name="std::timespec_get" link="cpp/chrono/c/timespec_get"/>
    <keyword type="macro" name="TIME_UTC" link="cpp/chrono/c/timespec_get"/>
    <keyword type="function" name="std::asctime" link="cpp/chrono/c/asctime"/>
    <keyword type="function" name="std::ctime" link="cpp/chrono/c/ctime"/>
    <keyword type="function" name="std::strftime" link="cpp/chrono/c/strftime"/>
    <keyword type="function" name="std::wcsftime" link="cpp/chrono/c/wcsftime"/>
    <keyword type="function" name="std::gmtime" link="cpp/chrono/c/gmtime"/>
    <keyword type="function" name="std::localtime" link="cpp/chrono/c/localtime"/>
    <keyword type="function" name="std::mktime" link="cpp/chrono/c/mktime"/>
    <keyword type="macro" name="CLOCKS_PER_SEC" link="cpp/chrono/c/CLOCKS_PER_SEC"/>
    <keyword type="class" name="std::tm" link="cpp/chrono/c/tm"/>
    <keyword type="typedef" name="std::time_t" link="cpp/chrono/c/time_t"/>
    <keyword type="typedef" name="std::clock_t" link="cpp/chrono/c/clock_t"/>
    <keyword type="function" name="std::timespec" link="cpp/chrono/c/timespec"/>
    <keyword type="class" name="std::bitset" link="cpp/utility/bitset"/>
    <keyword type="function" name="std::bitset::bitset" link="cpp/utility/bitset/bitset"/>
    <keyword type="class" name="std::bitset::reference" link="cpp/utility/bitset/reference"/>
    <keyword type="function" name="std::bitset::operator==" link="cpp/utility/bitset/operator_cmp"/>
    <keyword type="function" name="std::bitset::operator!=" link="cpp/utility/bitset/operator_cmp"/>
    <keyword type="function" name="std::bitset::operator[]" link="cpp/utility/bitset/operator_at"/>
    <keyword type="function" name="std::bitset::test" link="cpp/utility/bitset/test"/>
    <keyword type="function" name="std::bitset::all" link="cpp/utility/bitset/all_any_none"/>
    <keyword type="function" name="std::bitset::any" link="cpp/utility/bitset/all_any_none"/>
    <keyword type="function" name="std::bitset::none" link="cpp/utility/bitset/all_any_none"/>
    <keyword type="function" name="std::bitset::count" link="cpp/utility/bitset/count"/>
    <keyword type="function" name="std::bitset::size" link="cpp/utility/bitset/size"/>
    <keyword type="function" name="std::bitset::operator&amp;=" link="cpp/utility/bitset/operator_logic"/>
    <keyword type="function" name="std::bitset::operator|=" link="cpp/utility/bitset/operator_logic"/>
    <keyword type="function" name="std::bitset::operator^=" link="cpp/utility/bitset/operator_logic"/>
    <keyword type="function" name="std::bitset::operator~" link="cpp/utility/bitset/operator_logic"/>
    <keyword type="function" name="std::bitset::operator&lt;&lt;=" link="cpp/utility/bitset/operator_ltltgtgt"/>
    <keyword type="function" name="std::bitset::operator&gt;&gt;=" link="cpp/utility/bitset/operator_ltltgtgt"/>
    <keyword type="function" name="std::bitset::operator&lt;&lt;" link="cpp/utility/bitset/operator_ltltgtgt"/>
    <keyword type="function" name="std::bitset::operator&gt;&gt;" link="cpp/utility/bitset/operator_ltltgtgt"/>
    <keyword type="function" name="std::bitset::set" link="cpp/utility/bitset/set"/>
    <keyword type="function" name="std::bitset::reset" link="cpp/utility/bitset/reset"/>
    <keyword type="function" name="std::bitset::flip" link="cpp/utility/bitset/flip"/>
    <keyword type="function" name="std::bitset::to_string" link="cpp/utility/bitset/to_string"/>
    <keyword type="function" name="std::bitset::to_ulong" link="cpp/utility/bitset/to_ulong"/>
    <keyword type="function" name="std::bitset::to_ullong" link="cpp/utility/bitset/to_ullong"/>
    <keyword type="function" name="operator&amp;(std::bitset)" link="cpp/utility/bitset/operator_logic2"/>
    <keyword type="function" name="operator|(std::bitset)" link="cpp/utility/bitset/operator_logic2"/>
    <keyword type="function" name="operator^(std::bitset)" link="cpp/utility/bitset/operator_logic2"/>
    <keyword type="function" name="operator&lt;&lt;(std::bitset)" link="cpp/utility/bitset/operator_ltltgtgt2"/>
    <keyword type="function" name="operator&gt;&gt;(std::bitset)" link="cpp/utility/bitset/operator_ltltgtgt2"/>
    <keyword type="class" name="std::hash&lt;std::bitset&gt;" link="cpp/utility/bitset/hash"/>
    <keyword type="class" name="std::plus" link="cpp/utility/functional/plus"/>
    <keyword type="function" name="std::plus::operator()" link="cpp/utility/functional/plus"/>
    <keyword type="class" name="std::minus" link="cpp/utility/functional/minus"/>
    <keyword type="function" name="std::minus::operator()" link="cpp/utility/functional/minus"/>
    <keyword type="class" name="std::multiplies" link="cpp/utility/functional/multiplies"/>
    <keyword type="function" name="std::multiplies::operator()" link="cpp/utility/functional/multiplies"/>
    <keyword type="class" name="std::divides" link="cpp/utility/functional/divides"/>
    <keyword type="function" name="std::divides::operator()" link="cpp/utility/functional/divides"/>
    <keyword type="class" name="std::modulus" link="cpp/utility/functional/modulus"/>
    <keyword type="function" name="std::modulus::operator()" link="cpp/utility/functional/modulus"/>
    <keyword type="class" name="std::negate" link="cpp/utility/functional/negate"/>
    <keyword type="function" name="std::negate::operator()" link="cpp/utility/functional/negate"/>
    <keyword type="class" name="std::equal_to" link="cpp/utility/functional/equal_to"/>
    <keyword type="function" name="std::equal_to::operator()" link="cpp/utility/functional/equal_to"/>
    <keyword type="class" name="std::not_equal_to" link="cpp/utility/functional/not_equal_to"/>
    <keyword type="function" name="std::not_equal_to::operator()" link="cpp/utility/functional/not_equal_to"/>
    <keyword type="class" name="std::greater" link="cpp/utility/functional/greater"/>
    <keyword type="function" name="std::greater::operator()" link="cpp/utility/functional/greater"/>
    <keyword type="class" name="std::greater_equal" link="cpp/utility/functional/greater_equal"/>
    <keyword type="function" name="std::greater_equal::operator()" link="cpp/utility/functional/greater_equal"/>
    <keyword type="class" name="std::less" link="cpp/utility/functional/less"/>
    <keyword type="function" name="std::less::operator()" link="cpp/utility/functional/less"/>
    <keyword type="class" name="std::less_equal" link="cpp/utility/functional/less_equal"/>
    <keyword type="function" name="std::less_equal::operator()" link="cpp/utility/functional/less_equal"/>
    <keyword type="class" name="std::logical_and" link="cpp/utility/functional/logical_and"/>
    <keyword type="function" name="std::logical_and::operator()" link="cpp/utility/functional/logical_and"/>
    <keyword type="class" name="std::logical_or" link="cpp/utility/functional/logical_or"/>
    <keyword type="function" name="std::logical_or::operator()" link="cpp/utility/functional/logical_or"/>
    <keyword type="class" name="std::logical_not" link="cpp/utility/functional/logical_not"/>
    <keyword type="function" name="std::logical_not::operator()" link="cpp/utility/functional/logical_not"/>
    <keyword type="class" name="std::bit_and" link="cpp/utility/functional/bit_and"/>
    <keyword type="function" name="std::bit_and::operator()" link="cpp/utility/functional/bit_and"/>
    <keyword type="class" name="std::bit_or" link="cpp/utility/functional/bit_or"/>
    <keyword type="function" name="std::bit_or::operator()" link="cpp/utility/functional/bit_or"/>
    <keyword type="class" name="std::bit_xor" link="cpp/utility/functional/bit_xor"/>
    <keyword type="function" name="std::bit_xor::operator()" link="cpp/utility/functional/bit_xor"/>
    <keyword type="class" name="std::bit_not" link="cpp/utility/functional/bit_not"/>
    <keyword type="function" name="std::bit_not::operator()" link="cpp/utility/functional/bit_not"/>
    <keyword type="function" name="std::not_fn" link="cpp/utility/functional/not_fn"/>
    <keyword type="class" name="std::identity" link="cpp/utility/functional/identity"/>
    <keyword type="function" name="std::identity::operator()" link="cpp/utility/functional/identity"/>
    <keyword type="function" name="std::bind" link="cpp/utility/functional/bind"/>
    <keyword type="function" name="std::bind_front" link="cpp/utility/functional/bind_front"/>
    <keyword type="class" name="std::is_bind_expression" link="cpp/utility/functional/is_bind_expression"/>
    <keyword type="class" name="std::is_placeholder" link="cpp/utility/functional/is_placeholder"/>
    <keyword type="" name="std::is_bind_expression_v" link="cpp/utility/functional/is_bind_expression"/>
    <keyword type="" name="std::is_placeholder_v" link="cpp/utility/functional/is_placeholder"/>
    <keyword type="function" name="std::mem_fn" link="cpp/utility/functional/mem_fn"/>
    <keyword type="function" name="std::invoke" link="cpp/utility/functional/invoke"/>
    <keyword type="class" name="std::function" link="cpp/utility/functional/function"/>
    <keyword type="function" name="std::function::function" link="cpp/utility/functional/function/function"/>
    <keyword type="function" name="std::function::~function" link="cpp/utility/functional/function/~function"/>
    <keyword type="function" name="std::function::operator=" link="cpp/utility/functional/function/operator="/>
    <keyword type="function" name="std::function::swap" link="cpp/utility/functional/function/swap"/>
    <keyword type="function" name="std::function::assign" link="cpp/utility/functional/function/assign"/>
    <keyword type="function" name="std::function::operator bool" link="cpp/utility/functional/function/operator_bool"/>
    <keyword type="function" name="std::function::operator()" link="cpp/utility/functional/function/operator()"/>
    <keyword type="function" name="std::function::target_type" link="cpp/utility/functional/function/target_type"/>
    <keyword type="function" name="std::function::target" link="cpp/utility/functional/function/target"/>
    <keyword type="function" name="std::swap(std::function)" link="cpp/utility/functional/function/swap2"/>
    <keyword type="function" name="operator==(std::function)" link="cpp/utility/functional/function/operator_cmp"/>
    <keyword type="function" name="operator!=(std::function)" link="cpp/utility/functional/function/operator_cmp"/>
    <keyword type="class" name="std::uses_allocator&lt;std::function&gt;" link="cpp/utility/functional/function/uses_allocator"/>
    <keyword type="class" name="std::bad_function_call" link="cpp/utility/functional/bad_function_call"/>
    <keyword type="function" name="std::bad_function_call::what" link="cpp/error/exception/what"/>
    <keyword type="function" name="std::bad_function_call::bad_function_call" link="cpp/utility/functional/bad_function_call"/>
    <keyword type="class" name="std::placeholders" link="cpp/utility/functional/placeholders"/>
    <keyword type="class" name="std::default_searcher" link="cpp/utility/functional/default_searcher"/>
    <keyword type="function" name="std::default_searcher::default_searcher" link="cpp/utility/functional/default_searcher"/>
    <keyword type="function" name="std::default_searcher::operator()" link="cpp/utility/functional/default_searcher"/>
    <keyword type="class" name="std::boyer_moore_searcher" link="cpp/utility/functional/boyer_moore_searcher"/>
    <keyword type="function" name="std::boyer_moore_searcher::boyer_moore_searcher" link="cpp/utility/functional/boyer_moore_searcher"/>
    <keyword type="function" name="std::boyer_moore_searcher::operator()" link="cpp/utility/functional/boyer_moore_searcher"/>
    <keyword type="class" name="std::boyer_moore_horspool_searcher" link="cpp/utility/functional/boyer_moore_horspool_searcher"/>
    <keyword type="function" name="std::boyer_moore_horspool_searcher::boyer_moore_horspool_searcher" link="cpp/utility/functional/boyer_moore_horspool_searcher"/>
    <keyword type="function" name="std::boyer_moore_horspool_searcher::operator()" link="cpp/utility/functional/boyer_moore_horspool_searcher"/>
    <keyword type="class" name="std::reference_wrapper" link="cpp/utility/functional/reference_wrapper"/>
    <keyword type="function" name="std::reference_wrapper::reference_wrapper" link="cpp/utility/functional/reference_wrapper/reference_wrapper"/>
    <keyword type="function" name="std::reference_wrapper::operator=" link="cpp/utility/functional/reference_wrapper/operator="/>
    <keyword type="function" name="std::reference_wrapper::operator T&amp;" link="cpp/utility/functional/reference_wrapper/get"/>
    <keyword type="function" name="std::reference_wrapper::get" link="cpp/utility/functional/reference_wrapper/get"/>
    <keyword type="function" name="std::reference_wrapper::operator()" link="cpp/utility/functional/reference_wrapper/operator()"/>
    <keyword type="function" name="std::ref" link="cpp/utility/functional/ref"/>
    <keyword type="function" name="std::cref" link="cpp/utility/functional/ref"/>
    <keyword type="class" name="std::unwrap_reference" link="cpp/utility/functional/unwrap_reference"/>
    <keyword type="class" name="std::unwrap_ref_decay" link="cpp/utility/functional/unwrap_reference"/>
    <keyword type="typedef" name="std::unwrap_ref_decay_t" link="cpp/utility/functional/unwrap_reference"/>
    <keyword type="class" name="std::ranges::equal_to" link="cpp/utility/functional/ranges/equal_to"/>
    <keyword type="typedef" name="std::ranges::equal_to::is_transparent" link="cpp/utility/functional/ranges/equal_to"/>
    <keyword type="function" name="std::ranges::equal_to::operator()" link="cpp/utility/functional/ranges/equal_to"/>
    <keyword type="class" name="std::ranges::not_equal_to" link="cpp/utility/functional/ranges/not_equal_to"/>
    <keyword type="typedef" name="std::ranges::not_equal_to::is_transparent" link="cpp/utility/functional/ranges/not_equal_to"/>
    <keyword type="function" name="std::ranges::not_equal_to::operator()" link="cpp/utility/functional/ranges/not_equal_to"/>
    <keyword type="class" name="std::ranges::less" link="cpp/utility/functional/ranges/less"/>
    <keyword type="typedef" name="std::ranges::less::is_transparent" link="cpp/utility/functional/ranges/less"/>
    <keyword type="function" name="std::ranges::less::operator()" link="cpp/utility/functional/ranges/less"/>
    <keyword type="class" name="std::ranges::greater" link="cpp/utility/functional/ranges/greater"/>
    <keyword type="typedef" name="std::ranges::greater::is_transparent" link="cpp/utility/functional/ranges/greater"/>
    <keyword type="function" name="std::ranges::greater::operator()" link="cpp/utility/functional/ranges/greater"/>
    <keyword type="class" name="std::ranges::less_equal" link="cpp/utility/functional/ranges/less_equal"/>
    <keyword type="typedef" name="std::ranges::less_equal::is_transparent" link="cpp/utility/functional/ranges/less_equal"/>
    <keyword type="function" name="std::ranges::less_equal::operator()" link="cpp/utility/functional/ranges/less_equal"/>
    <keyword type="class" name="std::ranges::greater_equal" link="cpp/utility/functional/ranges/greater_equal"/>
    <keyword type="typedef" name="std::ranges::greater_equal::is_transparent" link="cpp/utility/functional/ranges/greater_equal"/>
    <keyword type="function" name="std::ranges::greater_equal::operator()" link="cpp/utility/functional/ranges/greater_equal"/>
    <keyword type="class" name="std::unary_function" link="cpp/utility/functional/unary_function"/>
    <keyword type="class" name="std::binary_function" link="cpp/utility/functional/binary_function"/>
    <keyword type="class" name="std::binder1st" link="cpp/utility/functional/binder12"/>
    <keyword type="class" name="std::binder2nd" link="cpp/utility/functional/binder12"/>
    <keyword type="function" name="std::bind1st" link="cpp/utility/functional/bind12"/>
    <keyword type="function" name="std::bind2nd" link="cpp/utility/functional/bind12"/>
    <keyword type="class" name="std::pointer_to_unary_function" link="cpp/utility/functional/pointer_to_unary_function"/>
    <keyword type="class" name="std::pointer_to_binary_function" link="cpp/utility/functional/pointer_to_binary_function"/>
    <keyword type="function" name="std::ptr_fun" link="cpp/utility/functional/ptr_fun"/>
    <keyword type="class" name="std::mem_fun_t" link="cpp/utility/functional/mem_fun_t"/>
    <keyword type="class" name="std::mem_fun1_t" link="cpp/utility/functional/mem_fun_t"/>
    <keyword type="class" name="std::const_mem_fun_t" link="cpp/utility/functional/mem_fun_t"/>
    <keyword type="class" name="std::const_mem_fun1_t" link="cpp/utility/functional/mem_fun_t"/>
    <keyword type="function" name="std::mem_fun" link="cpp/utility/functional/mem_fun"/>
    <keyword type="class" name="std::mem_fun_ref_t" link="cpp/utility/functional/mem_fun_ref_t"/>
    <keyword type="class" name="std::mem_fun1_ref_t" link="cpp/utility/functional/mem_fun_ref_t"/>
    <keyword type="class" name="std::const_mem_fun_ref_t" link="cpp/utility/functional/mem_fun_ref_t"/>
    <keyword type="class" name="std::const_mem_fun1_ref_t" link="cpp/utility/functional/mem_fun_ref_t"/>
    <keyword type="function" name="std::mem_fun_ref" link="cpp/utility/functional/mem_fun_ref"/>
    <keyword type="class" name="std::unary_negate" link="cpp/utility/functional/unary_negate"/>
    <keyword type="function" name="std::unary_negate::unary_negate" link="cpp/utility/functional/unary_negate"/>
    <keyword type="function" name="std::unary_negate::operator()" link="cpp/utility/functional/unary_negate"/>
    <keyword type="class" name="std::binary_negate" link="cpp/utility/functional/binary_negate"/>
    <keyword type="function" name="std::binary_negate::binary_negate" link="cpp/utility/functional/binary_negate"/>
    <keyword type="function" name="std::binary_negate::operator()" link="cpp/utility/functional/binary_negate"/>
    <keyword type="function" name="std::not1" link="cpp/utility/functional/not1"/>
    <keyword type="function" name="std::not2" link="cpp/utility/functional/not2"/>
    <keyword type="class" name="std::any" link="cpp/utility/any"/>
    <keyword type="function" name="std::any::any" link="cpp/utility/any/any"/>
    <keyword type="function" name="std::any::~any" link="cpp/utility/any/~any"/>
    <keyword type="function" name="std::any::operator=" link="cpp/utility/any/operator="/>
    <keyword type="function" name="std::any::emplace" link="cpp/utility/any/emplace"/>
    <keyword type="function" name="std::any::reset" link="cpp/utility/any/reset"/>
    <keyword type="function" name="std::any::swap" link="cpp/utility/any/swap"/>
    <keyword type="function" name="std::any::has_value" link="cpp/utility/any/has_value"/>
    <keyword type="function" name="std::any::type" link="cpp/utility/any/type"/>
    <keyword type="function" name="std::swap(std::any)" link="cpp/utility/any/swap2"/>
    <keyword type="function" name="std::any_cast" link="cpp/utility/any/any_cast"/>
    <keyword type="function" name="std::make_any" link="cpp/utility/any/make_any"/>
    <keyword type="class" name="std::bad_any_cast" link="cpp/utility/any/bad_any_cast"/>
    <keyword type="class" name="std::optional" link="cpp/utility/optional"/>
    <keyword type="function" name="std::optional::optional" link="cpp/utility/optional/optional"/>
    <keyword type="function" name="std::optional::~optional" link="cpp/utility/optional/~optional"/>
    <keyword type="function" name="std::optional::operator=" link="cpp/utility/optional/operator="/>
    <keyword type="function" name="std::optional::operator*" link="cpp/utility/optional/operator*"/>
    <keyword type="function" name="std::optional::operator-&gt;" link="cpp/utility/optional/operator*"/>
    <keyword type="function" name="std::optional::operator bool" link="cpp/utility/optional/operator_bool"/>
    <keyword type="function" name="std::optional::has_value" link="cpp/utility/optional/operator_bool"/>
    <keyword type="function" name="std::optional::value" link="cpp/utility/optional/value"/>
    <keyword type="function" name="std::optional::value_or" link="cpp/utility/optional/value_or"/>
    <keyword type="function" name="std::optional::swap" link="cpp/utility/optional/swap"/>
    <keyword type="function" name="std::optional::reset" link="cpp/utility/optional/reset"/>
    <keyword type="function" name="std::optional::emplace" link="cpp/utility/optional/emplace"/>
    <keyword type="function" name="operator==(std::optional)" link="cpp/utility/optional/operator_cmp"/>
    <keyword type="function" name="operator!=(std::optional)" link="cpp/utility/optional/operator_cmp"/>
    <keyword type="function" name="operator&lt;(std::optional)" link="cpp/utility/optional/operator_cmp"/>
    <keyword type="function" name="operator&lt;=(std::optional)" link="cpp/utility/optional/operator_cmp"/>
    <keyword type="function" name="operator&gt;(std::optional)" link="cpp/utility/optional/operator_cmp"/>
    <keyword type="function" name="operator&gt;=(std::optional)" link="cpp/utility/optional/operator_cmp"/>
    <keyword type="function" name="std::swap(std::optional)" link="cpp/utility/optional/swap2"/>
    <keyword type="class" name="std::hash&lt;std::optional&gt;" link="cpp/utility/optional/hash"/>
    <keyword type="function" name="std::make_optional" link="cpp/utility/optional/make_optional"/>
    <keyword type="class" name="std::bad_optional_access" link="cpp/utility/optional/bad_optional_access"/>
    <keyword type="class" name="std::nullopt_t" link="cpp/utility/optional/nullopt_t"/>
    <keyword type="macro" name="std::nullopt" link="cpp/utility/optional/nullopt"/>
    <keyword type="class" name="std::in_place_t" link="cpp/utility/in_place"/>
    <keyword type="" name="std::in_place" link="cpp/utility/in_place"/>
    <keyword type="class" name="std::in_place_type_t" link="cpp/utility/in_place"/>
    <keyword type="" name="std::in_place_type" link="cpp/utility/in_place"/>
    <keyword type="class" name="std::in_place_index_t" link="cpp/utility/in_place"/>
    <keyword type="" name="std::in_place_index" link="cpp/utility/in_place"/>
    <keyword type="class" name="std::variant" link="cpp/utility/variant"/>
    <keyword type="function" name="std::variant::variant" link="cpp/utility/variant/variant"/>
    <keyword type="function" name="std::variant::~variant" link="cpp/utility/variant/~variant"/>
    <keyword type="function" name="std::variant::operator=" link="cpp/utility/variant/operator="/>
    <keyword type="function" name="std::variant::index" link="cpp/utility/variant/index"/>
    <keyword type="function" name="std::variant::valueless_by_exception" link="cpp/utility/variant/valueless_by_exception"/>
    <keyword type="function" name="std::variant::swap" link="cpp/utility/variant/swap"/>
    <keyword type="function" name="std::variant::emplace" link="cpp/utility/variant/emplace"/>
    <keyword type="function" name="operator==(std::variant)" link="cpp/utility/variant/operator_cmp"/>
    <keyword type="function" name="operator!=(std::variant)" link="cpp/utility/variant/operator_cmp"/>
    <keyword type="function" name="operator&lt;(std::variant)" link="cpp/utility/variant/operator_cmp"/>
    <keyword type="function" name="operator&lt;=(std::variant)" link="cpp/utility/variant/operator_cmp"/>
    <keyword type="function" name="operator&gt;(std::variant)" link="cpp/utility/variant/operator_cmp"/>
    <keyword type="function" name="operator&gt;=(std::variant)" link="cpp/utility/variant/operator_cmp"/>
    <keyword type="function" name="std::swap(std::variant)" link="cpp/utility/variant/swap2"/>
    <keyword type="function" name="std::get(std::variant)" link="cpp/utility/variant/get"/>
    <keyword type="class" name="std::hash&lt;std::variant&gt;" link="cpp/utility/variant/hash"/>
    <keyword type="function" name="std::visit" link="cpp/utility/variant/visit"/>
    <keyword type="function" name="std::holds_alternative" link="cpp/utility/variant/holds_alternative"/>
    <keyword type="function" name="std::get_if" link="cpp/utility/variant/get_if"/>
    <keyword type="class" name="std::bad_variant_access" link="cpp/utility/variant/bad_variant_access"/>
    <keyword type="macro" name="std::variant_npos" link="cpp/utility/variant/variant_npos"/>
    <keyword type="class" name="std::variant_size" link="cpp/utility/variant/variant_size"/>
    <keyword type="" name="std::variant_size_v" link="cpp/utility/variant/variant_size"/>
    <keyword type="class" name="std::variant_alternative" link="cpp/utility/variant/variant_alternative"/>
    <keyword type="typedef" name="std::variant_alternative_t" link="cpp/utility/variant/variant_alternative"/>
    <keyword type="class" name="std::monostate" link="cpp/utility/variant/monostate"/>
    <keyword type="function" name="std::monostate::monostate" link="cpp/utility/variant/monostate"/>
    <keyword type="function" name="std::monostate::~monostate" link="cpp/utility/variant/monostate"/>
    <keyword type="function" name="std::monostate::operator=" link="cpp/utility/variant/monostate"/>
    <keyword type="function" name="operator==(std::monostate)" link="cpp/utility/variant/monostate"/>
    <keyword type="function" name="operator!=(std::monostate)" link="cpp/utility/variant/monostate"/>
    <keyword type="function" name="operator&lt;(std::monostate)" link="cpp/utility/variant/monostate"/>
    <keyword type="function" name="operator&lt;=(std::monostate)" link="cpp/utility/variant/monostate"/>
    <keyword type="function" name="operator&gt;(std::monostate)" link="cpp/utility/variant/monostate"/>
    <keyword type="function" name="operator&gt;=(std::monostate)" link="cpp/utility/variant/monostate"/>
    <keyword type="class" name="std::hash&lt;std::monostate&gt;" link="cpp/utility/variant/monostate"/>
    <keyword type="function" name="std::format" link="cpp/utility/format/format"/>
    <keyword type="function" name="std::format_to" link="cpp/utility/format/format_to"/>
    <keyword type="function" name="std::format_to_n" link="cpp/utility/format/format_to_n"/>
    <keyword type="class" name="std::format_to_n_result" link="cpp/utility/format/format_to_n"/>
    <keyword type="function" name="std::formatted_size" link="cpp/utility/format/formatted_size"/>
    <keyword type="function" name="std::vformat" link="cpp/utility/format/vformat"/>
    <keyword type="function" name="std::vformat_to" link="cpp/utility/format/vformat_to"/>
    <keyword type="class" name="std::formatter" link="cpp/utility/format/formatter"/>
    <keyword type="class" name="std::basic_format_parse_context" link="cpp/utility/format/basic_format_parse_context"/>
    <keyword type="typedef" name="std::format_parse_context" link="cpp/utility/format/basic_format_parse_context"/>
    <keyword type="typedef" name="std::wformat_parse_context" link="cpp/utility/format/basic_format_parse_context"/>
    <keyword type="class" name="std::basic_format_context" link="cpp/utility/format/basic_format_context"/>
    <keyword type="typedef" name="std::format_context" link="cpp/utility/format/basic_format_context"/>
    <keyword type="typedef" name="std::wformat_context" link="cpp/utility/format/basic_format_context"/>
    <keyword type="class" name="std::basic_format_arg" link="cpp/utility/format/basic_format_arg"/>
    <keyword type="class" name="std::basic_format_args" link="cpp/utility/format/basic_format_args"/>
    <keyword type="typedef" name="std::format_args" link="cpp/utility/format/basic_format_args"/>
    <keyword type="typedef" name="std::wformat_args" link="cpp/utility/format/basic_format_args"/>
    <keyword type="typedef" name="std::format_args_t" link="cpp/utility/format/basic_format_args"/>
    <keyword type="function" name="std::visit_format_arg" link="cpp/utility/format/visit_format_arg"/>
    <keyword type="function" name="std::make_format_args" link="cpp/utility/format/make_format_args"/>
    <keyword type="function" name="std::make_wformat_args" link="cpp/utility/format/make_format_args"/>
    <keyword type="class" name="std::format_error" link="cpp/utility/format/format_error"/>
    <keyword type="class" name="std::pair" link="cpp/utility/pair"/>
    <keyword type="function" name="std::pair::pair" link="cpp/utility/pair/pair"/>
    <keyword type="" name="std::pair::first" link="cpp/utility/pair"/>
    <keyword type="" name="std::pair::second" link="cpp/utility/pair"/>
    <keyword type="function" name="std::pair::operator=" link="cpp/utility/pair/operator="/>
    <keyword type="function" name="std::pair::swap" link="cpp/utility/pair/swap"/>
    <keyword type="function" name="operator==(std::pair)" link="cpp/utility/pair/operator_cmp"/>
    <keyword type="function" name="operator!=(std::pair)" link="cpp/utility/pair/operator_cmp"/>
    <keyword type="function" name="operator&lt;(std::pair)" link="cpp/utility/pair/operator_cmp"/>
    <keyword type="function" name="operator&lt;=(std::pair)" link="cpp/utility/pair/operator_cmp"/>
    <keyword type="function" name="operator&gt;(std::pair)" link="cpp/utility/pair/operator_cmp"/>
    <keyword type="function" name="operator&gt;=(std::pair)" link="cpp/utility/pair/operator_cmp"/>
    <keyword type="function" name="std::swap(std::pair)" link="cpp/utility/pair/swap2"/>
    <keyword type="function" name="std::get(std::pair)" link="cpp/utility/pair/get"/>
    <keyword type="class" name="std::tuple_size&lt;std::pair&gt;" link="cpp/utility/pair/tuple_size"/>
    <keyword type="class" name="std::tuple_element&lt;std::pair&gt;" link="cpp/utility/pair/tuple_element"/>
    <keyword type="function" name="std::make_pair" link="cpp/utility/pair/make_pair"/>
    <keyword type="class" name="std::tuple" link="cpp/utility/tuple"/>
    <keyword type="function" name="std::tuple::tuple" link="cpp/utility/tuple/tuple"/>
    <keyword type="function" name="std::tuple::operator=" link="cpp/utility/tuple/operator="/>
    <keyword type="function" name="std::tuple::swap" link="cpp/utility/tuple/swap"/>
    <keyword type="function" name="operator==(std::tuple)" link="cpp/utility/tuple/operator_cmp"/>
    <keyword type="function" name="operator!=(std::tuple)" link="cpp/utility/tuple/operator_cmp"/>
    <keyword type="function" name="operator&lt;(std::tuple)" link="cpp/utility/tuple/operator_cmp"/>
    <keyword type="function" name="operator&lt;=(std::tuple)" link="cpp/utility/tuple/operator_cmp"/>
    <keyword type="function" name="operator&gt;(std::tuple)" link="cpp/utility/tuple/operator_cmp"/>
    <keyword type="function" name="operator&gt;=(std::tuple)" link="cpp/utility/tuple/operator_cmp"/>
    <keyword type="function" name="std::swap(std::tuple)" link="cpp/utility/tuple/swap2"/>
    <keyword type="function" name="std::get(std::tuple)" link="cpp/utility/tuple/get"/>
    <keyword type="class" name="std::tuple_size&lt;std::tuple&gt;" link="cpp/utility/tuple/tuple_size"/>
    <keyword type="class" name="std::tuple_element&lt;std::tuple&gt;" link="cpp/utility/tuple/tuple_element"/>
    <keyword type="class" name="std::uses_allocator&lt;std::tuple&gt;" link="cpp/utility/tuple/uses_allocator"/>
    <keyword type="" name="std::tuple_size_v" link="cpp/utility/tuple/tuple_size"/>
    <keyword type="function" name="std::apply" link="cpp/utility/apply"/>
    <keyword type="function" name="std::make_from_tuple" link="cpp/utility/make_from_tuple"/>
    <keyword type="class" name="std::piecewise_construct_t" link="cpp/utility/piecewise_construct_t"/>
    <keyword type="" name="std::piecewise_construct" link="cpp/utility/piecewise_construct"/>
    <keyword type="class" name="std::integer_sequence" link="cpp/utility/integer_sequence"/>
    <keyword type="typedef" name="std::index_sequence" link="cpp/utility/integer_sequence"/>
    <keyword type="typedef" name="std::make_integer_sequence" link="cpp/utility/integer_sequence"/>
    <keyword type="typedef" name="std::make_index_sequence" link="cpp/utility/integer_sequence"/>
    <keyword type="typedef" name="std::index_sequence_for" link="cpp/utility/integer_sequence"/>
    <keyword type="function" name="std::make_tuple" link="cpp/utility/tuple/make_tuple"/>
    <keyword type="function" name="std::tie" link="cpp/utility/tuple/tie"/>
    <keyword type="function" name="std::forward_as_tuple" link="cpp/utility/tuple/forward_as_tuple"/>
    <keyword type="function" name="std::tuple_cat" link="cpp/utility/tuple/tuple_cat"/>
    <keyword type="macro" name="std::ignore" link="cpp/utility/tuple/ignore"/>
    <keyword type="function" name="std::ranges::swap" link="cpp/utility/ranges/swap"/>
    <keyword type="function" name="std::forward" link="cpp/utility/forward"/>
    <keyword type="function" name="std::exchange" link="cpp/utility/exchange"/>
    <keyword type="function" name="std::move (utility)" link="cpp/utility/move"/>
    <keyword type="function" name="std::move_if_noexcept" link="cpp/utility/move_if_noexcept"/>
    <keyword type="function" name="std::declval" link="cpp/utility/declval"/>
    <keyword type="function" name="std::as_const" link="cpp/utility/as_const"/>
    <keyword type="function" name="std::launder" link="cpp/utility/launder"/>
    <keyword type="class" name="std::partial_ordering" link="cpp/utility/compare/partial_ordering"/>
    <keyword type="macro" name="std::partial_ordering::less" link="cpp/utility/compare/partial_ordering"/>
    <keyword type="macro" name="std::partial_ordering::equivalent" link="cpp/utility/compare/partial_ordering"/>
    <keyword type="macro" name="std::partial_ordering::greater" link="cpp/utility/compare/partial_ordering"/>
    <keyword type="macro" name="std::partial_ordering::unordered" link="cpp/utility/compare/partial_ordering"/>
    <keyword type="function" name="operator==(std::partial_ordering)" link="cpp/utility/compare/partial_ordering"/>
    <keyword type="function" name="operator!=(std::partial_ordering)" link="cpp/utility/compare/partial_ordering"/>
    <keyword type="function" name="operator&lt;(std::partial_ordering)" link="cpp/utility/compare/partial_ordering"/>
    <keyword type="function" name="operator&lt;=(std::partial_ordering)" link="cpp/utility/compare/partial_ordering"/>
    <keyword type="function" name="operator&gt;(std::partial_ordering)" link="cpp/utility/compare/partial_ordering"/>
    <keyword type="function" name="operator&gt;=(std::partial_ordering)" link="cpp/utility/compare/partial_ordering"/>
    <keyword type="function" name="operator&lt;=&gt;(std::partial_ordering)" link="cpp/utility/compare/partial_ordering"/>
    <keyword type="class" name="std::weak_ordering" link="cpp/utility/compare/weak_ordering"/>
    <keyword type="macro" name="std::weak_ordering::less" link="cpp/utility/compare/weak_ordering"/>
    <keyword type="macro" name="std::weak_ordering::equivalent" link="cpp/utility/compare/weak_ordering"/>
    <keyword type="macro" name="std::weak_ordering::greater" link="cpp/utility/compare/weak_ordering"/>
    <keyword type="function" name="std::weak_ordering::operator partial_ordering" link="cpp/utility/compare/weak_ordering"/>
    <keyword type="function" name="operator==(std::weak_ordering)" link="cpp/utility/compare/weak_ordering"/>
    <keyword type="function" name="operator!=(std::weak_ordering)" link="cpp/utility/compare/weak_ordering"/>
    <keyword type="function" name="operator&lt;(std::weak_ordering)" link="cpp/utility/compare/weak_ordering"/>
    <keyword type="function" name="operator&lt;=(std::weak_ordering)" link="cpp/utility/compare/weak_ordering"/>
    <keyword type="function" name="operator&gt;(std::weak_ordering)" link="cpp/utility/compare/weak_ordering"/>
    <keyword type="function" name="operator&gt;=(std::weak_ordering)" link="cpp/utility/compare/weak_ordering"/>
    <keyword type="function" name="operator&lt;=&gt;(std::weak_ordering)" link="cpp/utility/compare/weak_ordering"/>
    <keyword type="class" name="std::strong_ordering" link="cpp/utility/compare/strong_ordering"/>
    <keyword type="macro" name="std::strong_ordering::less" link="cpp/utility/compare/strong_ordering"/>
    <keyword type="macro" name="std::strong_ordering::equivalent" link="cpp/utility/compare/strong_ordering"/>
    <keyword type="macro" name="std::strong_ordering::equal" link="cpp/utility/compare/strong_ordering"/>
    <keyword type="macro" name="std::strong_ordering::greater" link="cpp/utility/compare/strong_ordering"/>
    <keyword type="function" name="std::strong_ordering::operator partial_ordering" link="cpp/utility/compare/strong_ordering"/>
    <keyword type="function" name="std::strong_ordering::operator weak_ordering" link="cpp/utility/compare/strong_ordering"/>
    <keyword type="function" name="operator==(std::strong_ordering)" link="cpp/utility/compare/strong_ordering"/>
    <keyword type="function" name="operator!=(std::strong_ordering)" link="cpp/utility/compare/strong_ordering"/>
    <keyword type="function" name="operator&lt;(std::strong_ordering)" link="cpp/utility/compare/strong_ordering"/>
    <keyword type="function" name="operator&lt;=(std::strong_ordering)" link="cpp/utility/compare/strong_ordering"/>
    <keyword type="function" name="operator&gt;(std::strong_ordering)" link="cpp/utility/compare/strong_ordering"/>
    <keyword type="function" name="operator&gt;=(std::strong_ordering)" link="cpp/utility/compare/strong_ordering"/>
    <keyword type="function" name="operator&lt;=&gt;(std::strong_ordering)" link="cpp/utility/compare/strong_ordering"/>
    <keyword type="function" name="std::is_eq" link="cpp/utility/compare/named_comparison_functions"/>
    <keyword type="function" name="std::is_neq" link="cpp/utility/compare/named_comparison_functions"/>
    <keyword type="function" name="std::is_lt" link="cpp/utility/compare/named_comparison_functions"/>
    <keyword type="function" name="std::is_lteq" link="cpp/utility/compare/named_comparison_functions"/>
    <keyword type="function" name="std::is_gt" link="cpp/utility/compare/named_comparison_functions"/>
    <keyword type="function" name="std::is_gteq" link="cpp/utility/compare/named_comparison_functions"/>
    <keyword type="class" name="std::common_comparison_category" link="cpp/utility/compare/common_comparison_category"/>
    <keyword type="typedef" name="std::common_comparison_category_t" link="cpp/utility/compare/common_comparison_category"/>
    <keyword type="function" name="std::strong_order" link="cpp/utility/compare/strong_order"/>
    <keyword type="function" name="std::weak_order" link="cpp/utility/compare/weak_order"/>
    <keyword type="function" name="std::partial_order" link="cpp/utility/compare/partial_order"/>
    <keyword type="function" name="std::rel_ops::operator!=" link="cpp/utility/rel_ops/operator_cmp"/>
    <keyword type="function" name="std::rel_ops::operator&gt;" link="cpp/utility/rel_ops/operator_cmp"/>
    <keyword type="function" name="std::rel_ops::operator&lt;=" link="cpp/utility/rel_ops/operator_cmp"/>
    <keyword type="function" name="std::rel_ops::operator&gt;=" link="cpp/utility/rel_ops/operator_cmp"/>
    <keyword type="function" name="std::to_chars" link="cpp/utility/to_chars"/>
    <keyword type="function" name="std::from_chars" link="cpp/utility/from_chars"/>
    <keyword type="class" name="std::chars_format" link="cpp/utility/chars_format"/>
    <keyword type="macro" name="std::chars_format::scientific" link="cpp/utility/chars_format"/>
    <keyword type="macro" name="std::chars_format::fixed" link="cpp/utility/chars_format"/>
    <keyword type="macro" name="std::chars_format::hex" link="cpp/utility/chars_format"/>
    <keyword type="macro" name="std::chars_format::general" link="cpp/utility/chars_format"/>
    <keyword type="function" name="operator|=(std::chars_format)" link="cpp/utility/chars_format"/>
    <keyword type="function" name="operator&amp;=(std::chars_format)" link="cpp/utility/chars_format"/>
    <keyword type="function" name="operator^=(std::chars_format)" link="cpp/utility/chars_format"/>
    <keyword type="function" name="operator|(std::chars_format)" link="cpp/utility/chars_format"/>
    <keyword type="function" name="operator&amp;(std::chars_format)" link="cpp/utility/chars_format"/>
    <keyword type="function" name="operator^(std::chars_format)" link="cpp/utility/chars_format"/>
    <keyword type="function" name="operator~(std::chars_format)" link="cpp/utility/chars_format"/>
    <keyword type="class" name="std::hash" link="cpp/utility/hash"/>
    <keyword type="function" name="std::hash::hash" link="cpp/utility/hash/hash"/>
    <keyword type="function" name="std::hash::operator()" link="cpp/utility/hash/operator()"/>
    <keyword type="function" name="std::isalnum (&lt;cctype&gt;)" link="cpp/string/byte/isalnum"/>
    <keyword type="function" name="std::isalpha (&lt;cctype&gt;)" link="cpp/string/byte/isalpha"/>
    <keyword type="function" name="std::islower (&lt;cctype&gt;)" link="cpp/string/byte/islower"/>
    <keyword type="function" name="std::isupper (&lt;cctype&gt;)" link="cpp/string/byte/isupper"/>
    <keyword type="function" name="std::isdigit (&lt;cctype&gt;)" link="cpp/string/byte/isdigit"/>
    <keyword type="function" name="std::isxdigit (&lt;cctype&gt;)" link="cpp/string/byte/isxdigit"/>
    <keyword type="function" name="std::iscntrl (&lt;cctype&gt;)" link="cpp/string/byte/iscntrl"/>
    <keyword type="function" name="std::isgraph (&lt;cctype&gt;)" link="cpp/string/byte/isgraph"/>
    <keyword type="function" name="std::isspace (&lt;cctype&gt;)" link="cpp/string/byte/isspace"/>
    <keyword type="function" name="std::isblank (&lt;cctype&gt;)" link="cpp/string/byte/isblank"/>
    <keyword type="function" name="std::isprint (&lt;cctype&gt;)" link="cpp/string/byte/isprint"/>
    <keyword type="function" name="std::ispunct (&lt;cctype&gt;)" link="cpp/string/byte/ispunct"/>
    <keyword type="function" name="std::tolower (&lt;cctype&gt;)" link="cpp/string/byte/tolower"/>
    <keyword type="function" name="std::toupper (&lt;cctype&gt;)" link="cpp/string/byte/toupper"/>
    <keyword type="function" name="std::atof" link="cpp/string/byte/atof"/>
    <keyword type="function" name="std::atoi" link="cpp/string/byte/atoi"/>
    <keyword type="function" name="std::atol" link="cpp/string/byte/atoi"/>
    <keyword type="function" name="std::atoll" link="cpp/string/byte/atoi"/>
    <keyword type="function" name="std::strtol" link="cpp/string/byte/strtol"/>
    <keyword type="function" name="std::strtoll" link="cpp/string/byte/strtol"/>
    <keyword type="function" name="std::strtoul" link="cpp/string/byte/strtoul"/>
    <keyword type="function" name="std::strtoull" link="cpp/string/byte/strtoul"/>
    <keyword type="function" name="std::strtof" link="cpp/string/byte/strtof"/>
    <keyword type="function" name="std::strtod" link="cpp/string/byte/strtof"/>
    <keyword type="function" name="std::strtold" link="cpp/string/byte/strtof"/>
    <keyword type="function" name="std::strtoimax" link="cpp/string/byte/strtoimax"/>
    <keyword type="function" name="std::strtoumax" link="cpp/string/byte/strtoimax"/>
    <keyword type="function" name="std::strcpy" link="cpp/string/byte/strcpy"/>
    <keyword type="function" name="std::strncpy" link="cpp/string/byte/strncpy"/>
    <keyword type="function" name="std::strcat" link="cpp/string/byte/strcat"/>
    <keyword type="function" name="std::strncat" link="cpp/string/byte/strncat"/>
    <keyword type="function" name="std::strxfrm" link="cpp/string/byte/strxfrm"/>
    <keyword type="function" name="std::strlen" link="cpp/string/byte/strlen"/>
    <keyword type="function" name="std::strcmp" link="cpp/string/byte/strcmp"/>
    <keyword type="function" name="std::strncmp" link="cpp/string/byte/strncmp"/>
    <keyword type="function" name="std::strcoll" link="cpp/string/byte/strcoll"/>
    <keyword type="function" name="std::strchr" link="cpp/string/byte/strchr"/>
    <keyword type="function" name="std::strrchr" link="cpp/string/byte/strrchr"/>
    <keyword type="function" name="std::strspn" link="cpp/string/byte/strspn"/>
    <keyword type="function" name="std::strcspn" link="cpp/string/byte/strcspn"/>
    <keyword type="function" name="std::strpbrk" link="cpp/string/byte/strpbrk"/>
    <keyword type="function" name="std::strstr" link="cpp/string/byte/strstr"/>
    <keyword type="function" name="std::strtok" link="cpp/string/byte/strtok"/>
    <keyword type="function" name="std::memchr" link="cpp/string/byte/memchr"/>
    <keyword type="function" name="std::memcmp" link="cpp/string/byte/memcmp"/>
    <keyword type="function" name="std::memset" link="cpp/string/byte/memset"/>
    <keyword type="function" name="std::memcpy" link="cpp/string/byte/memcpy"/>
    <keyword type="function" name="std::memmove" link="cpp/string/byte/memmove"/>
    <keyword type="function" name="std::strerror" link="cpp/string/byte/strerror"/>
    <keyword type="function" name="std::mblen" link="cpp/string/multibyte/mblen"/>
    <keyword type="function" name="std::mbtowc" link="cpp/string/multibyte/mbtowc"/>
    <keyword type="function" name="std::wctomb" link="cpp/string/multibyte/wctomb"/>
    <keyword type="function" name="std::mbstowcs" link="cpp/string/multibyte/mbstowcs"/>
    <keyword type="function" name="std::wcstombs" link="cpp/string/multibyte/wcstombs"/>
    <keyword type="function" name="std::mbsinit" link="cpp/string/multibyte/mbsinit"/>
    <keyword type="function" name="std::btowc" link="cpp/string/multibyte/btowc"/>
    <keyword type="function" name="std::wctob" link="cpp/string/multibyte/wctob"/>
    <keyword type="function" name="std::mbrlen" link="cpp/string/multibyte/mbrlen"/>
    <keyword type="function" name="std::mbrtowc" link="cpp/string/multibyte/mbrtowc"/>
    <keyword type="function" name="std::wcrtomb" link="cpp/string/multibyte/wcrtomb"/>
    <keyword type="function" name="std::mbsrtowcs" link="cpp/string/multibyte/mbsrtowcs"/>
    <keyword type="function" name="std::wcsrtombs" link="cpp/string/multibyte/wcsrtombs"/>
    <keyword type="function" name="std::mbrtoc8" link="cpp/string/multibyte/mbrtoc8"/>
    <keyword type="function" name="std::c8rtomb" link="cpp/string/multibyte/c8rtomb"/>
    <keyword type="function" name="std::mbrtoc16" link="cpp/string/multibyte/mbrtoc16"/>
    <keyword type="function" name="std::c16rtomb" link="cpp/string/multibyte/c16rtomb"/>
    <keyword type="function" name="std::mbrtoc32" link="cpp/string/multibyte/mbrtoc32"/>
    <keyword type="function" name="std::c32rtomb" link="cpp/string/multibyte/c32rtomb"/>
    <keyword type="class" name="std::mbstate_t" link="cpp/string/multibyte/mbstate_t"/>
    <keyword type="function" name="std::iswalnum" link="cpp/string/wide/iswalnum"/>
    <keyword type="function" name="std::iswalpha" link="cpp/string/wide/iswalpha"/>
    <keyword type="function" name="std::iswlower" link="cpp/string/wide/iswlower"/>
    <keyword type="function" name="std::iswupper" link="cpp/string/wide/iswupper"/>
    <keyword type="function" name="std::iswdigit" link="cpp/string/wide/iswdigit"/>
    <keyword type="function" name="std::iswxdigit" link="cpp/string/wide/iswxdigit"/>
    <keyword type="function" name="std::iswcntrl" link="cpp/string/wide/iswcntrl"/>
    <keyword type="function" name="std::iswgraph" link="cpp/string/wide/iswgraph"/>
    <keyword type="function" name="std::iswspace" link="cpp/string/wide/iswspace"/>
    <keyword type="function" name="std::iswblank" link="cpp/string/wide/iswblank"/>
    <keyword type="function" name="std::iswprint" link="cpp/string/wide/iswprint"/>
    <keyword type="function" name="std::iswpunct" link="cpp/string/wide/iswpunct"/>
    <keyword type="function" name="std::iswctype" link="cpp/string/wide/iswctype"/>
    <keyword type="function" name="std::wctype" link="cpp/string/wide/wctype"/>
    <keyword type="function" name="std::towlower" link="cpp/string/wide/towlower"/>
    <keyword type="function" name="std::towupper" link="cpp/string/wide/towupper"/>
    <keyword type="function" name="std::towctrans" link="cpp/string/wide/towctrans"/>
    <keyword type="function" name="std::wctrans" link="cpp/string/wide/wctrans"/>
    <keyword type="function" name="std::wcstof" link="cpp/string/wide/wcstof"/>
    <keyword type="function" name="std::wcstod" link="cpp/string/wide/wcstof"/>
    <keyword type="function" name="std::wcstold" link="cpp/string/wide/wcstof"/>
    <keyword type="function" name="std::wcstol" link="cpp/string/wide/wcstol"/>
    <keyword type="function" name="std::wcstoll" link="cpp/string/wide/wcstol"/>
    <keyword type="function" name="std::wcstoul" link="cpp/string/wide/wcstoul"/>
    <keyword type="function" name="std::wcstoull" link="cpp/string/wide/wcstoul"/>
    <keyword type="function" name="std::wcstoimax" link="cpp/string/wide/wcstoimax"/>
    <keyword type="function" name="std::wcstoumax" link="cpp/string/wide/wcstoimax"/>
    <keyword type="function" name="std::wcscpy" link="cpp/string/wide/wcscpy"/>
    <keyword type="function" name="std::wcsncpy" link="cpp/string/wide/wcsncpy"/>
    <keyword type="function" name="std::wcscat" link="cpp/string/wide/wcscat"/>
    <keyword type="function" name="std::wcsncat" link="cpp/string/wide/wcsncat"/>
    <keyword type="function" name="std::wcsxfrm" link="cpp/string/wide/wcsxfrm"/>
    <keyword type="function" name="std::wcslen" link="cpp/string/wide/wcslen"/>
    <keyword type="function" name="std::wcscmp" link="cpp/string/wide/wcscmp"/>
    <keyword type="function" name="std::wcsncmp" link="cpp/string/wide/wcsncmp"/>
    <keyword type="function" name="std::wcscoll" link="cpp/string/wide/wcscoll"/>
    <keyword type="function" name="std::wcschr" link="cpp/string/wide/wcschr"/>
    <keyword type="function" name="std::wcsrchr" link="cpp/string/wide/wcsrchr"/>
    <keyword type="function" name="std::wcsspn" link="cpp/string/wide/wcsspn"/>
    <keyword type="function" name="std::wcscspn" link="cpp/string/wide/wcscspn"/>
    <keyword type="function" name="std::wcspbrk" link="cpp/string/wide/wcspbrk"/>
    <keyword type="function" name="std::wcsstr" link="cpp/string/wide/wcsstr"/>
    <keyword type="function" name="std::wcstok" link="cpp/string/wide/wcstok"/>
    <keyword type="function" name="std::wmemchr" link="cpp/string/wide/wmemchr"/>
    <keyword type="function" name="std::wmemcmp" link="cpp/string/wide/wmemcmp"/>
    <keyword type="function" name="std::wmemset" link="cpp/string/wide/wmemset"/>
    <keyword type="function" name="std::wmemcpy" link="cpp/string/wide/wmemcpy"/>
    <keyword type="function" name="std::wmemmove" link="cpp/string/wide/wmemmove"/>
    <keyword type="class" name="std::basic_string" link="cpp/string/basic_string"/>
    <keyword type="function" name="std::basic_string::basic_string" link="cpp/string/basic_string/basic_string"/>
    <keyword type="function" name="std::basic_string::assign" link="cpp/string/basic_string/assign"/>
    <keyword type="function" name="std::basic_string::operator=" link="cpp/string/basic_string/operator="/>
    <keyword type="function" name="std::basic_string::get_allocator" link="cpp/string/basic_string/get_allocator"/>
    <keyword type="function" name="std::basic_string::at" link="cpp/string/basic_string/at"/>
    <keyword type="function" name="std::basic_string::operator[]" link="cpp/string/basic_string/operator_at"/>
    <keyword type="function" name="std::basic_string::front" link="cpp/string/basic_string/front"/>
    <keyword type="function" name="std::basic_string::back" link="cpp/string/basic_string/back"/>
    <keyword type="function" name="std::basic_string::data" link="cpp/string/basic_string/data"/>
    <keyword type="function" name="std::basic_string::c_str" link="cpp/string/basic_string/c_str"/>
    <keyword type="function" name="std::basic_string::operator basic_string_view" link="cpp/string/basic_string/operator_basic_string_view"/>
    <keyword type="function" name="std::basic_string::begin" link="cpp/string/basic_string/begin"/>
    <keyword type="function" name="std::basic_string::cbegin" link="cpp/string/basic_string/begin"/>
    <keyword type="function" name="std::basic_string::end" link="cpp/string/basic_string/end"/>
    <keyword type="function" name="std::basic_string::cend" link="cpp/string/basic_string/end"/>
    <keyword type="function" name="std::basic_string::rbegin" link="cpp/string/basic_string/rbegin"/>
    <keyword type="function" name="std::basic_string::crbegin" link="cpp/string/basic_string/rbegin"/>
    <keyword type="function" name="std::basic_string::rend" link="cpp/string/basic_string/rend"/>
    <keyword type="function" name="std::basic_string::crend" link="cpp/string/basic_string/rend"/>
    <keyword type="function" name="std::basic_string::empty" link="cpp/string/basic_string/empty"/>
    <keyword type="function" name="std::basic_string::size" link="cpp/string/basic_string/size"/>
    <keyword type="function" name="std::basic_string::length" link="cpp/string/basic_string/size"/>
    <keyword type="function" name="std::basic_string::max_size" link="cpp/string/basic_string/max_size"/>
    <keyword type="function" name="std::basic_string::reserve" link="cpp/string/basic_string/reserve"/>
    <keyword type="function" name="std::basic_string::capacity" link="cpp/string/basic_string/capacity"/>
    <keyword type="function" name="std::basic_string::shrink_to_fit" link="cpp/string/basic_string/shrink_to_fit"/>
    <keyword type="function" name="std::basic_string::clear" link="cpp/string/basic_string/clear"/>
    <keyword type="function" name="std::basic_string::insert" link="cpp/string/basic_string/insert"/>
    <keyword type="function" name="std::basic_string::erase" link="cpp/string/basic_string/erase"/>
    <keyword type="function" name="std::basic_string::push_back" link="cpp/string/basic_string/push_back"/>
    <keyword type="function" name="std::basic_string::pop_back" link="cpp/string/basic_string/pop_back"/>
    <keyword type="function" name="std::basic_string::append" link="cpp/string/basic_string/append"/>
    <keyword type="function" name="std::basic_string::operator+=" link="cpp/string/basic_string/operator+="/>
    <keyword type="function" name="std::basic_string::compare" link="cpp/string/basic_string/compare"/>
    <keyword type="function" name="std::basic_string::starts_with" link="cpp/string/basic_string/starts_with"/>
    <keyword type="function" name="std::basic_string::ends_with" link="cpp/string/basic_string/ends_with"/>
    <keyword type="function" name="std::basic_string::replace" link="cpp/string/basic_string/replace"/>
    <keyword type="function" name="std::basic_string::substr" link="cpp/string/basic_string/substr"/>
    <keyword type="function" name="std::basic_string::copy" link="cpp/string/basic_string/copy"/>
    <keyword type="function" name="std::basic_string::resize" link="cpp/string/basic_string/resize"/>
    <keyword type="function" name="std::basic_string::swap" link="cpp/string/basic_string/swap"/>
    <keyword type="function" name="std::basic_string::find" link="cpp/string/basic_string/find"/>
    <keyword type="function" name="std::basic_string::rfind" link="cpp/string/basic_string/rfind"/>
    <keyword type="function" name="std::basic_string::find_first_of" link="cpp/string/basic_string/find_first_of"/>
    <keyword type="function" name="std::basic_string::find_first_not_of" link="cpp/string/basic_string/find_first_not_of"/>
    <keyword type="function" name="std::basic_string::find_last_of" link="cpp/string/basic_string/find_last_of"/>
    <keyword type="function" name="std::basic_string::find_last_not_of" link="cpp/string/basic_string/find_last_not_of"/>
    <keyword type="macro" name="std::basic_string::npos" link="cpp/string/basic_string/npos"/>
    <keyword type="function" name="operator+(std::basic_string)" link="cpp/string/basic_string/operator+"/>
    <keyword type="function" name="operator==(std::basic_string)" link="cpp/string/basic_string/operator_cmp"/>
    <keyword type="function" name="operator!=(std::basic_string)" link="cpp/string/basic_string/operator_cmp"/>
    <keyword type="function" name="operator&lt;(std::basic_string)" link="cpp/string/basic_string/operator_cmp"/>
    <keyword type="function" name="operator&lt;=(std::basic_string)" link="cpp/string/basic_string/operator_cmp"/>
    <keyword type="function" name="operator&gt;(std::basic_string)" link="cpp/string/basic_string/operator_cmp"/>
    <keyword type="function" name="operator&gt;=(std::basic_string)" link="cpp/string/basic_string/operator_cmp"/>
    <keyword type="function" name="std::swap(std::basic_string)" link="cpp/string/basic_string/swap2"/>
    <keyword type="function" name="std::erase(std::basic_string)" link="cpp/string/basic_string/erase2"/>
    <keyword type="function" name="std::erase_if(std::basic_string)" link="cpp/string/basic_string/erase2"/>
    <keyword type="function" name="operator&lt;&lt;(std::basic_string)" link="cpp/string/basic_string/operator_ltltgtgt"/>
    <keyword type="function" name="operator&gt;&gt;(std::basic_string)" link="cpp/string/basic_string/operator_ltltgtgt"/>
    <keyword type="class" name="std::hash&lt;std::basic_string&gt;" link="cpp/string/basic_string/hash"/>
    <keyword type="typedef" name="std::string" link="cpp/string/basic_string"/>
    <keyword type="function" name="std::string::string" link="cpp/string/basic_string/basic_string"/>
    <keyword type="function" name="std::string::assign" link="cpp/string/basic_string/assign"/>
    <keyword type="function" name="std::string::operator=" link="cpp/string/basic_string/operator="/>
    <keyword type="function" name="std::string::get_allocator" link="cpp/string/basic_string/get_allocator"/>
    <keyword type="function" name="std::string::at" link="cpp/string/basic_string/at"/>
    <keyword type="function" name="std::string::operator[]" link="cpp/string/basic_string/operator_at"/>
    <keyword type="function" name="std::string::front" link="cpp/string/basic_string/front"/>
    <keyword type="function" name="std::string::back" link="cpp/string/basic_string/back"/>
    <keyword type="function" name="std::string::data" link="cpp/string/basic_string/data"/>
    <keyword type="function" name="std::string::c_str" link="cpp/string/basic_string/c_str"/>
    <keyword type="function" name="std::string::operator basic_string_view" link="cpp/string/basic_string/operator_basic_string_view"/>
    <keyword type="function" name="std::string::begin" link="cpp/string/basic_string/begin"/>
    <keyword type="function" name="std::string::cbegin" link="cpp/string/basic_string/begin"/>
    <keyword type="function" name="std::string::end" link="cpp/string/basic_string/end"/>
    <keyword type="function" name="std::string::cend" link="cpp/string/basic_string/end"/>
    <keyword type="function" name="std::string::rbegin" link="cpp/string/basic_string/rbegin"/>
    <keyword type="function" name="std::string::crbegin" link="cpp/string/basic_string/rbegin"/>
    <keyword type="function" name="std::string::rend" link="cpp/string/basic_string/rend"/>
    <keyword type="function" name="std::string::crend" link="cpp/string/basic_string/rend"/>
    <keyword type="function" name="std::string::empty" link="cpp/string/basic_string/empty"/>
    <keyword type="function" name="std::string::size" link="cpp/string/basic_string/size"/>
    <keyword type="function" name="std::string::length" link="cpp/string/basic_string/size"/>
    <keyword type="function" name="std::string::max_size" link="cpp/string/basic_string/max_size"/>
    <keyword type="function" name="std::string::reserve" link="cpp/string/basic_string/reserve"/>
    <keyword type="function" name="std::string::capacity" link="cpp/string/basic_string/capacity"/>
    <keyword type="function" name="std::string::shrink_to_fit" link="cpp/string/basic_string/shrink_to_fit"/>
    <keyword type="function" name="std::string::clear" link="cpp/string/basic_string/clear"/>
    <keyword type="function" name="std::string::insert" link="cpp/string/basic_string/insert"/>
    <keyword type="function" name="std::string::erase" link="cpp/string/basic_string/erase"/>
    <keyword type="function" name="std::string::push_back" link="cpp/string/basic_string/push_back"/>
    <keyword type="function" name="std::string::pop_back" link="cpp/string/basic_string/pop_back"/>
    <keyword type="function" name="std::string::append" link="cpp/string/basic_string/append"/>
    <keyword type="function" name="std::string::operator+=" link="cpp/string/basic_string/operator+="/>
    <keyword type="function" name="std::string::compare" link="cpp/string/basic_string/compare"/>
    <keyword type="function" name="std::string::starts_with" link="cpp/string/basic_string/starts_with"/>
    <keyword type="function" name="std::string::ends_with" link="cpp/string/basic_string/ends_with"/>
    <keyword type="function" name="std::string::replace" link="cpp/string/basic_string/replace"/>
    <keyword type="function" name="std::string::substr" link="cpp/string/basic_string/substr"/>
    <keyword type="function" name="std::string::copy" link="cpp/string/basic_string/copy"/>
    <keyword type="function" name="std::string::resize" link="cpp/string/basic_string/resize"/>
    <keyword type="function" name="std::string::swap" link="cpp/string/basic_string/swap"/>
    <keyword type="function" name="std::string::find" link="cpp/string/basic_string/find"/>
    <keyword type="function" name="std::string::rfind" link="cpp/string/basic_string/rfind"/>
    <keyword type="function" name="std::string::find_first_of" link="cpp/string/basic_string/find_first_of"/>
    <keyword type="function" name="std::string::find_first_not_of" link="cpp/string/basic_string/find_first_not_of"/>
    <keyword type="function" name="std::string::find_last_of" link="cpp/string/basic_string/find_last_of"/>
    <keyword type="function" name="std::string::find_last_not_of" link="cpp/string/basic_string/find_last_not_of"/>
    <keyword type="macro" name="std::string::npos" link="cpp/string/basic_string/npos"/>
    <keyword type="function" name="operator+(std::string)" link="cpp/string/basic_string/operator+"/>
    <keyword type="function" name="operator==(std::string)" link="cpp/string/basic_string/operator_cmp"/>
    <keyword type="function" name="operator!=(std::string)" link="cpp/string/basic_string/operator_cmp"/>
    <keyword type="function" name="operator&lt;(std::string)" link="cpp/string/basic_string/operator_cmp"/>
    <keyword type="function" name="operator&lt;=(std::string)" link="cpp/string/basic_string/operator_cmp"/>
    <keyword type="function" name="operator&gt;(std::string)" link="cpp/string/basic_string/operator_cmp"/>
    <keyword type="function" name="operator&gt;=(std::string)" link="cpp/string/basic_string/operator_cmp"/>
    <keyword type="function" name="std::swap(std::string)" link="cpp/string/basic_string/swap2"/>
    <keyword type="function" name="std::erase(std::string)" link="cpp/string/basic_string/erase2"/>
    <keyword type="function" name="std::erase_if(std::string)" link="cpp/string/basic_string/erase2"/>
    <keyword type="function" name="operator&lt;&lt;(std::string)" link="cpp/string/basic_string/operator_ltltgtgt"/>
    <keyword type="function" name="operator&gt;&gt;(std::string)" link="cpp/string/basic_string/operator_ltltgtgt"/>
    <keyword type="class" name="std::hash&lt;std::string&gt;" link="cpp/string/basic_string/hash"/>
    <keyword type="typedef" name="std::wstring" link="cpp/string/basic_string"/>
    <keyword type="function" name="std::wstring::wstring" link="cpp/string/basic_string/basic_string"/>
    <keyword type="function" name="std::wstring::assign" link="cpp/string/basic_string/assign"/>
    <keyword type="function" name="std::wstring::operator=" link="cpp/string/basic_string/operator="/>
    <keyword type="function" name="std::wstring::get_allocator" link="cpp/string/basic_string/get_allocator"/>
    <keyword type="function" name="std::wstring::at" link="cpp/string/basic_string/at"/>
    <keyword type="function" name="std::wstring::operator[]" link="cpp/string/basic_string/operator_at"/>
    <keyword type="function" name="std::wstring::front" link="cpp/string/basic_string/front"/>
    <keyword type="function" name="std::wstring::back" link="cpp/string/basic_string/back"/>
    <keyword type="function" name="std::wstring::data" link="cpp/string/basic_string/data"/>
    <keyword type="function" name="std::wstring::c_str" link="cpp/string/basic_string/c_str"/>
    <keyword type="function" name="std::wstring::operator basic_string_view" link="cpp/string/basic_string/operator_basic_string_view"/>
    <keyword type="function" name="std::wstring::begin" link="cpp/string/basic_string/begin"/>
    <keyword type="function" name="std::wstring::cbegin" link="cpp/string/basic_string/begin"/>
    <keyword type="function" name="std::wstring::end" link="cpp/string/basic_string/end"/>
    <keyword type="function" name="std::wstring::cend" link="cpp/string/basic_string/end"/>
    <keyword type="function" name="std::wstring::rbegin" link="cpp/string/basic_string/rbegin"/>
    <keyword type="function" name="std::wstring::crbegin" link="cpp/string/basic_string/rbegin"/>
    <keyword type="function" name="std::wstring::rend" link="cpp/string/basic_string/rend"/>
    <keyword type="function" name="std::wstring::crend" link="cpp/string/basic_string/rend"/>
    <keyword type="function" name="std::wstring::empty" link="cpp/string/basic_string/empty"/>
    <keyword type="function" name="std::wstring::size" link="cpp/string/basic_string/size"/>
    <keyword type="function" name="std::wstring::length" link="cpp/string/basic_string/size"/>
    <keyword type="function" name="std::wstring::max_size" link="cpp/string/basic_string/max_size"/>
    <keyword type="function" name="std::wstring::reserve" link="cpp/string/basic_string/reserve"/>
    <keyword type="function" name="std::wstring::capacity" link="cpp/string/basic_string/capacity"/>
    <keyword type="function" name="std::wstring::shrink_to_fit" link="cpp/string/basic_string/shrink_to_fit"/>
    <keyword type="function" name="std::wstring::clear" link="cpp/string/basic_string/clear"/>
    <keyword type="function" name="std::wstring::insert" link="cpp/string/basic_string/insert"/>
    <keyword type="function" name="std::wstring::erase" link="cpp/string/basic_string/erase"/>
    <keyword type="function" name="std::wstring::push_back" link="cpp/string/basic_string/push_back"/>
    <keyword type="function" name="std::wstring::pop_back" link="cpp/string/basic_string/pop_back"/>
    <keyword type="function" name="std::wstring::append" link="cpp/string/basic_string/append"/>
    <keyword type="function" name="std::wstring::operator+=" link="cpp/string/basic_string/operator+="/>
    <keyword type="function" name="std::wstring::compare" link="cpp/string/basic_string/compare"/>
    <keyword type="function" name="std::wstring::starts_with" link="cpp/string/basic_string/starts_with"/>
    <keyword type="function" name="std::wstring::ends_with" link="cpp/string/basic_string/ends_with"/>
    <keyword type="function" name="std::wstring::replace" link="cpp/string/basic_string/replace"/>
    <keyword type="function" name="std::wstring::substr" link="cpp/string/basic_string/substr"/>
    <keyword type="function" name="std::wstring::copy" link="cpp/string/basic_string/copy"/>
    <keyword type="function" name="std::wstring::resize" link="cpp/string/basic_string/resize"/>
    <keyword type="function" name="std::wstring::swap" link="cpp/string/basic_string/swap"/>
    <keyword type="function" name="std::wstring::find" link="cpp/string/basic_string/find"/>
    <keyword type="function" name="std::wstring::rfind" link="cpp/string/basic_string/rfind"/>
    <keyword type="function" name="std::wstring::find_first_of" link="cpp/string/basic_string/find_first_of"/>
    <keyword type="function" name="std::wstring::find_first_not_of" link="cpp/string/basic_string/find_first_not_of"/>
    <keyword type="function" name="std::wstring::find_last_of" link="cpp/string/basic_string/find_last_of"/>
    <keyword type="function" name="std::wstring::find_last_not_of" link="cpp/string/basic_string/find_last_not_of"/>
    <keyword type="macro" name="std::wstring::npos" link="cpp/string/basic_string/npos"/>
    <keyword type="function" name="operator+(std::wstring)" link="cpp/string/basic_string/operator+"/>
    <keyword type="function" name="operator==(std::wstring)" link="cpp/string/basic_string/operator_cmp"/>
    <keyword type="function" name="operator!=(std::wstring)" link="cpp/string/basic_string/operator_cmp"/>
    <keyword type="function" name="operator&lt;(std::wstring)" link="cpp/string/basic_string/operator_cmp"/>
    <keyword type="function" name="operator&lt;=(std::wstring)" link="cpp/string/basic_string/operator_cmp"/>
    <keyword type="function" name="operator&gt;(std::wstring)" link="cpp/string/basic_string/operator_cmp"/>
    <keyword type="function" name="operator&gt;=(std::wstring)" link="cpp/string/basic_string/operator_cmp"/>
    <keyword type="function" name="std::swap(std::wstring)" link="cpp/string/basic_string/swap2"/>
    <keyword type="function" name="std::erase(std::wstring)" link="cpp/string/basic_string/erase2"/>
    <keyword type="function" name="std::erase_if(std::wstring)" link="cpp/string/basic_string/erase2"/>
    <keyword type="function" name="operator&lt;&lt;(std::wstring)" link="cpp/string/basic_string/operator_ltltgtgt"/>
    <keyword type="function" name="operator&gt;&gt;(std::wstring)" link="cpp/string/basic_string/operator_ltltgtgt"/>
    <keyword type="class" name="std::hash&lt;std::wstring&gt;" link="cpp/string/basic_string/hash"/>
    <keyword type="typedef" name="std::u8string" link="cpp/string/basic_string"/>
    <keyword type="function" name="std::u8string::u8string" link="cpp/string/basic_string/basic_string"/>
    <keyword type="function" name="std::u8string::assign" link="cpp/string/basic_string/assign"/>
    <keyword type="function" name="std::u8string::operator=" link="cpp/string/basic_string/operator="/>
    <keyword type="function" name="std::u8string::get_allocator" link="cpp/string/basic_string/get_allocator"/>
    <keyword type="function" name="std::u8string::at" link="cpp/string/basic_string/at"/>
    <keyword type="function" name="std::u8string::operator[]" link="cpp/string/basic_string/operator_at"/>
    <keyword type="function" name="std::u8string::front" link="cpp/string/basic_string/front"/>
    <keyword type="function" name="std::u8string::back" link="cpp/string/basic_string/back"/>
    <keyword type="function" name="std::u8string::data" link="cpp/string/basic_string/data"/>
    <keyword type="function" name="std::u8string::c_str" link="cpp/string/basic_string/c_str"/>
    <keyword type="function" name="std::u8string::operator basic_string_view" link="cpp/string/basic_string/operator_basic_string_view"/>
    <keyword type="function" name="std::u8string::begin" link="cpp/string/basic_string/begin"/>
    <keyword type="function" name="std::u8string::cbegin" link="cpp/string/basic_string/begin"/>
    <keyword type="function" name="std::u8string::end" link="cpp/string/basic_string/end"/>
    <keyword type="function" name="std::u8string::cend" link="cpp/string/basic_string/end"/>
    <keyword type="function" name="std::u8string::rbegin" link="cpp/string/basic_string/rbegin"/>
    <keyword type="function" name="std::u8string::crbegin" link="cpp/string/basic_string/rbegin"/>
    <keyword type="function" name="std::u8string::rend" link="cpp/string/basic_string/rend"/>
    <keyword type="function" name="std::u8string::crend" link="cpp/string/basic_string/rend"/>
    <keyword type="function" name="std::u8string::empty" link="cpp/string/basic_string/empty"/>
    <keyword type="function" name="std::u8string::size" link="cpp/string/basic_string/size"/>
    <keyword type="function" name="std::u8string::length" link="cpp/string/basic_string/size"/>
    <keyword type="function" name="std::u8string::max_size" link="cpp/string/basic_string/max_size"/>
    <keyword type="function" name="std::u8string::reserve" link="cpp/string/basic_string/reserve"/>
    <keyword type="function" name="std::u8string::capacity" link="cpp/string/basic_string/capacity"/>
    <keyword type="function" name="std::u8string::shrink_to_fit" link="cpp/string/basic_string/shrink_to_fit"/>
    <keyword type="function" name="std::u8string::clear" link="cpp/string/basic_string/clear"/>
    <keyword type="function" name="std::u8string::insert" link="cpp/string/basic_string/insert"/>
    <keyword type="function" name="std::u8string::erase" link="cpp/string/basic_string/erase"/>
    <keyword type="function" name="std::u8string::push_back" link="cpp/string/basic_string/push_back"/>
    <keyword type="function" name="std::u8string::pop_back" link="cpp/string/basic_string/pop_back"/>
    <keyword type="function" name="std::u8string::append" link="cpp/string/basic_string/append"/>
    <keyword type="function" name="std::u8string::operator+=" link="cpp/string/basic_string/operator+="/>
    <keyword type="function" name="std::u8string::compare" link="cpp/string/basic_string/compare"/>
    <keyword type="function" name="std::u8string::starts_with" link="cpp/string/basic_string/starts_with"/>
    <keyword type="function" name="std::u8string::ends_with" link="cpp/string/basic_string/ends_with"/>
    <keyword type="function" name="std::u8string::replace" link="cpp/string/basic_string/replace"/>
    <keyword type="function" name="std::u8string::substr" link="cpp/string/basic_string/substr"/>
    <keyword type="function" name="std::u8string::copy" link="cpp/string/basic_string/copy"/>
    <keyword type="function" name="std::u8string::resize" link="cpp/string/basic_string/resize"/>
    <keyword type="function" name="std::u8string::swap" link="cpp/string/basic_string/swap"/>
    <keyword type="function" name="std::u8string::find" link="cpp/string/basic_string/find"/>
    <keyword type="function" name="std::u8string::rfind" link="cpp/string/basic_string/rfind"/>
    <keyword type="function" name="std::u8string::find_first_of" link="cpp/string/basic_string/find_first_of"/>
    <keyword type="function" name="std::u8string::find_first_not_of" link="cpp/string/basic_string/find_first_not_of"/>
    <keyword type="function" name="std::u8string::find_last_of" link="cpp/string/basic_string/find_last_of"/>
    <keyword type="function" name="std::u8string::find_last_not_of" link="cpp/string/basic_string/find_last_not_of"/>
    <keyword type="macro" name="std::u8string::npos" link="cpp/string/basic_string/npos"/>
    <keyword type="function" name="operator+(std::u8string)" link="cpp/string/basic_string/operator+"/>
    <keyword type="function" name="operator==(std::u8string)" link="cpp/string/basic_string/operator_cmp"/>
    <keyword type="function" name="operator!=(std::u8string)" link="cpp/string/basic_string/operator_cmp"/>
    <keyword type="function" name="operator&lt;(std::u8string)" link="cpp/string/basic_string/operator_cmp"/>
    <keyword type="function" name="operator&lt;=(std::u8string)" link="cpp/string/basic_string/operator_cmp"/>
    <keyword type="function" name="operator&gt;(std::u8string)" link="cpp/string/basic_string/operator_cmp"/>
    <keyword type="function" name="operator&gt;=(std::u8string)" link="cpp/string/basic_string/operator_cmp"/>
    <keyword type="function" name="std::swap(std::u8string)" link="cpp/string/basic_string/swap2"/>
    <keyword type="function" name="std::erase(std::u8string)" link="cpp/string/basic_string/erase2"/>
    <keyword type="function" name="std::erase_if(std::u8string)" link="cpp/string/basic_string/erase2"/>
    <keyword type="function" name="operator&lt;&lt;(std::u8string)" link="cpp/string/basic_string/operator_ltltgtgt"/>
    <keyword type="function" name="operator&gt;&gt;(std::u8string)" link="cpp/string/basic_string/operator_ltltgtgt"/>
    <keyword type="class" name="std::hash&lt;std::u8string&gt;" link="cpp/string/basic_string/hash"/>
    <keyword type="typedef" name="std::u16string" link="cpp/string/basic_string"/>
    <keyword type="function" name="std::u16string::u16string" link="cpp/string/basic_string/basic_string"/>
    <keyword type="function" name="std::u16string::assign" link="cpp/string/basic_string/assign"/>
    <keyword type="function" name="std::u16string::operator=" link="cpp/string/basic_string/operator="/>
    <keyword type="function" name="std::u16string::get_allocator" link="cpp/string/basic_string/get_allocator"/>
    <keyword type="function" name="std::u16string::at" link="cpp/string/basic_string/at"/>
    <keyword type="function" name="std::u16string::operator[]" link="cpp/string/basic_string/operator_at"/>
    <keyword type="function" name="std::u16string::front" link="cpp/string/basic_string/front"/>
    <keyword type="function" name="std::u16string::back" link="cpp/string/basic_string/back"/>
    <keyword type="function" name="std::u16string::data" link="cpp/string/basic_string/data"/>
    <keyword type="function" name="std::u16string::c_str" link="cpp/string/basic_string/c_str"/>
    <keyword type="function" name="std::u16string::operator basic_string_view" link="cpp/string/basic_string/operator_basic_string_view"/>
    <keyword type="function" name="std::u16string::begin" link="cpp/string/basic_string/begin"/>
    <keyword type="function" name="std::u16string::cbegin" link="cpp/string/basic_string/begin"/>
    <keyword type="function" name="std::u16string::end" link="cpp/string/basic_string/end"/>
    <keyword type="function" name="std::u16string::cend" link="cpp/string/basic_string/end"/>
    <keyword type="function" name="std::u16string::rbegin" link="cpp/string/basic_string/rbegin"/>
    <keyword type="function" name="std::u16string::crbegin" link="cpp/string/basic_string/rbegin"/>
    <keyword type="function" name="std::u16string::rend" link="cpp/string/basic_string/rend"/>
    <keyword type="function" name="std::u16string::crend" link="cpp/string/basic_string/rend"/>
    <keyword type="function" name="std::u16string::empty" link="cpp/string/basic_string/empty"/>
    <keyword type="function" name="std::u16string::size" link="cpp/string/basic_string/size"/>
    <keyword type="function" name="std::u16string::length" link="cpp/string/basic_string/size"/>
    <keyword type="function" name="std::u16string::max_size" link="cpp/string/basic_string/max_size"/>
    <keyword type="function" name="std::u16string::reserve" link="cpp/string/basic_string/reserve"/>
    <keyword type="function" name="std::u16string::capacity" link="cpp/string/basic_string/capacity"/>
    <keyword type="function" name="std::u16string::shrink_to_fit" link="cpp/string/basic_string/shrink_to_fit"/>
    <keyword type="function" name="std::u16string::clear" link="cpp/string/basic_string/clear"/>
    <keyword type="function" name="std::u16string::insert" link="cpp/string/basic_string/insert"/>
    <keyword type="function" name="std::u16string::erase" link="cpp/string/basic_string/erase"/>
    <keyword type="function" name="std::u16string::push_back" link="cpp/string/basic_string/push_back"/>
    <keyword type="function" name="std::u16string::pop_back" link="cpp/string/basic_string/pop_back"/>
    <keyword type="function" name="std::u16string::append" link="cpp/string/basic_string/append"/>
    <keyword type="function" name="std::u16string::operator+=" link="cpp/string/basic_string/operator+="/>
    <keyword type="function" name="std::u16string::compare" link="cpp/string/basic_string/compare"/>
    <keyword type="function" name="std::u16string::starts_with" link="cpp/string/basic_string/starts_with"/>
    <keyword type="function" name="std::u16string::ends_with" link="cpp/string/basic_string/ends_with"/>
    <keyword type="function" name="std::u16string::replace" link="cpp/string/basic_string/replace"/>
    <keyword type="function" name="std::u16string::substr" link="cpp/string/basic_string/substr"/>
    <keyword type="function" name="std::u16string::copy" link="cpp/string/basic_string/copy"/>
    <keyword type="function" name="std::u16string::resize" link="cpp/string/basic_string/resize"/>
    <keyword type="function" name="std::u16string::swap" link="cpp/string/basic_string/swap"/>
    <keyword type="function" name="std::u16string::find" link="cpp/string/basic_string/find"/>
    <keyword type="function" name="std::u16string::rfind" link="cpp/string/basic_string/rfind"/>
    <keyword type="function" name="std::u16string::find_first_of" link="cpp/string/basic_string/find_first_of"/>
    <keyword type="function" name="std::u16string::find_first_not_of" link="cpp/string/basic_string/find_first_not_of"/>
    <keyword type="function" name="std::u16string::find_last_of" link="cpp/string/basic_string/find_last_of"/>
    <keyword type="function" name="std::u16string::find_last_not_of" link="cpp/string/basic_string/find_last_not_of"/>
    <keyword type="macro" name="std::u16string::npos" link="cpp/string/basic_string/npos"/>
    <keyword type="function" name="operator+(std::u16string)" link="cpp/string/basic_string/operator+"/>
    <keyword type="function" name="operator==(std::u16string)" link="cpp/string/basic_string/operator_cmp"/>
    <keyword type="function" name="operator!=(std::u16string)" link="cpp/string/basic_string/operator_cmp"/>
    <keyword type="function" name="operator&lt;(std::u16string)" link="cpp/string/basic_string/operator_cmp"/>
    <keyword type="function" name="operator&lt;=(std::u16string)" link="cpp/string/basic_string/operator_cmp"/>
    <keyword type="function" name="operator&gt;(std::u16string)" link="cpp/string/basic_string/operator_cmp"/>
    <keyword type="function" name="operator&gt;=(std::u16string)" link="cpp/string/basic_string/operator_cmp"/>
    <keyword type="function" name="std::swap(std::u16string)" link="cpp/string/basic_string/swap2"/>
    <keyword type="function" name="std::erase(std::u16string)" link="cpp/string/basic_string/erase2"/>
    <keyword type="function" name="std::erase_if(std::u16string)" link="cpp/string/basic_string/erase2"/>
    <keyword type="function" name="operator&lt;&lt;(std::u16string)" link="cpp/string/basic_string/operator_ltltgtgt"/>
    <keyword type="function" name="operator&gt;&gt;(std::u16string)" link="cpp/string/basic_string/operator_ltltgtgt"/>
    <keyword type="class" name="std::hash&lt;std::u16string&gt;" link="cpp/string/basic_string/hash"/>
    <keyword type="typedef" name="std::u32string" link="cpp/string/basic_string"/>
    <keyword type="function" name="std::u32string::u32string" link="cpp/string/basic_string/basic_string"/>
    <keyword type="function" name="std::u32string::assign" link="cpp/string/basic_string/assign"/>
    <keyword type="function" name="std::u32string::operator=" link="cpp/string/basic_string/operator="/>
    <keyword type="function" name="std::u32string::get_allocator" link="cpp/string/basic_string/get_allocator"/>
    <keyword type="function" name="std::u32string::at" link="cpp/string/basic_string/at"/>
    <keyword type="function" name="std::u32string::operator[]" link="cpp/string/basic_string/operator_at"/>
    <keyword type="function" name="std::u32string::front" link="cpp/string/basic_string/front"/>
    <keyword type="function" name="std::u32string::back" link="cpp/string/basic_string/back"/>
    <keyword type="function" name="std::u32string::data" link="cpp/string/basic_string/data"/>
    <keyword type="function" name="std::u32string::c_str" link="cpp/string/basic_string/c_str"/>
    <keyword type="function" name="std::u32string::operator basic_string_view" link="cpp/string/basic_string/operator_basic_string_view"/>
    <keyword type="function" name="std::u32string::begin" link="cpp/string/basic_string/begin"/>
    <keyword type="function" name="std::u32string::cbegin" link="cpp/string/basic_string/begin"/>
    <keyword type="function" name="std::u32string::end" link="cpp/string/basic_string/end"/>
    <keyword type="function" name="std::u32string::cend" link="cpp/string/basic_string/end"/>
    <keyword type="function" name="std::u32string::rbegin" link="cpp/string/basic_string/rbegin"/>
    <keyword type="function" name="std::u32string::crbegin" link="cpp/string/basic_string/rbegin"/>
    <keyword type="function" name="std::u32string::rend" link="cpp/string/basic_string/rend"/>
    <keyword type="function" name="std::u32string::crend" link="cpp/string/basic_string/rend"/>
    <keyword type="function" name="std::u32string::empty" link="cpp/string/basic_string/empty"/>
    <keyword type="function" name="std::u32string::size" link="cpp/string/basic_string/size"/>
    <keyword type="function" name="std::u32string::length" link="cpp/string/basic_string/size"/>
    <keyword type="function" name="std::u32string::max_size" link="cpp/string/basic_string/max_size"/>
    <keyword type="function" name="std::u32string::reserve" link="cpp/string/basic_string/reserve"/>
    <keyword type="function" name="std::u32string::capacity" link="cpp/string/basic_string/capacity"/>
    <keyword type="function" name="std::u32string::shrink_to_fit" link="cpp/string/basic_string/shrink_to_fit"/>
    <keyword type="function" name="std::u32string::clear" link="cpp/string/basic_string/clear"/>
    <keyword type="function" name="std::u32string::insert" link="cpp/string/basic_string/insert"/>
    <keyword type="function" name="std::u32string::erase" link="cpp/string/basic_string/erase"/>
    <keyword type="function" name="std::u32string::push_back" link="cpp/string/basic_string/push_back"/>
    <keyword type="function" name="std::u32string::pop_back" link="cpp/string/basic_string/pop_back"/>
    <keyword type="function" name="std::u32string::append" link="cpp/string/basic_string/append"/>
    <keyword type="function" name="std::u32string::operator+=" link="cpp/string/basic_string/operator+="/>
    <keyword type="function" name="std::u32string::compare" link="cpp/string/basic_string/compare"/>
    <keyword type="function" name="std::u32string::starts_with" link="cpp/string/basic_string/starts_with"/>
    <keyword type="function" name="std::u32string::ends_with" link="cpp/string/basic_string/ends_with"/>
    <keyword type="function" name="std::u32string::replace" link="cpp/string/basic_string/replace"/>
    <keyword type="function" name="std::u32string::substr" link="cpp/string/basic_string/substr"/>
    <keyword type="function" name="std::u32string::copy" link="cpp/string/basic_string/copy"/>
    <keyword type="function" name="std::u32string::resize" link="cpp/string/basic_string/resize"/>
    <keyword type="function" name="std::u32string::swap" link="cpp/string/basic_string/swap"/>
    <keyword type="function" name="std::u32string::find" link="cpp/string/basic_string/find"/>
    <keyword type="function" name="std::u32string::rfind" link="cpp/string/basic_string/rfind"/>
    <keyword type="function" name="std::u32string::find_first_of" link="cpp/string/basic_string/find_first_of"/>
    <keyword type="function" name="std::u32string::find_first_not_of" link="cpp/string/basic_string/find_first_not_of"/>
    <keyword type="function" name="std::u32string::find_last_of" link="cpp/string/basic_string/find_last_of"/>
    <keyword type="function" name="std::u32string::find_last_not_of" link="cpp/string/basic_string/find_last_not_of"/>
    <keyword type="macro" name="std::u32string::npos" link="cpp/string/basic_string/npos"/>
    <keyword type="function" name="operator+(std::u32string)" link="cpp/string/basic_string/operator+"/>
    <keyword type="function" name="operator==(std::u32string)" link="cpp/string/basic_string/operator_cmp"/>
    <keyword type="function" name="operator!=(std::u32string)" link="cpp/string/basic_string/operator_cmp"/>
    <keyword type="function" name="operator&lt;(std::u32string)" link="cpp/string/basic_string/operator_cmp"/>
    <keyword type="function" name="operator&lt;=(std::u32string)" link="cpp/string/basic_string/operator_cmp"/>
    <keyword type="function" name="operator&gt;(std::u32string)" link="cpp/string/basic_string/operator_cmp"/>
    <keyword type="function" name="operator&gt;=(std::u32string)" link="cpp/string/basic_string/operator_cmp"/>
    <keyword type="function" name="std::swap(std::u32string)" link="cpp/string/basic_string/swap2"/>
    <keyword type="function" name="std::erase(std::u32string)" link="cpp/string/basic_string/erase2"/>
    <keyword type="function" name="std::erase_if(std::u32string)" link="cpp/string/basic_string/erase2"/>
    <keyword type="function" name="operator&lt;&lt;(std::u32string)" link="cpp/string/basic_string/operator_ltltgtgt"/>
    <keyword type="function" name="operator&gt;&gt;(std::u32string)" link="cpp/string/basic_string/operator_ltltgtgt"/>
    <keyword type="class" name="std::hash&lt;std::u32string&gt;" link="cpp/string/basic_string/hash"/>
    <keyword type="typedef" name="std::pmr::string" link="cpp/string/basic_string"/>
    <keyword type="function" name="std::pmr::string::string" link="cpp/string/basic_string/basic_string"/>
    <keyword type="function" name="std::pmr::string::assign" link="cpp/string/basic_string/assign"/>
    <keyword type="function" name="std::pmr::string::operator=" link="cpp/string/basic_string/operator="/>
    <keyword type="function" name="std::pmr::string::get_allocator" link="cpp/string/basic_string/get_allocator"/>
    <keyword type="function" name="std::pmr::string::at" link="cpp/string/basic_string/at"/>
    <keyword type="function" name="std::pmr::string::operator[]" link="cpp/string/basic_string/operator_at"/>
    <keyword type="function" name="std::pmr::string::front" link="cpp/string/basic_string/front"/>
    <keyword type="function" name="std::pmr::string::back" link="cpp/string/basic_string/back"/>
    <keyword type="function" name="std::pmr::string::data" link="cpp/string/basic_string/data"/>
    <keyword type="function" name="std::pmr::string::c_str" link="cpp/string/basic_string/c_str"/>
    <keyword type="function" name="std::pmr::string::operator basic_string_view" link="cpp/string/basic_string/operator_basic_string_view"/>
    <keyword type="function" name="std::pmr::string::begin" link="cpp/string/basic_string/begin"/>
    <keyword type="function" name="std::pmr::string::cbegin" link="cpp/string/basic_string/begin"/>
    <keyword type="function" name="std::pmr::string::end" link="cpp/string/basic_string/end"/>
    <keyword type="function" name="std::pmr::string::cend" link="cpp/string/basic_string/end"/>
    <keyword type="function" name="std::pmr::string::rbegin" link="cpp/string/basic_string/rbegin"/>
    <keyword type="function" name="std::pmr::string::crbegin" link="cpp/string/basic_string/rbegin"/>
    <keyword type="function" name="std::pmr::string::rend" link="cpp/string/basic_string/rend"/>
    <keyword type="function" name="std::pmr::string::crend" link="cpp/string/basic_string/rend"/>
    <keyword type="function" name="std::pmr::string::empty" link="cpp/string/basic_string/empty"/>
    <keyword type="function" name="std::pmr::string::size" link="cpp/string/basic_string/size"/>
    <keyword type="function" name="std::pmr::string::length" link="cpp/string/basic_string/size"/>
    <keyword type="function" name="std::pmr::string::max_size" link="cpp/string/basic_string/max_size"/>
    <keyword type="function" name="std::pmr::string::reserve" link="cpp/string/basic_string/reserve"/>
    <keyword type="function" name="std::pmr::string::capacity" link="cpp/string/basic_string/capacity"/>
    <keyword type="function" name="std::pmr::string::shrink_to_fit" link="cpp/string/basic_string/shrink_to_fit"/>
    <keyword type="function" name="std::pmr::string::clear" link="cpp/string/basic_string/clear"/>
    <keyword type="function" name="std::pmr::string::insert" link="cpp/string/basic_string/insert"/>
    <keyword type="function" name="std::pmr::string::erase" link="cpp/string/basic_string/erase"/>
    <keyword type="function" name="std::pmr::string::push_back" link="cpp/string/basic_string/push_back"/>
    <keyword type="function" name="std::pmr::string::pop_back" link="cpp/string/basic_string/pop_back"/>
    <keyword type="function" name="std::pmr::string::append" link="cpp/string/basic_string/append"/>
    <keyword type="function" name="std::pmr::string::operator+=" link="cpp/string/basic_string/operator+="/>
    <keyword type="function" name="std::pmr::string::compare" link="cpp/string/basic_string/compare"/>
    <keyword type="function" name="std::pmr::string::starts_with" link="cpp/string/basic_string/starts_with"/>
    <keyword type="function" name="std::pmr::string::ends_with" link="cpp/string/basic_string/ends_with"/>
    <keyword type="function" name="std::pmr::string::replace" link="cpp/string/basic_string/replace"/>
    <keyword type="function" name="std::pmr::string::substr" link="cpp/string/basic_string/substr"/>
    <keyword type="function" name="std::pmr::string::copy" link="cpp/string/basic_string/copy"/>
    <keyword type="function" name="std::pmr::string::resize" link="cpp/string/basic_string/resize"/>
    <keyword type="function" name="std::pmr::string::swap" link="cpp/string/basic_string/swap"/>
    <keyword type="function" name="std::pmr::string::find" link="cpp/string/basic_string/find"/>
    <keyword type="function" name="std::pmr::string::rfind" link="cpp/string/basic_string/rfind"/>
    <keyword type="function" name="std::pmr::string::find_first_of" link="cpp/string/basic_string/find_first_of"/>
    <keyword type="function" name="std::pmr::string::find_first_not_of" link="cpp/string/basic_string/find_first_not_of"/>
    <keyword type="function" name="std::pmr::string::find_last_of" link="cpp/string/basic_string/find_last_of"/>
    <keyword type="function" name="std::pmr::string::find_last_not_of" link="cpp/string/basic_string/find_last_not_of"/>
    <keyword type="macro" name="std::pmr::string::npos" link="cpp/string/basic_string/npos"/>
    <keyword type="function" name="operator+(std::pmr::string)" link="cpp/string/basic_string/operator+"/>
    <keyword type="function" name="operator==(std::pmr::string)" link="cpp/string/basic_string/operator_cmp"/>
    <keyword type="function" name="operator!=(std::pmr::string)" link="cpp/string/basic_string/operator_cmp"/>
    <keyword type="function" name="operator&lt;(std::pmr::string)" link="cpp/string/basic_string/operator_cmp"/>
    <keyword type="function" name="operator&lt;=(std::pmr::string)" link="cpp/string/basic_string/operator_cmp"/>
    <keyword type="function" name="operator&gt;(std::pmr::string)" link="cpp/string/basic_string/operator_cmp"/>
    <keyword type="function" name="operator&gt;=(std::pmr::string)" link="cpp/string/basic_string/operator_cmp"/>
    <keyword type="function" name="std::swap(std::pmr::string)" link="cpp/string/basic_string/swap2"/>
    <keyword type="function" name="std::erase(std::pmr::string)" link="cpp/string/basic_string/erase2"/>
    <keyword type="function" name="std::erase_if(std::pmr::string)" link="cpp/string/basic_string/erase2"/>
    <keyword type="function" name="operator&lt;&lt;(std::pmr::string)" link="cpp/string/basic_string/operator_ltltgtgt"/>
    <keyword type="function" name="operator&gt;&gt;(std::pmr::string)" link="cpp/string/basic_string/operator_ltltgtgt"/>
    <keyword type="class" name="std::hash&lt;std::pmr::string&gt;" link="cpp/string/basic_string/hash"/>
    <keyword type="typedef" name="std::pmr::wstring" link="cpp/string/basic_string"/>
    <keyword type="function" name="std::pmr::wstring::wstring" link="cpp/string/basic_string/basic_string"/>
    <keyword type="function" name="std::pmr::wstring::assign" link="cpp/string/basic_string/assign"/>
    <keyword type="function" name="std::pmr::wstring::operator=" link="cpp/string/basic_string/operator="/>
    <keyword type="function" name="std::pmr::wstring::get_allocator" link="cpp/string/basic_string/get_allocator"/>
    <keyword type="function" name="std::pmr::wstring::at" link="cpp/string/basic_string/at"/>
    <keyword type="function" name="std::pmr::wstring::operator[]" link="cpp/string/basic_string/operator_at"/>
    <keyword type="function" name="std::pmr::wstring::front" link="cpp/string/basic_string/front"/>
    <keyword type="function" name="std::pmr::wstring::back" link="cpp/string/basic_string/back"/>
    <keyword type="function" name="std::pmr::wstring::data" link="cpp/string/basic_string/data"/>
    <keyword type="function" name="std::pmr::wstring::c_str" link="cpp/string/basic_string/c_str"/>
    <keyword type="function" name="std::pmr::wstring::operator basic_string_view" link="cpp/string/basic_string/operator_basic_string_view"/>
    <keyword type="function" name="std::pmr::wstring::begin" link="cpp/string/basic_string/begin"/>
    <keyword type="function" name="std::pmr::wstring::cbegin" link="cpp/string/basic_string/begin"/>
    <keyword type="function" name="std::pmr::wstring::end" link="cpp/string/basic_string/end"/>
    <keyword type="function" name="std::pmr::wstring::cend" link="cpp/string/basic_string/end"/>
    <keyword type="function" name="std::pmr::wstring::rbegin" link="cpp/string/basic_string/rbegin"/>
    <keyword type="function" name="std::pmr::wstring::crbegin" link="cpp/string/basic_string/rbegin"/>
    <keyword type="function" name="std::pmr::wstring::rend" link="cpp/string/basic_string/rend"/>
    <keyword type="function" name="std::pmr::wstring::crend" link="cpp/string/basic_string/rend"/>
    <keyword type="function" name="std::pmr::wstring::empty" link="cpp/string/basic_string/empty"/>
    <keyword type="function" name="std::pmr::wstring::size" link="cpp/string/basic_string/size"/>
    <keyword type="function" name="std::pmr::wstring::length" link="cpp/string/basic_string/size"/>
    <keyword type="function" name="std::pmr::wstring::max_size" link="cpp/string/basic_string/max_size"/>
    <keyword type="function" name="std::pmr::wstring::reserve" link="cpp/string/basic_string/reserve"/>
    <keyword type="function" name="std::pmr::wstring::capacity" link="cpp/string/basic_string/capacity"/>
    <keyword type="function" name="std::pmr::wstring::shrink_to_fit" link="cpp/string/basic_string/shrink_to_fit"/>
    <keyword type="function" name="std::pmr::wstring::clear" link="cpp/string/basic_string/clear"/>
    <keyword type="function" name="std::pmr::wstring::insert" link="cpp/string/basic_string/insert"/>
    <keyword type="function" name="std::pmr::wstring::erase" link="cpp/string/basic_string/erase"/>
    <keyword type="function" name="std::pmr::wstring::push_back" link="cpp/string/basic_string/push_back"/>
    <keyword type="function" name="std::pmr::wstring::pop_back" link="cpp/string/basic_string/pop_back"/>
    <keyword type="function" name="std::pmr::wstring::append" link="cpp/string/basic_string/append"/>
    <keyword type="function" name="std::pmr::wstring::operator+=" link="cpp/string/basic_string/operator+="/>
    <keyword type="function" name="std::pmr::wstring::compare" link="cpp/string/basic_string/compare"/>
    <keyword type="function" name="std::pmr::wstring::starts_with" link="cpp/string/basic_string/starts_with"/>
    <keyword type="function" name="std::pmr::wstring::ends_with" link="cpp/string/basic_string/ends_with"/>
    <keyword type="function" name="std::pmr::wstring::replace" link="cpp/string/basic_string/replace"/>
    <keyword type="function" name="std::pmr::wstring::substr" link="cpp/string/basic_string/substr"/>
    <keyword type="function" name="std::pmr::wstring::copy" link="cpp/string/basic_string/copy"/>
    <keyword type="function" name="std::pmr::wstring::resize" link="cpp/string/basic_string/resize"/>
    <keyword type="function" name="std::pmr::wstring::swap" link="cpp/string/basic_string/swap"/>
    <keyword type="function" name="std::pmr::wstring::find" link="cpp/string/basic_string/find"/>
    <keyword type="function" name="std::pmr::wstring::rfind" link="cpp/string/basic_string/rfind"/>
    <keyword type="function" name="std::pmr::wstring::find_first_of" link="cpp/string/basic_string/find_first_of"/>
    <keyword type="function" name="std::pmr::wstring::find_first_not_of" link="cpp/string/basic_string/find_first_not_of"/>
    <keyword type="function" name="std::pmr::wstring::find_last_of" link="cpp/string/basic_string/find_last_of"/>
    <keyword type="function" name="std::pmr::wstring::find_last_not_of" link="cpp/string/basic_string/find_last_not_of"/>
    <keyword type="macro" name="std::pmr::wstring::npos" link="cpp/string/basic_string/npos"/>
    <keyword type="function" name="operator+(std::pmr::wstring)" link="cpp/string/basic_string/operator+"/>
    <keyword type="function" name="operator==(std::pmr::wstring)" link="cpp/string/basic_string/operator_cmp"/>
    <keyword type="function" name="operator!=(std::pmr::wstring)" link="cpp/string/basic_string/operator_cmp"/>
    <keyword type="function" name="operator&lt;(std::pmr::wstring)" link="cpp/string/basic_string/operator_cmp"/>
    <keyword type="function" name="operator&lt;=(std::pmr::wstring)" link="cpp/string/basic_string/operator_cmp"/>
    <keyword type="function" name="operator&gt;(std::pmr::wstring)" link="cpp/string/basic_string/operator_cmp"/>
    <keyword type="function" name="operator&gt;=(std::pmr::wstring)" link="cpp/string/basic_string/operator_cmp"/>
    <keyword type="function" name="std::swap(std::pmr::wstring)" link="cpp/string/basic_string/swap2"/>
    <keyword type="function" name="std::erase(std::pmr::wstring)" link="cpp/string/basic_string/erase2"/>
    <keyword type="function" name="std::erase_if(std::pmr::wstring)" link="cpp/string/basic_string/erase2"/>
    <keyword type="function" name="operator&lt;&lt;(std::pmr::wstring)" link="cpp/string/basic_string/operator_ltltgtgt"/>
    <keyword type="function" name="operator&gt;&gt;(std::pmr::wstring)" link="cpp/string/basic_string/operator_ltltgtgt"/>
    <keyword type="class" name="std::hash&lt;std::pmr::wstring&gt;" link="cpp/string/basic_string/hash"/>
    <keyword type="typedef" name="std::pmr::u8string" link="cpp/string/basic_string"/>
    <keyword type="function" name="std::pmr::u8string::u8string" link="cpp/string/basic_string/basic_string"/>
    <keyword type="function" name="std::pmr::u8string::assign" link="cpp/string/basic_string/assign"/>
    <keyword type="function" name="std::pmr::u8string::operator=" link="cpp/string/basic_string/operator="/>
    <keyword type="function" name="std::pmr::u8string::get_allocator" link="cpp/string/basic_string/get_allocator"/>
    <keyword type="function" name="std::pmr::u8string::at" link="cpp/string/basic_string/at"/>
    <keyword type="function" name="std::pmr::u8string::operator[]" link="cpp/string/basic_string/operator_at"/>
    <keyword type="function" name="std::pmr::u8string::front" link="cpp/string/basic_string/front"/>
    <keyword type="function" name="std::pmr::u8string::back" link="cpp/string/basic_string/back"/>
    <keyword type="function" name="std::pmr::u8string::data" link="cpp/string/basic_string/data"/>
    <keyword type="function" name="std::pmr::u8string::c_str" link="cpp/string/basic_string/c_str"/>
    <keyword type="function" name="std::pmr::u8string::operator basic_string_view" link="cpp/string/basic_string/operator_basic_string_view"/>
    <keyword type="function" name="std::pmr::u8string::begin" link="cpp/string/basic_string/begin"/>
    <keyword type="function" name="std::pmr::u8string::cbegin" link="cpp/string/basic_string/begin"/>
    <keyword type="function" name="std::pmr::u8string::end" link="cpp/string/basic_string/end"/>
    <keyword type="function" name="std::pmr::u8string::cend" link="cpp/string/basic_string/end"/>
    <keyword type="function" name="std::pmr::u8string::rbegin" link="cpp/string/basic_string/rbegin"/>
    <keyword type="function" name="std::pmr::u8string::crbegin" link="cpp/string/basic_string/rbegin"/>
    <keyword type="function" name="std::pmr::u8string::rend" link="cpp/string/basic_string/rend"/>
    <keyword type="function" name="std::pmr::u8string::crend" link="cpp/string/basic_string/rend"/>
    <keyword type="function" name="std::pmr::u8string::empty" link="cpp/string/basic_string/empty"/>
    <keyword type="function" name="std::pmr::u8string::size" link="cpp/string/basic_string/size"/>
    <keyword type="function" name="std::pmr::u8string::length" link="cpp/string/basic_string/size"/>
    <keyword type="function" name="std::pmr::u8string::max_size" link="cpp/string/basic_string/max_size"/>
    <keyword type="function" name="std::pmr::u8string::reserve" link="cpp/string/basic_string/reserve"/>
    <keyword type="function" name="std::pmr::u8string::capacity" link="cpp/string/basic_string/capacity"/>
    <keyword type="function" name="std::pmr::u8string::shrink_to_fit" link="cpp/string/basic_string/shrink_to_fit"/>
    <keyword type="function" name="std::pmr::u8string::clear" link="cpp/string/basic_string/clear"/>
    <keyword type="function" name="std::pmr::u8string::insert" link="cpp/string/basic_string/insert"/>
    <keyword type="function" name="std::pmr::u8string::erase" link="cpp/string/basic_string/erase"/>
    <keyword type="function" name="std::pmr::u8string::push_back" link="cpp/string/basic_string/push_back"/>
    <keyword type="function" name="std::pmr::u8string::pop_back" link="cpp/string/basic_string/pop_back"/>
    <keyword type="function" name="std::pmr::u8string::append" link="cpp/string/basic_string/append"/>
    <keyword type="function" name="std::pmr::u8string::operator+=" link="cpp/string/basic_string/operator+="/>
    <keyword type="function" name="std::pmr::u8string::compare" link="cpp/string/basic_string/compare"/>
    <keyword type="function" name="std::pmr::u8string::starts_with" link="cpp/string/basic_string/starts_with"/>
    <keyword type="function" name="std::pmr::u8string::ends_with" link="cpp/string/basic_string/ends_with"/>
    <keyword type="function" name="std::pmr::u8string::replace" link="cpp/string/basic_string/replace"/>
    <keyword type="function" name="std::pmr::u8string::substr" link="cpp/string/basic_string/substr"/>
    <keyword type="function" name="std::pmr::u8string::copy" link="cpp/string/basic_string/copy"/>
    <keyword type="function" name="std::pmr::u8string::resize" link="cpp/string/basic_string/resize"/>
    <keyword type="function" name="std::pmr::u8string::swap" link="cpp/string/basic_string/swap"/>
    <keyword type="function" name="std::pmr::u8string::find" link="cpp/string/basic_string/find"/>
    <keyword type="function" name="std::pmr::u8string::rfind" link="cpp/string/basic_string/rfind"/>
    <keyword type="function" name="std::pmr::u8string::find_first_of" link="cpp/string/basic_string/find_first_of"/>
    <keyword type="function" name="std::pmr::u8string::find_first_not_of" link="cpp/string/basic_string/find_first_not_of"/>
    <keyword type="function" name="std::pmr::u8string::find_last_of" link="cpp/string/basic_string/find_last_of"/>
    <keyword type="function" name="std::pmr::u8string::find_last_not_of" link="cpp/string/basic_string/find_last_not_of"/>
    <keyword type="macro" name="std::pmr::u8string::npos" link="cpp/string/basic_string/npos"/>
    <keyword type="function" name="operator+(std::pmr::u8string)" link="cpp/string/basic_string/operator+"/>
    <keyword type="function" name="operator==(std::pmr::u8string)" link="cpp/string/basic_string/operator_cmp"/>
    <keyword type="function" name="operator!=(std::pmr::u8string)" link="cpp/string/basic_string/operator_cmp"/>
    <keyword type="function" name="operator&lt;(std::pmr::u8string)" link="cpp/string/basic_string/operator_cmp"/>
    <keyword type="function" name="operator&lt;=(std::pmr::u8string)" link="cpp/string/basic_string/operator_cmp"/>
    <keyword type="function" name="operator&gt;(std::pmr::u8string)" link="cpp/string/basic_string/operator_cmp"/>
    <keyword type="function" name="operator&gt;=(std::pmr::u8string)" link="cpp/string/basic_string/operator_cmp"/>
    <keyword type="function" name="std::swap(std::pmr::u8string)" link="cpp/string/basic_string/swap2"/>
    <keyword type="function" name="std::erase(std::pmr::u8string)" link="cpp/string/basic_string/erase2"/>
    <keyword type="function" name="std::erase_if(std::pmr::u8string)" link="cpp/string/basic_string/erase2"/>
    <keyword type="function" name="operator&lt;&lt;(std::pmr::u8string)" link="cpp/string/basic_string/operator_ltltgtgt"/>
    <keyword type="function" name="operator&gt;&gt;(std::pmr::u8string)" link="cpp/string/basic_string/operator_ltltgtgt"/>
    <keyword type="class" name="std::hash&lt;std::pmr::u8string&gt;" link="cpp/string/basic_string/hash"/>
    <keyword type="typedef" name="std::pmr::u16string" link="cpp/string/basic_string"/>
    <keyword type="function" name="std::pmr::u16string::u16string" link="cpp/string/basic_string/basic_string"/>
    <keyword type="function" name="std::pmr::u16string::assign" link="cpp/string/basic_string/assign"/>
    <keyword type="function" name="std::pmr::u16string::operator=" link="cpp/string/basic_string/operator="/>
    <keyword type="function" name="std::pmr::u16string::get_allocator" link="cpp/string/basic_string/get_allocator"/>
    <keyword type="function" name="std::pmr::u16string::at" link="cpp/string/basic_string/at"/>
    <keyword type="function" name="std::pmr::u16string::operator[]" link="cpp/string/basic_string/operator_at"/>
    <keyword type="function" name="std::pmr::u16string::front" link="cpp/string/basic_string/front"/>
    <keyword type="function" name="std::pmr::u16string::back" link="cpp/string/basic_string/back"/>
    <keyword type="function" name="std::pmr::u16string::data" link="cpp/string/basic_string/data"/>
    <keyword type="function" name="std::pmr::u16string::c_str" link="cpp/string/basic_string/c_str"/>
    <keyword type="function" name="std::pmr::u16string::operator basic_string_view" link="cpp/string/basic_string/operator_basic_string_view"/>
    <keyword type="function" name="std::pmr::u16string::begin" link="cpp/string/basic_string/begin"/>
    <keyword type="function" name="std::pmr::u16string::cbegin" link="cpp/string/basic_string/begin"/>
    <keyword type="function" name="std::pmr::u16string::end" link="cpp/string/basic_string/end"/>
    <keyword type="function" name="std::pmr::u16string::cend" link="cpp/string/basic_string/end"/>
    <keyword type="function" name="std::pmr::u16string::rbegin" link="cpp/string/basic_string/rbegin"/>
    <keyword type="function" name="std::pmr::u16string::crbegin" link="cpp/string/basic_string/rbegin"/>
    <keyword type="function" name="std::pmr::u16string::rend" link="cpp/string/basic_string/rend"/>
    <keyword type="function" name="std::pmr::u16string::crend" link="cpp/string/basic_string/rend"/>
    <keyword type="function" name="std::pmr::u16string::empty" link="cpp/string/basic_string/empty"/>
    <keyword type="function" name="std::pmr::u16string::size" link="cpp/string/basic_string/size"/>
    <keyword type="function" name="std::pmr::u16string::length" link="cpp/string/basic_string/size"/>
    <keyword type="function" name="std::pmr::u16string::max_size" link="cpp/string/basic_string/max_size"/>
    <keyword type="function" name="std::pmr::u16string::reserve" link="cpp/string/basic_string/reserve"/>
    <keyword type="function" name="std::pmr::u16string::capacity" link="cpp/string/basic_string/capacity"/>
    <keyword type="function" name="std::pmr::u16string::shrink_to_fit" link="cpp/string/basic_string/shrink_to_fit"/>
    <keyword type="function" name="std::pmr::u16string::clear" link="cpp/string/basic_string/clear"/>
    <keyword type="function" name="std::pmr::u16string::insert" link="cpp/string/basic_string/insert"/>
    <keyword type="function" name="std::pmr::u16string::erase" link="cpp/string/basic_string/erase"/>
    <keyword type="function" name="std::pmr::u16string::push_back" link="cpp/string/basic_string/push_back"/>
    <keyword type="function" name="std::pmr::u16string::pop_back" link="cpp/string/basic_string/pop_back"/>
    <keyword type="function" name="std::pmr::u16string::append" link="cpp/string/basic_string/append"/>
    <keyword type="function" name="std::pmr::u16string::operator+=" link="cpp/string/basic_string/operator+="/>
    <keyword type="function" name="std::pmr::u16string::compare" link="cpp/string/basic_string/compare"/>
    <keyword type="function" name="std::pmr::u16string::starts_with" link="cpp/string/basic_string/starts_with"/>
    <keyword type="function" name="std::pmr::u16string::ends_with" link="cpp/string/basic_string/ends_with"/>
    <keyword type="function" name="std::pmr::u16string::replace" link="cpp/string/basic_string/replace"/>
    <keyword type="function" name="std::pmr::u16string::substr" link="cpp/string/basic_string/substr"/>
    <keyword type="function" name="std::pmr::u16string::copy" link="cpp/string/basic_string/copy"/>
    <keyword type="function" name="std::pmr::u16string::resize" link="cpp/string/basic_string/resize"/>
    <keyword type="function" name="std::pmr::u16string::swap" link="cpp/string/basic_string/swap"/>
    <keyword type="function" name="std::pmr::u16string::find" link="cpp/string/basic_string/find"/>
    <keyword type="function" name="std::pmr::u16string::rfind" link="cpp/string/basic_string/rfind"/>
    <keyword type="function" name="std::pmr::u16string::find_first_of" link="cpp/string/basic_string/find_first_of"/>
    <keyword type="function" name="std::pmr::u16string::find_first_not_of" link="cpp/string/basic_string/find_first_not_of"/>
    <keyword type="function" name="std::pmr::u16string::find_last_of" link="cpp/string/basic_string/find_last_of"/>
    <keyword type="function" name="std::pmr::u16string::find_last_not_of" link="cpp/string/basic_string/find_last_not_of"/>
    <keyword type="macro" name="std::pmr::u16string::npos" link="cpp/string/basic_string/npos"/>
    <keyword type="function" name="operator+(std::pmr::u16string)" link="cpp/string/basic_string/operator+"/>
    <keyword type="function" name="operator==(std::pmr::u16string)" link="cpp/string/basic_string/operator_cmp"/>
    <keyword type="function" name="operator!=(std::pmr::u16string)" link="cpp/string/basic_string/operator_cmp"/>
    <keyword type="function" name="operator&lt;(std::pmr::u16string)" link="cpp/string/basic_string/operator_cmp"/>
    <keyword type="function" name="operator&lt;=(std::pmr::u16string)" link="cpp/string/basic_string/operator_cmp"/>
    <keyword type="function" name="operator&gt;(std::pmr::u16string)" link="cpp/string/basic_string/operator_cmp"/>
    <keyword type="function" name="operator&gt;=(std::pmr::u16string)" link="cpp/string/basic_string/operator_cmp"/>
    <keyword type="function" name="std::swap(std::pmr::u16string)" link="cpp/string/basic_string/swap2"/>
    <keyword type="function" name="std::erase(std::pmr::u16string)" link="cpp/string/basic_string/erase2"/>
    <keyword type="function" name="std::erase_if(std::pmr::u16string)" link="cpp/string/basic_string/erase2"/>
    <keyword type="function" name="operator&lt;&lt;(std::pmr::u16string)" link="cpp/string/basic_string/operator_ltltgtgt"/>
    <keyword type="function" name="operator&gt;&gt;(std::pmr::u16string)" link="cpp/string/basic_string/operator_ltltgtgt"/>
    <keyword type="class" name="std::hash&lt;std::pmr::u16string&gt;" link="cpp/string/basic_string/hash"/>
    <keyword type="typedef" name="std::pmr::u32string" link="cpp/string/basic_string"/>
    <keyword type="function" name="std::pmr::u32string::u32string" link="cpp/string/basic_string/basic_string"/>
    <keyword type="function" name="std::pmr::u32string::assign" link="cpp/string/basic_string/assign"/>
    <keyword type="function" name="std::pmr::u32string::operator=" link="cpp/string/basic_string/operator="/>
    <keyword type="function" name="std::pmr::u32string::get_allocator" link="cpp/string/basic_string/get_allocator"/>
    <keyword type="function" name="std::pmr::u32string::at" link="cpp/string/basic_string/at"/>
    <keyword type="function" name="std::pmr::u32string::operator[]" link="cpp/string/basic_string/operator_at"/>
    <keyword type="function" name="std::pmr::u32string::front" link="cpp/string/basic_string/front"/>
    <keyword type="function" name="std::pmr::u32string::back" link="cpp/string/basic_string/back"/>
    <keyword type="function" name="std::pmr::u32string::data" link="cpp/string/basic_string/data"/>
    <keyword type="function" name="std::pmr::u32string::c_str" link="cpp/string/basic_string/c_str"/>
    <keyword type="function" name="std::pmr::u32string::operator basic_string_view" link="cpp/string/basic_string/operator_basic_string_view"/>
    <keyword type="function" name="std::pmr::u32string::begin" link="cpp/string/basic_string/begin"/>
    <keyword type="function" name="std::pmr::u32string::cbegin" link="cpp/string/basic_string/begin"/>
    <keyword type="function" name="std::pmr::u32string::end" link="cpp/string/basic_string/end"/>
    <keyword type="function" name="std::pmr::u32string::cend" link="cpp/string/basic_string/end"/>
    <keyword type="function" name="std::pmr::u32string::rbegin" link="cpp/string/basic_string/rbegin"/>
    <keyword type="function" name="std::pmr::u32string::crbegin" link="cpp/string/basic_string/rbegin"/>
    <keyword type="function" name="std::pmr::u32string::rend" link="cpp/string/basic_string/rend"/>
    <keyword type="function" name="std::pmr::u32string::crend" link="cpp/string/basic_string/rend"/>
    <keyword type="function" name="std::pmr::u32string::empty" link="cpp/string/basic_string/empty"/>
    <keyword type="function" name="std::pmr::u32string::size" link="cpp/string/basic_string/size"/>
    <keyword type="function" name="std::pmr::u32string::length" link="cpp/string/basic_string/size"/>
    <keyword type="function" name="std::pmr::u32string::max_size" link="cpp/string/basic_string/max_size"/>
    <keyword type="function" name="std::pmr::u32string::reserve" link="cpp/string/basic_string/reserve"/>
    <keyword type="function" name="std::pmr::u32string::capacity" link="cpp/string/basic_string/capacity"/>
    <keyword type="function" name="std::pmr::u32string::shrink_to_fit" link="cpp/string/basic_string/shrink_to_fit"/>
    <keyword type="function" name="std::pmr::u32string::clear" link="cpp/string/basic_string/clear"/>
    <keyword type="function" name="std::pmr::u32string::insert" link="cpp/string/basic_string/insert"/>
    <keyword type="function" name="std::pmr::u32string::erase" link="cpp/string/basic_string/erase"/>
    <keyword type="function" name="std::pmr::u32string::push_back" link="cpp/string/basic_string/push_back"/>
    <keyword type="function" name="std::pmr::u32string::pop_back" link="cpp/string/basic_string/pop_back"/>
    <keyword type="function" name="std::pmr::u32string::append" link="cpp/string/basic_string/append"/>
    <keyword type="function" name="std::pmr::u32string::operator+=" link="cpp/string/basic_string/operator+="/>
    <keyword type="function" name="std::pmr::u32string::compare" link="cpp/string/basic_string/compare"/>
    <keyword type="function" name="std::pmr::u32string::starts_with" link="cpp/string/basic_string/starts_with"/>
    <keyword type="function" name="std::pmr::u32string::ends_with" link="cpp/string/basic_string/ends_with"/>
    <keyword type="function" name="std::pmr::u32string::replace" link="cpp/string/basic_string/replace"/>
    <keyword type="function" name="std::pmr::u32string::substr" link="cpp/string/basic_string/substr"/>
    <keyword type="function" name="std::pmr::u32string::copy" link="cpp/string/basic_string/copy"/>
    <keyword type="function" name="std::pmr::u32string::resize" link="cpp/string/basic_string/resize"/>
    <keyword type="function" name="std::pmr::u32string::swap" link="cpp/string/basic_string/swap"/>
    <keyword type="function" name="std::pmr::u32string::find" link="cpp/string/basic_string/find"/>
    <keyword type="function" name="std::pmr::u32string::rfind" link="cpp/string/basic_string/rfind"/>
    <keyword type="function" name="std::pmr::u32string::find_first_of" link="cpp/string/basic_string/find_first_of"/>
    <keyword type="function" name="std::pmr::u32string::find_first_not_of" link="cpp/string/basic_string/find_first_not_of"/>
    <keyword type="function" name="std::pmr::u32string::find_last_of" link="cpp/string/basic_string/find_last_of"/>
    <keyword type="function" name="std::pmr::u32string::find_last_not_of" link="cpp/string/basic_string/find_last_not_of"/>
    <keyword type="macro" name="std::pmr::u32string::npos" link="cpp/string/basic_string/npos"/>
    <keyword type="function" name="operator+(std::pmr::u32string)" link="cpp/string/basic_string/operator+"/>
    <keyword type="function" name="operator==(std::pmr::u32string)" link="cpp/string/basic_string/operator_cmp"/>
    <keyword type="function" name="operator!=(std::pmr::u32string)" link="cpp/string/basic_string/operator_cmp"/>
    <keyword type="function" name="operator&lt;(std::pmr::u32string)" link="cpp/string/basic_string/operator_cmp"/>
    <keyword type="function" name="operator&lt;=(std::pmr::u32string)" link="cpp/string/basic_string/operator_cmp"/>
    <keyword type="function" name="operator&gt;(std::pmr::u32string)" link="cpp/string/basic_string/operator_cmp"/>
    <keyword type="function" name="operator&gt;=(std::pmr::u32string)" link="cpp/string/basic_string/operator_cmp"/>
    <keyword type="function" name="std::swap(std::pmr::u32string)" link="cpp/string/basic_string/swap2"/>
    <keyword type="function" name="std::erase(std::pmr::u32string)" link="cpp/string/basic_string/erase2"/>
    <keyword type="function" name="std::erase_if(std::pmr::u32string)" link="cpp/string/basic_string/erase2"/>
    <keyword type="function" name="operator&lt;&lt;(std::pmr::u32string)" link="cpp/string/basic_string/operator_ltltgtgt"/>
    <keyword type="function" name="operator&gt;&gt;(std::pmr::u32string)" link="cpp/string/basic_string/operator_ltltgtgt"/>
    <keyword type="class" name="std::hash&lt;std::pmr::u32string&gt;" link="cpp/string/basic_string/hash"/>
    <keyword type="function" name="std::literals::string_literals::operator&quot;&quot;s" link="cpp/string/basic_string/operator&quot;&quot;s"/>
    <keyword type="class" name="std::basic_string_view" link="cpp/string/basic_string_view"/>
    <keyword type="function" name="std::basic_string_view::basic_string_view" link="cpp/string/basic_string_view/basic_string_view"/>
    <keyword type="function" name="std::basic_string_view::operator=" link="cpp/string/basic_string_view/operator="/>
    <keyword type="function" name="std::basic_string_view::begin" link="cpp/string/basic_string_view/begin"/>
    <keyword type="function" name="std::basic_string_view::cbegin" link="cpp/string/basic_string_view/begin"/>
    <keyword type="function" name="std::basic_string_view::rbegin" link="cpp/string/basic_string_view/rbegin"/>
    <keyword type="function" name="std::basic_string_view::crbegin" link="cpp/string/basic_string_view/rbegin"/>
    <keyword type="function" name="std::basic_string_view::end" link="cpp/string/basic_string_view/end"/>
    <keyword type="function" name="std::basic_string_view::cend" link="cpp/string/basic_string_view/end"/>
    <keyword type="function" name="std::basic_string_view::rend" link="cpp/string/basic_string_view/rend"/>
    <keyword type="function" name="std::basic_string_view::crend" link="cpp/string/basic_string_view/rend"/>
    <keyword type="function" name="std::basic_string_view::operator[]" link="cpp/string/basic_string_view/operator_at"/>
    <keyword type="function" name="std::basic_string_view::at" link="cpp/string/basic_string_view/at"/>
    <keyword type="function" name="std::basic_string_view::front" link="cpp/string/basic_string_view/front"/>
    <keyword type="function" name="std::basic_string_view::back" link="cpp/string/basic_string_view/back"/>
    <keyword type="function" name="std::basic_string_view::data" link="cpp/string/basic_string_view/data"/>
    <keyword type="function" name="std::basic_string_view::size" link="cpp/string/basic_string_view/size"/>
    <keyword type="function" name="std::basic_string_view::length" link="cpp/string/basic_string_view/size"/>
    <keyword type="function" name="std::basic_string_view::max_size" link="cpp/string/basic_string_view/max_size"/>
    <keyword type="function" name="std::basic_string_view::empty" link="cpp/string/basic_string_view/empty"/>
    <keyword type="function" name="std::basic_string_view::remove_prefix" link="cpp/string/basic_string_view/remove_prefix"/>
    <keyword type="function" name="std::basic_string_view::remove_suffix" link="cpp/string/basic_string_view/remove_suffix"/>
    <keyword type="function" name="std::basic_string_view::swap" link="cpp/string/basic_string_view/swap"/>
    <keyword type="function" name="std::basic_string_view::copy" link="cpp/string/basic_string_view/copy"/>
    <keyword type="function" name="std::basic_string_view::substr" link="cpp/string/basic_string_view/substr"/>
    <keyword type="function" name="std::basic_string_view::compare" link="cpp/string/basic_string_view/compare"/>
    <keyword type="function" name="std::basic_string_view::starts_with" link="cpp/string/basic_string_view/starts_with"/>
    <keyword type="function" name="std::basic_string_view::ends_with" link="cpp/string/basic_string_view/ends_with"/>
    <keyword type="function" name="std::basic_string_view::find" link="cpp/string/basic_string_view/find"/>
    <keyword type="function" name="std::basic_string_view::rfind" link="cpp/string/basic_string_view/rfind"/>
    <keyword type="function" name="std::basic_string_view::find_first_of" link="cpp/string/basic_string_view/find_first_of"/>
    <keyword type="function" name="std::basic_string_view::find_last_of" link="cpp/string/basic_string_view/find_last_of"/>
    <keyword type="function" name="std::basic_string_view::find_first_not_of" link="cpp/string/basic_string_view/find_first_not_of"/>
    <keyword type="function" name="std::basic_string_view::find_last_not_of" link="cpp/string/basic_string_view/find_last_not_of"/>
    <keyword type="macro" name="std::basic_string_view::npos" link="cpp/string/basic_string_view/npos"/>
    <keyword type="function" name="operator==(std::basic_string_view)" link="cpp/string/basic_string_view/operator_cmp"/>
    <keyword type="function" name="operator!=(std::basic_string_view)" link="cpp/string/basic_string_view/operator_cmp"/>
    <keyword type="function" name="operator&lt;(std::basic_string_view)" link="cpp/string/basic_string_view/operator_cmp"/>
    <keyword type="function" name="operator&lt;=(std::basic_string_view)" link="cpp/string/basic_string_view/operator_cmp"/>
    <keyword type="function" name="operator&gt;(std::basic_string_view)" link="cpp/string/basic_string_view/operator_cmp"/>
    <keyword type="function" name="operator&gt;=(std::basic_string_view)" link="cpp/string/basic_string_view/operator_cmp"/>
    <keyword type="function" name="std::begin(std::basic_string_view)" link="cpp/string/basic_string_view/begin_end_nonmem"/>
    <keyword type="function" name="std::end(std::basic_string_view)" link="cpp/string/basic_string_view/begin_end_nonmem"/>
    <keyword type="function" name="operator&lt;&lt;(std::basic_string_view)" link="cpp/string/basic_string_view/operator_ltlt"/>
    <keyword type="class" name="std::hash&lt;std::basic_string_view&gt;" link="cpp/string/basic_string_view/hash"/>
    <keyword type="typedef" name="std::string_view" link="cpp/string/basic_string_view"/>
    <keyword type="function" name="std::string_view::string_view" link="cpp/string/basic_string_view/basic_string_view"/>
    <keyword type="function" name="std::string_view::operator=" link="cpp/string/basic_string_view/operator="/>
    <keyword type="function" name="std::string_view::begin" link="cpp/string/basic_string_view/begin"/>
    <keyword type="function" name="std::string_view::cbegin" link="cpp/string/basic_string_view/begin"/>
    <keyword type="function" name="std::string_view::rbegin" link="cpp/string/basic_string_view/rbegin"/>
    <keyword type="function" name="std::string_view::crbegin" link="cpp/string/basic_string_view/rbegin"/>
    <keyword type="function" name="std::string_view::end" link="cpp/string/basic_string_view/end"/>
    <keyword type="function" name="std::string_view::cend" link="cpp/string/basic_string_view/end"/>
    <keyword type="function" name="std::string_view::rend" link="cpp/string/basic_string_view/rend"/>
    <keyword type="function" name="std::string_view::crend" link="cpp/string/basic_string_view/rend"/>
    <keyword type="function" name="std::string_view::operator[]" link="cpp/string/basic_string_view/operator_at"/>
    <keyword type="function" name="std::string_view::at" link="cpp/string/basic_string_view/at"/>
    <keyword type="function" name="std::string_view::front" link="cpp/string/basic_string_view/front"/>
    <keyword type="function" name="std::string_view::back" link="cpp/string/basic_string_view/back"/>
    <keyword type="function" name="std::string_view::data" link="cpp/string/basic_string_view/data"/>
    <keyword type="function" name="std::string_view::size" link="cpp/string/basic_string_view/size"/>
    <keyword type="function" name="std::string_view::length" link="cpp/string/basic_string_view/size"/>
    <keyword type="function" name="std::string_view::max_size" link="cpp/string/basic_string_view/max_size"/>
    <keyword type="function" name="std::string_view::empty" link="cpp/string/basic_string_view/empty"/>
    <keyword type="function" name="std::string_view::remove_prefix" link="cpp/string/basic_string_view/remove_prefix"/>
    <keyword type="function" name="std::string_view::remove_suffix" link="cpp/string/basic_string_view/remove_suffix"/>
    <keyword type="function" name="std::string_view::swap" link="cpp/string/basic_string_view/swap"/>
    <keyword type="function" name="std::string_view::copy" link="cpp/string/basic_string_view/copy"/>
    <keyword type="function" name="std::string_view::substr" link="cpp/string/basic_string_view/substr"/>
    <keyword type="function" name="std::string_view::compare" link="cpp/string/basic_string_view/compare"/>
    <keyword type="function" name="std::string_view::starts_with" link="cpp/string/basic_string_view/starts_with"/>
    <keyword type="function" name="std::string_view::ends_with" link="cpp/string/basic_string_view/ends_with"/>
    <keyword type="function" name="std::string_view::find" link="cpp/string/basic_string_view/find"/>
    <keyword type="function" name="std::string_view::rfind" link="cpp/string/basic_string_view/rfind"/>
    <keyword type="function" name="std::string_view::find_first_of" link="cpp/string/basic_string_view/find_first_of"/>
    <keyword type="function" name="std::string_view::find_last_of" link="cpp/string/basic_string_view/find_last_of"/>
    <keyword type="function" name="std::string_view::find_first_not_of" link="cpp/string/basic_string_view/find_first_not_of"/>
    <keyword type="function" name="std::string_view::find_last_not_of" link="cpp/string/basic_string_view/find_last_not_of"/>
    <keyword type="macro" name="std::string_view::npos" link="cpp/string/basic_string_view/npos"/>
    <keyword type="function" name="operator==(std::string_view)" link="cpp/string/basic_string_view/operator_cmp"/>
    <keyword type="function" name="operator!=(std::string_view)" link="cpp/string/basic_string_view/operator_cmp"/>
    <keyword type="function" name="operator&lt;(std::string_view)" link="cpp/string/basic_string_view/operator_cmp"/>
    <keyword type="function" name="operator&lt;=(std::string_view)" link="cpp/string/basic_string_view/operator_cmp"/>
    <keyword type="function" name="operator&gt;(std::string_view)" link="cpp/string/basic_string_view/operator_cmp"/>
    <keyword type="function" name="operator&gt;=(std::string_view)" link="cpp/string/basic_string_view/operator_cmp"/>
    <keyword type="function" name="std::begin(std::string_view)" link="cpp/string/basic_string_view/begin_end_nonmem"/>
    <keyword type="function" name="std::end(std::string_view)" link="cpp/string/basic_string_view/begin_end_nonmem"/>
    <keyword type="function" name="operator&lt;&lt;(std::string_view)" link="cpp/string/basic_string_view/operator_ltlt"/>
    <keyword type="class" name="std::hash&lt;std::string_view&gt;" link="cpp/string/basic_string_view/hash"/>
    <keyword type="typedef" name="std::wstring_view" link="cpp/string/basic_string_view"/>
    <keyword type="function" name="std::wstring_view::wstring_view" link="cpp/string/basic_string_view/basic_string_view"/>
    <keyword type="function" name="std::wstring_view::operator=" link="cpp/string/basic_string_view/operator="/>
    <keyword type="function" name="std::wstring_view::begin" link="cpp/string/basic_string_view/begin"/>
    <keyword type="function" name="std::wstring_view::cbegin" link="cpp/string/basic_string_view/begin"/>
    <keyword type="function" name="std::wstring_view::rbegin" link="cpp/string/basic_string_view/rbegin"/>
    <keyword type="function" name="std::wstring_view::crbegin" link="cpp/string/basic_string_view/rbegin"/>
    <keyword type="function" name="std::wstring_view::end" link="cpp/string/basic_string_view/end"/>
    <keyword type="function" name="std::wstring_view::cend" link="cpp/string/basic_string_view/end"/>
    <keyword type="function" name="std::wstring_view::rend" link="cpp/string/basic_string_view/rend"/>
    <keyword type="function" name="std::wstring_view::crend" link="cpp/string/basic_string_view/rend"/>
    <keyword type="function" name="std::wstring_view::operator[]" link="cpp/string/basic_string_view/operator_at"/>
    <keyword type="function" name="std::wstring_view::at" link="cpp/string/basic_string_view/at"/>
    <keyword type="function" name="std::wstring_view::front" link="cpp/string/basic_string_view/front"/>
    <keyword type="function" name="std::wstring_view::back" link="cpp/string/basic_string_view/back"/>
    <keyword type="function" name="std::wstring_view::data" link="cpp/string/basic_string_view/data"/>
    <keyword type="function" name="std::wstring_view::size" link="cpp/string/basic_string_view/size"/>
    <keyword type="function" name="std::wstring_view::length" link="cpp/string/basic_string_view/size"/>
    <keyword type="function" name="std::wstring_view::max_size" link="cpp/string/basic_string_view/max_size"/>
    <keyword type="function" name="std::wstring_view::empty" link="cpp/string/basic_string_view/empty"/>
    <keyword type="function" name="std::wstring_view::remove_prefix" link="cpp/string/basic_string_view/remove_prefix"/>
    <keyword type="function" name="std::wstring_view::remove_suffix" link="cpp/string/basic_string_view/remove_suffix"/>
    <keyword type="function" name="std::wstring_view::swap" link="cpp/string/basic_string_view/swap"/>
    <keyword type="function" name="std::wstring_view::copy" link="cpp/string/basic_string_view/copy"/>
    <keyword type="function" name="std::wstring_view::substr" link="cpp/string/basic_string_view/substr"/>
    <keyword type="function" name="std::wstring_view::compare" link="cpp/string/basic_string_view/compare"/>
    <keyword type="function" name="std::wstring_view::starts_with" link="cpp/string/basic_string_view/starts_with"/>
    <keyword type="function" name="std::wstring_view::ends_with" link="cpp/string/basic_string_view/ends_with"/>
    <keyword type="function" name="std::wstring_view::find" link="cpp/string/basic_string_view/find"/>
    <keyword type="function" name="std::wstring_view::rfind" link="cpp/string/basic_string_view/rfind"/>
    <keyword type="function" name="std::wstring_view::find_first_of" link="cpp/string/basic_string_view/find_first_of"/>
    <keyword type="function" name="std::wstring_view::find_last_of" link="cpp/string/basic_string_view/find_last_of"/>
    <keyword type="function" name="std::wstring_view::find_first_not_of" link="cpp/string/basic_string_view/find_first_not_of"/>
    <keyword type="function" name="std::wstring_view::find_last_not_of" link="cpp/string/basic_string_view/find_last_not_of"/>
    <keyword type="macro" name="std::wstring_view::npos" link="cpp/string/basic_string_view/npos"/>
    <keyword type="function" name="operator==(std::wstring_view)" link="cpp/string/basic_string_view/operator_cmp"/>
    <keyword type="function" name="operator!=(std::wstring_view)" link="cpp/string/basic_string_view/operator_cmp"/>
    <keyword type="function" name="operator&lt;(std::wstring_view)" link="cpp/string/basic_string_view/operator_cmp"/>
    <keyword type="function" name="operator&lt;=(std::wstring_view)" link="cpp/string/basic_string_view/operator_cmp"/>
    <keyword type="function" name="operator&gt;(std::wstring_view)" link="cpp/string/basic_string_view/operator_cmp"/>
    <keyword type="function" name="operator&gt;=(std::wstring_view)" link="cpp/string/basic_string_view/operator_cmp"/>
    <keyword type="function" name="std::begin(std::wstring_view)" link="cpp/string/basic_string_view/begin_end_nonmem"/>
    <keyword type="function" name="std::end(std::wstring_view)" link="cpp/string/basic_string_view/begin_end_nonmem"/>
    <keyword type="function" name="operator&lt;&lt;(std::wstring_view)" link="cpp/string/basic_string_view/operator_ltlt"/>
    <keyword type="class" name="std::hash&lt;std::wstring_view&gt;" link="cpp/string/basic_string_view/hash"/>
    <keyword type="typedef" name="std::u8string_view" link="cpp/string/basic_string_view"/>
    <keyword type="function" name="std::u8string_view::u8string_view" link="cpp/string/basic_string_view/basic_string_view"/>
    <keyword type="function" name="std::u8string_view::operator=" link="cpp/string/basic_string_view/operator="/>
    <keyword type="function" name="std::u8string_view::begin" link="cpp/string/basic_string_view/begin"/>
    <keyword type="function" name="std::u8string_view::cbegin" link="cpp/string/basic_string_view/begin"/>
    <keyword type="function" name="std::u8string_view::rbegin" link="cpp/string/basic_string_view/rbegin"/>
    <keyword type="function" name="std::u8string_view::crbegin" link="cpp/string/basic_string_view/rbegin"/>
    <keyword type="function" name="std::u8string_view::end" link="cpp/string/basic_string_view/end"/>
    <keyword type="function" name="std::u8string_view::cend" link="cpp/string/basic_string_view/end"/>
    <keyword type="function" name="std::u8string_view::rend" link="cpp/string/basic_string_view/rend"/>
    <keyword type="function" name="std::u8string_view::crend" link="cpp/string/basic_string_view/rend"/>
    <keyword type="function" name="std::u8string_view::operator[]" link="cpp/string/basic_string_view/operator_at"/>
    <keyword type="function" name="std::u8string_view::at" link="cpp/string/basic_string_view/at"/>
    <keyword type="function" name="std::u8string_view::front" link="cpp/string/basic_string_view/front"/>
    <keyword type="function" name="std::u8string_view::back" link="cpp/string/basic_string_view/back"/>
    <keyword type="function" name="std::u8string_view::data" link="cpp/string/basic_string_view/data"/>
    <keyword type="function" name="std::u8string_view::size" link="cpp/string/basic_string_view/size"/>
    <keyword type="function" name="std::u8string_view::length" link="cpp/string/basic_string_view/size"/>
    <keyword type="function" name="std::u8string_view::max_size" link="cpp/string/basic_string_view/max_size"/>
    <keyword type="function" name="std::u8string_view::empty" link="cpp/string/basic_string_view/empty"/>
    <keyword type="function" name="std::u8string_view::remove_prefix" link="cpp/string/basic_string_view/remove_prefix"/>
    <keyword type="function" name="std::u8string_view::remove_suffix" link="cpp/string/basic_string_view/remove_suffix"/>
    <keyword type="function" name="std::u8string_view::swap" link="cpp/string/basic_string_view/swap"/>
    <keyword type="function" name="std::u8string_view::copy" link="cpp/string/basic_string_view/copy"/>
    <keyword type="function" name="std::u8string_view::substr" link="cpp/string/basic_string_view/substr"/>
    <keyword type="function" name="std::u8string_view::compare" link="cpp/string/basic_string_view/compare"/>
    <keyword type="function" name="std::u8string_view::starts_with" link="cpp/string/basic_string_view/starts_with"/>
    <keyword type="function" name="std::u8string_view::ends_with" link="cpp/string/basic_string_view/ends_with"/>
    <keyword type="function" name="std::u8string_view::find" link="cpp/string/basic_string_view/find"/>
    <keyword type="function" name="std::u8string_view::rfind" link="cpp/string/basic_string_view/rfind"/>
    <keyword type="function" name="std::u8string_view::find_first_of" link="cpp/string/basic_string_view/find_first_of"/>
    <keyword type="function" name="std::u8string_view::find_last_of" link="cpp/string/basic_string_view/find_last_of"/>
    <keyword type="function" name="std::u8string_view::find_first_not_of" link="cpp/string/basic_string_view/find_first_not_of"/>
    <keyword type="function" name="std::u8string_view::find_last_not_of" link="cpp/string/basic_string_view/find_last_not_of"/>
    <keyword type="macro" name="std::u8string_view::npos" link="cpp/string/basic_string_view/npos"/>
    <keyword type="function" name="operator==(std::u8string_view)" link="cpp/string/basic_string_view/operator_cmp"/>
    <keyword type="function" name="operator!=(std::u8string_view)" link="cpp/string/basic_string_view/operator_cmp"/>
    <keyword type="function" name="operator&lt;(std::u8string_view)" link="cpp/string/basic_string_view/operator_cmp"/>
    <keyword type="function" name="operator&lt;=(std::u8string_view)" link="cpp/string/basic_string_view/operator_cmp"/>
    <keyword type="function" name="operator&gt;(std::u8string_view)" link="cpp/string/basic_string_view/operator_cmp"/>
    <keyword type="function" name="operator&gt;=(std::u8string_view)" link="cpp/string/basic_string_view/operator_cmp"/>
    <keyword type="function" name="std::begin(std::u8string_view)" link="cpp/string/basic_string_view/begin_end_nonmem"/>
    <keyword type="function" name="std::end(std::u8string_view)" link="cpp/string/basic_string_view/begin_end_nonmem"/>
    <keyword type="function" name="operator&lt;&lt;(std::u8string_view)" link="cpp/string/basic_string_view/operator_ltlt"/>
    <keyword type="class" name="std::hash&lt;std::u8string_view&gt;" link="cpp/string/basic_string_view/hash"/>
    <keyword type="typedef" name="std::u16string_view" link="cpp/string/basic_string_view"/>
    <keyword type="function" name="std::u16string_view::u16string_view" link="cpp/string/basic_string_view/basic_string_view"/>
    <keyword type="function" name="std::u16string_view::operator=" link="cpp/string/basic_string_view/operator="/>
    <keyword type="function" name="std::u16string_view::begin" link="cpp/string/basic_string_view/begin"/>
    <keyword type="function" name="std::u16string_view::cbegin" link="cpp/string/basic_string_view/begin"/>
    <keyword type="function" name="std::u16string_view::rbegin" link="cpp/string/basic_string_view/rbegin"/>
    <keyword type="function" name="std::u16string_view::crbegin" link="cpp/string/basic_string_view/rbegin"/>
    <keyword type="function" name="std::u16string_view::end" link="cpp/string/basic_string_view/end"/>
    <keyword type="function" name="std::u16string_view::cend" link="cpp/string/basic_string_view/end"/>
    <keyword type="function" name="std::u16string_view::rend" link="cpp/string/basic_string_view/rend"/>
    <keyword type="function" name="std::u16string_view::crend" link="cpp/string/basic_string_view/rend"/>
    <keyword type="function" name="std::u16string_view::operator[]" link="cpp/string/basic_string_view/operator_at"/>
    <keyword type="function" name="std::u16string_view::at" link="cpp/string/basic_string_view/at"/>
    <keyword type="function" name="std::u16string_view::front" link="cpp/string/basic_string_view/front"/>
    <keyword type="function" name="std::u16string_view::back" link="cpp/string/basic_string_view/back"/>
    <keyword type="function" name="std::u16string_view::data" link="cpp/string/basic_string_view/data"/>
    <keyword type="function" name="std::u16string_view::size" link="cpp/string/basic_string_view/size"/>
    <keyword type="function" name="std::u16string_view::length" link="cpp/string/basic_string_view/size"/>
    <keyword type="function" name="std::u16string_view::max_size" link="cpp/string/basic_string_view/max_size"/>
    <keyword type="function" name="std::u16string_view::empty" link="cpp/string/basic_string_view/empty"/>
    <keyword type="function" name="std::u16string_view::remove_prefix" link="cpp/string/basic_string_view/remove_prefix"/>
    <keyword type="function" name="std::u16string_view::remove_suffix" link="cpp/string/basic_string_view/remove_suffix"/>
    <keyword type="function" name="std::u16string_view::swap" link="cpp/string/basic_string_view/swap"/>
    <keyword type="function" name="std::u16string_view::copy" link="cpp/string/basic_string_view/copy"/>
    <keyword type="function" name="std::u16string_view::substr" link="cpp/string/basic_string_view/substr"/>
    <keyword type="function" name="std::u16string_view::compare" link="cpp/string/basic_string_view/compare"/>
    <keyword type="function" name="std::u16string_view::starts_with" link="cpp/string/basic_string_view/starts_with"/>
    <keyword type="function" name="std::u16string_view::ends_with" link="cpp/string/basic_string_view/ends_with"/>
    <keyword type="function" name="std::u16string_view::find" link="cpp/string/basic_string_view/find"/>
    <keyword type="function" name="std::u16string_view::rfind" link="cpp/string/basic_string_view/rfind"/>
    <keyword type="function" name="std::u16string_view::find_first_of" link="cpp/string/basic_string_view/find_first_of"/>
    <keyword type="function" name="std::u16string_view::find_last_of" link="cpp/string/basic_string_view/find_last_of"/>
    <keyword type="function" name="std::u16string_view::find_first_not_of" link="cpp/string/basic_string_view/find_first_not_of"/>
    <keyword type="function" name="std::u16string_view::find_last_not_of" link="cpp/string/basic_string_view/find_last_not_of"/>
    <keyword type="macro" name="std::u16string_view::npos" link="cpp/string/basic_string_view/npos"/>
    <keyword type="function" name="operator==(std::u16string_view)" link="cpp/string/basic_string_view/operator_cmp"/>
    <keyword type="function" name="operator!=(std::u16string_view)" link="cpp/string/basic_string_view/operator_cmp"/>
    <keyword type="function" name="operator&lt;(std::u16string_view)" link="cpp/string/basic_string_view/operator_cmp"/>
    <keyword type="function" name="operator&lt;=(std::u16string_view)" link="cpp/string/basic_string_view/operator_cmp"/>
    <keyword type="function" name="operator&gt;(std::u16string_view)" link="cpp/string/basic_string_view/operator_cmp"/>
    <keyword type="function" name="operator&gt;=(std::u16string_view)" link="cpp/string/basic_string_view/operator_cmp"/>
    <keyword type="function" name="std::begin(std::u16string_view)" link="cpp/string/basic_string_view/begin_end_nonmem"/>
    <keyword type="function" name="std::end(std::u16string_view)" link="cpp/string/basic_string_view/begin_end_nonmem"/>
    <keyword type="function" name="operator&lt;&lt;(std::u16string_view)" link="cpp/string/basic_string_view/operator_ltlt"/>
    <keyword type="class" name="std::hash&lt;std::u16string_view&gt;" link="cpp/string/basic_string_view/hash"/>
    <keyword type="typedef" name="std::u32string_view" link="cpp/string/basic_string_view"/>
    <keyword type="function" name="std::u32string_view::u32string_view" link="cpp/string/basic_string_view/basic_string_view"/>
    <keyword type="function" name="std::u32string_view::operator=" link="cpp/string/basic_string_view/operator="/>
    <keyword type="function" name="std::u32string_view::begin" link="cpp/string/basic_string_view/begin"/>
    <keyword type="function" name="std::u32string_view::cbegin" link="cpp/string/basic_string_view/begin"/>
    <keyword type="function" name="std::u32string_view::rbegin" link="cpp/string/basic_string_view/rbegin"/>
    <keyword type="function" name="std::u32string_view::crbegin" link="cpp/string/basic_string_view/rbegin"/>
    <keyword type="function" name="std::u32string_view::end" link="cpp/string/basic_string_view/end"/>
    <keyword type="function" name="std::u32string_view::cend" link="cpp/string/basic_string_view/end"/>
    <keyword type="function" name="std::u32string_view::rend" link="cpp/string/basic_string_view/rend"/>
    <keyword type="function" name="std::u32string_view::crend" link="cpp/string/basic_string_view/rend"/>
    <keyword type="function" name="std::u32string_view::operator[]" link="cpp/string/basic_string_view/operator_at"/>
    <keyword type="function" name="std::u32string_view::at" link="cpp/string/basic_string_view/at"/>
    <keyword type="function" name="std::u32string_view::front" link="cpp/string/basic_string_view/front"/>
    <keyword type="function" name="std::u32string_view::back" link="cpp/string/basic_string_view/back"/>
    <keyword type="function" name="std::u32string_view::data" link="cpp/string/basic_string_view/data"/>
    <keyword type="function" name="std::u32string_view::size" link="cpp/string/basic_string_view/size"/>
    <keyword type="function" name="std::u32string_view::length" link="cpp/string/basic_string_view/size"/>
    <keyword type="function" name="std::u32string_view::max_size" link="cpp/string/basic_string_view/max_size"/>
    <keyword type="function" name="std::u32string_view::empty" link="cpp/string/basic_string_view/empty"/>
    <keyword type="function" name="std::u32string_view::remove_prefix" link="cpp/string/basic_string_view/remove_prefix"/>
    <keyword type="function" name="std::u32string_view::remove_suffix" link="cpp/string/basic_string_view/remove_suffix"/>
    <keyword type="function" name="std::u32string_view::swap" link="cpp/string/basic_string_view/swap"/>
    <keyword type="function" name="std::u32string_view::copy" link="cpp/string/basic_string_view/copy"/>
    <keyword type="function" name="std::u32string_view::substr" link="cpp/string/basic_string_view/substr"/>
    <keyword type="function" name="std::u32string_view::compare" link="cpp/string/basic_string_view/compare"/>
    <keyword type="function" name="std::u32string_view::starts_with" link="cpp/string/basic_string_view/starts_with"/>
    <keyword type="function" name="std::u32string_view::ends_with" link="cpp/string/basic_string_view/ends_with"/>
    <keyword type="function" name="std::u32string_view::find" link="cpp/string/basic_string_view/find"/>
    <keyword type="function" name="std::u32string_view::rfind" link="cpp/string/basic_string_view/rfind"/>
    <keyword type="function" name="std::u32string_view::find_first_of" link="cpp/string/basic_string_view/find_first_of"/>
    <keyword type="function" name="std::u32string_view::find_last_of" link="cpp/string/basic_string_view/find_last_of"/>
    <keyword type="function" name="std::u32string_view::find_first_not_of" link="cpp/string/basic_string_view/find_first_not_of"/>
    <keyword type="function" name="std::u32string_view::find_last_not_of" link="cpp/string/basic_string_view/find_last_not_of"/>
    <keyword type="macro" name="std::u32string_view::npos" link="cpp/string/basic_string_view/npos"/>
    <keyword type="function" name="operator==(std::u32string_view)" link="cpp/string/basic_string_view/operator_cmp"/>
    <keyword type="function" name="operator!=(std::u32string_view)" link="cpp/string/basic_string_view/operator_cmp"/>
    <keyword type="function" name="operator&lt;(std::u32string_view)" link="cpp/string/basic_string_view/operator_cmp"/>
    <keyword type="function" name="operator&lt;=(std::u32string_view)" link="cpp/string/basic_string_view/operator_cmp"/>
    <keyword type="function" name="operator&gt;(std::u32string_view)" link="cpp/string/basic_string_view/operator_cmp"/>
    <keyword type="function" name="operator&gt;=(std::u32string_view)" link="cpp/string/basic_string_view/operator_cmp"/>
    <keyword type="function" name="std::begin(std::u32string_view)" link="cpp/string/basic_string_view/begin_end_nonmem"/>
    <keyword type="function" name="std::end(std::u32string_view)" link="cpp/string/basic_string_view/begin_end_nonmem"/>
    <keyword type="function" name="operator&lt;&lt;(std::u32string_view)" link="cpp/string/basic_string_view/operator_ltlt"/>
    <keyword type="class" name="std::hash&lt;std::u32string_view&gt;" link="cpp/string/basic_string_view/hash"/>
    <keyword type="function" name="std::literals::string_view_literals::operator&quot;&quot;sv" link="cpp/string/basic_string_view/operator&quot;&quot;sv"/>
    <keyword type="function" name="std::getline" link="cpp/string/basic_string/getline"/>
    <keyword type="function" name="std::stoi" link="cpp/string/basic_string/stol"/>
    <keyword type="function" name="std::stol" link="cpp/string/basic_string/stol"/>
    <keyword type="function" name="std::stoll" link="cpp/string/basic_string/stol"/>
    <keyword type="function" name="std::stoul" link="cpp/string/basic_string/stoul"/>
    <keyword type="function" name="std::stoull" link="cpp/string/basic_string/stoul"/>
    <keyword type="function" name="std::stof" link="cpp/string/basic_string/stof"/>
    <keyword type="function" name="std::stod" link="cpp/string/basic_string/stof"/>
    <keyword type="function" name="std::stold" link="cpp/string/basic_string/stof"/>
    <keyword type="function" name="std::to_string" link="cpp/string/basic_string/to_string"/>
    <keyword type="function" name="std::to_wstring" link="cpp/string/basic_string/to_wstring"/>
    <keyword type="class" name="std::char_traits" link="cpp/string/char_traits"/>
    <keyword type="function" name="std::char_traits::assign" link="cpp/string/char_traits/assign"/>
    <keyword type="function" name="std::char_traits::eq" link="cpp/string/char_traits/cmp"/>
    <keyword type="function" name="std::char_traits::lt" link="cpp/string/char_traits/cmp"/>
    <keyword type="function" name="std::char_traits::move" link="cpp/string/char_traits/move"/>
    <keyword type="function" name="std::char_traits::copy" link="cpp/string/char_traits/copy"/>
    <keyword type="function" name="std::char_traits::compare" link="cpp/string/char_traits/compare"/>
    <keyword type="function" name="std::char_traits::length" link="cpp/string/char_traits/length"/>
    <keyword type="function" name="std::char_traits::find" link="cpp/string/char_traits/find"/>
    <keyword type="function" name="std::char_traits::to_char_type" link="cpp/string/char_traits/to_char_type"/>
    <keyword type="function" name="std::char_traits::to_int_type" link="cpp/string/char_traits/to_int_type"/>
    <keyword type="function" name="std::char_traits::eq_int_type" link="cpp/string/char_traits/eq_int_type"/>
    <keyword type="function" name="std::char_traits::eof" link="cpp/string/char_traits/eof"/>
    <keyword type="function" name="std::char_traits::not_eof" link="cpp/string/char_traits/not_eof"/>
    <keyword type="class" name="std::array" link="cpp/container/array"/>
    <keyword type="function" name="std::array::at" link="cpp/container/array/at"/>
    <keyword type="function" name="std::array::operator[]" link="cpp/container/array/operator_at"/>
    <keyword type="function" name="std::array::front" link="cpp/container/array/front"/>
    <keyword type="function" name="std::array::back" link="cpp/container/array/back"/>
    <keyword type="function" name="std::array::data" link="cpp/container/array/data"/>
    <keyword type="function" name="std::array::begin" link="cpp/container/array/begin"/>
    <keyword type="function" name="std::array::cbegin" link="cpp/container/array/begin"/>
    <keyword type="function" name="std::array::end" link="cpp/container/array/end"/>
    <keyword type="function" name="std::array::cend" link="cpp/container/array/end"/>
    <keyword type="function" name="std::array::rbegin" link="cpp/container/array/rbegin"/>
    <keyword type="function" name="std::array::crbegin" link="cpp/container/array/rbegin"/>
    <keyword type="function" name="std::array::rend" link="cpp/container/array/rend"/>
    <keyword type="function" name="std::array::crend" link="cpp/container/array/rend"/>
    <keyword type="function" name="std::array::empty" link="cpp/container/array/empty"/>
    <keyword type="function" name="std::array::size" link="cpp/container/array/size"/>
    <keyword type="function" name="std::array::max_size" link="cpp/container/array/max_size"/>
    <keyword type="function" name="std::array::fill" link="cpp/container/array/fill"/>
    <keyword type="function" name="std::array::swap" link="cpp/container/array/swap"/>
    <keyword type="function" name="operator==(std::array)" link="cpp/container/array/operator_cmp"/>
    <keyword type="function" name="operator!=(std::array)" link="cpp/container/array/operator_cmp"/>
    <keyword type="function" name="operator&lt;(std::array)" link="cpp/container/array/operator_cmp"/>
    <keyword type="function" name="operator&lt;=(std::array)" link="cpp/container/array/operator_cmp"/>
    <keyword type="function" name="operator&gt;(std::array)" link="cpp/container/array/operator_cmp"/>
    <keyword type="function" name="operator&gt;=(std::array)" link="cpp/container/array/operator_cmp"/>
    <keyword type="function" name="std::swap(std::array)" link="cpp/container/array/swap2"/>
    <keyword type="function" name="std::get(std::array)" link="cpp/container/array/get"/>
    <keyword type="class" name="std::tuple_size&lt;std::array&gt;" link="cpp/container/array/tuple_size"/>
    <keyword type="class" name="std::tuple_element&lt;std::array&gt;" link="cpp/container/array/tuple_element"/>
    <keyword type="class" name="std::vector" link="cpp/container/vector"/>
    <keyword type="function" name="std::vector::vector" link="cpp/container/vector/vector"/>
    <keyword type="function" name="std::vector::~vector" link="cpp/container/vector/~vector"/>
    <keyword type="function" name="std::vector::operator=" link="cpp/container/vector/operator="/>
    <keyword type="function" name="std::vector::assign" link="cpp/container/vector/assign"/>
    <keyword type="function" name="std::vector::get_allocator" link="cpp/container/vector/get_allocator"/>
    <keyword type="function" name="std::vector::at" link="cpp/container/vector/at"/>
    <keyword type="function" name="std::vector::operator[]" link="cpp/container/vector/operator_at"/>
    <keyword type="function" name="std::vector::front" link="cpp/container/vector/front"/>
    <keyword type="function" name="std::vector::back" link="cpp/container/vector/back"/>
    <keyword type="function" name="std::vector::data" link="cpp/container/vector/data"/>
    <keyword type="function" name="std::vector::begin" link="cpp/container/vector/begin"/>
    <keyword type="function" name="std::vector::cbegin" link="cpp/container/vector/begin"/>
    <keyword type="function" name="std::vector::end" link="cpp/container/vector/end"/>
    <keyword type="function" name="std::vector::cend" link="cpp/container/vector/end"/>
    <keyword type="function" name="std::vector::rbegin" link="cpp/container/vector/rbegin"/>
    <keyword type="function" name="std::vector::crbegin" link="cpp/container/vector/rbegin"/>
    <keyword type="function" name="std::vector::rend" link="cpp/container/vector/rend"/>
    <keyword type="function" name="std::vector::crend" link="cpp/container/vector/rend"/>
    <keyword type="function" name="std::vector::empty" link="cpp/container/vector/empty"/>
    <keyword type="function" name="std::vector::size" link="cpp/container/vector/size"/>
    <keyword type="function" name="std::vector::max_size" link="cpp/container/vector/max_size"/>
    <keyword type="function" name="std::vector::reserve" link="cpp/container/vector/reserve"/>
    <keyword type="function" name="std::vector::capacity" link="cpp/container/vector/capacity"/>
    <keyword type="function" name="std::vector::shrink_to_fit" link="cpp/container/vector/shrink_to_fit"/>
    <keyword type="function" name="std::vector::clear" link="cpp/container/vector/clear"/>
    <keyword type="function" name="std::vector::insert" link="cpp/container/vector/insert"/>
    <keyword type="function" name="std::vector::emplace" link="cpp/container/vector/emplace"/>
    <keyword type="function" name="std::vector::erase" link="cpp/container/vector/erase"/>
    <keyword type="function" name="std::vector::push_back" link="cpp/container/vector/push_back"/>
    <keyword type="function" name="std::vector::emplace_back" link="cpp/container/vector/emplace_back"/>
    <keyword type="function" name="std::vector::pop_back" link="cpp/container/vector/pop_back"/>
    <keyword type="function" name="std::vector::resize" link="cpp/container/vector/resize"/>
    <keyword type="function" name="std::vector::swap" link="cpp/container/vector/swap"/>
    <keyword type="function" name="operator==(std::vector)" link="cpp/container/vector/operator_cmp"/>
    <keyword type="function" name="operator!=(std::vector)" link="cpp/container/vector/operator_cmp"/>
    <keyword type="function" name="operator&lt;(std::vector)" link="cpp/container/vector/operator_cmp"/>
    <keyword type="function" name="operator&lt;=(std::vector)" link="cpp/container/vector/operator_cmp"/>
    <keyword type="function" name="operator&gt;(std::vector)" link="cpp/container/vector/operator_cmp"/>
    <keyword type="function" name="operator&gt;=(std::vector)" link="cpp/container/vector/operator_cmp"/>
    <keyword type="function" name="std::swap(std::vector)" link="cpp/container/vector/swap2"/>
    <keyword type="function" name="std::erase(std::vector)" link="cpp/container/vector/erase2"/>
    <keyword type="function" name="std::erase_if(std::vector)" link="cpp/container/vector/erase2"/>
    <keyword type="typedef" name="std::pmr::vector" link="cpp/container/vector"/>
    <keyword type="function" name="std::pmr::vector::vector" link="cpp/container/vector/vector"/>
    <keyword type="function" name="std::pmr::vector::~vector" link="cpp/container/vector/~vector"/>
    <keyword type="function" name="std::pmr::vector::operator=" link="cpp/container/vector/operator="/>
    <keyword type="function" name="std::pmr::vector::assign" link="cpp/container/vector/assign"/>
    <keyword type="function" name="std::pmr::vector::get_allocator" link="cpp/container/vector/get_allocator"/>
    <keyword type="function" name="std::pmr::vector::at" link="cpp/container/vector/at"/>
    <keyword type="function" name="std::pmr::vector::operator[]" link="cpp/container/vector/operator_at"/>
    <keyword type="function" name="std::pmr::vector::front" link="cpp/container/vector/front"/>
    <keyword type="function" name="std::pmr::vector::back" link="cpp/container/vector/back"/>
    <keyword type="function" name="std::pmr::vector::data" link="cpp/container/vector/data"/>
    <keyword type="function" name="std::pmr::vector::begin" link="cpp/container/vector/begin"/>
    <keyword type="function" name="std::pmr::vector::cbegin" link="cpp/container/vector/begin"/>
    <keyword type="function" name="std::pmr::vector::end" link="cpp/container/vector/end"/>
    <keyword type="function" name="std::pmr::vector::cend" link="cpp/container/vector/end"/>
    <keyword type="function" name="std::pmr::vector::rbegin" link="cpp/container/vector/rbegin"/>
    <keyword type="function" name="std::pmr::vector::crbegin" link="cpp/container/vector/rbegin"/>
    <keyword type="function" name="std::pmr::vector::rend" link="cpp/container/vector/rend"/>
    <keyword type="function" name="std::pmr::vector::crend" link="cpp/container/vector/rend"/>
    <keyword type="function" name="std::pmr::vector::empty" link="cpp/container/vector/empty"/>
    <keyword type="function" name="std::pmr::vector::size" link="cpp/container/vector/size"/>
    <keyword type="function" name="std::pmr::vector::max_size" link="cpp/container/vector/max_size"/>
    <keyword type="function" name="std::pmr::vector::reserve" link="cpp/container/vector/reserve"/>
    <keyword type="function" name="std::pmr::vector::capacity" link="cpp/container/vector/capacity"/>
    <keyword type="function" name="std::pmr::vector::shrink_to_fit" link="cpp/container/vector/shrink_to_fit"/>
    <keyword type="function" name="std::pmr::vector::clear" link="cpp/container/vector/clear"/>
    <keyword type="function" name="std::pmr::vector::insert" link="cpp/container/vector/insert"/>
    <keyword type="function" name="std::pmr::vector::emplace" link="cpp/container/vector/emplace"/>
    <keyword type="function" name="std::pmr::vector::erase" link="cpp/container/vector/erase"/>
    <keyword type="function" name="std::pmr::vector::push_back" link="cpp/container/vector/push_back"/>
    <keyword type="function" name="std::pmr::vector::emplace_back" link="cpp/container/vector/emplace_back"/>
    <keyword type="function" name="std::pmr::vector::pop_back" link="cpp/container/vector/pop_back"/>
    <keyword type="function" name="std::pmr::vector::resize" link="cpp/container/vector/resize"/>
    <keyword type="function" name="std::pmr::vector::swap" link="cpp/container/vector/swap"/>
    <keyword type="function" name="operator==(std::pmr::vector)" link="cpp/container/vector/operator_cmp"/>
    <keyword type="function" name="operator!=(std::pmr::vector)" link="cpp/container/vector/operator_cmp"/>
    <keyword type="function" name="operator&lt;(std::pmr::vector)" link="cpp/container/vector/operator_cmp"/>
    <keyword type="function" name="operator&lt;=(std::pmr::vector)" link="cpp/container/vector/operator_cmp"/>
    <keyword type="function" name="operator&gt;(std::pmr::vector)" link="cpp/container/vector/operator_cmp"/>
    <keyword type="function" name="operator&gt;=(std::pmr::vector)" link="cpp/container/vector/operator_cmp"/>
    <keyword type="function" name="std::swap(std::pmr::vector)" link="cpp/container/vector/swap2"/>
    <keyword type="function" name="std::erase(std::pmr::vector)" link="cpp/container/vector/erase2"/>
    <keyword type="function" name="std::erase_if(std::pmr::vector)" link="cpp/container/vector/erase2"/>
    <keyword type="class" name="std::deque" link="cpp/container/deque"/>
    <keyword type="function" name="std::deque::deque" link="cpp/container/deque/deque"/>
    <keyword type="function" name="std::deque::~deque" link="cpp/container/deque/~deque"/>
    <keyword type="function" name="std::deque::operator=" link="cpp/container/deque/operator="/>
    <keyword type="function" name="std::deque::assign" link="cpp/container/deque/assign"/>
    <keyword type="function" name="std::deque::get_allocator" link="cpp/container/deque/get_allocator"/>
    <keyword type="function" name="std::deque::at" link="cpp/container/deque/at"/>
    <keyword type="function" name="std::deque::operator[]" link="cpp/container/deque/operator_at"/>
    <keyword type="function" name="std::deque::front" link="cpp/container/deque/front"/>
    <keyword type="function" name="std::deque::back" link="cpp/container/deque/back"/>
    <keyword type="function" name="std::deque::begin" link="cpp/container/deque/begin"/>
    <keyword type="function" name="std::deque::cbegin" link="cpp/container/deque/begin"/>
    <keyword type="function" name="std::deque::end" link="cpp/container/deque/end"/>
    <keyword type="function" name="std::deque::cend" link="cpp/container/deque/end"/>
    <keyword type="function" name="std::deque::rbegin" link="cpp/container/deque/rbegin"/>
    <keyword type="function" name="std::deque::crbegin" link="cpp/container/deque/rbegin"/>
    <keyword type="function" name="std::deque::rend" link="cpp/container/deque/rend"/>
    <keyword type="function" name="std::deque::crend" link="cpp/container/deque/rend"/>
    <keyword type="function" name="std::deque::empty" link="cpp/container/deque/empty"/>
    <keyword type="function" name="std::deque::size" link="cpp/container/deque/size"/>
    <keyword type="function" name="std::deque::max_size" link="cpp/container/deque/max_size"/>
    <keyword type="function" name="std::deque::shrink_to_fit" link="cpp/container/deque/shrink_to_fit"/>
    <keyword type="function" name="std::deque::clear" link="cpp/container/deque/clear"/>
    <keyword type="function" name="std::deque::insert" link="cpp/container/deque/insert"/>
    <keyword type="function" name="std::deque::emplace" link="cpp/container/deque/emplace"/>
    <keyword type="function" name="std::deque::erase" link="cpp/container/deque/erase"/>
    <keyword type="function" name="std::deque::push_back" link="cpp/container/deque/push_back"/>
    <keyword type="function" name="std::deque::emplace_back" link="cpp/container/deque/emplace_back"/>
    <keyword type="function" name="std::deque::pop_back" link="cpp/container/deque/pop_back"/>
    <keyword type="function" name="std::deque::push_front" link="cpp/container/deque/push_front"/>
    <keyword type="function" name="std::deque::emplace_front" link="cpp/container/deque/emplace_front"/>
    <keyword type="function" name="std::deque::pop_front" link="cpp/container/deque/pop_front"/>
    <keyword type="function" name="std::deque::resize" link="cpp/container/deque/resize"/>
    <keyword type="function" name="std::deque::swap" link="cpp/container/deque/swap"/>
    <keyword type="function" name="operator==(std::deque)" link="cpp/container/deque/operator_cmp"/>
    <keyword type="function" name="operator!=(std::deque)" link="cpp/container/deque/operator_cmp"/>
    <keyword type="function" name="operator&lt;(std::deque)" link="cpp/container/deque/operator_cmp"/>
    <keyword type="function" name="operator&lt;=(std::deque)" link="cpp/container/deque/operator_cmp"/>
    <keyword type="function" name="operator&gt;(std::deque)" link="cpp/container/deque/operator_cmp"/>
    <keyword type="function" name="operator&gt;=(std::deque)" link="cpp/container/deque/operator_cmp"/>
    <keyword type="function" name="std::swap(std::deque)" link="cpp/container/deque/swap2"/>
    <keyword type="function" name="std::erase(std::deque)" link="cpp/container/deque/erase2"/>
    <keyword type="function" name="std::erase_if(std::deque)" link="cpp/container/deque/erase2"/>
    <keyword type="typedef" name="std::pmr::deque" link="cpp/container/deque"/>
    <keyword type="function" name="std::pmr::deque::deque" link="cpp/container/deque/deque"/>
    <keyword type="function" name="std::pmr::deque::~deque" link="cpp/container/deque/~deque"/>
    <keyword type="function" name="std::pmr::deque::operator=" link="cpp/container/deque/operator="/>
    <keyword type="function" name="std::pmr::deque::assign" link="cpp/container/deque/assign"/>
    <keyword type="function" name="std::pmr::deque::get_allocator" link="cpp/container/deque/get_allocator"/>
    <keyword type="function" name="std::pmr::deque::at" link="cpp/container/deque/at"/>
    <keyword type="function" name="std::pmr::deque::operator[]" link="cpp/container/deque/operator_at"/>
    <keyword type="function" name="std::pmr::deque::front" link="cpp/container/deque/front"/>
    <keyword type="function" name="std::pmr::deque::back" link="cpp/container/deque/back"/>
    <keyword type="function" name="std::pmr::deque::begin" link="cpp/container/deque/begin"/>
    <keyword type="function" name="std::pmr::deque::cbegin" link="cpp/container/deque/begin"/>
    <keyword type="function" name="std::pmr::deque::end" link="cpp/container/deque/end"/>
    <keyword type="function" name="std::pmr::deque::cend" link="cpp/container/deque/end"/>
    <keyword type="function" name="std::pmr::deque::rbegin" link="cpp/container/deque/rbegin"/>
    <keyword type="function" name="std::pmr::deque::crbegin" link="cpp/container/deque/rbegin"/>
    <keyword type="function" name="std::pmr::deque::rend" link="cpp/container/deque/rend"/>
    <keyword type="function" name="std::pmr::deque::crend" link="cpp/container/deque/rend"/>
    <keyword type="function" name="std::pmr::deque::empty" link="cpp/container/deque/empty"/>
    <keyword type="function" name="std::pmr::deque::size" link="cpp/container/deque/size"/>
    <keyword type="function" name="std::pmr::deque::max_size" link="cpp/container/deque/max_size"/>
    <keyword type="function" name="std::pmr::deque::shrink_to_fit" link="cpp/container/deque/shrink_to_fit"/>
    <keyword type="function" name="std::pmr::deque::clear" link="cpp/container/deque/clear"/>
    <keyword type="function" name="std::pmr::deque::insert" link="cpp/container/deque/insert"/>
    <keyword type="function" name="std::pmr::deque::emplace" link="cpp/container/deque/emplace"/>
    <keyword type="function" name="std::pmr::deque::erase" link="cpp/container/deque/erase"/>
    <keyword type="function" name="std::pmr::deque::push_back" link="cpp/container/deque/push_back"/>
    <keyword type="function" name="std::pmr::deque::emplace_back" link="cpp/container/deque/emplace_back"/>
    <keyword type="function" name="std::pmr::deque::pop_back" link="cpp/container/deque/pop_back"/>
    <keyword type="function" name="std::pmr::deque::push_front" link="cpp/container/deque/push_front"/>
    <keyword type="function" name="std::pmr::deque::emplace_front" link="cpp/container/deque/emplace_front"/>
    <keyword type="function" name="std::pmr::deque::pop_front" link="cpp/container/deque/pop_front"/>
    <keyword type="function" name="std::pmr::deque::resize" link="cpp/container/deque/resize"/>
    <keyword type="function" name="std::pmr::deque::swap" link="cpp/container/deque/swap"/>
    <keyword type="function" name="operator==(std::pmr::deque)" link="cpp/container/deque/operator_cmp"/>
    <keyword type="function" name="operator!=(std::pmr::deque)" link="cpp/container/deque/operator_cmp"/>
    <keyword type="function" name="operator&lt;(std::pmr::deque)" link="cpp/container/deque/operator_cmp"/>
    <keyword type="function" name="operator&lt;=(std::pmr::deque)" link="cpp/container/deque/operator_cmp"/>
    <keyword type="function" name="operator&gt;(std::pmr::deque)" link="cpp/container/deque/operator_cmp"/>
    <keyword type="function" name="operator&gt;=(std::pmr::deque)" link="cpp/container/deque/operator_cmp"/>
    <keyword type="function" name="std::swap(std::pmr::deque)" link="cpp/container/deque/swap2"/>
    <keyword type="function" name="std::erase(std::pmr::deque)" link="cpp/container/deque/erase2"/>
    <keyword type="function" name="std::erase_if(std::pmr::deque)" link="cpp/container/deque/erase2"/>
    <keyword type="class" name="std::forward_list" link="cpp/container/forward_list"/>
    <keyword type="function" name="std::forward_list::forward_list" link="cpp/container/forward_list/forward_list"/>
    <keyword type="function" name="std::forward_list::~forward_list" link="cpp/container/forward_list/~forward_list"/>
    <keyword type="function" name="std::forward_list::operator=" link="cpp/container/forward_list/operator="/>
    <keyword type="function" name="std::forward_list::assign" link="cpp/container/forward_list/assign"/>
    <keyword type="function" name="std::forward_list::get_allocator" link="cpp/container/forward_list/get_allocator"/>
    <keyword type="function" name="std::forward_list::front" link="cpp/container/forward_list/front"/>
    <keyword type="function" name="std::forward_list::before_begin" link="cpp/container/forward_list/before_begin"/>
    <keyword type="function" name="std::forward_list::cbefore_begin" link="cpp/container/forward_list/before_begin"/>
    <keyword type="function" name="std::forward_list::begin" link="cpp/container/forward_list/begin"/>
    <keyword type="function" name="std::forward_list::cbegin" link="cpp/container/forward_list/begin"/>
    <keyword type="function" name="std::forward_list::end" link="cpp/container/forward_list/end"/>
    <keyword type="function" name="std::forward_list::cend" link="cpp/container/forward_list/end"/>
    <keyword type="function" name="std::forward_list::empty" link="cpp/container/forward_list/empty"/>
    <keyword type="function" name="std::forward_list::max_size" link="cpp/container/forward_list/max_size"/>
    <keyword type="function" name="std::forward_list::clear" link="cpp/container/forward_list/clear"/>
    <keyword type="function" name="std::forward_list::insert_after" link="cpp/container/forward_list/insert_after"/>
    <keyword type="function" name="std::forward_list::emplace_after" link="cpp/container/forward_list/emplace_after"/>
    <keyword type="function" name="std::forward_list::erase_after" link="cpp/container/forward_list/erase_after"/>
    <keyword type="function" name="std::forward_list::push_front" link="cpp/container/forward_list/push_front"/>
    <keyword type="function" name="std::forward_list::emplace_front" link="cpp/container/forward_list/emplace_front"/>
    <keyword type="function" name="std::forward_list::pop_front" link="cpp/container/forward_list/pop_front"/>
    <keyword type="function" name="std::forward_list::resize" link="cpp/container/forward_list/resize"/>
    <keyword type="function" name="std::forward_list::swap" link="cpp/container/forward_list/swap"/>
    <keyword type="function" name="std::forward_list::merge" link="cpp/container/forward_list/merge"/>
    <keyword type="function" name="std::forward_list::splice_after" link="cpp/container/forward_list/splice_after"/>
    <keyword type="function" name="std::forward_list::remove" link="cpp/container/forward_list/remove"/>
    <keyword type="function" name="std::forward_list::remove_if" link="cpp/container/forward_list/remove"/>
    <keyword type="function" name="std::forward_list::reverse" link="cpp/container/forward_list/reverse"/>
    <keyword type="function" name="std::forward_list::unique" link="cpp/container/forward_list/unique"/>
    <keyword type="function" name="std::forward_list::sort" link="cpp/container/forward_list/sort"/>
    <keyword type="function" name="operator==(std::forward_list)" link="cpp/container/forward_list/operator_cmp"/>
    <keyword type="function" name="operator!=(std::forward_list)" link="cpp/container/forward_list/operator_cmp"/>
    <keyword type="function" name="operator&lt;(std::forward_list)" link="cpp/container/forward_list/operator_cmp"/>
    <keyword type="function" name="operator&lt;=(std::forward_list)" link="cpp/container/forward_list/operator_cmp"/>
    <keyword type="function" name="operator&gt;(std::forward_list)" link="cpp/container/forward_list/operator_cmp"/>
    <keyword type="function" name="operator&gt;=(std::forward_list)" link="cpp/container/forward_list/operator_cmp"/>
    <keyword type="function" name="std::swap(std::forward_list)" link="cpp/container/forward_list/swap2"/>
    <keyword type="function" name="std::erase(std::forward_list)" link="cpp/container/forward_list/erase2"/>
    <keyword type="function" name="std::erase_if(std::forward_list)" link="cpp/container/forward_list/erase2"/>
    <keyword type="typedef" name="std::pmr::forward_list" link="cpp/container/forward_list"/>
    <keyword type="function" name="std::pmr::forward_list::forward_list" link="cpp/container/forward_list/forward_list"/>
    <keyword type="function" name="std::pmr::forward_list::~forward_list" link="cpp/container/forward_list/~forward_list"/>
    <keyword type="function" name="std::pmr::forward_list::operator=" link="cpp/container/forward_list/operator="/>
    <keyword type="function" name="std::pmr::forward_list::assign" link="cpp/container/forward_list/assign"/>
    <keyword type="function" name="std::pmr::forward_list::get_allocator" link="cpp/container/forward_list/get_allocator"/>
    <keyword type="function" name="std::pmr::forward_list::front" link="cpp/container/forward_list/front"/>
    <keyword type="function" name="std::pmr::forward_list::before_begin" link="cpp/container/forward_list/before_begin"/>
    <keyword type="function" name="std::pmr::forward_list::cbefore_begin" link="cpp/container/forward_list/before_begin"/>
    <keyword type="function" name="std::pmr::forward_list::begin" link="cpp/container/forward_list/begin"/>
    <keyword type="function" name="std::pmr::forward_list::cbegin" link="cpp/container/forward_list/begin"/>
    <keyword type="function" name="std::pmr::forward_list::end" link="cpp/container/forward_list/end"/>
    <keyword type="function" name="std::pmr::forward_list::cend" link="cpp/container/forward_list/end"/>
    <keyword type="function" name="std::pmr::forward_list::empty" link="cpp/container/forward_list/empty"/>
    <keyword type="function" name="std::pmr::forward_list::max_size" link="cpp/container/forward_list/max_size"/>
    <keyword type="function" name="std::pmr::forward_list::clear" link="cpp/container/forward_list/clear"/>
    <keyword type="function" name="std::pmr::forward_list::insert_after" link="cpp/container/forward_list/insert_after"/>
    <keyword type="function" name="std::pmr::forward_list::emplace_after" link="cpp/container/forward_list/emplace_after"/>
    <keyword type="function" name="std::pmr::forward_list::erase_after" link="cpp/container/forward_list/erase_after"/>
    <keyword type="function" name="std::pmr::forward_list::push_front" link="cpp/container/forward_list/push_front"/>
    <keyword type="function" name="std::pmr::forward_list::emplace_front" link="cpp/container/forward_list/emplace_front"/>
    <keyword type="function" name="std::pmr::forward_list::pop_front" link="cpp/container/forward_list/pop_front"/>
    <keyword type="function" name="std::pmr::forward_list::resize" link="cpp/container/forward_list/resize"/>
    <keyword type="function" name="std::pmr::forward_list::swap" link="cpp/container/forward_list/swap"/>
    <keyword type="function" name="std::pmr::forward_list::merge" link="cpp/container/forward_list/merge"/>
    <keyword type="function" name="std::pmr::forward_list::splice_after" link="cpp/container/forward_list/splice_after"/>
    <keyword type="function" name="std::pmr::forward_list::remove" link="cpp/container/forward_list/remove"/>
    <keyword type="function" name="std::pmr::forward_list::remove_if" link="cpp/container/forward_list/remove"/>
    <keyword type="function" name="std::pmr::forward_list::reverse" link="cpp/container/forward_list/reverse"/>
    <keyword type="function" name="std::pmr::forward_list::unique" link="cpp/container/forward_list/unique"/>
    <keyword type="function" name="std::pmr::forward_list::sort" link="cpp/container/forward_list/sort"/>
    <keyword type="function" name="operator==(std::pmr::forward_list)" link="cpp/container/forward_list/operator_cmp"/>
    <keyword type="function" name="operator!=(std::pmr::forward_list)" link="cpp/container/forward_list/operator_cmp"/>
    <keyword type="function" name="operator&lt;(std::pmr::forward_list)" link="cpp/container/forward_list/operator_cmp"/>
    <keyword type="function" name="operator&lt;=(std::pmr::forward_list)" link="cpp/container/forward_list/operator_cmp"/>
    <keyword type="function" name="operator&gt;(std::pmr::forward_list)" link="cpp/container/forward_list/operator_cmp"/>
    <keyword type="function" name="operator&gt;=(std::pmr::forward_list)" link="cpp/container/forward_list/operator_cmp"/>
    <keyword type="function" name="std::swap(std::pmr::forward_list)" link="cpp/container/forward_list/swap2"/>
    <keyword type="function" name="std::erase(std::pmr::forward_list)" link="cpp/container/forward_list/erase2"/>
    <keyword type="function" name="std::erase_if(std::pmr::forward_list)" link="cpp/container/forward_list/erase2"/>
    <keyword type="class" name="std::list" link="cpp/container/list"/>
    <keyword type="function" name="std::list::list" link="cpp/container/list/list"/>
    <keyword type="function" name="std::list::~list" link="cpp/container/list/~list"/>
    <keyword type="function" name="std::list::operator=" link="cpp/container/list/operator="/>
    <keyword type="function" name="std::list::assign" link="cpp/container/list/assign"/>
    <keyword type="function" name="std::list::get_allocator" link="cpp/container/list/get_allocator"/>
    <keyword type="function" name="std::list::front" link="cpp/container/list/front"/>
    <keyword type="function" name="std::list::back" link="cpp/container/list/back"/>
    <keyword type="function" name="std::list::begin" link="cpp/container/list/begin"/>
    <keyword type="function" name="std::list::cbegin" link="cpp/container/list/begin"/>
    <keyword type="function" name="std::list::end" link="cpp/container/list/end"/>
    <keyword type="function" name="std::list::cend" link="cpp/container/list/end"/>
    <keyword type="function" name="std::list::rbegin" link="cpp/container/list/rbegin"/>
    <keyword type="function" name="std::list::crbegin" link="cpp/container/list/rbegin"/>
    <keyword type="function" name="std::list::rend" link="cpp/container/list/rend"/>
    <keyword type="function" name="std::list::crend" link="cpp/container/list/rend"/>
    <keyword type="function" name="std::list::empty" link="cpp/container/list/empty"/>
    <keyword type="function" name="std::list::size" link="cpp/container/list/size"/>
    <keyword type="function" name="std::list::max_size" link="cpp/container/list/max_size"/>
    <keyword type="function" name="std::list::clear" link="cpp/container/list/clear"/>
    <keyword type="function" name="std::list::insert" link="cpp/container/list/insert"/>
    <keyword type="function" name="std::list::emplace" link="cpp/container/list/emplace"/>
    <keyword type="function" name="std::list::erase" link="cpp/container/list/erase"/>
    <keyword type="function" name="std::list::push_back" link="cpp/container/list/push_back"/>
    <keyword type="function" name="std::list::emplace_back" link="cpp/container/list/emplace_back"/>
    <keyword type="function" name="std::list::pop_back" link="cpp/container/list/pop_back"/>
    <keyword type="function" name="std::list::push_front" link="cpp/container/list/push_front"/>
    <keyword type="function" name="std::list::emplace_front" link="cpp/container/list/emplace_front"/>
    <keyword type="function" name="std::list::pop_front" link="cpp/container/list/pop_front"/>
    <keyword type="function" name="std::list::resize" link="cpp/container/list/resize"/>
    <keyword type="function" name="std::list::swap" link="cpp/container/list/swap"/>
    <keyword type="function" name="std::list::merge" link="cpp/container/list/merge"/>
    <keyword type="function" name="std::list::splice" link="cpp/container/list/splice"/>
    <keyword type="function" name="std::list::remove" link="cpp/container/list/remove"/>
    <keyword type="function" name="std::list::remove_if" link="cpp/container/list/remove"/>
    <keyword type="function" name="std::list::reverse" link="cpp/container/list/reverse"/>
    <keyword type="function" name="std::list::unique" link="cpp/container/list/unique"/>
    <keyword type="function" name="std::list::sort" link="cpp/container/list/sort"/>
    <keyword type="function" name="operator==(std::list)" link="cpp/container/list/operator_cmp"/>
    <keyword type="function" name="operator!=(std::list)" link="cpp/container/list/operator_cmp"/>
    <keyword type="function" name="operator&lt;(std::list)" link="cpp/container/list/operator_cmp"/>
    <keyword type="function" name="operator&lt;=(std::list)" link="cpp/container/list/operator_cmp"/>
    <keyword type="function" name="operator&gt;(std::list)" link="cpp/container/list/operator_cmp"/>
    <keyword type="function" name="operator&gt;=(std::list)" link="cpp/container/list/operator_cmp"/>
    <keyword type="function" name="std::swap(std::list)" link="cpp/container/list/swap2"/>
    <keyword type="function" name="std::erase(std::list)" link="cpp/container/list/erase2"/>
    <keyword type="function" name="std::erase_if(std::list)" link="cpp/container/list/erase2"/>
    <keyword type="typedef" name="std::pmr::list" link="cpp/container/list"/>
    <keyword type="function" name="std::pmr::list::list" link="cpp/container/list/list"/>
    <keyword type="function" name="std::pmr::list::~list" link="cpp/container/list/~list"/>
    <keyword type="function" name="std::pmr::list::operator=" link="cpp/container/list/operator="/>
    <keyword type="function" name="std::pmr::list::assign" link="cpp/container/list/assign"/>
    <keyword type="function" name="std::pmr::list::get_allocator" link="cpp/container/list/get_allocator"/>
    <keyword type="function" name="std::pmr::list::front" link="cpp/container/list/front"/>
    <keyword type="function" name="std::pmr::list::back" link="cpp/container/list/back"/>
    <keyword type="function" name="std::pmr::list::begin" link="cpp/container/list/begin"/>
    <keyword type="function" name="std::pmr::list::cbegin" link="cpp/container/list/begin"/>
    <keyword type="function" name="std::pmr::list::end" link="cpp/container/list/end"/>
    <keyword type="function" name="std::pmr::list::cend" link="cpp/container/list/end"/>
    <keyword type="function" name="std::pmr::list::rbegin" link="cpp/container/list/rbegin"/>
    <keyword type="function" name="std::pmr::list::crbegin" link="cpp/container/list/rbegin"/>
    <keyword type="function" name="std::pmr::list::rend" link="cpp/container/list/rend"/>
    <keyword type="function" name="std::pmr::list::crend" link="cpp/container/list/rend"/>
    <keyword type="function" name="std::pmr::list::empty" link="cpp/container/list/empty"/>
    <keyword type="function" name="std::pmr::list::size" link="cpp/container/list/size"/>
    <keyword type="function" name="std::pmr::list::max_size" link="cpp/container/list/max_size"/>
    <keyword type="function" name="std::pmr::list::clear" link="cpp/container/list/clear"/>
    <keyword type="function" name="std::pmr::list::insert" link="cpp/container/list/insert"/>
    <keyword type="function" name="std::pmr::list::emplace" link="cpp/container/list/emplace"/>
    <keyword type="function" name="std::pmr::list::erase" link="cpp/container/list/erase"/>
    <keyword type="function" name="std::pmr::list::push_back" link="cpp/container/list/push_back"/>
    <keyword type="function" name="std::pmr::list::emplace_back" link="cpp/container/list/emplace_back"/>
    <keyword type="function" name="std::pmr::list::pop_back" link="cpp/container/list/pop_back"/>
    <keyword type="function" name="std::pmr::list::push_front" link="cpp/container/list/push_front"/>
    <keyword type="function" name="std::pmr::list::emplace_front" link="cpp/container/list/emplace_front"/>
    <keyword type="function" name="std::pmr::list::pop_front" link="cpp/container/list/pop_front"/>
    <keyword type="function" name="std::pmr::list::resize" link="cpp/container/list/resize"/>
    <keyword type="function" name="std::pmr::list::swap" link="cpp/container/list/swap"/>
    <keyword type="function" name="std::pmr::list::merge" link="cpp/container/list/merge"/>
    <keyword type="function" name="std::pmr::list::splice" link="cpp/container/list/splice"/>
    <keyword type="function" name="std::pmr::list::remove" link="cpp/container/list/remove"/>
    <keyword type="function" name="std::pmr::list::remove_if" link="cpp/container/list/remove"/>
    <keyword type="function" name="std::pmr::list::reverse" link="cpp/container/list/reverse"/>
    <keyword type="function" name="std::pmr::list::unique" link="cpp/container/list/unique"/>
    <keyword type="function" name="std::pmr::list::sort" link="cpp/container/list/sort"/>
    <keyword type="function" name="operator==(std::pmr::list)" link="cpp/container/list/operator_cmp"/>
    <keyword type="function" name="operator!=(std::pmr::list)" link="cpp/container/list/operator_cmp"/>
    <keyword type="function" name="operator&lt;(std::pmr::list)" link="cpp/container/list/operator_cmp"/>
    <keyword type="function" name="operator&lt;=(std::pmr::list)" link="cpp/container/list/operator_cmp"/>
    <keyword type="function" name="operator&gt;(std::pmr::list)" link="cpp/container/list/operator_cmp"/>
    <keyword type="function" name="operator&gt;=(std::pmr::list)" link="cpp/container/list/operator_cmp"/>
    <keyword type="function" name="std::swap(std::pmr::list)" link="cpp/container/list/swap2"/>
    <keyword type="function" name="std::erase(std::pmr::list)" link="cpp/container/list/erase2"/>
    <keyword type="function" name="std::erase_if(std::pmr::list)" link="cpp/container/list/erase2"/>
    <keyword type="class" name="std::set" link="cpp/container/set"/>
    <keyword type="function" name="std::set::set" link="cpp/container/set/set"/>
    <keyword type="function" name="std::set::~set" link="cpp/container/set/~set"/>
    <keyword type="function" name="std::set::operator=" link="cpp/container/set/operator="/>
    <keyword type="function" name="std::set::get_allocator" link="cpp/container/set/get_allocator"/>
    <keyword type="function" name="std::set::begin" link="cpp/container/set/begin"/>
    <keyword type="function" name="std::set::cbegin" link="cpp/container/set/begin"/>
    <keyword type="function" name="std::set::end" link="cpp/container/set/end"/>
    <keyword type="function" name="std::set::cend" link="cpp/container/set/end"/>
    <keyword type="function" name="std::set::rbegin" link="cpp/container/set/rbegin"/>
    <keyword type="function" name="std::set::crbegin" link="cpp/container/set/rbegin"/>
    <keyword type="function" name="std::set::rend" link="cpp/container/set/rend"/>
    <keyword type="function" name="std::set::crend" link="cpp/container/set/rend"/>
    <keyword type="function" name="std::set::empty" link="cpp/container/set/empty"/>
    <keyword type="function" name="std::set::size" link="cpp/container/set/size"/>
    <keyword type="function" name="std::set::max_size" link="cpp/container/set/max_size"/>
    <keyword type="function" name="std::set::clear" link="cpp/container/set/clear"/>
    <keyword type="function" name="std::set::insert" link="cpp/container/set/insert"/>
    <keyword type="function" name="std::set::emplace" link="cpp/container/set/emplace"/>
    <keyword type="function" name="std::set::emplace_hint" link="cpp/container/set/emplace_hint"/>
    <keyword type="function" name="std::set::erase" link="cpp/container/set/erase"/>
    <keyword type="function" name="std::set::swap" link="cpp/container/set/swap"/>
    <keyword type="function" name="std::set::extract" link="cpp/container/set/extract"/>
    <keyword type="function" name="std::set::merge" link="cpp/container/set/merge"/>
    <keyword type="function" name="std::set::count" link="cpp/container/set/count"/>
    <keyword type="function" name="std::set::find" link="cpp/container/set/find"/>
    <keyword type="function" name="std::set::contains" link="cpp/container/set/contains"/>
    <keyword type="function" name="std::set::equal_range" link="cpp/container/set/equal_range"/>
    <keyword type="function" name="std::set::lower_bound" link="cpp/container/set/lower_bound"/>
    <keyword type="function" name="std::set::upper_bound" link="cpp/container/set/upper_bound"/>
    <keyword type="function" name="std::set::key_comp" link="cpp/container/set/key_comp"/>
    <keyword type="function" name="std::set::value_comp" link="cpp/container/set/value_comp"/>
    <keyword type="function" name="operator==(std::set)" link="cpp/container/set/operator_cmp"/>
    <keyword type="function" name="operator!=(std::set)" link="cpp/container/set/operator_cmp"/>
    <keyword type="function" name="operator&lt;(std::set)" link="cpp/container/set/operator_cmp"/>
    <keyword type="function" name="operator&lt;=(std::set)" link="cpp/container/set/operator_cmp"/>
    <keyword type="function" name="operator&gt;(std::set)" link="cpp/container/set/operator_cmp"/>
    <keyword type="function" name="operator&gt;=(std::set)" link="cpp/container/set/operator_cmp"/>
    <keyword type="function" name="std::swap(std::set)" link="cpp/container/set/swap2"/>
    <keyword type="function" name="std::erase_if(std::set)" link="cpp/container/set/erase_if"/>
    <keyword type="typedef" name="std::pmr::set" link="cpp/container/set"/>
    <keyword type="function" name="std::pmr::set::set" link="cpp/container/set/set"/>
    <keyword type="function" name="std::pmr::set::~set" link="cpp/container/set/~set"/>
    <keyword type="function" name="std::pmr::set::operator=" link="cpp/container/set/operator="/>
    <keyword type="function" name="std::pmr::set::get_allocator" link="cpp/container/set/get_allocator"/>
    <keyword type="function" name="std::pmr::set::begin" link="cpp/container/set/begin"/>
    <keyword type="function" name="std::pmr::set::cbegin" link="cpp/container/set/begin"/>
    <keyword type="function" name="std::pmr::set::end" link="cpp/container/set/end"/>
    <keyword type="function" name="std::pmr::set::cend" link="cpp/container/set/end"/>
    <keyword type="function" name="std::pmr::set::rbegin" link="cpp/container/set/rbegin"/>
    <keyword type="function" name="std::pmr::set::crbegin" link="cpp/container/set/rbegin"/>
    <keyword type="function" name="std::pmr::set::rend" link="cpp/container/set/rend"/>
    <keyword type="function" name="std::pmr::set::crend" link="cpp/container/set/rend"/>
    <keyword type="function" name="std::pmr::set::empty" link="cpp/container/set/empty"/>
    <keyword type="function" name="std::pmr::set::size" link="cpp/container/set/size"/>
    <keyword type="function" name="std::pmr::set::max_size" link="cpp/container/set/max_size"/>
    <keyword type="function" name="std::pmr::set::clear" link="cpp/container/set/clear"/>
    <keyword type="function" name="std::pmr::set::insert" link="cpp/container/set/insert"/>
    <keyword type="function" name="std::pmr::set::emplace" link="cpp/container/set/emplace"/>
    <keyword type="function" name="std::pmr::set::emplace_hint" link="cpp/container/set/emplace_hint"/>
    <keyword type="function" name="std::pmr::set::erase" link="cpp/container/set/erase"/>
    <keyword type="function" name="std::pmr::set::swap" link="cpp/container/set/swap"/>
    <keyword type="function" name="std::pmr::set::extract" link="cpp/container/set/extract"/>
    <keyword type="function" name="std::pmr::set::merge" link="cpp/container/set/merge"/>
    <keyword type="function" name="std::pmr::set::count" link="cpp/container/set/count"/>
    <keyword type="function" name="std::pmr::set::find" link="cpp/container/set/find"/>
    <keyword type="function" name="std::pmr::set::contains" link="cpp/container/set/contains"/>
    <keyword type="function" name="std::pmr::set::equal_range" link="cpp/container/set/equal_range"/>
    <keyword type="function" name="std::pmr::set::lower_bound" link="cpp/container/set/lower_bound"/>
    <keyword type="function" name="std::pmr::set::upper_bound" link="cpp/container/set/upper_bound"/>
    <keyword type="function" name="std::pmr::set::key_comp" link="cpp/container/set/key_comp"/>
    <keyword type="function" name="std::pmr::set::value_comp" link="cpp/container/set/value_comp"/>
    <keyword type="function" name="operator==(std::pmr::set)" link="cpp/container/set/operator_cmp"/>
    <keyword type="function" name="operator!=(std::pmr::set)" link="cpp/container/set/operator_cmp"/>
    <keyword type="function" name="operator&lt;(std::pmr::set)" link="cpp/container/set/operator_cmp"/>
    <keyword type="function" name="operator&lt;=(std::pmr::set)" link="cpp/container/set/operator_cmp"/>
    <keyword type="function" name="operator&gt;(std::pmr::set)" link="cpp/container/set/operator_cmp"/>
    <keyword type="function" name="operator&gt;=(std::pmr::set)" link="cpp/container/set/operator_cmp"/>
    <keyword type="function" name="std::swap(std::pmr::set)" link="cpp/container/set/swap2"/>
    <keyword type="function" name="std::erase_if(std::pmr::set)" link="cpp/container/set/erase_if"/>
    <keyword type="class" name="std::multiset" link="cpp/container/multiset"/>
    <keyword type="function" name="std::multiset::multiset" link="cpp/container/multiset/multiset"/>
    <keyword type="function" name="std::multiset::~multiset" link="cpp/container/multiset/~multiset"/>
    <keyword type="function" name="std::multiset::operator=" link="cpp/container/multiset/operator="/>
    <keyword type="function" name="std::multiset::get_allocator" link="cpp/container/multiset/get_allocator"/>
    <keyword type="function" name="std::multiset::begin" link="cpp/container/multiset/begin"/>
    <keyword type="function" name="std::multiset::cbegin" link="cpp/container/multiset/begin"/>
    <keyword type="function" name="std::multiset::end" link="cpp/container/multiset/end"/>
    <keyword type="function" name="std::multiset::cend" link="cpp/container/multiset/end"/>
    <keyword type="function" name="std::multiset::rbegin" link="cpp/container/multiset/rbegin"/>
    <keyword type="function" name="std::multiset::crbegin" link="cpp/container/multiset/rbegin"/>
    <keyword type="function" name="std::multiset::rend" link="cpp/container/multiset/rend"/>
    <keyword type="function" name="std::multiset::crend" link="cpp/container/multiset/rend"/>
    <keyword type="function" name="std::multiset::empty" link="cpp/container/multiset/empty"/>
    <keyword type="function" name="std::multiset::size" link="cpp/container/multiset/size"/>
    <keyword type="function" name="std::multiset::max_size" link="cpp/container/multiset/max_size"/>
    <keyword type="function" name="std::multiset::clear" link="cpp/container/multiset/clear"/>
    <keyword type="function" name="std::multiset::insert" link="cpp/container/multiset/insert"/>
    <keyword type="function" name="std::multiset::emplace" link="cpp/container/multiset/emplace"/>
    <keyword type="function" name="std::multiset::emplace_hint" link="cpp/container/multiset/emplace_hint"/>
    <keyword type="function" name="std::multiset::erase" link="cpp/container/multiset/erase"/>
    <keyword type="function" name="std::multiset::swap" link="cpp/container/multiset/swap"/>
    <keyword type="function" name="std::multiset::extract" link="cpp/container/multiset/extract"/>
    <keyword type="function" name="std::multiset::merge" link="cpp/container/multiset/merge"/>
    <keyword type="function" name="std::multiset::count" link="cpp/container/multiset/count"/>
    <keyword type="function" name="std::multiset::find" link="cpp/container/multiset/find"/>
    <keyword type="function" name="std::multiset::contains" link="cpp/container/multiset/contains"/>
    <keyword type="function" name="std::multiset::equal_range" link="cpp/container/multiset/equal_range"/>
    <keyword type="function" name="std::multiset::lower_bound" link="cpp/container/multiset/lower_bound"/>
    <keyword type="function" name="std::multiset::upper_bound" link="cpp/container/multiset/upper_bound"/>
    <keyword type="function" name="std::multiset::key_comp" link="cpp/container/multiset/key_comp"/>
    <keyword type="function" name="std::multiset::value_comp" link="cpp/container/multiset/value_comp"/>
    <keyword type="function" name="operator==(std::multiset)" link="cpp/container/multiset/operator_cmp"/>
    <keyword type="function" name="operator!=(std::multiset)" link="cpp/container/multiset/operator_cmp"/>
    <keyword type="function" name="operator&lt;(std::multiset)" link="cpp/container/multiset/operator_cmp"/>
    <keyword type="function" name="operator&lt;=(std::multiset)" link="cpp/container/multiset/operator_cmp"/>
    <keyword type="function" name="operator&gt;(std::multiset)" link="cpp/container/multiset/operator_cmp"/>
    <keyword type="function" name="operator&gt;=(std::multiset)" link="cpp/container/multiset/operator_cmp"/>
    <keyword type="function" name="std::swap(std::multiset)" link="cpp/container/multiset/swap2"/>
    <keyword type="function" name="std::erase_if(std::multiset)" link="cpp/container/multiset/erase_if"/>
    <keyword type="typedef" name="std::pmr::multiset" link="cpp/container/multiset"/>
    <keyword type="function" name="std::pmr::multiset::multiset" link="cpp/container/multiset/multiset"/>
    <keyword type="function" name="std::pmr::multiset::~multiset" link="cpp/container/multiset/~multiset"/>
    <keyword type="function" name="std::pmr::multiset::operator=" link="cpp/container/multiset/operator="/>
    <keyword type="function" name="std::pmr::multiset::get_allocator" link="cpp/container/multiset/get_allocator"/>
    <keyword type="function" name="std::pmr::multiset::begin" link="cpp/container/multiset/begin"/>
    <keyword type="function" name="std::pmr::multiset::cbegin" link="cpp/container/multiset/begin"/>
    <keyword type="function" name="std::pmr::multiset::end" link="cpp/container/multiset/end"/>
    <keyword type="function" name="std::pmr::multiset::cend" link="cpp/container/multiset/end"/>
    <keyword type="function" name="std::pmr::multiset::rbegin" link="cpp/container/multiset/rbegin"/>
    <keyword type="function" name="std::pmr::multiset::crbegin" link="cpp/container/multiset/rbegin"/>
    <keyword type="function" name="std::pmr::multiset::rend" link="cpp/container/multiset/rend"/>
    <keyword type="function" name="std::pmr::multiset::crend" link="cpp/container/multiset/rend"/>
    <keyword type="function" name="std::pmr::multiset::empty" link="cpp/container/multiset/empty"/>
    <keyword type="function" name="std::pmr::multiset::size" link="cpp/container/multiset/size"/>
    <keyword type="function" name="std::pmr::multiset::max_size" link="cpp/container/multiset/max_size"/>
    <keyword type="function" name="std::pmr::multiset::clear" link="cpp/container/multiset/clear"/>
    <keyword type="function" name="std::pmr::multiset::insert" link="cpp/container/multiset/insert"/>
    <keyword type="function" name="std::pmr::multiset::emplace" link="cpp/container/multiset/emplace"/>
    <keyword type="function" name="std::pmr::multiset::emplace_hint" link="cpp/container/multiset/emplace_hint"/>
    <keyword type="function" name="std::pmr::multiset::erase" link="cpp/container/multiset/erase"/>
    <keyword type="function" name="std::pmr::multiset::swap" link="cpp/container/multiset/swap"/>
    <keyword type="function" name="std::pmr::multiset::extract" link="cpp/container/multiset/extract"/>
    <keyword type="function" name="std::pmr::multiset::merge" link="cpp/container/multiset/merge"/>
    <keyword type="function" name="std::pmr::multiset::count" link="cpp/container/multiset/count"/>
    <keyword type="function" name="std::pmr::multiset::find" link="cpp/container/multiset/find"/>
    <keyword type="function" name="std::pmr::multiset::contains" link="cpp/container/multiset/contains"/>
    <keyword type="function" name="std::pmr::multiset::equal_range" link="cpp/container/multiset/equal_range"/>
    <keyword type="function" name="std::pmr::multiset::lower_bound" link="cpp/container/multiset/lower_bound"/>
    <keyword type="function" name="std::pmr::multiset::upper_bound" link="cpp/container/multiset/upper_bound"/>
    <keyword type="function" name="std::pmr::multiset::key_comp" link="cpp/container/multiset/key_comp"/>
    <keyword type="function" name="std::pmr::multiset::value_comp" link="cpp/container/multiset/value_comp"/>
    <keyword type="function" name="operator==(std::pmr::multiset)" link="cpp/container/multiset/operator_cmp"/>
    <keyword type="function" name="operator!=(std::pmr::multiset)" link="cpp/container/multiset/operator_cmp"/>
    <keyword type="function" name="operator&lt;(std::pmr::multiset)" link="cpp/container/multiset/operator_cmp"/>
    <keyword type="function" name="operator&lt;=(std::pmr::multiset)" link="cpp/container/multiset/operator_cmp"/>
    <keyword type="function" name="operator&gt;(std::pmr::multiset)" link="cpp/container/multiset/operator_cmp"/>
    <keyword type="function" name="operator&gt;=(std::pmr::multiset)" link="cpp/container/multiset/operator_cmp"/>
    <keyword type="function" name="std::swap(std::pmr::multiset)" link="cpp/container/multiset/swap2"/>
    <keyword type="function" name="std::erase_if(std::pmr::multiset)" link="cpp/container/multiset/erase_if"/>
    <keyword type="class" name="std::map" link="cpp/container/map"/>
    <keyword type="class" name="std::map::value_compare" link="cpp/container/map/value_compare"/>
    <keyword type="function" name="std::map::value_compare::operator()" link="cpp/container/map/value_compare"/>
    <keyword type="function" name="std::map::value_compare::value_compare" link="cpp/container/map/value_compare"/>
    <keyword type="" name="std::map::value_compare::comp" link="cpp/container/map/value_compare"/>
    <keyword type="function" name="std::map::map" link="cpp/container/map/map"/>
    <keyword type="function" name="std::map::~map" link="cpp/container/map/~map"/>
    <keyword type="function" name="std::map::operator=" link="cpp/container/map/operator="/>
    <keyword type="function" name="std::map::get_allocator" link="cpp/container/map/get_allocator"/>
    <keyword type="function" name="std::map::at" link="cpp/container/map/at"/>
    <keyword type="function" name="std::map::operator[]" link="cpp/container/map/operator_at"/>
    <keyword type="function" name="std::map::begin" link="cpp/container/map/begin"/>
    <keyword type="function" name="std::map::cbegin" link="cpp/container/map/begin"/>
    <keyword type="function" name="std::map::end" link="cpp/container/map/end"/>
    <keyword type="function" name="std::map::cend" link="cpp/container/map/end"/>
    <keyword type="function" name="std::map::rbegin" link="cpp/container/map/rbegin"/>
    <keyword type="function" name="std::map::crbegin" link="cpp/container/map/rbegin"/>
    <keyword type="function" name="std::map::rend" link="cpp/container/map/rend"/>
    <keyword type="function" name="std::map::crend" link="cpp/container/map/rend"/>
    <keyword type="function" name="std::map::empty" link="cpp/container/map/empty"/>
    <keyword type="function" name="std::map::size" link="cpp/container/map/size"/>
    <keyword type="function" name="std::map::max_size" link="cpp/container/map/max_size"/>
    <keyword type="function" name="std::map::clear" link="cpp/container/map/clear"/>
    <keyword type="function" name="std::map::insert" link="cpp/container/map/insert"/>
    <keyword type="function" name="std::map::insert_or_assign" link="cpp/container/map/insert_or_assign"/>
    <keyword type="function" name="std::map::emplace" link="cpp/container/map/emplace"/>
    <keyword type="function" name="std::map::emplace_hint" link="cpp/container/map/emplace_hint"/>
    <keyword type="function" name="std::map::try_emplace" link="cpp/container/map/try_emplace"/>
    <keyword type="function" name="std::map::erase" link="cpp/container/map/erase"/>
    <keyword type="function" name="std::map::swap" link="cpp/container/map/swap"/>
    <keyword type="function" name="std::map::extract" link="cpp/container/map/extract"/>
    <keyword type="function" name="std::map::merge" link="cpp/container/map/merge"/>
    <keyword type="function" name="std::map::count" link="cpp/container/map/count"/>
    <keyword type="function" name="std::map::find" link="cpp/container/map/find"/>
    <keyword type="function" name="std::map::contains" link="cpp/container/map/contains"/>
    <keyword type="function" name="std::map::equal_range" link="cpp/container/map/equal_range"/>
    <keyword type="function" name="std::map::lower_bound" link="cpp/container/map/lower_bound"/>
    <keyword type="function" name="std::map::upper_bound" link="cpp/container/map/upper_bound"/>
    <keyword type="function" name="std::map::key_comp" link="cpp/container/map/key_comp"/>
    <keyword type="function" name="std::map::value_comp" link="cpp/container/map/value_comp"/>
    <keyword type="function" name="operator==(std::map)" link="cpp/container/map/operator_cmp"/>
    <keyword type="function" name="operator!=(std::map)" link="cpp/container/map/operator_cmp"/>
    <keyword type="function" name="operator&lt;(std::map)" link="cpp/container/map/operator_cmp"/>
    <keyword type="function" name="operator&lt;=(std::map)" link="cpp/container/map/operator_cmp"/>
    <keyword type="function" name="operator&gt;(std::map)" link="cpp/container/map/operator_cmp"/>
    <keyword type="function" name="operator&gt;=(std::map)" link="cpp/container/map/operator_cmp"/>
    <keyword type="function" name="std::swap(std::map)" link="cpp/container/map/swap2"/>
    <keyword type="function" name="std::erase_if(std::map)" link="cpp/container/map/erase_if"/>
    <keyword type="typedef" name="std::pmr::map" link="cpp/container/map"/>
    <keyword type="class" name="std::pmr::map::value_compare" link="cpp/container/map/value_compare"/>
    <keyword type="function" name="std::pmr::map::value_compare::operator()" link="cpp/container/map/value_compare"/>
    <keyword type="function" name="std::pmr::map::value_compare::value_compare" link="cpp/container/map/value_compare"/>
    <keyword type="" name="std::pmr::map::value_compare::comp" link="cpp/container/map/value_compare"/>
    <keyword type="function" name="std::pmr::map::map" link="cpp/container/map/map"/>
    <keyword type="function" name="std::pmr::map::~map" link="cpp/container/map/~map"/>
    <keyword type="function" name="std::pmr::map::operator=" link="cpp/container/map/operator="/>
    <keyword type="function" name="std::pmr::map::get_allocator" link="cpp/container/map/get_allocator"/>
    <keyword type="function" name="std::pmr::map::at" link="cpp/container/map/at"/>
    <keyword type="function" name="std::pmr::map::operator[]" link="cpp/container/map/operator_at"/>
    <keyword type="function" name="std::pmr::map::begin" link="cpp/container/map/begin"/>
    <keyword type="function" name="std::pmr::map::cbegin" link="cpp/container/map/begin"/>
    <keyword type="function" name="std::pmr::map::end" link="cpp/container/map/end"/>
    <keyword type="function" name="std::pmr::map::cend" link="cpp/container/map/end"/>
    <keyword type="function" name="std::pmr::map::rbegin" link="cpp/container/map/rbegin"/>
    <keyword type="function" name="std::pmr::map::crbegin" link="cpp/container/map/rbegin"/>
    <keyword type="function" name="std::pmr::map::rend" link="cpp/container/map/rend"/>
    <keyword type="function" name="std::pmr::map::crend" link="cpp/container/map/rend"/>
    <keyword type="function" name="std::pmr::map::empty" link="cpp/container/map/empty"/>
    <keyword type="function" name="std::pmr::map::size" link="cpp/container/map/size"/>
    <keyword type="function" name="std::pmr::map::max_size" link="cpp/container/map/max_size"/>
    <keyword type="function" name="std::pmr::map::clear" link="cpp/container/map/clear"/>
    <keyword type="function" name="std::pmr::map::insert" link="cpp/container/map/insert"/>
    <keyword type="function" name="std::pmr::map::insert_or_assign" link="cpp/container/map/insert_or_assign"/>
    <keyword type="function" name="std::pmr::map::emplace" link="cpp/container/map/emplace"/>
    <keyword type="function" name="std::pmr::map::emplace_hint" link="cpp/container/map/emplace_hint"/>
    <keyword type="function" name="std::pmr::map::try_emplace" link="cpp/container/map/try_emplace"/>
    <keyword type="function" name="std::pmr::map::erase" link="cpp/container/map/erase"/>
    <keyword type="function" name="std::pmr::map::swap" link="cpp/container/map/swap"/>
    <keyword type="function" name="std::pmr::map::extract" link="cpp/container/map/extract"/>
    <keyword type="function" name="std::pmr::map::merge" link="cpp/container/map/merge"/>
    <keyword type="function" name="std::pmr::map::count" link="cpp/container/map/count"/>
    <keyword type="function" name="std::pmr::map::find" link="cpp/container/map/find"/>
    <keyword type="function" name="std::pmr::map::contains" link="cpp/container/map/contains"/>
    <keyword type="function" name="std::pmr::map::equal_range" link="cpp/container/map/equal_range"/>
    <keyword type="function" name="std::pmr::map::lower_bound" link="cpp/container/map/lower_bound"/>
    <keyword type="function" name="std::pmr::map::upper_bound" link="cpp/container/map/upper_bound"/>
    <keyword type="function" name="std::pmr::map::key_comp" link="cpp/container/map/key_comp"/>
    <keyword type="function" name="std::pmr::map::value_comp" link="cpp/container/map/value_comp"/>
    <keyword type="function" name="operator==(std::pmr::map)" link="cpp/container/map/operator_cmp"/>
    <keyword type="function" name="operator!=(std::pmr::map)" link="cpp/container/map/operator_cmp"/>
    <keyword type="function" name="operator&lt;(std::pmr::map)" link="cpp/container/map/operator_cmp"/>
    <keyword type="function" name="operator&lt;=(std::pmr::map)" link="cpp/container/map/operator_cmp"/>
    <keyword type="function" name="operator&gt;(std::pmr::map)" link="cpp/container/map/operator_cmp"/>
    <keyword type="function" name="operator&gt;=(std::pmr::map)" link="cpp/container/map/operator_cmp"/>
    <keyword type="function" name="std::swap(std::pmr::map)" link="cpp/container/map/swap2"/>
    <keyword type="function" name="std::erase_if(std::pmr::map)" link="cpp/container/map/erase_if"/>
    <keyword type="class" name="std::multimap" link="cpp/container/multimap"/>
    <keyword type="class" name="std::multimap::value_compare" link="cpp/container/multimap/value_compare"/>
    <keyword type="function" name="std::multimap::value_compare::operator()" link="cpp/container/multimap/value_compare"/>
    <keyword type="function" name="std::multimap::value_compare::value_compare" link="cpp/container/multimap/value_compare"/>
    <keyword type="" name="std::multimap::value_compare::comp" link="cpp/container/multimap/value_compare"/>
    <keyword type="function" name="std::multimap::multimap" link="cpp/container/multimap/multimap"/>
    <keyword type="function" name="std::multimap::~multimap" link="cpp/container/multimap/~multimap"/>
    <keyword type="function" name="std::multimap::operator=" link="cpp/container/multimap/operator="/>
    <keyword type="function" name="std::multimap::get_allocator" link="cpp/container/multimap/get_allocator"/>
    <keyword type="function" name="std::multimap::begin" link="cpp/container/multimap/begin"/>
    <keyword type="function" name="std::multimap::cbegin" link="cpp/container/multimap/begin"/>
    <keyword type="function" name="std::multimap::end" link="cpp/container/multimap/end"/>
    <keyword type="function" name="std::multimap::cend" link="cpp/container/multimap/end"/>
    <keyword type="function" name="std::multimap::rbegin" link="cpp/container/multimap/rbegin"/>
    <keyword type="function" name="std::multimap::crbegin" link="cpp/container/multimap/rbegin"/>
    <keyword type="function" name="std::multimap::rend" link="cpp/container/multimap/rend"/>
    <keyword type="function" name="std::multimap::crend" link="cpp/container/multimap/rend"/>
    <keyword type="function" name="std::multimap::empty" link="cpp/container/multimap/empty"/>
    <keyword type="function" name="std::multimap::size" link="cpp/container/multimap/size"/>
    <keyword type="function" name="std::multimap::max_size" link="cpp/container/multimap/max_size"/>
    <keyword type="function" name="std::multimap::clear" link="cpp/container/multimap/clear"/>
    <keyword type="function" name="std::multimap::insert" link="cpp/container/multimap/insert"/>
    <keyword type="function" name="std::multimap::emplace" link="cpp/container/multimap/emplace"/>
    <keyword type="function" name="std::multimap::emplace_hint" link="cpp/container/multimap/emplace_hint"/>
    <keyword type="function" name="std::multimap::erase" link="cpp/container/multimap/erase"/>
    <keyword type="function" name="std::multimap::swap" link="cpp/container/multimap/swap"/>
    <keyword type="function" name="std::multimap::extract" link="cpp/container/multimap/extract"/>
    <keyword type="function" name="std::multimap::merge" link="cpp/container/multimap/merge"/>
    <keyword type="function" name="std::multimap::count" link="cpp/container/multimap/count"/>
    <keyword type="function" name="std::multimap::find" link="cpp/container/multimap/find"/>
    <keyword type="function" name="std::multimap::contains" link="cpp/container/multimap/contains"/>
    <keyword type="function" name="std::multimap::equal_range" link="cpp/container/multimap/equal_range"/>
    <keyword type="function" name="std::multimap::lower_bound" link="cpp/container/multimap/lower_bound"/>
    <keyword type="function" name="std::multimap::upper_bound" link="cpp/container/multimap/upper_bound"/>
    <keyword type="function" name="std::multimap::key_comp" link="cpp/container/multimap/key_comp"/>
    <keyword type="function" name="std::multimap::value_comp" link="cpp/container/multimap/value_comp"/>
    <keyword type="function" name="operator==(std::multimap)" link="cpp/container/multimap/operator_cmp"/>
    <keyword type="function" name="operator!=(std::multimap)" link="cpp/container/multimap/operator_cmp"/>
    <keyword type="function" name="operator&lt;(std::multimap)" link="cpp/container/multimap/operator_cmp"/>
    <keyword type="function" name="operator&lt;=(std::multimap)" link="cpp/container/multimap/operator_cmp"/>
    <keyword type="function" name="operator&gt;(std::multimap)" link="cpp/container/multimap/operator_cmp"/>
    <keyword type="function" name="operator&gt;=(std::multimap)" link="cpp/container/multimap/operator_cmp"/>
    <keyword type="function" name="std::swap(std::multimap)" link="cpp/container/multimap/swap2"/>
    <keyword type="function" name="std::erase_if(std::multimap)" link="cpp/container/multimap/erase_if"/>
    <keyword type="typedef" name="std::pmr::multimap" link="cpp/container/multimap"/>
    <keyword type="class" name="std::pmr::multimap::value_compare" link="cpp/container/multimap/value_compare"/>
    <keyword type="function" name="std::pmr::multimap::value_compare::operator()" link="cpp/container/multimap/value_compare"/>
    <keyword type="function" name="std::pmr::multimap::value_compare::value_compare" link="cpp/container/multimap/value_compare"/>
    <keyword type="" name="std::pmr::multimap::value_compare::comp" link="cpp/container/multimap/value_compare"/>
    <keyword type="function" name="std::pmr::multimap::multimap" link="cpp/container/multimap/multimap"/>
    <keyword type="function" name="std::pmr::multimap::~multimap" link="cpp/container/multimap/~multimap"/>
    <keyword type="function" name="std::pmr::multimap::operator=" link="cpp/container/multimap/operator="/>
    <keyword type="function" name="std::pmr::multimap::get_allocator" link="cpp/container/multimap/get_allocator"/>
    <keyword type="function" name="std::pmr::multimap::begin" link="cpp/container/multimap/begin"/>
    <keyword type="function" name="std::pmr::multimap::cbegin" link="cpp/container/multimap/begin"/>
    <keyword type="function" name="std::pmr::multimap::end" link="cpp/container/multimap/end"/>
    <keyword type="function" name="std::pmr::multimap::cend" link="cpp/container/multimap/end"/>
    <keyword type="function" name="std::pmr::multimap::rbegin" link="cpp/container/multimap/rbegin"/>
    <keyword type="function" name="std::pmr::multimap::crbegin" link="cpp/container/multimap/rbegin"/>
    <keyword type="function" name="std::pmr::multimap::rend" link="cpp/container/multimap/rend"/>
    <keyword type="function" name="std::pmr::multimap::crend" link="cpp/container/multimap/rend"/>
    <keyword type="function" name="std::pmr::multimap::empty" link="cpp/container/multimap/empty"/>
    <keyword type="function" name="std::pmr::multimap::size" link="cpp/container/multimap/size"/>
    <keyword type="function" name="std::pmr::multimap::max_size" link="cpp/container/multimap/max_size"/>
    <keyword type="function" name="std::pmr::multimap::clear" link="cpp/container/multimap/clear"/>
    <keyword type="function" name="std::pmr::multimap::insert" link="cpp/container/multimap/insert"/>
    <keyword type="function" name="std::pmr::multimap::emplace" link="cpp/container/multimap/emplace"/>
    <keyword type="function" name="std::pmr::multimap::emplace_hint" link="cpp/container/multimap/emplace_hint"/>
    <keyword type="function" name="std::pmr::multimap::erase" link="cpp/container/multimap/erase"/>
    <keyword type="function" name="std::pmr::multimap::swap" link="cpp/container/multimap/swap"/>
    <keyword type="function" name="std::pmr::multimap::extract" link="cpp/container/multimap/extract"/>
    <keyword type="function" name="std::pmr::multimap::merge" link="cpp/container/multimap/merge"/>
    <keyword type="function" name="std::pmr::multimap::count" link="cpp/container/multimap/count"/>
    <keyword type="function" name="std::pmr::multimap::find" link="cpp/container/multimap/find"/>
    <keyword type="function" name="std::pmr::multimap::contains" link="cpp/container/multimap/contains"/>
    <keyword type="function" name="std::pmr::multimap::equal_range" link="cpp/container/multimap/equal_range"/>
    <keyword type="function" name="std::pmr::multimap::lower_bound" link="cpp/container/multimap/lower_bound"/>
    <keyword type="function" name="std::pmr::multimap::upper_bound" link="cpp/container/multimap/upper_bound"/>
    <keyword type="function" name="std::pmr::multimap::key_comp" link="cpp/container/multimap/key_comp"/>
    <keyword type="function" name="std::pmr::multimap::value_comp" link="cpp/container/multimap/value_comp"/>
    <keyword type="function" name="operator==(std::pmr::multimap)" link="cpp/container/multimap/operator_cmp"/>
    <keyword type="function" name="operator!=(std::pmr::multimap)" link="cpp/container/multimap/operator_cmp"/>
    <keyword type="function" name="operator&lt;(std::pmr::multimap)" link="cpp/container/multimap/operator_cmp"/>
    <keyword type="function" name="operator&lt;=(std::pmr::multimap)" link="cpp/container/multimap/operator_cmp"/>
    <keyword type="function" name="operator&gt;(std::pmr::multimap)" link="cpp/container/multimap/operator_cmp"/>
    <keyword type="function" name="operator&gt;=(std::pmr::multimap)" link="cpp/container/multimap/operator_cmp"/>
    <keyword type="function" name="std::swap(std::pmr::multimap)" link="cpp/container/multimap/swap2"/>
    <keyword type="function" name="std::erase_if(std::pmr::multimap)" link="cpp/container/multimap/erase_if"/>
    <keyword type="class" name="std::unordered_set" link="cpp/container/unordered_set"/>
    <keyword type="function" name="std::unordered_set::unordered_set" link="cpp/container/unordered_set/unordered_set"/>
    <keyword type="function" name="std::unordered_set::~unordered_set" link="cpp/container/unordered_set/~unordered_set"/>
    <keyword type="function" name="std::unordered_set::operator=" link="cpp/container/unordered_set/operator="/>
    <keyword type="function" name="std::unordered_set::get_allocator" link="cpp/container/unordered_set/get_allocator"/>
    <keyword type="function" name="std::unordered_set::begin" link="cpp/container/unordered_set/begin"/>
    <keyword type="function" name="std::unordered_set::cbegin" link="cpp/container/unordered_set/begin"/>
    <keyword type="function" name="std::unordered_set::end" link="cpp/container/unordered_set/end"/>
    <keyword type="function" name="std::unordered_set::cend" link="cpp/container/unordered_set/end"/>
    <keyword type="function" name="std::unordered_set::empty" link="cpp/container/unordered_set/empty"/>
    <keyword type="function" name="std::unordered_set::size" link="cpp/container/unordered_set/size"/>
    <keyword type="function" name="std::unordered_set::max_size" link="cpp/container/unordered_set/max_size"/>
    <keyword type="function" name="std::unordered_set::clear" link="cpp/container/unordered_set/clear"/>
    <keyword type="function" name="std::unordered_set::insert" link="cpp/container/unordered_set/insert"/>
    <keyword type="function" name="std::unordered_set::emplace" link="cpp/container/unordered_set/emplace"/>
    <keyword type="function" name="std::unordered_set::emplace_hint" link="cpp/container/unordered_set/emplace_hint"/>
    <keyword type="function" name="std::unordered_set::erase" link="cpp/container/unordered_set/erase"/>
    <keyword type="function" name="std::unordered_set::swap" link="cpp/container/unordered_set/swap"/>
    <keyword type="function" name="std::unordered_set::extract" link="cpp/container/unordered_set/extract"/>
    <keyword type="function" name="std::unordered_set::merge" link="cpp/container/unordered_set/merge"/>
    <keyword type="function" name="std::unordered_set::count" link="cpp/container/unordered_set/count"/>
    <keyword type="function" name="std::unordered_set::find" link="cpp/container/unordered_set/find"/>
    <keyword type="function" name="std::unordered_set::contains" link="cpp/container/unordered_set/contains"/>
    <keyword type="function" name="std::unordered_set::equal_range" link="cpp/container/unordered_set/equal_range"/>
    <keyword type="function" name="std::unordered_set::begin(int)" link="cpp/container/unordered_set/begin2"/>
    <keyword type="function" name="std::unordered_set::cbegin(int)" link="cpp/container/unordered_set/begin2"/>
    <keyword type="function" name="std::unordered_set::end(int)" link="cpp/container/unordered_set/end2"/>
    <keyword type="function" name="std::unordered_set::cend(int)" link="cpp/container/unordered_set/end2"/>
    <keyword type="function" name="std::unordered_set::bucket_count" link="cpp/container/unordered_set/bucket_count"/>
    <keyword type="function" name="std::unordered_set::max_bucket_count" link="cpp/container/unordered_set/max_bucket_count"/>
    <keyword type="function" name="std::unordered_set::bucket_size" link="cpp/container/unordered_set/bucket_size"/>
    <keyword type="function" name="std::unordered_set::bucket" link="cpp/container/unordered_set/bucket"/>
    <keyword type="function" name="std::unordered_set::load_factor" link="cpp/container/unordered_set/load_factor"/>
    <keyword type="function" name="std::unordered_set::max_load_factor" link="cpp/container/unordered_set/max_load_factor"/>
    <keyword type="function" name="std::unordered_set::reserve" link="cpp/container/unordered_set/reserve"/>
    <keyword type="function" name="std::unordered_set::rehash" link="cpp/container/unordered_set/rehash"/>
    <keyword type="function" name="std::unordered_set::hash_function" link="cpp/container/unordered_set/hash_function"/>
    <keyword type="function" name="std::unordered_set::key_eq" link="cpp/container/unordered_set/key_eq"/>
    <keyword type="function" name="operator==(std::unordered_set)" link="cpp/container/unordered_set/operator_cmp"/>
    <keyword type="function" name="operator!=(std::unordered_set)" link="cpp/container/unordered_set/operator_cmp"/>
    <keyword type="function" name="std::swap(std::unordered_set)" link="cpp/container/unordered_set/swap2"/>
    <keyword type="function" name="std::erase_if(std::unordered_set)" link="cpp/container/unordered_set/erase_if"/>
    <keyword type="typedef" name="std::pmr::unordered_set" link="cpp/container/unordered_set"/>
    <keyword type="function" name="std::pmr::unordered_set::unordered_set" link="cpp/container/unordered_set/unordered_set"/>
    <keyword type="function" name="std::pmr::unordered_set::~unordered_set" link="cpp/container/unordered_set/~unordered_set"/>
    <keyword type="function" name="std::pmr::unordered_set::operator=" link="cpp/container/unordered_set/operator="/>
    <keyword type="function" name="std::pmr::unordered_set::get_allocator" link="cpp/container/unordered_set/get_allocator"/>
    <keyword type="function" name="std::pmr::unordered_set::begin" link="cpp/container/unordered_set/begin"/>
    <keyword type="function" name="std::pmr::unordered_set::cbegin" link="cpp/container/unordered_set/begin"/>
    <keyword type="function" name="std::pmr::unordered_set::end" link="cpp/container/unordered_set/end"/>
    <keyword type="function" name="std::pmr::unordered_set::cend" link="cpp/container/unordered_set/end"/>
    <keyword type="function" name="std::pmr::unordered_set::empty" link="cpp/container/unordered_set/empty"/>
    <keyword type="function" name="std::pmr::unordered_set::size" link="cpp/container/unordered_set/size"/>
    <keyword type="function" name="std::pmr::unordered_set::max_size" link="cpp/container/unordered_set/max_size"/>
    <keyword type="function" name="std::pmr::unordered_set::clear" link="cpp/container/unordered_set/clear"/>
    <keyword type="function" name="std::pmr::unordered_set::insert" link="cpp/container/unordered_set/insert"/>
    <keyword type="function" name="std::pmr::unordered_set::emplace" link="cpp/container/unordered_set/emplace"/>
    <keyword type="function" name="std::pmr::unordered_set::emplace_hint" link="cpp/container/unordered_set/emplace_hint"/>
    <keyword type="function" name="std::pmr::unordered_set::erase" link="cpp/container/unordered_set/erase"/>
    <keyword type="function" name="std::pmr::unordered_set::swap" link="cpp/container/unordered_set/swap"/>
    <keyword type="function" name="std::pmr::unordered_set::extract" link="cpp/container/unordered_set/extract"/>
    <keyword type="function" name="std::pmr::unordered_set::merge" link="cpp/container/unordered_set/merge"/>
    <keyword type="function" name="std::pmr::unordered_set::count" link="cpp/container/unordered_set/count"/>
    <keyword type="function" name="std::pmr::unordered_set::find" link="cpp/container/unordered_set/find"/>
    <keyword type="function" name="std::pmr::unordered_set::contains" link="cpp/container/unordered_set/contains"/>
    <keyword type="function" name="std::pmr::unordered_set::equal_range" link="cpp/container/unordered_set/equal_range"/>
    <keyword type="function" name="std::pmr::unordered_set::begin(int)" link="cpp/container/unordered_set/begin2"/>
    <keyword type="function" name="std::pmr::unordered_set::cbegin(int)" link="cpp/container/unordered_set/begin2"/>
    <keyword type="function" name="std::pmr::unordered_set::end(int)" link="cpp/container/unordered_set/end2"/>
    <keyword type="function" name="std::pmr::unordered_set::cend(int)" link="cpp/container/unordered_set/end2"/>
    <keyword type="function" name="std::pmr::unordered_set::bucket_count" link="cpp/container/unordered_set/bucket_count"/>
    <keyword type="function" name="std::pmr::unordered_set::max_bucket_count" link="cpp/container/unordered_set/max_bucket_count"/>
    <keyword type="function" name="std::pmr::unordered_set::bucket_size" link="cpp/container/unordered_set/bucket_size"/>
    <keyword type="function" name="std::pmr::unordered_set::bucket" link="cpp/container/unordered_set/bucket"/>
    <keyword type="function" name="std::pmr::unordered_set::load_factor" link="cpp/container/unordered_set/load_factor"/>
    <keyword type="function" name="std::pmr::unordered_set::max_load_factor" link="cpp/container/unordered_set/max_load_factor"/>
    <keyword type="function" name="std::pmr::unordered_set::reserve" link="cpp/container/unordered_set/reserve"/>
    <keyword type="function" name="std::pmr::unordered_set::rehash" link="cpp/container/unordered_set/rehash"/>
    <keyword type="function" name="std::pmr::unordered_set::hash_function" link="cpp/container/unordered_set/hash_function"/>
    <keyword type="function" name="std::pmr::unordered_set::key_eq" link="cpp/container/unordered_set/key_eq"/>
    <keyword type="function" name="operator==(std::pmr::unordered_set)" link="cpp/container/unordered_set/operator_cmp"/>
    <keyword type="function" name="operator!=(std::pmr::unordered_set)" link="cpp/container/unordered_set/operator_cmp"/>
    <keyword type="function" name="std::swap(std::pmr::unordered_set)" link="cpp/container/unordered_set/swap2"/>
    <keyword type="function" name="std::erase_if(std::pmr::unordered_set)" link="cpp/container/unordered_set/erase_if"/>
    <keyword type="class" name="std::unordered_multiset" link="cpp/container/unordered_multiset"/>
    <keyword type="function" name="std::unordered_multiset::unordered_multiset" link="cpp/container/unordered_multiset/unordered_multiset"/>
    <keyword type="function" name="std::unordered_multiset::~unordered_multiset" link="cpp/container/unordered_multiset/~unordered_multiset"/>
    <keyword type="function" name="std::unordered_multiset::operator=" link="cpp/container/unordered_multiset/operator="/>
    <keyword type="function" name="std::unordered_multiset::get_allocator" link="cpp/container/unordered_multiset/get_allocator"/>
    <keyword type="function" name="std::unordered_multiset::begin" link="cpp/container/unordered_multiset/begin"/>
    <keyword type="function" name="std::unordered_multiset::cbegin" link="cpp/container/unordered_multiset/begin"/>
    <keyword type="function" name="std::unordered_multiset::end" link="cpp/container/unordered_multiset/end"/>
    <keyword type="function" name="std::unordered_multiset::cend" link="cpp/container/unordered_multiset/end"/>
    <keyword type="function" name="std::unordered_multiset::empty" link="cpp/container/unordered_multiset/empty"/>
    <keyword type="function" name="std::unordered_multiset::size" link="cpp/container/unordered_multiset/size"/>
    <keyword type="function" name="std::unordered_multiset::max_size" link="cpp/container/unordered_multiset/max_size"/>
    <keyword type="function" name="std::unordered_multiset::clear" link="cpp/container/unordered_multiset/clear"/>
    <keyword type="function" name="std::unordered_multiset::insert" link="cpp/container/unordered_multiset/insert"/>
    <keyword type="function" name="std::unordered_multiset::emplace" link="cpp/container/unordered_multiset/emplace"/>
    <keyword type="function" name="std::unordered_multiset::emplace_hint" link="cpp/container/unordered_multiset/emplace_hint"/>
    <keyword type="function" name="std::unordered_multiset::erase" link="cpp/container/unordered_multiset/erase"/>
    <keyword type="function" name="std::unordered_multiset::swap" link="cpp/container/unordered_multiset/swap"/>
    <keyword type="function" name="std::unordered_multiset::extract" link="cpp/container/unordered_multiset/extract"/>
    <keyword type="function" name="std::unordered_multiset::merge" link="cpp/container/unordered_multiset/merge"/>
    <keyword type="function" name="std::unordered_multiset::count" link="cpp/container/unordered_multiset/count"/>
    <keyword type="function" name="std::unordered_multiset::find" link="cpp/container/unordered_multiset/find"/>
    <keyword type="function" name="std::unordered_multiset::contains" link="cpp/container/unordered_multiset/contains"/>
    <keyword type="function" name="std::unordered_multiset::equal_range" link="cpp/container/unordered_multiset/equal_range"/>
    <keyword type="function" name="std::unordered_multiset::begin(int)" link="cpp/container/unordered_multiset/begin2"/>
    <keyword type="function" name="std::unordered_multiset::cbegin(int)" link="cpp/container/unordered_multiset/begin2"/>
    <keyword type="function" name="std::unordered_multiset::end(int)" link="cpp/container/unordered_multiset/end2"/>
    <keyword type="function" name="std::unordered_multiset::cend(int)" link="cpp/container/unordered_multiset/end2"/>
    <keyword type="function" name="std::unordered_multiset::bucket_count" link="cpp/container/unordered_multiset/bucket_count"/>
    <keyword type="function" name="std::unordered_multiset::max_bucket_count" link="cpp/container/unordered_multiset/max_bucket_count"/>
    <keyword type="function" name="std::unordered_multiset::bucket_size" link="cpp/container/unordered_multiset/bucket_size"/>
    <keyword type="function" name="std::unordered_multiset::bucket" link="cpp/container/unordered_multiset/bucket"/>
    <keyword type="function" name="std::unordered_multiset::load_factor" link="cpp/container/unordered_multiset/load_factor"/>
    <keyword type="function" name="std::unordered_multiset::max_load_factor" link="cpp/container/unordered_multiset/max_load_factor"/>
    <keyword type="function" name="std::unordered_multiset::reserve" link="cpp/container/unordered_multiset/reserve"/>
    <keyword type="function" name="std::unordered_multiset::rehash" link="cpp/container/unordered_multiset/rehash"/>
    <keyword type="function" name="std::unordered_multiset::hash_function" link="cpp/container/unordered_multiset/hash_function"/>
    <keyword type="function" name="std::unordered_multiset::key_eq" link="cpp/container/unordered_multiset/key_eq"/>
    <keyword type="function" name="operator==(std::unordered_multiset)" link="cpp/container/unordered_multiset/operator_cmp"/>
    <keyword type="function" name="operator!=(std::unordered_multiset)" link="cpp/container/unordered_multiset/operator_cmp"/>
    <keyword type="function" name="std::swap(std::unordered_multiset)" link="cpp/container/unordered_multiset/swap2"/>
    <keyword type="function" name="std::erase_if(std::unordered_multiset)" link="cpp/container/unordered_multiset/erase_if"/>
    <keyword type="typedef" name="std::pmr::unordered_multiset" link="cpp/container/unordered_multiset"/>
    <keyword type="function" name="std::pmr::unordered_multiset::unordered_multiset" link="cpp/container/unordered_multiset/unordered_multiset"/>
    <keyword type="function" name="std::pmr::unordered_multiset::~unordered_multiset" link="cpp/container/unordered_multiset/~unordered_multiset"/>
    <keyword type="function" name="std::pmr::unordered_multiset::operator=" link="cpp/container/unordered_multiset/operator="/>
    <keyword type="function" name="std::pmr::unordered_multiset::get_allocator" link="cpp/container/unordered_multiset/get_allocator"/>
    <keyword type="function" name="std::pmr::unordered_multiset::begin" link="cpp/container/unordered_multiset/begin"/>
    <keyword type="function" name="std::pmr::unordered_multiset::cbegin" link="cpp/container/unordered_multiset/begin"/>
    <keyword type="function" name="std::pmr::unordered_multiset::end" link="cpp/container/unordered_multiset/end"/>
    <keyword type="function" name="std::pmr::unordered_multiset::cend" link="cpp/container/unordered_multiset/end"/>
    <keyword type="function" name="std::pmr::unordered_multiset::empty" link="cpp/container/unordered_multiset/empty"/>
    <keyword type="function" name="std::pmr::unordered_multiset::size" link="cpp/container/unordered_multiset/size"/>
    <keyword type="function" name="std::pmr::unordered_multiset::max_size" link="cpp/container/unordered_multiset/max_size"/>
    <keyword type="function" name="std::pmr::unordered_multiset::clear" link="cpp/container/unordered_multiset/clear"/>
    <keyword type="function" name="std::pmr::unordered_multiset::insert" link="cpp/container/unordered_multiset/insert"/>
    <keyword type="function" name="std::pmr::unordered_multiset::emplace" link="cpp/container/unordered_multiset/emplace"/>
    <keyword type="function" name="std::pmr::unordered_multiset::emplace_hint" link="cpp/container/unordered_multiset/emplace_hint"/>
    <keyword type="function" name="std::pmr::unordered_multiset::erase" link="cpp/container/unordered_multiset/erase"/>
    <keyword type="function" name="std::pmr::unordered_multiset::swap" link="cpp/container/unordered_multiset/swap"/>
    <keyword type="function" name="std::pmr::unordered_multiset::extract" link="cpp/container/unordered_multiset/extract"/>
    <keyword type="function" name="std::pmr::unordered_multiset::merge" link="cpp/container/unordered_multiset/merge"/>
    <keyword type="function" name="std::pmr::unordered_multiset::count" link="cpp/container/unordered_multiset/count"/>
    <keyword type="function" name="std::pmr::unordered_multiset::find" link="cpp/container/unordered_multiset/find"/>
    <keyword type="function" name="std::pmr::unordered_multiset::contains" link="cpp/container/unordered_multiset/contains"/>
    <keyword type="function" name="std::pmr::unordered_multiset::equal_range" link="cpp/container/unordered_multiset/equal_range"/>
    <keyword type="function" name="std::pmr::unordered_multiset::begin(int)" link="cpp/container/unordered_multiset/begin2"/>
    <keyword type="function" name="std::pmr::unordered_multiset::cbegin(int)" link="cpp/container/unordered_multiset/begin2"/>
    <keyword type="function" name="std::pmr::unordered_multiset::end(int)" link="cpp/container/unordered_multiset/end2"/>
    <keyword type="function" name="std::pmr::unordered_multiset::cend(int)" link="cpp/container/unordered_multiset/end2"/>
    <keyword type="function" name="std::pmr::unordered_multiset::bucket_count" link="cpp/container/unordered_multiset/bucket_count"/>
    <keyword type="function" name="std::pmr::unordered_multiset::max_bucket_count" link="cpp/container/unordered_multiset/max_bucket_count"/>
    <keyword type="function" name="std::pmr::unordered_multiset::bucket_size" link="cpp/container/unordered_multiset/bucket_size"/>
    <keyword type="function" name="std::pmr::unordered_multiset::bucket" link="cpp/container/unordered_multiset/bucket"/>
    <keyword type="function" name="std::pmr::unordered_multiset::load_factor" link="cpp/container/unordered_multiset/load_factor"/>
    <keyword type="function" name="std::pmr::unordered_multiset::max_load_factor" link="cpp/container/unordered_multiset/max_load_factor"/>
    <keyword type="function" name="std::pmr::unordered_multiset::reserve" link="cpp/container/unordered_multiset/reserve"/>
    <keyword type="function" name="std::pmr::unordered_multiset::rehash" link="cpp/container/unordered_multiset/rehash"/>
    <keyword type="function" name="std::pmr::unordered_multiset::hash_function" link="cpp/container/unordered_multiset/hash_function"/>
    <keyword type="function" name="std::pmr::unordered_multiset::key_eq" link="cpp/container/unordered_multiset/key_eq"/>
    <keyword type="function" name="operator==(std::pmr::unordered_multiset)" link="cpp/container/unordered_multiset/operator_cmp"/>
    <keyword type="function" name="operator!=(std::pmr::unordered_multiset)" link="cpp/container/unordered_multiset/operator_cmp"/>
    <keyword type="function" name="std::swap(std::pmr::unordered_multiset)" link="cpp/container/unordered_multiset/swap2"/>
    <keyword type="function" name="std::erase_if(std::pmr::unordered_multiset)" link="cpp/container/unordered_multiset/erase_if"/>
    <keyword type="class" name="std::unordered_map" link="cpp/container/unordered_map"/>
    <keyword type="function" name="std::unordered_map::unordered_map" link="cpp/container/unordered_map/unordered_map"/>
    <keyword type="function" name="std::unordered_map::~unordered_map" link="cpp/container/unordered_map/~unordered_map"/>
    <keyword type="function" name="std::unordered_map::operator=" link="cpp/container/unordered_map/operator="/>
    <keyword type="function" name="std::unordered_map::get_allocator" link="cpp/container/unordered_map/get_allocator"/>
    <keyword type="function" name="std::unordered_map::begin" link="cpp/container/unordered_map/begin"/>
    <keyword type="function" name="std::unordered_map::cbegin" link="cpp/container/unordered_map/begin"/>
    <keyword type="function" name="std::unordered_map::end" link="cpp/container/unordered_map/end"/>
    <keyword type="function" name="std::unordered_map::cend" link="cpp/container/unordered_map/end"/>
    <keyword type="function" name="std::unordered_map::empty" link="cpp/container/unordered_map/empty"/>
    <keyword type="function" name="std::unordered_map::size" link="cpp/container/unordered_map/size"/>
    <keyword type="function" name="std::unordered_map::max_size" link="cpp/container/unordered_map/max_size"/>
    <keyword type="function" name="std::unordered_map::clear" link="cpp/container/unordered_map/clear"/>
    <keyword type="function" name="std::unordered_map::insert" link="cpp/container/unordered_map/insert"/>
    <keyword type="function" name="std::unordered_map::insert_or_assign" link="cpp/container/unordered_map/insert_or_assign"/>
    <keyword type="function" name="std::unordered_map::emplace" link="cpp/container/unordered_map/emplace"/>
    <keyword type="function" name="std::unordered_map::emplace_hint" link="cpp/container/unordered_map/emplace_hint"/>
    <keyword type="function" name="std::unordered_map::try_emplace" link="cpp/container/unordered_map/try_emplace"/>
    <keyword type="function" name="std::unordered_map::erase" link="cpp/container/unordered_map/erase"/>
    <keyword type="function" name="std::unordered_map::swap" link="cpp/container/unordered_map/swap"/>
    <keyword type="function" name="std::unordered_map::extract" link="cpp/container/unordered_map/extract"/>
    <keyword type="function" name="std::unordered_map::merge" link="cpp/container/unordered_map/merge"/>
    <keyword type="function" name="std::unordered_map::at" link="cpp/container/unordered_map/at"/>
    <keyword type="function" name="std::unordered_map::operator[]" link="cpp/container/unordered_map/operator_at"/>
    <keyword type="function" name="std::unordered_map::count" link="cpp/container/unordered_map/count"/>
    <keyword type="function" name="std::unordered_map::find" link="cpp/container/unordered_map/find"/>
    <keyword type="function" name="std::unordered_map::contains" link="cpp/container/unordered_map/contains"/>
    <keyword type="function" name="std::unordered_map::equal_range" link="cpp/container/unordered_map/equal_range"/>
    <keyword type="function" name="std::unordered_map::begin(int)" link="cpp/container/unordered_map/begin2"/>
    <keyword type="function" name="std::unordered_map::cbegin(int)" link="cpp/container/unordered_map/begin2"/>
    <keyword type="function" name="std::unordered_map::end(int)" link="cpp/container/unordered_map/end2"/>
    <keyword type="function" name="std::unordered_map::cend(int)" link="cpp/container/unordered_map/end2"/>
    <keyword type="function" name="std::unordered_map::bucket_count" link="cpp/container/unordered_map/bucket_count"/>
    <keyword type="function" name="std::unordered_map::max_bucket_count" link="cpp/container/unordered_map/max_bucket_count"/>
    <keyword type="function" name="std::unordered_map::bucket_size" link="cpp/container/unordered_map/bucket_size"/>
    <keyword type="function" name="std::unordered_map::bucket" link="cpp/container/unordered_map/bucket"/>
    <keyword type="function" name="std::unordered_map::load_factor" link="cpp/container/unordered_map/load_factor"/>
    <keyword type="function" name="std::unordered_map::max_load_factor" link="cpp/container/unordered_map/max_load_factor"/>
    <keyword type="function" name="std::unordered_map::reserve" link="cpp/container/unordered_map/reserve"/>
    <keyword type="function" name="std::unordered_map::rehash" link="cpp/container/unordered_map/rehash"/>
    <keyword type="function" name="std::unordered_map::hash_function" link="cpp/container/unordered_map/hash_function"/>
    <keyword type="function" name="std::unordered_map::key_eq" link="cpp/container/unordered_map/key_eq"/>
    <keyword type="function" name="operator==(std::unordered_map)" link="cpp/container/unordered_map/operator_cmp"/>
    <keyword type="function" name="operator!=(std::unordered_map)" link="cpp/container/unordered_map/operator_cmp"/>
    <keyword type="function" name="std::swap(std::unordered_map)" link="cpp/container/unordered_map/swap2"/>
    <keyword type="function" name="std::erase_if(std::unordered_map)" link="cpp/container/unordered_map/erase_if"/>
    <keyword type="typedef" name="std::pmr::unordered_map" link="cpp/container/unordered_map"/>
    <keyword type="function" name="std::pmr::unordered_map::unordered_map" link="cpp/container/unordered_map/unordered_map"/>
    <keyword type="function" name="std::pmr::unordered_map::~unordered_map" link="cpp/container/unordered_map/~unordered_map"/>
    <keyword type="function" name="std::pmr::unordered_map::operator=" link="cpp/container/unordered_map/operator="/>
    <keyword type="function" name="std::pmr::unordered_map::get_allocator" link="cpp/container/unordered_map/get_allocator"/>
    <keyword type="function" name="std::pmr::unordered_map::begin" link="cpp/container/unordered_map/begin"/>
    <keyword type="function" name="std::pmr::unordered_map::cbegin" link="cpp/container/unordered_map/begin"/>
    <keyword type="function" name="std::pmr::unordered_map::end" link="cpp/container/unordered_map/end"/>
    <keyword type="function" name="std::pmr::unordered_map::cend" link="cpp/container/unordered_map/end"/>
    <keyword type="function" name="std::pmr::unordered_map::empty" link="cpp/container/unordered_map/empty"/>
    <keyword type="function" name="std::pmr::unordered_map::size" link="cpp/container/unordered_map/size"/>
    <keyword type="function" name="std::pmr::unordered_map::max_size" link="cpp/container/unordered_map/max_size"/>
    <keyword type="function" name="std::pmr::unordered_map::clear" link="cpp/container/unordered_map/clear"/>
    <keyword type="function" name="std::pmr::unordered_map::insert" link="cpp/container/unordered_map/insert"/>
    <keyword type="function" name="std::pmr::unordered_map::insert_or_assign" link="cpp/container/unordered_map/insert_or_assign"/>
    <keyword type="function" name="std::pmr::unordered_map::emplace" link="cpp/container/unordered_map/emplace"/>
    <keyword type="function" name="std::pmr::unordered_map::emplace_hint" link="cpp/container/unordered_map/emplace_hint"/>
    <keyword type="function" name="std::pmr::unordered_map::try_emplace" link="cpp/container/unordered_map/try_emplace"/>
    <keyword type="function" name="std::pmr::unordered_map::erase" link="cpp/container/unordered_map/erase"/>
    <keyword type="function" name="std::pmr::unordered_map::swap" link="cpp/container/unordered_map/swap"/>
    <keyword type="function" name="std::pmr::unordered_map::extract" link="cpp/container/unordered_map/extract"/>
    <keyword type="function" name="std::pmr::unordered_map::merge" link="cpp/container/unordered_map/merge"/>
    <keyword type="function" name="std::pmr::unordered_map::at" link="cpp/container/unordered_map/at"/>
    <keyword type="function" name="std::pmr::unordered_map::operator[]" link="cpp/container/unordered_map/operator_at"/>
    <keyword type="function" name="std::pmr::unordered_map::count" link="cpp/container/unordered_map/count"/>
    <keyword type="function" name="std::pmr::unordered_map::find" link="cpp/container/unordered_map/find"/>
    <keyword type="function" name="std::pmr::unordered_map::contains" link="cpp/container/unordered_map/contains"/>
    <keyword type="function" name="std::pmr::unordered_map::equal_range" link="cpp/container/unordered_map/equal_range"/>
    <keyword type="function" name="std::pmr::unordered_map::begin(int)" link="cpp/container/unordered_map/begin2"/>
    <keyword type="function" name="std::pmr::unordered_map::cbegin(int)" link="cpp/container/unordered_map/begin2"/>
    <keyword type="function" name="std::pmr::unordered_map::end(int)" link="cpp/container/unordered_map/end2"/>
    <keyword type="function" name="std::pmr::unordered_map::cend(int)" link="cpp/container/unordered_map/end2"/>
    <keyword type="function" name="std::pmr::unordered_map::bucket_count" link="cpp/container/unordered_map/bucket_count"/>
    <keyword type="function" name="std::pmr::unordered_map::max_bucket_count" link="cpp/container/unordered_map/max_bucket_count"/>
    <keyword type="function" name="std::pmr::unordered_map::bucket_size" link="cpp/container/unordered_map/bucket_size"/>
    <keyword type="function" name="std::pmr::unordered_map::bucket" link="cpp/container/unordered_map/bucket"/>
    <keyword type="function" name="std::pmr::unordered_map::load_factor" link="cpp/container/unordered_map/load_factor"/>
    <keyword type="function" name="std::pmr::unordered_map::max_load_factor" link="cpp/container/unordered_map/max_load_factor"/>
    <keyword type="function" name="std::pmr::unordered_map::reserve" link="cpp/container/unordered_map/reserve"/>
    <keyword type="function" name="std::pmr::unordered_map::rehash" link="cpp/container/unordered_map/rehash"/>
    <keyword type="function" name="std::pmr::unordered_map::hash_function" link="cpp/container/unordered_map/hash_function"/>
    <keyword type="function" name="std::pmr::unordered_map::key_eq" link="cpp/container/unordered_map/key_eq"/>
    <keyword type="function" name="operator==(std::pmr::unordered_map)" link="cpp/container/unordered_map/operator_cmp"/>
    <keyword type="function" name="operator!=(std::pmr::unordered_map)" link="cpp/container/unordered_map/operator_cmp"/>
    <keyword type="function" name="std::swap(std::pmr::unordered_map)" link="cpp/container/unordered_map/swap2"/>
    <keyword type="function" name="std::erase_if(std::pmr::unordered_map)" link="cpp/container/unordered_map/erase_if"/>
    <keyword type="class" name="std::unordered_multimap" link="cpp/container/unordered_multimap"/>
    <keyword type="function" name="std::unordered_multimap::unordered_multimap" link="cpp/container/unordered_multimap/unordered_multimap"/>
    <keyword type="function" name="std::unordered_multimap::~unordered_multimap" link="cpp/container/unordered_multimap/~unordered_multimap"/>
    <keyword type="function" name="std::unordered_multimap::operator=" link="cpp/container/unordered_multimap/operator="/>
    <keyword type="function" name="std::unordered_multimap::get_allocator" link="cpp/container/unordered_multimap/get_allocator"/>
    <keyword type="function" name="std::unordered_multimap::begin" link="cpp/container/unordered_multimap/begin"/>
    <keyword type="function" name="std::unordered_multimap::cbegin" link="cpp/container/unordered_multimap/begin"/>
    <keyword type="function" name="std::unordered_multimap::end" link="cpp/container/unordered_multimap/end"/>
    <keyword type="function" name="std::unordered_multimap::cend" link="cpp/container/unordered_multimap/end"/>
    <keyword type="function" name="std::unordered_multimap::empty" link="cpp/container/unordered_multimap/empty"/>
    <keyword type="function" name="std::unordered_multimap::size" link="cpp/container/unordered_multimap/size"/>
    <keyword type="function" name="std::unordered_multimap::max_size" link="cpp/container/unordered_multimap/max_size"/>
    <keyword type="function" name="std::unordered_multimap::clear" link="cpp/container/unordered_multimap/clear"/>
    <keyword type="function" name="std::unordered_multimap::insert" link="cpp/container/unordered_multimap/insert"/>
    <keyword type="function" name="std::unordered_multimap::emplace" link="cpp/container/unordered_multimap/emplace"/>
    <keyword type="function" name="std::unordered_multimap::emplace_hint" link="cpp/container/unordered_multimap/emplace_hint"/>
    <keyword type="function" name="std::unordered_multimap::erase" link="cpp/container/unordered_multimap/erase"/>
    <keyword type="function" name="std::unordered_multimap::swap" link="cpp/container/unordered_multimap/swap"/>
    <keyword type="function" name="std::unordered_multimap::extract" link="cpp/container/unordered_multimap/extract"/>
    <keyword type="function" name="std::unordered_multimap::merge" link="cpp/container/unordered_multimap/merge"/>
    <keyword type="function" name="std::unordered_multimap::count" link="cpp/container/unordered_multimap/count"/>
    <keyword type="function" name="std::unordered_multimap::find" link="cpp/container/unordered_multimap/find"/>
    <keyword type="function" name="std::unordered_multimap::contains" link="cpp/container/unordered_multimap/contains"/>
    <keyword type="function" name="std::unordered_multimap::equal_range" link="cpp/container/unordered_multimap/equal_range"/>
    <keyword type="function" name="std::unordered_multimap::begin(int)" link="cpp/container/unordered_multimap/begin2"/>
    <keyword type="function" name="std::unordered_multimap::cbegin(int)" link="cpp/container/unordered_multimap/begin2"/>
    <keyword type="function" name="std::unordered_multimap::end(int)" link="cpp/container/unordered_multimap/end2"/>
    <keyword type="function" name="std::unordered_multimap::cend(int)" link="cpp/container/unordered_multimap/end2"/>
    <keyword type="function" name="std::unordered_multimap::bucket_count" link="cpp/container/unordered_multimap/bucket_count"/>
    <keyword type="function" name="std::unordered_multimap::max_bucket_count" link="cpp/container/unordered_multimap/max_bucket_count"/>
    <keyword type="function" name="std::unordered_multimap::bucket_size" link="cpp/container/unordered_multimap/bucket_size"/>
    <keyword type="function" name="std::unordered_multimap::bucket" link="cpp/container/unordered_multimap/bucket"/>
    <keyword type="function" name="std::unordered_multimap::load_factor" link="cpp/container/unordered_multimap/load_factor"/>
    <keyword type="function" name="std::unordered_multimap::max_load_factor" link="cpp/container/unordered_multimap/max_load_factor"/>
    <keyword type="function" name="std::unordered_multimap::reserve" link="cpp/container/unordered_multimap/reserve"/>
    <keyword type="function" name="std::unordered_multimap::rehash" link="cpp/container/unordered_multimap/rehash"/>
    <keyword type="function" name="std::unordered_multimap::hash_function" link="cpp/container/unordered_multimap/hash_function"/>
    <keyword type="function" name="std::unordered_multimap::key_eq" link="cpp/container/unordered_multimap/key_eq"/>
    <keyword type="function" name="operator==(std::unordered_multimap)" link="cpp/container/unordered_multimap/operator_cmp"/>
    <keyword type="function" name="operator!=(std::unordered_multimap)" link="cpp/container/unordered_multimap/operator_cmp"/>
    <keyword type="function" name="std::swap(std::unordered_multimap)" link="cpp/container/unordered_multimap/swap2"/>
    <keyword type="function" name="std::erase_if(std::unordered_multimap)" link="cpp/container/unordered_multimap/erase_if"/>
    <keyword type="typedef" name="std::pmr::unordered_multimap" link="cpp/container/unordered_multimap"/>
    <keyword type="function" name="std::pmr::unordered_multimap::unordered_multimap" link="cpp/container/unordered_multimap/unordered_multimap"/>
    <keyword type="function" name="std::pmr::unordered_multimap::~unordered_multimap" link="cpp/container/unordered_multimap/~unordered_multimap"/>
    <keyword type="function" name="std::pmr::unordered_multimap::operator=" link="cpp/container/unordered_multimap/operator="/>
    <keyword type="function" name="std::pmr::unordered_multimap::get_allocator" link="cpp/container/unordered_multimap/get_allocator"/>
    <keyword type="function" name="std::pmr::unordered_multimap::begin" link="cpp/container/unordered_multimap/begin"/>
    <keyword type="function" name="std::pmr::unordered_multimap::cbegin" link="cpp/container/unordered_multimap/begin"/>
    <keyword type="function" name="std::pmr::unordered_multimap::end" link="cpp/container/unordered_multimap/end"/>
    <keyword type="function" name="std::pmr::unordered_multimap::cend" link="cpp/container/unordered_multimap/end"/>
    <keyword type="function" name="std::pmr::unordered_multimap::empty" link="cpp/container/unordered_multimap/empty"/>
    <keyword type="function" name="std::pmr::unordered_multimap::size" link="cpp/container/unordered_multimap/size"/>
    <keyword type="function" name="std::pmr::unordered_multimap::max_size" link="cpp/container/unordered_multimap/max_size"/>
    <keyword type="function" name="std::pmr::unordered_multimap::clear" link="cpp/container/unordered_multimap/clear"/>
    <keyword type="function" name="std::pmr::unordered_multimap::insert" link="cpp/container/unordered_multimap/insert"/>
    <keyword type="function" name="std::pmr::unordered_multimap::emplace" link="cpp/container/unordered_multimap/emplace"/>
    <keyword type="function" name="std::pmr::unordered_multimap::emplace_hint" link="cpp/container/unordered_multimap/emplace_hint"/>
    <keyword type="function" name="std::pmr::unordered_multimap::erase" link="cpp/container/unordered_multimap/erase"/>
    <keyword type="function" name="std::pmr::unordered_multimap::swap" link="cpp/container/unordered_multimap/swap"/>
    <keyword type="function" name="std::pmr::unordered_multimap::extract" link="cpp/container/unordered_multimap/extract"/>
    <keyword type="function" name="std::pmr::unordered_multimap::merge" link="cpp/container/unordered_multimap/merge"/>
    <keyword type="function" name="std::pmr::unordered_multimap::count" link="cpp/container/unordered_multimap/count"/>
    <keyword type="function" name="std::pmr::unordered_multimap::find" link="cpp/container/unordered_multimap/find"/>
    <keyword type="function" name="std::pmr::unordered_multimap::contains" link="cpp/container/unordered_multimap/contains"/>
    <keyword type="function" name="std::pmr::unordered_multimap::equal_range" link="cpp/container/unordered_multimap/equal_range"/>
    <keyword type="function" name="std::pmr::unordered_multimap::begin(int)" link="cpp/container/unordered_multimap/begin2"/>
    <keyword type="function" name="std::pmr::unordered_multimap::cbegin(int)" link="cpp/container/unordered_multimap/begin2"/>
    <keyword type="function" name="std::pmr::unordered_multimap::end(int)" link="cpp/container/unordered_multimap/end2"/>
    <keyword type="function" name="std::pmr::unordered_multimap::cend(int)" link="cpp/container/unordered_multimap/end2"/>
    <keyword type="function" name="std::pmr::unordered_multimap::bucket_count" link="cpp/container/unordered_multimap/bucket_count"/>
    <keyword type="function" name="std::pmr::unordered_multimap::max_bucket_count" link="cpp/container/unordered_multimap/max_bucket_count"/>
    <keyword type="function" name="std::pmr::unordered_multimap::bucket_size" link="cpp/container/unordered_multimap/bucket_size"/>
    <keyword type="function" name="std::pmr::unordered_multimap::bucket" link="cpp/container/unordered_multimap/bucket"/>
    <keyword type="function" name="std::pmr::unordered_multimap::load_factor" link="cpp/container/unordered_multimap/load_factor"/>
    <keyword type="function" name="std::pmr::unordered_multimap::max_load_factor" link="cpp/container/unordered_multimap/max_load_factor"/>
    <keyword type="function" name="std::pmr::unordered_multimap::reserve" link="cpp/container/unordered_multimap/reserve"/>
    <keyword type="function" name="std::pmr::unordered_multimap::rehash" link="cpp/container/unordered_multimap/rehash"/>
    <keyword type="function" name="std::pmr::unordered_multimap::hash_function" link="cpp/container/unordered_multimap/hash_function"/>
    <keyword type="function" name="std::pmr::unordered_multimap::key_eq" link="cpp/container/unordered_multimap/key_eq"/>
    <keyword type="function" name="operator==(std::pmr::unordered_multimap)" link="cpp/container/unordered_multimap/operator_cmp"/>
    <keyword type="function" name="operator!=(std::pmr::unordered_multimap)" link="cpp/container/unordered_multimap/operator_cmp"/>
    <keyword type="function" name="std::swap(std::pmr::unordered_multimap)" link="cpp/container/unordered_multimap/swap2"/>
    <keyword type="function" name="std::erase_if(std::pmr::unordered_multimap)" link="cpp/container/unordered_multimap/erase_if"/>
    <keyword type="class" name="std::stack" link="cpp/container/stack"/>
    <keyword type="function" name="std::stack::stack" link="cpp/container/stack/stack"/>
    <keyword type="function" name="std::stack::~stack" link="cpp/container/stack/~stack"/>
    <keyword type="function" name="std::stack::operator=" link="cpp/container/stack/operator="/>
    <keyword type="function" name="std::stack::top" link="cpp/container/stack/top"/>
    <keyword type="function" name="std::stack::empty" link="cpp/container/stack/empty"/>
    <keyword type="function" name="std::stack::size" link="cpp/container/stack/size"/>
    <keyword type="function" name="std::stack::push" link="cpp/container/stack/push"/>
    <keyword type="function" name="std::stack::emplace" link="cpp/container/stack/emplace"/>
    <keyword type="function" name="std::stack::pop" link="cpp/container/stack/pop"/>
    <keyword type="function" name="std::stack::swap" link="cpp/container/stack/swap"/>
    <keyword type="function" name="operator==(std::stack)" link="cpp/container/stack/operator_cmp"/>
    <keyword type="function" name="operator!=(std::stack)" link="cpp/container/stack/operator_cmp"/>
    <keyword type="function" name="operator&lt;(std::stack)" link="cpp/container/stack/operator_cmp"/>
    <keyword type="function" name="operator&lt;=(std::stack)" link="cpp/container/stack/operator_cmp"/>
    <keyword type="function" name="operator&gt;(std::stack)" link="cpp/container/stack/operator_cmp"/>
    <keyword type="function" name="operator&gt;=(std::stack)" link="cpp/container/stack/operator_cmp"/>
    <keyword type="function" name="std::swap(std::stack)" link="cpp/container/stack/swap2"/>
    <keyword type="class" name="std::uses_allocator&lt;std::stack&gt;" link="cpp/container/stack/uses_allocator"/>
    <keyword type="" name="std::stack::c" link="cpp/container/stack"/>
    <keyword type="class" name="std::queue" link="cpp/container/queue"/>
    <keyword type="function" name="std::queue::queue" link="cpp/container/queue/queue"/>
    <keyword type="function" name="std::queue::~queue" link="cpp/container/queue/~queue"/>
    <keyword type="function" name="std::queue::operator=" link="cpp/container/queue/operator="/>
    <keyword type="function" name="std::queue::front" link="cpp/container/queue/front"/>
    <keyword type="function" name="std::queue::back" link="cpp/container/queue/back"/>
    <keyword type="function" name="std::queue::empty" link="cpp/container/queue/empty"/>
    <keyword type="function" name="std::queue::size" link="cpp/container/queue/size"/>
    <keyword type="function" name="std::queue::push" link="cpp/container/queue/push"/>
    <keyword type="function" name="std::queue::emplace" link="cpp/container/queue/emplace"/>
    <keyword type="function" name="std::queue::pop" link="cpp/container/queue/pop"/>
    <keyword type="function" name="std::queue::swap" link="cpp/container/queue/swap"/>
    <keyword type="function" name="operator==(std::queue)" link="cpp/container/queue/operator_cmp"/>
    <keyword type="function" name="operator!=(std::queue)" link="cpp/container/queue/operator_cmp"/>
    <keyword type="function" name="operator&lt;(std::queue)" link="cpp/container/queue/operator_cmp"/>
    <keyword type="function" name="operator&lt;=(std::queue)" link="cpp/container/queue/operator_cmp"/>
    <keyword type="function" name="operator&gt;(std::queue)" link="cpp/container/queue/operator_cmp"/>
    <keyword type="function" name="operator&gt;=(std::queue)" link="cpp/container/queue/operator_cmp"/>
    <keyword type="function" name="std::swap(std::queue)" link="cpp/container/queue/swap2"/>
    <keyword type="class" name="std::uses_allocator&lt;std::queue&gt;" link="cpp/container/queue/uses_allocator"/>
    <keyword type="" name="std::queue::c" link="cpp/container/queue"/>
    <keyword type="class" name="std::priority_queue" link="cpp/container/priority_queue"/>
    <keyword type="function" name="std::priority_queue::priority_queue" link="cpp/container/priority_queue/priority_queue"/>
    <keyword type="function" name="std::priority_queue::~priority_queue" link="cpp/container/priority_queue/~priority_queue"/>
    <keyword type="function" name="std::priority_queue::operator=" link="cpp/container/priority_queue/operator="/>
    <keyword type="function" name="std::priority_queue::top" link="cpp/container/priority_queue/top"/>
    <keyword type="function" name="std::priority_queue::empty" link="cpp/container/priority_queue/empty"/>
    <keyword type="function" name="std::priority_queue::size" link="cpp/container/priority_queue/size"/>
    <keyword type="function" name="std::priority_queue::push" link="cpp/container/priority_queue/push"/>
    <keyword type="function" name="std::priority_queue::emplace" link="cpp/container/priority_queue/emplace"/>
    <keyword type="function" name="std::priority_queue::pop" link="cpp/container/priority_queue/pop"/>
    <keyword type="function" name="std::priority_queue::swap" link="cpp/container/priority_queue/swap"/>
    <keyword type="function" name="std::swap(std::priority_queue)" link="cpp/container/priority_queue/swap2"/>
    <keyword type="class" name="std::uses_allocator&lt;std::priority_queue&gt;" link="cpp/container/priority_queue/uses_allocator"/>
    <keyword type="" name="std::priority_queue::c" link="cpp/container/priority_queue"/>
    <keyword type="class" name="std::span" link="cpp/container/span"/>
    <keyword type="function" name="std::span::span" link="cpp/container/span/span"/>
    <keyword type="function" name="std::span::operator=" link="cpp/container/span/operator="/>
    <keyword type="function" name="std::span::begin" link="cpp/container/span/begin"/>
    <keyword type="function" name="std::span::cbegin" link="cpp/container/span/begin"/>
    <keyword type="function" name="std::span::end" link="cpp/container/span/end"/>
    <keyword type="function" name="std::span::cend" link="cpp/container/span/end"/>
    <keyword type="function" name="std::span::rbegin" link="cpp/container/span/rbegin"/>
    <keyword type="function" name="std::span::crbegin" link="cpp/container/span/rbegin"/>
    <keyword type="function" name="std::span::rend" link="cpp/container/span/rend"/>
    <keyword type="function" name="std::span::crend" link="cpp/container/span/rend"/>
    <keyword type="function" name="std::span::front" link="cpp/container/span/front"/>
    <keyword type="function" name="std::span::back" link="cpp/container/span/back"/>
    <keyword type="function" name="std::span::operator[]" link="cpp/container/span/operator_at"/>
    <keyword type="function" name="std::span::data" link="cpp/container/span/data"/>
    <keyword type="function" name="std::span::size" link="cpp/container/span/size"/>
    <keyword type="function" name="std::span::size_bytes" link="cpp/container/span/size_bytes"/>
    <keyword type="function" name="std::span::empty" link="cpp/container/span/empty"/>
    <keyword type="function" name="std::span::first" link="cpp/container/span/first"/>
    <keyword type="function" name="std::span::last" link="cpp/container/span/last"/>
    <keyword type="function" name="std::span::subspan" link="cpp/container/span/subspan"/>
    <keyword type="function" name="std::as_bytes(std::span)" link="cpp/container/span/as_bytes"/>
    <keyword type="function" name="std::as_writable_bytes(std::span)" link="cpp/container/span/as_bytes"/>
    <keyword type="macro" name="std::dynamic_extent" link="cpp/container/span/dynamic_extent"/>
    <keyword type="function" name="std::midpoint" link="cpp/numeric/midpoint"/>
    <keyword type="function" name="std::lerp" link="cpp/numeric/lerp"/>
    <keyword type="function" name="std::bit_cast" link="cpp/numeric/bit_cast"/>
    <keyword type="function" name="std::has_single_bit" link="cpp/numeric/has_single_bit"/>
    <keyword type="function" name="std::bit_ceil" link="cpp/numeric/bit_ceil"/>
    <keyword type="function" name="std::bit_floor" link="cpp/numeric/bit_floor"/>
    <keyword type="function" name="std::bit_width" link="cpp/numeric/bit_width"/>
    <keyword type="function" name="std::rotl" link="cpp/numeric/rotl"/>
    <keyword type="function" name="std::rotr" link="cpp/numeric/rotr"/>
    <keyword type="function" name="std::countl_zero" link="cpp/numeric/countl_zero"/>
    <keyword type="function" name="std::countl_one" link="cpp/numeric/countl_one"/>
    <keyword type="function" name="std::countr_zero" link="cpp/numeric/countr_zero"/>
    <keyword type="function" name="std::countr_one" link="cpp/numeric/countr_one"/>
    <keyword type="function" name="std::popcount" link="cpp/numeric/popcount"/>
    <keyword type="function" name="std::abs(int)" link="cpp/numeric/math/abs"/>
    <keyword type="function" name="std::labs" link="cpp/numeric/math/abs"/>
    <keyword type="function" name="std::llabs" link="cpp/numeric/math/abs"/>
    <keyword type="function" name="std::imaxabs" link="cpp/numeric/math/abs"/>
    <keyword type="function" name="std::abs(float)" link="cpp/numeric/math/fabs"/>
    <keyword type="function" name="std::fabs" link="cpp/numeric/math/fabs"/>
    <keyword type="function" name="std::div" link="cpp/numeric/math/div"/>
    <keyword type="function" name="std::ldiv" link="cpp/numeric/math/div"/>
    <keyword type="function" name="std::lldiv" link="cpp/numeric/math/div"/>
    <keyword type="function" name="std::imaxdiv" link="cpp/numeric/math/div"/>
    <keyword type="class" name="std::div_t" link="cpp/numeric/math/div"/>
    <keyword type="" name="std::div_t::quot" link="cpp/numeric/math/div"/>
    <keyword type="" name="std::div_t::rem" link="cpp/numeric/math/div"/>
    <keyword type="class" name="std::ldiv_t" link="cpp/numeric/math/div"/>
    <keyword type="" name="std::ldiv_t::quot" link="cpp/numeric/math/div"/>
    <keyword type="" name="std::ldiv_t::rem" link="cpp/numeric/math/div"/>
    <keyword type="class" name="std::lldiv_t" link="cpp/numeric/math/div"/>
    <keyword type="" name="std::lldiv_t::quot" link="cpp/numeric/math/div"/>
    <keyword type="" name="std::lldiv_t::rem" link="cpp/numeric/math/div"/>
    <keyword type="class" name="std::imaxdiv_t" link="cpp/numeric/math/div"/>
    <keyword type="" name="std::imaxdiv_t::quot" link="cpp/numeric/math/div"/>
    <keyword type="" name="std::imaxdiv_t::rem" link="cpp/numeric/math/div"/>
    <keyword type="function" name="std::fmod" link="cpp/numeric/math/fmod"/>
    <keyword type="function" name="std::remainder" link="cpp/numeric/math/remainder"/>
    <keyword type="function" name="std::remquo" link="cpp/numeric/math/remquo"/>
    <keyword type="function" name="std::fma" link="cpp/numeric/math/fma"/>
    <keyword type="function" name="std::fmax" link="cpp/numeric/math/fmax"/>
    <keyword type="function" name="std::fmin" link="cpp/numeric/math/fmin"/>
    <keyword type="function" name="std::fdim" link="cpp/numeric/math/fdim"/>
    <keyword type="function" name="std::nan" link="cpp/numeric/math/nan"/>
    <keyword type="function" name="std::nanf" link="cpp/numeric/math/nan"/>
    <keyword type="function" name="std::nanl" link="cpp/numeric/math/nan"/>
    <keyword type="function" name="std::exp" link="cpp/numeric/math/exp"/>
    <keyword type="function" name="std::exp2" link="cpp/numeric/math/exp2"/>
    <keyword type="function" name="std::expm1" link="cpp/numeric/math/expm1"/>
    <keyword type="function" name="std::log" link="cpp/numeric/math/log"/>
    <keyword type="function" name="std::log10" link="cpp/numeric/math/log10"/>
    <keyword type="function" name="std::log1p" link="cpp/numeric/math/log1p"/>
    <keyword type="function" name="std::log2" link="cpp/numeric/math/log2"/>
    <keyword type="function" name="std::ilogb" link="cpp/numeric/math/ilogb"/>
    <keyword type="function" name="std::logb" link="cpp/numeric/math/logb"/>
    <keyword type="function" name="std::sqrt" link="cpp/numeric/math/sqrt"/>
    <keyword type="function" name="std::cbrt" link="cpp/numeric/math/cbrt"/>
    <keyword type="function" name="std::hypot" link="cpp/numeric/math/hypot"/>
    <keyword type="function" name="std::pow" link="cpp/numeric/math/pow"/>
    <keyword type="function" name="std::sin" link="cpp/numeric/math/sin"/>
    <keyword type="function" name="std::cos" link="cpp/numeric/math/cos"/>
    <keyword type="function" name="std::tan" link="cpp/numeric/math/tan"/>
    <keyword type="function" name="std::asin" link="cpp/numeric/math/asin"/>
    <keyword type="function" name="std::acos" link="cpp/numeric/math/acos"/>
    <keyword type="function" name="std::atan" link="cpp/numeric/math/atan"/>
    <keyword type="function" name="std::atan2" link="cpp/numeric/math/atan2"/>
    <keyword type="function" name="std::sinh" link="cpp/numeric/math/sinh"/>
    <keyword type="function" name="std::cosh" link="cpp/numeric/math/cosh"/>
    <keyword type="function" name="std::tanh" link="cpp/numeric/math/tanh"/>
    <keyword type="function" name="std::asinh" link="cpp/numeric/math/asinh"/>
    <keyword type="function" name="std::acosh" link="cpp/numeric/math/acosh"/>
    <keyword type="function" name="std::atanh" link="cpp/numeric/math/atanh"/>
    <keyword type="function" name="std::erf" link="cpp/numeric/math/erf"/>
    <keyword type="function" name="std::erfc" link="cpp/numeric/math/erfc"/>
    <keyword type="function" name="std::lgamma" link="cpp/numeric/math/lgamma"/>
    <keyword type="function" name="std::tgamma" link="cpp/numeric/math/tgamma"/>
    <keyword type="function" name="std::ceil" link="cpp/numeric/math/ceil"/>
    <keyword type="function" name="std::floor" link="cpp/numeric/math/floor"/>
    <keyword type="function" name="std::trunc" link="cpp/numeric/math/trunc"/>
    <keyword type="function" name="std::round" link="cpp/numeric/math/round"/>
    <keyword type="function" name="std::lround" link="cpp/numeric/math/round"/>
    <keyword type="function" name="std::llround" link="cpp/numeric/math/round"/>
    <keyword type="function" name="std::nearbyint" link="cpp/numeric/math/nearbyint"/>
    <keyword type="function" name="std::rint" link="cpp/numeric/math/rint"/>
    <keyword type="function" name="std::lrint" link="cpp/numeric/math/rint"/>
    <keyword type="function" name="std::llrint" link="cpp/numeric/math/rint"/>
    <keyword type="function" name="std::frexp" link="cpp/numeric/math/frexp"/>
    <keyword type="function" name="std::ldexp" link="cpp/numeric/math/ldexp"/>
    <keyword type="function" name="std::modf" link="cpp/numeric/math/modf"/>
    <keyword type="function" name="std::scalbn" link="cpp/numeric/math/scalbn"/>
    <keyword type="function" name="std::scalbln" link="cpp/numeric/math/scalbn"/>
    <keyword type="function" name="std::nextafter" link="cpp/numeric/math/nextafter"/>
    <keyword type="function" name="std::nexttoward" link="cpp/numeric/math/nextafter"/>
    <keyword type="function" name="std::copysign" link="cpp/numeric/math/copysign"/>
    <keyword type="function" name="std::fpclassify" link="cpp/numeric/math/fpclassify"/>
    <keyword type="function" name="std::isfinite" link="cpp/numeric/math/isfinite"/>
    <keyword type="function" name="std::isinf" link="cpp/numeric/math/isinf"/>
    <keyword type="function" name="std::isnan" link="cpp/numeric/math/isnan"/>
    <keyword type="function" name="std::isnormal" link="cpp/numeric/math/isnormal"/>
    <keyword type="function" name="std::signbit" link="cpp/numeric/math/signbit"/>
    <keyword type="function" name="std::isgreater" link="cpp/numeric/math/isgreater"/>
    <keyword type="function" name="std::isgreaterequal" link="cpp/numeric/math/isgreaterequal"/>
    <keyword type="function" name="std::isless" link="cpp/numeric/math/isless"/>
    <keyword type="function" name="std::islessequal" link="cpp/numeric/math/islessequal"/>
    <keyword type="function" name="std::islessgreater" link="cpp/numeric/math/islessgreater"/>
    <keyword type="function" name="std::isunordered" link="cpp/numeric/math/isunordered"/>
    <keyword type="macro" name="HUGE_VAL" link="cpp/numeric/math/HUGE_VAL"/>
    <keyword type="macro" name="HUGE_VALF" link="cpp/numeric/math/HUGE_VAL"/>
    <keyword type="macro" name="HUGE_VALL" link="cpp/numeric/math/HUGE_VAL"/>
    <keyword type="macro" name="INFINITY" link="cpp/numeric/math/INFINITY"/>
    <keyword type="macro" name="NAN" link="cpp/numeric/math/NAN"/>
    <keyword type="macro" name="math_errhandling" link="cpp/numeric/math/math_errhandling"/>
    <keyword type="macro" name="MATH_ERRNO" link="cpp/numeric/math/math_errhandling"/>
    <keyword type="macro" name="MATH_ERREXCEPT" link="cpp/numeric/math/math_errhandling"/>
    <keyword type="macro" name="FP_INFINITE" link="cpp/numeric/math/FP_categories"/>
    <keyword type="macro" name="FP_NAN" link="cpp/numeric/math/FP_categories"/>
    <keyword type="macro" name="FP_NORMAL" link="cpp/numeric/math/FP_categories"/>
    <keyword type="macro" name="FP_SUBNORMAL" link="cpp/numeric/math/FP_categories"/>
    <keyword type="macro" name="FP_ZERO" link="cpp/numeric/math/FP_categories"/>
    <keyword type="function" name="std::assoc_laguerre" link="cpp/numeric/special_functions/assoc_laguerre"/>
    <keyword type="function" name="std::assoc_laguerref" link="cpp/numeric/special_functions/assoc_laguerre"/>
    <keyword type="function" name="std::assoc_laguerrel" link="cpp/numeric/special_functions/assoc_laguerre"/>
    <keyword type="function" name="std::assoc_legendre" link="cpp/numeric/special_functions/assoc_legendre"/>
    <keyword type="function" name="std::assoc_legendref" link="cpp/numeric/special_functions/assoc_legendre"/>
    <keyword type="function" name="std::assoc_legendrel" link="cpp/numeric/special_functions/assoc_legendre"/>
    <keyword type="function" name="std::beta" link="cpp/numeric/special_functions/beta"/>
    <keyword type="function" name="std::betaf" link="cpp/numeric/special_functions/beta"/>
    <keyword type="function" name="std::betal" link="cpp/numeric/special_functions/beta"/>
    <keyword type="function" name="std::comp_ellint_1" link="cpp/numeric/special_functions/comp_ellint_1"/>
    <keyword type="function" name="std::comp_ellint_1f" link="cpp/numeric/special_functions/comp_ellint_1"/>
    <keyword type="function" name="std::comp_ellint_1l" link="cpp/numeric/special_functions/comp_ellint_1"/>
    <keyword type="function" name="std::comp_ellint_2" link="cpp/numeric/special_functions/comp_ellint_2"/>
    <keyword type="function" name="std::comp_ellint_2f" link="cpp/numeric/special_functions/comp_ellint_2"/>
    <keyword type="function" name="std::comp_ellint_2l" link="cpp/numeric/special_functions/comp_ellint_2"/>
    <keyword type="function" name="std::comp_ellint_3" link="cpp/numeric/special_functions/comp_ellint_3"/>
    <keyword type="function" name="std::comp_ellint_3f" link="cpp/numeric/special_functions/comp_ellint_3"/>
    <keyword type="function" name="std::comp_ellint_3l" link="cpp/numeric/special_functions/comp_ellint_3"/>
    <keyword type="function" name="std::cyl_bessel_i" link="cpp/numeric/special_functions/cyl_bessel_i"/>
    <keyword type="function" name="std::cyl_bessel_if" link="cpp/numeric/special_functions/cyl_bessel_i"/>
    <keyword type="function" name="std::cyl_bessel_il" link="cpp/numeric/special_functions/cyl_bessel_i"/>
    <keyword type="function" name="std::cyl_bessel_j" link="cpp/numeric/special_functions/cyl_bessel_j"/>
    <keyword type="function" name="std::cyl_bessel_jf" link="cpp/numeric/special_functions/cyl_bessel_j"/>
    <keyword type="function" name="std::cyl_bessel_jl" link="cpp/numeric/special_functions/cyl_bessel_j"/>
    <keyword type="function" name="std::cyl_bessel_k" link="cpp/numeric/special_functions/cyl_bessel_k"/>
    <keyword type="function" name="std::cyl_bessel_kf" link="cpp/numeric/special_functions/cyl_bessel_k"/>
    <keyword type="function" name="std::cyl_bessel_kl" link="cpp/numeric/special_functions/cyl_bessel_k"/>
    <keyword type="function" name="std::cyl_neumann" link="cpp/numeric/special_functions/cyl_neumann"/>
    <keyword type="function" name="std::cyl_neumannf" link="cpp/numeric/special_functions/cyl_neumann"/>
    <keyword type="function" name="std::cyl_neumannl" link="cpp/numeric/special_functions/cyl_neumann"/>
    <keyword type="function" name="std::ellint_1" link="cpp/numeric/special_functions/ellint_1"/>
    <keyword type="function" name="std::ellint_1f" link="cpp/numeric/special_functions/ellint_1"/>
    <keyword type="function" name="std::ellint_1l" link="cpp/numeric/special_functions/ellint_1"/>
    <keyword type="function" name="std::ellint_2" link="cpp/numeric/special_functions/ellint_2"/>
    <keyword type="function" name="std::ellint_2f" link="cpp/numeric/special_functions/ellint_2"/>
    <keyword type="function" name="std::ellint_2l" link="cpp/numeric/special_functions/ellint_2"/>
    <keyword type="function" name="std::ellint_3" link="cpp/numeric/special_functions/ellint_3"/>
    <keyword type="function" name="std::ellint_3f" link="cpp/numeric/special_functions/ellint_3"/>
    <keyword type="function" name="std::ellint_3l" link="cpp/numeric/special_functions/ellint_3"/>
    <keyword type="function" name="std::expint" link="cpp/numeric/special_functions/expint"/>
    <keyword type="function" name="std::expintf" link="cpp/numeric/special_functions/expint"/>
    <keyword type="function" name="std::expintl" link="cpp/numeric/special_functions/expint"/>
    <keyword type="function" name="std::hermite" link="cpp/numeric/special_functions/hermite"/>
    <keyword type="function" name="std::hermitef" link="cpp/numeric/special_functions/hermite"/>
    <keyword type="function" name="std::hermitel" link="cpp/numeric/special_functions/hermite"/>
    <keyword type="function" name="std::legendre" link="cpp/numeric/special_functions/legendre"/>
    <keyword type="function" name="std::legendref" link="cpp/numeric/special_functions/legendre"/>
    <keyword type="function" name="std::legendrel" link="cpp/numeric/special_functions/legendre"/>
    <keyword type="function" name="std::laguerre" link="cpp/numeric/special_functions/laguerre"/>
    <keyword type="function" name="std::laguerref" link="cpp/numeric/special_functions/laguerre"/>
    <keyword type="function" name="std::laguerrel" link="cpp/numeric/special_functions/laguerre"/>
    <keyword type="function" name="std::riemann_zeta" link="cpp/numeric/special_functions/riemann_zeta"/>
    <keyword type="function" name="std::riemann_zetaf" link="cpp/numeric/special_functions/riemann_zeta"/>
    <keyword type="function" name="std::riemann_zetal" link="cpp/numeric/special_functions/riemann_zeta"/>
    <keyword type="function" name="std::sph_bessel" link="cpp/numeric/special_functions/sph_bessel"/>
    <keyword type="function" name="std::sph_besself" link="cpp/numeric/special_functions/sph_bessel"/>
    <keyword type="function" name="std::sph_bessell" link="cpp/numeric/special_functions/sph_bessel"/>
    <keyword type="function" name="std::sph_legendre" link="cpp/numeric/special_functions/sph_legendre"/>
    <keyword type="function" name="std::sph_legendref" link="cpp/numeric/special_functions/sph_legendre"/>
    <keyword type="function" name="std::sph_legendrel" link="cpp/numeric/special_functions/sph_legendre"/>
    <keyword type="function" name="std::sph_neumann" link="cpp/numeric/special_functions/sph_neumann"/>
    <keyword type="function" name="std::sph_neumannf" link="cpp/numeric/special_functions/sph_neumann"/>
    <keyword type="function" name="std::sph_neumannl" link="cpp/numeric/special_functions/sph_neumann"/>
    <keyword type="function" name="std::feclearexcept" link="cpp/numeric/fenv/feclearexcept"/>
    <keyword type="function" name="std::fetestexcept" link="cpp/numeric/fenv/fetestexcept"/>
    <keyword type="function" name="std::feraiseexcept" link="cpp/numeric/fenv/feraiseexcept"/>
    <keyword type="function" name="std::fegetexceptflag" link="cpp/numeric/fenv/feexceptflag"/>
    <keyword type="function" name="std::fesetexceptflag" link="cpp/numeric/fenv/feexceptflag"/>
    <keyword type="function" name="std::fegetround" link="cpp/numeric/fenv/feround"/>
    <keyword type="function" name="std::fesetround" link="cpp/numeric/fenv/feround"/>
    <keyword type="function" name="std::fegetenv" link="cpp/numeric/fenv/feenv"/>
    <keyword type="function" name="std::fesetenv" link="cpp/numeric/fenv/feenv"/>
    <keyword type="function" name="std::feholdexcept" link="cpp/numeric/fenv/feholdexcept"/>
    <keyword type="function" name="std::feupdateenv" link="cpp/numeric/fenv/feupdateenv"/>
    <keyword type="macro" name="FE_ALL_EXCEPT" link="cpp/numeric/fenv/FE_exceptions"/>
    <keyword type="macro" name="FE_DIVBYZERO" link="cpp/numeric/fenv/FE_exceptions"/>
    <keyword type="macro" name="FE_INEXACT" link="cpp/numeric/fenv/FE_exceptions"/>
    <keyword type="macro" name="FE_INVALID" link="cpp/numeric/fenv/FE_exceptions"/>
    <keyword type="macro" name="FE_OVERFLOW" link="cpp/numeric/fenv/FE_exceptions"/>
    <keyword type="macro" name="FE_UNDERFLOW" link="cpp/numeric/fenv/FE_exceptions"/>
    <keyword type="macro" name="FE_DOWNWARD" link="cpp/numeric/fenv/FE_round"/>
    <keyword type="macro" name="FE_TONEAREST" link="cpp/numeric/fenv/FE_round"/>
    <keyword type="macro" name="FE_TOWARDZERO" link="cpp/numeric/fenv/FE_round"/>
    <keyword type="macro" name="FE_UPWARD" link="cpp/numeric/fenv/FE_round"/>
    <keyword type="macro" name="FE_DFL_ENV" link="cpp/numeric/fenv/FE_DFL_ENV"/>
    <keyword type="class" name="std::complex" link="cpp/numeric/complex"/>
    <keyword type="function" name="std::complex::complex" link="cpp/numeric/complex/complex"/>
    <keyword type="function" name="std::complex::operator=" link="cpp/numeric/complex/operator="/>
    <keyword type="function" name="std::complex::real" link="cpp/numeric/complex/real"/>
    <keyword type="function" name="std::complex::imag" link="cpp/numeric/complex/imag"/>
    <keyword type="function" name="std::complex::operator+=" link="cpp/numeric/complex/operator_arith"/>
    <keyword type="function" name="std::complex::operator-=" link="cpp/numeric/complex/operator_arith"/>
    <keyword type="function" name="std::complex::operator*=" link="cpp/numeric/complex/operator_arith"/>
    <keyword type="function" name="std::complex::operator/=" link="cpp/numeric/complex/operator_arith"/>
    <keyword type="function" name="operator+(std::complex)" link="cpp/numeric/complex/operator_arith2"/>
    <keyword type="function" name="operator-(std::complex)" link="cpp/numeric/complex/operator_arith2"/>
    <keyword type="function" name="operator+(std::complex)" link="cpp/numeric/complex/operator_arith3"/>
    <keyword type="function" name="operator-(std::complex)" link="cpp/numeric/complex/operator_arith3"/>
    <keyword type="function" name="operator*(std::complex)" link="cpp/numeric/complex/operator_arith3"/>
    <keyword type="function" name="operator/(std::complex)" link="cpp/numeric/complex/operator_arith3"/>
    <keyword type="function" name="operator==(std::complex)" link="cpp/numeric/complex/operator_cmp"/>
    <keyword type="function" name="operator!=(std::complex)" link="cpp/numeric/complex/operator_cmp"/>
    <keyword type="function" name="operator&lt;&lt;(std::complex)" link="cpp/numeric/complex/operator_ltltgtgt"/>
    <keyword type="function" name="operator&gt;&gt;(std::complex)" link="cpp/numeric/complex/operator_ltltgtgt"/>
    <keyword type="function" name="std::real(std::complex)" link="cpp/numeric/complex/real"/>
    <keyword type="function" name="std::imag(std::complex)" link="cpp/numeric/complex/imag"/>
    <keyword type="function" name="std::abs(std::complex)" link="cpp/numeric/complex/abs"/>
    <keyword type="function" name="std::arg(std::complex)" link="cpp/numeric/complex/arg"/>
    <keyword type="function" name="std::norm(std::complex)" link="cpp/numeric/complex/norm"/>
    <keyword type="function" name="std::conj(std::complex)" link="cpp/numeric/complex/conj"/>
    <keyword type="function" name="std::proj(std::complex)" link="cpp/numeric/complex/proj"/>
    <keyword type="function" name="std::polar(std::complex)" link="cpp/numeric/complex/polar"/>
    <keyword type="function" name="std::exp(std::complex)" link="cpp/numeric/complex/exp"/>
    <keyword type="function" name="std::log(std::complex)" link="cpp/numeric/complex/log"/>
    <keyword type="function" name="std::log10(std::complex)" link="cpp/numeric/complex/log10"/>
    <keyword type="function" name="std::pow(std::complex)" link="cpp/numeric/complex/pow"/>
    <keyword type="function" name="std::sqrt(std::complex)" link="cpp/numeric/complex/sqrt"/>
    <keyword type="function" name="std::sin(std::complex)" link="cpp/numeric/complex/sin"/>
    <keyword type="function" name="std::cos(std::complex)" link="cpp/numeric/complex/cos"/>
    <keyword type="function" name="std::tan(std::complex)" link="cpp/numeric/complex/tan"/>
    <keyword type="function" name="std::asin(std::complex)" link="cpp/numeric/complex/asin"/>
    <keyword type="function" name="std::acos(std::complex)" link="cpp/numeric/complex/acos"/>
    <keyword type="function" name="std::atan(std::complex)" link="cpp/numeric/complex/atan"/>
    <keyword type="function" name="std::sinh(std::complex)" link="cpp/numeric/complex/sinh"/>
    <keyword type="function" name="std::cosh(std::complex)" link="cpp/numeric/complex/cosh"/>
    <keyword type="function" name="std::tanh(std::complex)" link="cpp/numeric/complex/tanh"/>
    <keyword type="function" name="std::asinh(std::complex)" link="cpp/numeric/complex/asinh"/>
    <keyword type="function" name="std::acosh(std::complex)" link="cpp/numeric/complex/acosh"/>
    <keyword type="function" name="std::atanh(std::complex)" link="cpp/numeric/complex/atanh"/>
    <keyword type="function" name="std::literals::complex_literals::operator&quot;&quot;i" link="cpp/numeric/complex/operator&quot;&quot;i"/>
    <keyword type="function" name="std::literals::complex_literals::operator&quot;&quot;if" link="cpp/numeric/complex/operator&quot;&quot;i"/>
    <keyword type="function" name="std::literals::complex_literals::operator&quot;&quot;il" link="cpp/numeric/complex/operator&quot;&quot;i"/>
    <keyword type="class" name="std::valarray" link="cpp/numeric/valarray"/>
    <keyword type="function" name="std::valarray::valarray" link="cpp/numeric/valarray/valarray"/>
    <keyword type="function" name="std::valarray::~valarray" link="cpp/numeric/valarray/~valarray"/>
    <keyword type="function" name="std::valarray::operator=" link="cpp/numeric/valarray/operator="/>
    <keyword type="function" name="std::valarray::operator[]" link="cpp/numeric/valarray/operator_at"/>
    <keyword type="function" name="std::valarray::operator+" link="cpp/numeric/valarray/operator_arith"/>
    <keyword type="function" name="std::valarray::operator-" link="cpp/numeric/valarray/operator_arith"/>
    <keyword type="function" name="std::valarray::operator~" link="cpp/numeric/valarray/operator_arith"/>
    <keyword type="function" name="std::valarray::operator!" link="cpp/numeric/valarray/operator_arith"/>
    <keyword type="function" name="std::valarray::operator+=" link="cpp/numeric/valarray/operator_arith2"/>
    <keyword type="function" name="std::valarray::operator-=" link="cpp/numeric/valarray/operator_arith2"/>
    <keyword type="function" name="std::valarray::operator*=" link="cpp/numeric/valarray/operator_arith2"/>
    <keyword type="function" name="std::valarray::operator/=" link="cpp/numeric/valarray/operator_arith2"/>
    <keyword type="function" name="std::valarray::operator%=" link="cpp/numeric/valarray/operator_arith2"/>
    <keyword type="function" name="std::valarray::operator&amp;=" link="cpp/numeric/valarray/operator_arith2"/>
    <keyword type="function" name="std::valarray::operator|=" link="cpp/numeric/valarray/operator_arith2"/>
    <keyword type="function" name="std::valarray::operator^=" link="cpp/numeric/valarray/operator_arith2"/>
    <keyword type="function" name="std::valarray::operator&lt;&lt;=" link="cpp/numeric/valarray/operator_arith2"/>
    <keyword type="function" name="std::valarray::operator&gt;&gt;=" link="cpp/numeric/valarray/operator_arith2"/>
    <keyword type="function" name="std::valarray::swap" link="cpp/numeric/valarray/swap"/>
    <keyword type="function" name="std::valarray::size" link="cpp/numeric/valarray/size"/>
    <keyword type="function" name="std::valarray::resize" link="cpp/numeric/valarray/resize"/>
    <keyword type="function" name="std::valarray::sum" link="cpp/numeric/valarray/sum"/>
    <keyword type="function" name="std::valarray::min" link="cpp/numeric/valarray/min"/>
    <keyword type="function" name="std::valarray::max" link="cpp/numeric/valarray/max"/>
    <keyword type="function" name="std::valarray::shift" link="cpp/numeric/valarray/shift"/>
    <keyword type="function" name="std::valarray::cshift" link="cpp/numeric/valarray/cshift"/>
    <keyword type="function" name="std::valarray::apply" link="cpp/numeric/valarray/apply"/>
    <keyword type="function" name="std::swap(std::valarray)" link="cpp/numeric/valarray/swap2"/>
    <keyword type="function" name="std::begin(std::valarray)" link="cpp/numeric/valarray/begin2"/>
    <keyword type="function" name="std::end(std::valarray)" link="cpp/numeric/valarray/end2"/>
    <keyword type="function" name="operator+(std::valarray)" link="cpp/numeric/valarray/operator_arith3"/>
    <keyword type="function" name="operator-(std::valarray)" link="cpp/numeric/valarray/operator_arith3"/>
    <keyword type="function" name="operator*(std::valarray)" link="cpp/numeric/valarray/operator_arith3"/>
    <keyword type="function" name="operator/(std::valarray)" link="cpp/numeric/valarray/operator_arith3"/>
    <keyword type="function" name="operator%(std::valarray)" link="cpp/numeric/valarray/operator_arith3"/>
    <keyword type="function" name="operator&amp;(std::valarray)" link="cpp/numeric/valarray/operator_arith3"/>
    <keyword type="function" name="operator|(std::valarray)" link="cpp/numeric/valarray/operator_arith3"/>
    <keyword type="function" name="operator^(std::valarray)" link="cpp/numeric/valarray/operator_arith3"/>
    <keyword type="function" name="operator&lt;&lt;(std::valarray)" link="cpp/numeric/valarray/operator_arith3"/>
    <keyword type="function" name="operator&gt;&gt;(std::valarray)" link="cpp/numeric/valarray/operator_arith3"/>
    <keyword type="function" name="operator&amp;&amp;(std::valarray)" link="cpp/numeric/valarray/operator_arith3"/>
    <keyword type="function" name="operator||(std::valarray)" link="cpp/numeric/valarray/operator_arith3"/>
    <keyword type="function" name="operator==(std::valarray)" link="cpp/numeric/valarray/operator_cmp"/>
    <keyword type="function" name="operator!=(std::valarray)" link="cpp/numeric/valarray/operator_cmp"/>
    <keyword type="function" name="operator&lt;(std::valarray)" link="cpp/numeric/valarray/operator_cmp"/>
    <keyword type="function" name="operator&lt;=(std::valarray)" link="cpp/numeric/valarray/operator_cmp"/>
    <keyword type="function" name="operator&gt;(std::valarray)" link="cpp/numeric/valarray/operator_cmp"/>
    <keyword type="function" name="operator&gt;=(std::valarray)" link="cpp/numeric/valarray/operator_cmp"/>
    <keyword type="function" name="std::abs(std::valarray)" link="cpp/numeric/valarray/abs"/>
    <keyword type="function" name="std::exp(std::valarray)" link="cpp/numeric/valarray/exp"/>
    <keyword type="function" name="std::log(std::valarray)" link="cpp/numeric/valarray/log"/>
    <keyword type="function" name="std::log10(std::valarray)" link="cpp/numeric/valarray/log10"/>
    <keyword type="function" name="std::pow(std::valarray)" link="cpp/numeric/valarray/pow"/>
    <keyword type="function" name="std::sqrt(std::valarray)" link="cpp/numeric/valarray/sqrt"/>
    <keyword type="function" name="std::sin(std::valarray)" link="cpp/numeric/valarray/sin"/>
    <keyword type="function" name="std::cos(std::valarray)" link="cpp/numeric/valarray/cos"/>
    <keyword type="function" name="std::tan(std::valarray)" link="cpp/numeric/valarray/tan"/>
    <keyword type="function" name="std::asin(std::valarray)" link="cpp/numeric/valarray/asin"/>
    <keyword type="function" name="std::acos(std::valarray)" link="cpp/numeric/valarray/acos"/>
    <keyword type="function" name="std::atan(std::valarray)" link="cpp/numeric/valarray/atan"/>
    <keyword type="function" name="std::atan2(std::valarray)" link="cpp/numeric/valarray/atan2"/>
    <keyword type="function" name="std::sinh(std::valarray)" link="cpp/numeric/valarray/sinh"/>
    <keyword type="function" name="std::cosh(std::valarray)" link="cpp/numeric/valarray/cosh"/>
    <keyword type="function" name="std::tanh(std::valarray)" link="cpp/numeric/valarray/tanh"/>
    <keyword type="class" name="std::slice" link="cpp/numeric/valarray/slice"/>
    <keyword type="function" name="std::slice::slice" link="cpp/numeric/valarray/slice"/>
    <keyword type="function" name="std::slice::start" link="cpp/numeric/valarray/slice"/>
    <keyword type="function" name="std::slice::size" link="cpp/numeric/valarray/slice"/>
    <keyword type="function" name="std::slice::stride" link="cpp/numeric/valarray/slice"/>
    <keyword type="function" name="operator==(std::slice)" link="cpp/numeric/valarray/slice"/>
    <keyword type="class" name="std::gslice" link="cpp/numeric/valarray/gslice"/>
    <keyword type="function" name="std::gslice::gslice" link="cpp/numeric/valarray/gslice"/>
    <keyword type="function" name="std::gslice::start" link="cpp/numeric/valarray/gslice"/>
    <keyword type="function" name="std::gslice::size" link="cpp/numeric/valarray/gslice"/>
    <keyword type="function" name="std::gslice::stride" link="cpp/numeric/valarray/gslice"/>
    <keyword type="class" name="std::slice_array" link="cpp/numeric/valarray/slice_array"/>
    <keyword type="function" name="std::slice_array::slice_array" link="cpp/numeric/valarray/slice_array/slice_array"/>
    <keyword type="function" name="std::slice_array::~slice_array" link="cpp/numeric/valarray/slice_array/~slice_array"/>
    <keyword type="function" name="std::slice_array::operator=" link="cpp/numeric/valarray/slice_array/operator="/>
    <keyword type="function" name="std::slice_array::operator+=" link="cpp/numeric/valarray/slice_array/operator_arith"/>
    <keyword type="function" name="std::slice_array::operator-=" link="cpp/numeric/valarray/slice_array/operator_arith"/>
    <keyword type="function" name="std::slice_array::operator*=" link="cpp/numeric/valarray/slice_array/operator_arith"/>
    <keyword type="function" name="std::slice_array::operator/=" link="cpp/numeric/valarray/slice_array/operator_arith"/>
    <keyword type="function" name="std::slice_array::operator%=" link="cpp/numeric/valarray/slice_array/operator_arith"/>
    <keyword type="function" name="std::slice_array::operator&amp;=" link="cpp/numeric/valarray/slice_array/operator_arith"/>
    <keyword type="function" name="std::slice_array::operator|=" link="cpp/numeric/valarray/slice_array/operator_arith"/>
    <keyword type="function" name="std::slice_array::operator^=" link="cpp/numeric/valarray/slice_array/operator_arith"/>
    <keyword type="function" name="std::slice_array::operator&lt;&lt;=" link="cpp/numeric/valarray/slice_array/operator_arith"/>
    <keyword type="function" name="std::slice_array::operator&gt;&gt;=" link="cpp/numeric/valarray/slice_array/operator_arith"/>
    <keyword type="class" name="std::gslice_array" link="cpp/numeric/valarray/gslice_array"/>
    <keyword type="function" name="std::gslice_array::gslice_array" link="cpp/numeric/valarray/gslice_array/gslice_array"/>
    <keyword type="function" name="std::gslice_array::~gslice_array" link="cpp/numeric/valarray/gslice_array/~gslice_array"/>
    <keyword type="function" name="std::gslice_array::operator=" link="cpp/numeric/valarray/gslice_array/operator="/>
    <keyword type="function" name="std::gslice_array::operator+=" link="cpp/numeric/valarray/gslice_array/operator_arith"/>
    <keyword type="function" name="std::gslice_array::operator-=" link="cpp/numeric/valarray/gslice_array/operator_arith"/>
    <keyword type="function" name="std::gslice_array::operator*=" link="cpp/numeric/valarray/gslice_array/operator_arith"/>
    <keyword type="function" name="std::gslice_array::operator/=" link="cpp/numeric/valarray/gslice_array/operator_arith"/>
    <keyword type="function" name="std::gslice_array::operator%=" link="cpp/numeric/valarray/gslice_array/operator_arith"/>
    <keyword type="function" name="std::gslice_array::operator&amp;=" link="cpp/numeric/valarray/gslice_array/operator_arith"/>
    <keyword type="function" name="std::gslice_array::operator|=" link="cpp/numeric/valarray/gslice_array/operator_arith"/>
    <keyword type="function" name="std::gslice_array::operator^=" link="cpp/numeric/valarray/gslice_array/operator_arith"/>
    <keyword type="function" name="std::gslice_array::operator&lt;&lt;=" link="cpp/numeric/valarray/gslice_array/operator_arith"/>
    <keyword type="function" name="std::gslice_array::operator&gt;&gt;=" link="cpp/numeric/valarray/gslice_array/operator_arith"/>
    <keyword type="class" name="std::mask_array" link="cpp/numeric/valarray/mask_array"/>
    <keyword type="function" name="std::mask_array::mask_array" link="cpp/numeric/valarray/mask_array/mask_array"/>
    <keyword type="function" name="std::mask_array::~mask_array" link="cpp/numeric/valarray/mask_array/~mask_array"/>
    <keyword type="function" name="std::mask_array::operator=" link="cpp/numeric/valarray/mask_array/operator="/>
    <keyword type="function" name="std::mask_array::operator+=" link="cpp/numeric/valarray/mask_array/operator_arith"/>
    <keyword type="function" name="std::mask_array::operator-=" link="cpp/numeric/valarray/mask_array/operator_arith"/>
    <keyword type="function" name="std::mask_array::operator*=" link="cpp/numeric/valarray/mask_array/operator_arith"/>
    <keyword type="function" name="std::mask_array::operator/=" link="cpp/numeric/valarray/mask_array/operator_arith"/>
    <keyword type="function" name="std::mask_array::operator%=" link="cpp/numeric/valarray/mask_array/operator_arith"/>
    <keyword type="function" name="std::mask_array::operator&amp;=" link="cpp/numeric/valarray/mask_array/operator_arith"/>
    <keyword type="function" name="std::mask_array::operator|=" link="cpp/numeric/valarray/mask_array/operator_arith"/>
    <keyword type="function" name="std::mask_array::operator^=" link="cpp/numeric/valarray/mask_array/operator_arith"/>
    <keyword type="function" name="std::mask_array::operator&lt;&lt;=" link="cpp/numeric/valarray/mask_array/operator_arith"/>
    <keyword type="function" name="std::mask_array::operator&gt;&gt;=" link="cpp/numeric/valarray/mask_array/operator_arith"/>
    <keyword type="class" name="std::indirect_array" link="cpp/numeric/valarray/indirect_array"/>
    <keyword type="function" name="std::indirect_array::indirect_array" link="cpp/numeric/valarray/indirect_array/indirect_array"/>
    <keyword type="function" name="std::indirect_array::~indirect_array" link="cpp/numeric/valarray/indirect_array/~indirect_array"/>
    <keyword type="function" name="std::indirect_array::operator=" link="cpp/numeric/valarray/indirect_array/operator="/>
    <keyword type="function" name="std::indirect_array::operator+=" link="cpp/numeric/valarray/indirect_array/operator_arith"/>
    <keyword type="function" name="std::indirect_array::operator-=" link="cpp/numeric/valarray/indirect_array/operator_arith"/>
    <keyword type="function" name="std::indirect_array::operator*=" link="cpp/numeric/valarray/indirect_array/operator_arith"/>
    <keyword type="function" name="std::indirect_array::operator/=" link="cpp/numeric/valarray/indirect_array/operator_arith"/>
    <keyword type="function" name="std::indirect_array::operator%=" link="cpp/numeric/valarray/indirect_array/operator_arith"/>
    <keyword type="function" name="std::indirect_array::operator&amp;=" link="cpp/numeric/valarray/indirect_array/operator_arith"/>
    <keyword type="function" name="std::indirect_array::operator|=" link="cpp/numeric/valarray/indirect_array/operator_arith"/>
    <keyword type="function" name="std::indirect_array::operator^=" link="cpp/numeric/valarray/indirect_array/operator_arith"/>
    <keyword type="function" name="std::indirect_array::operator&lt;&lt;=" link="cpp/numeric/valarray/indirect_array/operator_arith"/>
    <keyword type="function" name="std::indirect_array::operator&gt;&gt;=" link="cpp/numeric/valarray/indirect_array/operator_arith"/>
    <keyword type="class" name="std::linear_congruential_engine" link="cpp/numeric/random/linear_congruential_engine"/>
    <keyword type="function" name="std::linear_congruential_engine::linear_congruential_engine" link="cpp/numeric/random/linear_congruential_engine/linear_congruential_engine"/>
    <keyword type="function" name="std::linear_congruential_engine::seed" link="cpp/numeric/random/linear_congruential_engine/seed"/>
    <keyword type="function" name="std::linear_congruential_engine::operator()" link="cpp/numeric/random/linear_congruential_engine/operator()"/>
    <keyword type="function" name="std::linear_congruential_engine::discard" link="cpp/numeric/random/linear_congruential_engine/discard"/>
    <keyword type="function" name="std::linear_congruential_engine::min" link="cpp/numeric/random/linear_congruential_engine/min"/>
    <keyword type="function" name="std::linear_congruential_engine::max" link="cpp/numeric/random/linear_congruential_engine/max"/>
    <keyword type="function" name="operator==(std::linear_congruential_engine)" link="cpp/numeric/random/linear_congruential_engine/operator_cmp"/>
    <keyword type="function" name="operator!=(std::linear_congruential_engine)" link="cpp/numeric/random/linear_congruential_engine/operator_cmp"/>
    <keyword type="function" name="operator&lt;&lt;(std::linear_congruential_engine)" link="cpp/numeric/random/linear_congruential_engine/operator_ltltgtgt"/>
    <keyword type="function" name="operator&gt;&gt;(std::linear_congruential_engine)" link="cpp/numeric/random/linear_congruential_engine/operator_ltltgtgt"/>
    <keyword type="macro" name="std::linear_congruential_engine::multiplier" link="cpp/numeric/random/linear_congruential_engine"/>
    <keyword type="macro" name="std::linear_congruential_engine::increment" link="cpp/numeric/random/linear_congruential_engine"/>
    <keyword type="macro" name="std::linear_congruential_engine::modulus" link="cpp/numeric/random/linear_congruential_engine"/>
    <keyword type="macro" name="std::linear_congruential_engine::default_seed" link="cpp/numeric/random/linear_congruential_engine"/>
    <keyword type="class" name="std::mersenne_twister_engine" link="cpp/numeric/random/mersenne_twister_engine"/>
    <keyword type="function" name="std::mersenne_twister_engine::mersenne_twister_engine" link="cpp/numeric/random/mersenne_twister_engine/mersenne_twister_engine"/>
    <keyword type="function" name="std::mersenne_twister_engine::seed" link="cpp/numeric/random/mersenne_twister_engine/seed"/>
    <keyword type="function" name="std::mersenne_twister_engine::operator()" link="cpp/numeric/random/mersenne_twister_engine/operator()"/>
    <keyword type="function" name="std::mersenne_twister_engine::discard" link="cpp/numeric/random/mersenne_twister_engine/discard"/>
    <keyword type="function" name="std::mersenne_twister_engine::min" link="cpp/numeric/random/mersenne_twister_engine/min"/>
    <keyword type="function" name="std::mersenne_twister_engine::max" link="cpp/numeric/random/mersenne_twister_engine/max"/>
    <keyword type="function" name="operator==(std::mersenne_twister_engine)" link="cpp/numeric/random/mersenne_twister_engine/operator_cmp"/>
    <keyword type="function" name="operator!=(std::mersenne_twister_engine)" link="cpp/numeric/random/mersenne_twister_engine/operator_cmp"/>
    <keyword type="function" name="operator&lt;&lt;(std::mersenne_twister_engine)" link="cpp/numeric/random/mersenne_twister_engine/operator_ltltgtgt"/>
    <keyword type="function" name="operator&gt;&gt;(std::mersenne_twister_engine)" link="cpp/numeric/random/mersenne_twister_engine/operator_ltltgtgt"/>
    <keyword type="macro" name="std::mersenne_twister_engine::word_size" link="cpp/numeric/random/mersenne_twister_engine"/>
    <keyword type="macro" name="std::mersenne_twister_engine::state_size" link="cpp/numeric/random/mersenne_twister_engine"/>
    <keyword type="macro" name="std::mersenne_twister_engine::shift_size" link="cpp/numeric/random/mersenne_twister_engine"/>
    <keyword type="macro" name="std::mersenne_twister_engine::mask_bits" link="cpp/numeric/random/mersenne_twister_engine"/>
    <keyword type="macro" name="std::mersenne_twister_engine::xor_mask" link="cpp/numeric/random/mersenne_twister_engine"/>
    <keyword type="macro" name="std::mersenne_twister_engine::tempering_u" link="cpp/numeric/random/mersenne_twister_engine"/>
    <keyword type="macro" name="std::mersenne_twister_engine::tempering_d" link="cpp/numeric/random/mersenne_twister_engine"/>
    <keyword type="macro" name="std::mersenne_twister_engine::tempering_s" link="cpp/numeric/random/mersenne_twister_engine"/>
    <keyword type="macro" name="std::mersenne_twister_engine::tempering_b" link="cpp/numeric/random/mersenne_twister_engine"/>
    <keyword type="macro" name="std::mersenne_twister_engine::tempering_t" link="cpp/numeric/random/mersenne_twister_engine"/>
    <keyword type="macro" name="std::mersenne_twister_engine::tempering_c" link="cpp/numeric/random/mersenne_twister_engine"/>
    <keyword type="macro" name="std::mersenne_twister_engine::tempering_l" link="cpp/numeric/random/mersenne_twister_engine"/>
    <keyword type="macro" name="std::mersenne_twister_engine::initialization_multiplier" link="cpp/numeric/random/mersenne_twister_engine"/>
    <keyword type="macro" name="std::mersenne_twister_engine::default_seed" link="cpp/numeric/random/mersenne_twister_engine"/>
    <keyword type="class" name="std::subtract_with_carry_engine" link="cpp/numeric/random/subtract_with_carry_engine"/>
    <keyword type="function" name="std::subtract_with_carry_engine::subtract_with_carry_engine" link="cpp/numeric/random/subtract_with_carry_engine/subtract_with_carry_engine"/>
    <keyword type="function" name="std::subtract_with_carry_engine::seed" link="cpp/numeric/random/subtract_with_carry_engine/seed"/>
    <keyword type="function" name="std::subtract_with_carry_engine::operator()" link="cpp/numeric/random/subtract_with_carry_engine/operator()"/>
    <keyword type="function" name="std::subtract_with_carry_engine::discard" link="cpp/numeric/random/subtract_with_carry_engine/discard"/>
    <keyword type="function" name="std::subtract_with_carry_engine::min" link="cpp/numeric/random/subtract_with_carry_engine/min"/>
    <keyword type="function" name="std::subtract_with_carry_engine::max" link="cpp/numeric/random/subtract_with_carry_engine/max"/>
    <keyword type="function" name="operator==(std::subtract_with_carry_engine)" link="cpp/numeric/random/subtract_with_carry_engine/operator_cmp"/>
    <keyword type="function" name="operator!=(std::subtract_with_carry_engine)" link="cpp/numeric/random/subtract_with_carry_engine/operator_cmp"/>
    <keyword type="function" name="operator&lt;&lt;(std::subtract_with_carry_engine)" link="cpp/numeric/random/subtract_with_carry_engine/operator_ltltgtgt"/>
    <keyword type="function" name="operator&gt;&gt;(std::subtract_with_carry_engine)" link="cpp/numeric/random/subtract_with_carry_engine/operator_ltltgtgt"/>
    <keyword type="macro" name="std::subtract_with_carry_engine::word_size" link="cpp/numeric/random/subtract_with_carry_engine"/>
    <keyword type="macro" name="std::subtract_with_carry_engine::short_lag" link="cpp/numeric/random/subtract_with_carry_engine"/>
    <keyword type="macro" name="std::subtract_with_carry_engine::long_lag" link="cpp/numeric/random/subtract_with_carry_engine"/>
    <keyword type="macro" name="std::subtract_with_carry_engine::default_seed" link="cpp/numeric/random/subtract_with_carry_engine"/>
    <keyword type="class" name="std::discard_block_engine" link="cpp/numeric/random/discard_block_engine"/>
    <keyword type="function" name="std::discard_block_engine::discard_block_engine" link="cpp/numeric/random/discard_block_engine/discard_block_engine"/>
    <keyword type="function" name="std::discard_block_engine::seed" link="cpp/numeric/random/discard_block_engine/seed"/>
    <keyword type="function" name="std::discard_block_engine::base" link="cpp/numeric/random/discard_block_engine/base"/>
    <keyword type="function" name="std::discard_block_engine::operator()" link="cpp/numeric/random/discard_block_engine/operator()"/>
    <keyword type="function" name="std::discard_block_engine::discard" link="cpp/numeric/random/discard_block_engine/discard"/>
    <keyword type="function" name="std::discard_block_engine::min" link="cpp/numeric/random/discard_block_engine/min"/>
    <keyword type="function" name="std::discard_block_engine::max" link="cpp/numeric/random/discard_block_engine/max"/>
    <keyword type="function" name="operator==(std::discard_block_engine)" link="cpp/numeric/random/discard_block_engine/operator_cmp"/>
    <keyword type="function" name="operator!=(std::discard_block_engine)" link="cpp/numeric/random/discard_block_engine/operator_cmp"/>
    <keyword type="function" name="operator&lt;&lt;(std::discard_block_engine)" link="cpp/numeric/random/discard_block_engine/operator_ltltgtgt"/>
    <keyword type="function" name="operator&gt;&gt;(std::discard_block_engine)" link="cpp/numeric/random/discard_block_engine/operator_ltltgtgt"/>
    <keyword type="macro" name="std::discard_block_engine::block_size" link="cpp/numeric/random/discard_block_engine"/>
    <keyword type="macro" name="std::discard_block_engine::used_block" link="cpp/numeric/random/discard_block_engine"/>
    <keyword type="class" name="std::independent_bits_engine" link="cpp/numeric/random/independent_bits_engine"/>
    <keyword type="function" name="std::independent_bits_engine::independent_bits_engine" link="cpp/numeric/random/independent_bits_engine/independent_bits_engine"/>
    <keyword type="function" name="std::independent_bits_engine::seed" link="cpp/numeric/random/independent_bits_engine/seed"/>
    <keyword type="function" name="std::independent_bits_engine::base" link="cpp/numeric/random/independent_bits_engine/base"/>
    <keyword type="function" name="std::independent_bits_engine::operator()" link="cpp/numeric/random/independent_bits_engine/operator()"/>
    <keyword type="function" name="std::independent_bits_engine::discard" link="cpp/numeric/random/independent_bits_engine/discard"/>
    <keyword type="function" name="std::independent_bits_engine::min" link="cpp/numeric/random/independent_bits_engine/min"/>
    <keyword type="function" name="std::independent_bits_engine::max" link="cpp/numeric/random/independent_bits_engine/max"/>
    <keyword type="function" name="operator==(std::independent_bits_engine)" link="cpp/numeric/random/independent_bits_engine/operator_cmp"/>
    <keyword type="function" name="operator!=(std::independent_bits_engine)" link="cpp/numeric/random/independent_bits_engine/operator_cmp"/>
    <keyword type="function" name="operator&lt;&lt;(std::independent_bits_engine)" link="cpp/numeric/random/independent_bits_engine/operator_ltltgtgt"/>
    <keyword type="function" name="operator&gt;&gt;(std::independent_bits_engine)" link="cpp/numeric/random/independent_bits_engine/operator_ltltgtgt"/>
    <keyword type="class" name="std::shuffle_order_engine" link="cpp/numeric/random/shuffle_order_engine"/>
    <keyword type="function" name="std::shuffle_order_engine::shuffle_order_engine" link="cpp/numeric/random/shuffle_order_engine/shuffle_order_engine"/>
    <keyword type="function" name="std::shuffle_order_engine::seed" link="cpp/numeric/random/shuffle_order_engine/seed"/>
    <keyword type="function" name="std::shuffle_order_engine::base" link="cpp/numeric/random/shuffle_order_engine/base"/>
    <keyword type="function" name="std::shuffle_order_engine::operator()" link="cpp/numeric/random/shuffle_order_engine/operator()"/>
    <keyword type="function" name="std::shuffle_order_engine::discard" link="cpp/numeric/random/shuffle_order_engine/discard"/>
    <keyword type="function" name="std::shuffle_order_engine::min" link="cpp/numeric/random/shuffle_order_engine/min"/>
    <keyword type="function" name="std::shuffle_order_engine::max" link="cpp/numeric/random/shuffle_order_engine/max"/>
    <keyword type="function" name="operator==(std::shuffle_order_engine)" link="cpp/numeric/random/shuffle_order_engine/operator_cmp"/>
    <keyword type="function" name="operator!=(std::shuffle_order_engine)" link="cpp/numeric/random/shuffle_order_engine/operator_cmp"/>
    <keyword type="function" name="operator&lt;&lt;(std::shuffle_order_engine)" link="cpp/numeric/random/shuffle_order_engine/operator_ltltgtgt"/>
    <keyword type="function" name="operator&gt;&gt;(std::shuffle_order_engine)" link="cpp/numeric/random/shuffle_order_engine/operator_ltltgtgt"/>
    <keyword type="macro" name="std::shuffle_order_engine::table_size" link="cpp/numeric/random/shuffle_order_engine"/>
    <keyword type="class" name="std::random_device" link="cpp/numeric/random/random_device"/>
    <keyword type="function" name="std::random_device::random_device" link="cpp/numeric/random/random_device/random_device"/>
    <keyword type="function" name="std::random_device::operator()" link="cpp/numeric/random/random_device/operator()"/>
    <keyword type="function" name="std::random_device::min" link="cpp/numeric/random/random_device/min"/>
    <keyword type="function" name="std::random_device::max" link="cpp/numeric/random/random_device/max"/>
    <keyword type="function" name="std::random_device::entropy" link="cpp/numeric/random/random_device/entropy"/>
    <keyword type="typedef" name="std::minstd_rand0" link="cpp/numeric/random/linear_congruential_engine"/>
    <keyword type="function" name="std::minstd_rand0::minstd_rand0" link="cpp/numeric/random/linear_congruential_engine/linear_congruential_engine"/>
    <keyword type="function" name="std::minstd_rand0::seed" link="cpp/numeric/random/linear_congruential_engine/seed"/>
    <keyword type="function" name="std::minstd_rand0::operator()" link="cpp/numeric/random/linear_congruential_engine/operator()"/>
    <keyword type="function" name="std::minstd_rand0::discard" link="cpp/numeric/random/linear_congruential_engine/discard"/>
    <keyword type="function" name="std::minstd_rand0::min" link="cpp/numeric/random/linear_congruential_engine/min"/>
    <keyword type="function" name="std::minstd_rand0::max" link="cpp/numeric/random/linear_congruential_engine/max"/>
    <keyword type="function" name="operator==(std::minstd_rand0)" link="cpp/numeric/random/linear_congruential_engine/operator_cmp"/>
    <keyword type="function" name="operator!=(std::minstd_rand0)" link="cpp/numeric/random/linear_congruential_engine/operator_cmp"/>
    <keyword type="function" name="operator&lt;&lt;(std::minstd_rand0)" link="cpp/numeric/random/linear_congruential_engine/operator_ltltgtgt"/>
    <keyword type="function" name="operator&gt;&gt;(std::minstd_rand0)" link="cpp/numeric/random/linear_congruential_engine/operator_ltltgtgt"/>
    <keyword type="macro" name="std::minstd_rand0::multiplier" link="cpp/numeric/random/linear_congruential_engine"/>
    <keyword type="macro" name="std::minstd_rand0::increment" link="cpp/numeric/random/linear_congruential_engine"/>
    <keyword type="macro" name="std::minstd_rand0::modulus" link="cpp/numeric/random/linear_congruential_engine"/>
    <keyword type="macro" name="std::minstd_rand0::default_seed" link="cpp/numeric/random/linear_congruential_engine"/>
    <keyword type="typedef" name="std::minstd_rand" link="cpp/numeric/random/linear_congruential_engine"/>
    <keyword type="function" name="std::minstd_rand::minstd_rand" link="cpp/numeric/random/linear_congruential_engine/linear_congruential_engine"/>
    <keyword type="function" name="std::minstd_rand::seed" link="cpp/numeric/random/linear_congruential_engine/seed"/>
    <keyword type="function" name="std::minstd_rand::operator()" link="cpp/numeric/random/linear_congruential_engine/operator()"/>
    <keyword type="function" name="std::minstd_rand::discard" link="cpp/numeric/random/linear_congruential_engine/discard"/>
    <keyword type="function" name="std::minstd_rand::min" link="cpp/numeric/random/linear_congruential_engine/min"/>
    <keyword type="function" name="std::minstd_rand::max" link="cpp/numeric/random/linear_congruential_engine/max"/>
    <keyword type="function" name="operator==(std::minstd_rand)" link="cpp/numeric/random/linear_congruential_engine/operator_cmp"/>
    <keyword type="function" name="operator!=(std::minstd_rand)" link="cpp/numeric/random/linear_congruential_engine/operator_cmp"/>
    <keyword type="function" name="operator&lt;&lt;(std::minstd_rand)" link="cpp/numeric/random/linear_congruential_engine/operator_ltltgtgt"/>
    <keyword type="function" name="operator&gt;&gt;(std::minstd_rand)" link="cpp/numeric/random/linear_congruential_engine/operator_ltltgtgt"/>
    <keyword type="macro" name="std::minstd_rand::multiplier" link="cpp/numeric/random/linear_congruential_engine"/>
    <keyword type="macro" name="std::minstd_rand::increment" link="cpp/numeric/random/linear_congruential_engine"/>
    <keyword type="macro" name="std::minstd_rand::modulus" link="cpp/numeric/random/linear_congruential_engine"/>
    <keyword type="macro" name="std::minstd_rand::default_seed" link="cpp/numeric/random/linear_congruential_engine"/>
    <keyword type="typedef" name="std::mt19937" link="cpp/numeric/random/mersenne_twister_engine"/>
    <keyword type="function" name="std::mt19937::mt19937" link="cpp/numeric/random/mersenne_twister_engine/mersenne_twister_engine"/>
    <keyword type="function" name="std::mt19937::seed" link="cpp/numeric/random/mersenne_twister_engine/seed"/>
    <keyword type="function" name="std::mt19937::operator()" link="cpp/numeric/random/mersenne_twister_engine/operator()"/>
    <keyword type="function" name="std::mt19937::discard" link="cpp/numeric/random/mersenne_twister_engine/discard"/>
    <keyword type="function" name="std::mt19937::min" link="cpp/numeric/random/mersenne_twister_engine/min"/>
    <keyword type="function" name="std::mt19937::max" link="cpp/numeric/random/mersenne_twister_engine/max"/>
    <keyword type="function" name="operator==(std::mt19937)" link="cpp/numeric/random/mersenne_twister_engine/operator_cmp"/>
    <keyword type="function" name="operator!=(std::mt19937)" link="cpp/numeric/random/mersenne_twister_engine/operator_cmp"/>
    <keyword type="function" name="operator&lt;&lt;(std::mt19937)" link="cpp/numeric/random/mersenne_twister_engine/operator_ltltgtgt"/>
    <keyword type="function" name="operator&gt;&gt;(std::mt19937)" link="cpp/numeric/random/mersenne_twister_engine/operator_ltltgtgt"/>
    <keyword type="macro" name="std::mt19937::word_size" link="cpp/numeric/random/mersenne_twister_engine"/>
    <keyword type="macro" name="std::mt19937::state_size" link="cpp/numeric/random/mersenne_twister_engine"/>
    <keyword type="macro" name="std::mt19937::shift_size" link="cpp/numeric/random/mersenne_twister_engine"/>
    <keyword type="macro" name="std::mt19937::mask_bits" link="cpp/numeric/random/mersenne_twister_engine"/>
    <keyword type="macro" name="std::mt19937::xor_mask" link="cpp/numeric/random/mersenne_twister_engine"/>
    <keyword type="macro" name="std::mt19937::tempering_u" link="cpp/numeric/random/mersenne_twister_engine"/>
    <keyword type="macro" name="std::mt19937::tempering_d" link="cpp/numeric/random/mersenne_twister_engine"/>
    <keyword type="macro" name="std::mt19937::tempering_s" link="cpp/numeric/random/mersenne_twister_engine"/>
    <keyword type="macro" name="std::mt19937::tempering_b" link="cpp/numeric/random/mersenne_twister_engine"/>
    <keyword type="macro" name="std::mt19937::tempering_t" link="cpp/numeric/random/mersenne_twister_engine"/>
    <keyword type="macro" name="std::mt19937::tempering_c" link="cpp/numeric/random/mersenne_twister_engine"/>
    <keyword type="macro" name="std::mt19937::tempering_l" link="cpp/numeric/random/mersenne_twister_engine"/>
    <keyword type="macro" name="std::mt19937::initialization_multiplier" link="cpp/numeric/random/mersenne_twister_engine"/>
    <keyword type="macro" name="std::mt19937::default_seed" link="cpp/numeric/random/mersenne_twister_engine"/>
    <keyword type="typedef" name="std::mt19937_64" link="cpp/numeric/random/mersenne_twister_engine"/>
    <keyword type="function" name="std::mt19937_64::mt19937_64" link="cpp/numeric/random/mersenne_twister_engine/mersenne_twister_engine"/>
    <keyword type="function" name="std::mt19937_64::seed" link="cpp/numeric/random/mersenne_twister_engine/seed"/>
    <keyword type="function" name="std::mt19937_64::operator()" link="cpp/numeric/random/mersenne_twister_engine/operator()"/>
    <keyword type="function" name="std::mt19937_64::discard" link="cpp/numeric/random/mersenne_twister_engine/discard"/>
    <keyword type="function" name="std::mt19937_64::min" link="cpp/numeric/random/mersenne_twister_engine/min"/>
    <keyword type="function" name="std::mt19937_64::max" link="cpp/numeric/random/mersenne_twister_engine/max"/>
    <keyword type="function" name="operator==(std::mt19937_64)" link="cpp/numeric/random/mersenne_twister_engine/operator_cmp"/>
    <keyword type="function" name="operator!=(std::mt19937_64)" link="cpp/numeric/random/mersenne_twister_engine/operator_cmp"/>
    <keyword type="function" name="operator&lt;&lt;(std::mt19937_64)" link="cpp/numeric/random/mersenne_twister_engine/operator_ltltgtgt"/>
    <keyword type="function" name="operator&gt;&gt;(std::mt19937_64)" link="cpp/numeric/random/mersenne_twister_engine/operator_ltltgtgt"/>
    <keyword type="macro" name="std::mt19937_64::word_size" link="cpp/numeric/random/mersenne_twister_engine"/>
    <keyword type="macro" name="std::mt19937_64::state_size" link="cpp/numeric/random/mersenne_twister_engine"/>
    <keyword type="macro" name="std::mt19937_64::shift_size" link="cpp/numeric/random/mersenne_twister_engine"/>
    <keyword type="macro" name="std::mt19937_64::mask_bits" link="cpp/numeric/random/mersenne_twister_engine"/>
    <keyword type="macro" name="std::mt19937_64::xor_mask" link="cpp/numeric/random/mersenne_twister_engine"/>
    <keyword type="macro" name="std::mt19937_64::tempering_u" link="cpp/numeric/random/mersenne_twister_engine"/>
    <keyword type="macro" name="std::mt19937_64::tempering_d" link="cpp/numeric/random/mersenne_twister_engine"/>
    <keyword type="macro" name="std::mt19937_64::tempering_s" link="cpp/numeric/random/mersenne_twister_engine"/>
    <keyword type="macro" name="std::mt19937_64::tempering_b" link="cpp/numeric/random/mersenne_twister_engine"/>
    <keyword type="macro" name="std::mt19937_64::tempering_t" link="cpp/numeric/random/mersenne_twister_engine"/>
    <keyword type="macro" name="std::mt19937_64::tempering_c" link="cpp/numeric/random/mersenne_twister_engine"/>
    <keyword type="macro" name="std::mt19937_64::tempering_l" link="cpp/numeric/random/mersenne_twister_engine"/>
    <keyword type="macro" name="std::mt19937_64::initialization_multiplier" link="cpp/numeric/random/mersenne_twister_engine"/>
    <keyword type="macro" name="std::mt19937_64::default_seed" link="cpp/numeric/random/mersenne_twister_engine"/>
    <keyword type="typedef" name="std::ranlux24_base" link="cpp/numeric/random/subtract_with_carry_engine"/>
    <keyword type="function" name="std::ranlux24_base::ranlux24_base" link="cpp/numeric/random/subtract_with_carry_engine/subtract_with_carry_engine"/>
    <keyword type="function" name="std::ranlux24_base::seed" link="cpp/numeric/random/subtract_with_carry_engine/seed"/>
    <keyword type="function" name="std::ranlux24_base::operator()" link="cpp/numeric/random/subtract_with_carry_engine/operator()"/>
    <keyword type="function" name="std::ranlux24_base::discard" link="cpp/numeric/random/subtract_with_carry_engine/discard"/>
    <keyword type="function" name="std::ranlux24_base::min" link="cpp/numeric/random/subtract_with_carry_engine/min"/>
    <keyword type="function" name="std::ranlux24_base::max" link="cpp/numeric/random/subtract_with_carry_engine/max"/>
    <keyword type="function" name="operator==(std::ranlux24_base)" link="cpp/numeric/random/subtract_with_carry_engine/operator_cmp"/>
    <keyword type="function" name="operator!=(std::ranlux24_base)" link="cpp/numeric/random/subtract_with_carry_engine/operator_cmp"/>
    <keyword type="function" name="operator&lt;&lt;(std::ranlux24_base)" link="cpp/numeric/random/subtract_with_carry_engine/operator_ltltgtgt"/>
    <keyword type="function" name="operator&gt;&gt;(std::ranlux24_base)" link="cpp/numeric/random/subtract_with_carry_engine/operator_ltltgtgt"/>
    <keyword type="macro" name="std::ranlux24_base::word_size" link="cpp/numeric/random/subtract_with_carry_engine"/>
    <keyword type="macro" name="std::ranlux24_base::short_lag" link="cpp/numeric/random/subtract_with_carry_engine"/>
    <keyword type="macro" name="std::ranlux24_base::long_lag" link="cpp/numeric/random/subtract_with_carry_engine"/>
    <keyword type="macro" name="std::ranlux24_base::default_seed" link="cpp/numeric/random/subtract_with_carry_engine"/>
    <keyword type="typedef" name="std::ranlux48_base" link="cpp/numeric/random/subtract_with_carry_engine"/>
    <keyword type="function" name="std::ranlux48_base::ranlux48_base" link="cpp/numeric/random/subtract_with_carry_engine/subtract_with_carry_engine"/>
    <keyword type="function" name="std::ranlux48_base::seed" link="cpp/numeric/random/subtract_with_carry_engine/seed"/>
    <keyword type="function" name="std::ranlux48_base::operator()" link="cpp/numeric/random/subtract_with_carry_engine/operator()"/>
    <keyword type="function" name="std::ranlux48_base::discard" link="cpp/numeric/random/subtract_with_carry_engine/discard"/>
    <keyword type="function" name="std::ranlux48_base::min" link="cpp/numeric/random/subtract_with_carry_engine/min"/>
    <keyword type="function" name="std::ranlux48_base::max" link="cpp/numeric/random/subtract_with_carry_engine/max"/>
    <keyword type="function" name="operator==(std::ranlux48_base)" link="cpp/numeric/random/subtract_with_carry_engine/operator_cmp"/>
    <keyword type="function" name="operator!=(std::ranlux48_base)" link="cpp/numeric/random/subtract_with_carry_engine/operator_cmp"/>
    <keyword type="function" name="operator&lt;&lt;(std::ranlux48_base)" link="cpp/numeric/random/subtract_with_carry_engine/operator_ltltgtgt"/>
    <keyword type="function" name="operator&gt;&gt;(std::ranlux48_base)" link="cpp/numeric/random/subtract_with_carry_engine/operator_ltltgtgt"/>
    <keyword type="macro" name="std::ranlux48_base::word_size" link="cpp/numeric/random/subtract_with_carry_engine"/>
    <keyword type="macro" name="std::ranlux48_base::short_lag" link="cpp/numeric/random/subtract_with_carry_engine"/>
    <keyword type="macro" name="std::ranlux48_base::long_lag" link="cpp/numeric/random/subtract_with_carry_engine"/>
    <keyword type="macro" name="std::ranlux48_base::default_seed" link="cpp/numeric/random/subtract_with_carry_engine"/>
    <keyword type="typedef" name="std::ranlux24" link="cpp/numeric/random/discard_block_engine"/>
    <keyword type="function" name="std::ranlux24::ranlux24" link="cpp/numeric/random/discard_block_engine/discard_block_engine"/>
    <keyword type="function" name="std::ranlux24::seed" link="cpp/numeric/random/discard_block_engine/seed"/>
    <keyword type="function" name="std::ranlux24::base" link="cpp/numeric/random/discard_block_engine/base"/>
    <keyword type="function" name="std::ranlux24::operator()" link="cpp/numeric/random/discard_block_engine/operator()"/>
    <keyword type="function" name="std::ranlux24::discard" link="cpp/numeric/random/discard_block_engine/discard"/>
    <keyword type="function" name="std::ranlux24::min" link="cpp/numeric/random/discard_block_engine/min"/>
    <keyword type="function" name="std::ranlux24::max" link="cpp/numeric/random/discard_block_engine/max"/>
    <keyword type="function" name="operator==(std::ranlux24)" link="cpp/numeric/random/discard_block_engine/operator_cmp"/>
    <keyword type="function" name="operator!=(std::ranlux24)" link="cpp/numeric/random/discard_block_engine/operator_cmp"/>
    <keyword type="function" name="operator&lt;&lt;(std::ranlux24)" link="cpp/numeric/random/discard_block_engine/operator_ltltgtgt"/>
    <keyword type="function" name="operator&gt;&gt;(std::ranlux24)" link="cpp/numeric/random/discard_block_engine/operator_ltltgtgt"/>
    <keyword type="macro" name="std::ranlux24::block_size" link="cpp/numeric/random/discard_block_engine"/>
    <keyword type="macro" name="std::ranlux24::used_block" link="cpp/numeric/random/discard_block_engine"/>
    <keyword type="typedef" name="std::ranlux48" link="cpp/numeric/random/discard_block_engine"/>
    <keyword type="function" name="std::ranlux48::ranlux48" link="cpp/numeric/random/discard_block_engine/discard_block_engine"/>
    <keyword type="function" name="std::ranlux48::seed" link="cpp/numeric/random/discard_block_engine/seed"/>
    <keyword type="function" name="std::ranlux48::base" link="cpp/numeric/random/discard_block_engine/base"/>
    <keyword type="function" name="std::ranlux48::operator()" link="cpp/numeric/random/discard_block_engine/operator()"/>
    <keyword type="function" name="std::ranlux48::discard" link="cpp/numeric/random/discard_block_engine/discard"/>
    <keyword type="function" name="std::ranlux48::min" link="cpp/numeric/random/discard_block_engine/min"/>
    <keyword type="function" name="std::ranlux48::max" link="cpp/numeric/random/discard_block_engine/max"/>
    <keyword type="function" name="operator==(std::ranlux48)" link="cpp/numeric/random/discard_block_engine/operator_cmp"/>
    <keyword type="function" name="operator!=(std::ranlux48)" link="cpp/numeric/random/discard_block_engine/operator_cmp"/>
    <keyword type="function" name="operator&lt;&lt;(std::ranlux48)" link="cpp/numeric/random/discard_block_engine/operator_ltltgtgt"/>
    <keyword type="function" name="operator&gt;&gt;(std::ranlux48)" link="cpp/numeric/random/discard_block_engine/operator_ltltgtgt"/>
    <keyword type="macro" name="std::ranlux48::block_size" link="cpp/numeric/random/discard_block_engine"/>
    <keyword type="macro" name="std::ranlux48::used_block" link="cpp/numeric/random/discard_block_engine"/>
    <keyword type="typedef" name="std::knuth_b" link="cpp/numeric/random/shuffle_order_engine"/>
    <keyword type="function" name="std::knuth_b::knuth_b" link="cpp/numeric/random/shuffle_order_engine/shuffle_order_engine"/>
    <keyword type="function" name="std::knuth_b::seed" link="cpp/numeric/random/shuffle_order_engine/seed"/>
    <keyword type="function" name="std::knuth_b::base" link="cpp/numeric/random/shuffle_order_engine/base"/>
    <keyword type="function" name="std::knuth_b::operator()" link="cpp/numeric/random/shuffle_order_engine/operator()"/>
    <keyword type="function" name="std::knuth_b::discard" link="cpp/numeric/random/shuffle_order_engine/discard"/>
    <keyword type="function" name="std::knuth_b::min" link="cpp/numeric/random/shuffle_order_engine/min"/>
    <keyword type="function" name="std::knuth_b::max" link="cpp/numeric/random/shuffle_order_engine/max"/>
    <keyword type="function" name="operator==(std::knuth_b)" link="cpp/numeric/random/shuffle_order_engine/operator_cmp"/>
    <keyword type="function" name="operator!=(std::knuth_b)" link="cpp/numeric/random/shuffle_order_engine/operator_cmp"/>
    <keyword type="function" name="operator&lt;&lt;(std::knuth_b)" link="cpp/numeric/random/shuffle_order_engine/operator_ltltgtgt"/>
    <keyword type="function" name="operator&gt;&gt;(std::knuth_b)" link="cpp/numeric/random/shuffle_order_engine/operator_ltltgtgt"/>
    <keyword type="macro" name="std::knuth_b::table_size" link="cpp/numeric/random/shuffle_order_engine"/>
    <keyword type="typedef" name="std::default_random_engine" link="cpp/numeric/random"/>
    <keyword type="function" name="std::srand" link="cpp/numeric/random/srand"/>
    <keyword type="function" name="std::rand" link="cpp/numeric/random/rand"/>
    <keyword type="macro" name="RAND_MAX" link="cpp/numeric/random/RAND_MAX"/>
    <keyword type="function" name="std::generate_canonical" link="cpp/numeric/random/generate_canonical"/>
    <keyword type="class" name="std::seed_seq" link="cpp/numeric/random/seed_seq"/>
    <keyword type="function" name="std::seed_seq::seed_seq" link="cpp/numeric/random/seed_seq/seed_seq"/>
    <keyword type="function" name="std::seed_seq::generate" link="cpp/numeric/random/seed_seq/generate"/>
    <keyword type="function" name="std::seed_seq::size" link="cpp/numeric/random/seed_seq/size"/>
    <keyword type="function" name="std::seed_seq::param" link="cpp/numeric/random/seed_seq/param"/>
    <keyword type="class" name="std::uniform_int_distribution" link="cpp/numeric/random/uniform_int_distribution"/>
    <keyword type="function" name="std::uniform_int_distribution::uniform_int_distribution" link="cpp/numeric/random/uniform_int_distribution/uniform_int_distribution"/>
    <keyword type="function" name="std::uniform_int_distribution::reset" link="cpp/numeric/random/uniform_int_distribution/reset"/>
    <keyword type="function" name="std::uniform_int_distribution::operator()" link="cpp/numeric/random/uniform_int_distribution/operator()"/>
    <keyword type="function" name="std::uniform_int_distribution::a" link="cpp/numeric/random/uniform_int_distribution/params"/>
    <keyword type="function" name="std::uniform_int_distribution::b" link="cpp/numeric/random/uniform_int_distribution/params"/>
    <keyword type="function" name="std::uniform_int_distribution::param" link="cpp/numeric/random/uniform_int_distribution/param"/>
    <keyword type="function" name="std::uniform_int_distribution::min" link="cpp/numeric/random/uniform_int_distribution/min"/>
    <keyword type="function" name="std::uniform_int_distribution::max" link="cpp/numeric/random/uniform_int_distribution/max"/>
    <keyword type="function" name="operator==(std::uniform_int_distribution)" link="cpp/numeric/random/uniform_int_distribution/operator_cmp"/>
    <keyword type="function" name="operator!=(std::uniform_int_distribution)" link="cpp/numeric/random/uniform_int_distribution/operator_cmp"/>
    <keyword type="function" name="operator&lt;&lt;(std::uniform_int_distribution)" link="cpp/numeric/random/uniform_int_distribution/operator_ltltgtgt"/>
    <keyword type="function" name="operator&gt;&gt;(std::uniform_int_distribution)" link="cpp/numeric/random/uniform_int_distribution/operator_ltltgtgt"/>
    <keyword type="class" name="std::uniform_real_distribution" link="cpp/numeric/random/uniform_real_distribution"/>
    <keyword type="function" name="std::uniform_real_distribution::uniform_real_distribution" link="cpp/numeric/random/uniform_real_distribution/uniform_real_distribution"/>
    <keyword type="function" name="std::uniform_real_distribution::reset" link="cpp/numeric/random/uniform_real_distribution/reset"/>
    <keyword type="function" name="std::uniform_real_distribution::operator()" link="cpp/numeric/random/uniform_real_distribution/operator()"/>
    <keyword type="function" name="std::uniform_real_distribution::a" link="cpp/numeric/random/uniform_real_distribution/params"/>
    <keyword type="function" name="std::uniform_real_distribution::b" link="cpp/numeric/random/uniform_real_distribution/params"/>
    <keyword type="function" name="std::uniform_real_distribution::param" link="cpp/numeric/random/uniform_real_distribution/param"/>
    <keyword type="function" name="std::uniform_real_distribution::min" link="cpp/numeric/random/uniform_real_distribution/min"/>
    <keyword type="function" name="std::uniform_real_distribution::max" link="cpp/numeric/random/uniform_real_distribution/max"/>
    <keyword type="function" name="operator==(std::uniform_real_distribution)" link="cpp/numeric/random/uniform_real_distribution/operator_cmp"/>
    <keyword type="function" name="operator!=(std::uniform_real_distribution)" link="cpp/numeric/random/uniform_real_distribution/operator_cmp"/>
    <keyword type="function" name="operator&lt;&lt;(std::uniform_real_distribution)" link="cpp/numeric/random/uniform_real_distribution/operator_ltltgtgt"/>
    <keyword type="function" name="operator&gt;&gt;(std::uniform_real_distribution)" link="cpp/numeric/random/uniform_real_distribution/operator_ltltgtgt"/>
    <keyword type="class" name="std::bernoulli_distribution" link="cpp/numeric/random/bernoulli_distribution"/>
    <keyword type="function" name="std::bernoulli_distribution::bernoulli_distribution" link="cpp/numeric/random/bernoulli_distribution/bernoulli_distribution"/>
    <keyword type="function" name="std::bernoulli_distribution::reset" link="cpp/numeric/random/bernoulli_distribution/reset"/>
    <keyword type="function" name="std::bernoulli_distribution::operator()" link="cpp/numeric/random/bernoulli_distribution/operator()"/>
    <keyword type="function" name="std::bernoulli_distribution::p" link="cpp/numeric/random/bernoulli_distribution/p"/>
    <keyword type="function" name="std::bernoulli_distribution::param" link="cpp/numeric/random/bernoulli_distribution/param"/>
    <keyword type="function" name="std::bernoulli_distribution::min" link="cpp/numeric/random/bernoulli_distribution/min"/>
    <keyword type="function" name="std::bernoulli_distribution::max" link="cpp/numeric/random/bernoulli_distribution/max"/>
    <keyword type="function" name="operator==(std::bernoulli_distribution)" link="cpp/numeric/random/bernoulli_distribution/operator_cmp"/>
    <keyword type="function" name="operator!=(std::bernoulli_distribution)" link="cpp/numeric/random/bernoulli_distribution/operator_cmp"/>
    <keyword type="function" name="operator&lt;&lt;(std::bernoulli_distribution)" link="cpp/numeric/random/bernoulli_distribution/operator_ltltgtgt"/>
    <keyword type="function" name="operator&gt;&gt;(std::bernoulli_distribution)" link="cpp/numeric/random/bernoulli_distribution/operator_ltltgtgt"/>
    <keyword type="class" name="std::binomial_distribution" link="cpp/numeric/random/binomial_distribution"/>
    <keyword type="function" name="std::binomial_distribution::binomial_distribution" link="cpp/numeric/random/binomial_distribution/binomial_distribution"/>
    <keyword type="function" name="std::binomial_distribution::reset" link="cpp/numeric/random/binomial_distribution/reset"/>
    <keyword type="function" name="operator()(std::binomial_distribution)" link="cpp/numeric/random/binomial_distribution/operator()"/>
    <keyword type="function" name="std::binomial_distribution::t" link="cpp/numeric/random/binomial_distribution/params"/>
    <keyword type="function" name="std::binomial_distribution::p" link="cpp/numeric/random/binomial_distribution/params"/>
    <keyword type="function" name="std::binomial_distribution::param" link="cpp/numeric/random/binomial_distribution/param"/>
    <keyword type="function" name="std::binomial_distribution::min" link="cpp/numeric/random/binomial_distribution/min"/>
    <keyword type="function" name="std::binomial_distribution::max" link="cpp/numeric/random/binomial_distribution/max"/>
    <keyword type="function" name="operator==(std::binomial_distribution)" link="cpp/numeric/random/binomial_distribution/operator_cmp"/>
    <keyword type="function" name="operator!=(std::binomial_distribution)" link="cpp/numeric/random/binomial_distribution/operator_cmp"/>
    <keyword type="function" name="operator&lt;&lt;(std::binomial_distribution)" link="cpp/numeric/random/binomial_distribution/operator_ltltgtgt"/>
    <keyword type="function" name="operator&gt;&gt;(std::binomial_distribution)" link="cpp/numeric/random/binomial_distribution/operator_ltltgtgt"/>
    <keyword type="class" name="std::negative_binomial_distribution" link="cpp/numeric/random/negative_binomial_distribution"/>
    <keyword type="function" name="std::negative_binomial_distribution::negative_binomial_distribution" link="cpp/numeric/random/negative_binomial_distribution/negative_binomial_distribution"/>
    <keyword type="function" name="std::negative_binomial_distribution::reset" link="cpp/numeric/random/negative_binomial_distribution/reset"/>
    <keyword type="function" name="std::negative_binomial_distribution::operator()" link="cpp/numeric/random/negative_binomial_distribution/operator()"/>
    <keyword type="function" name="std::negative_binomial_distribution::k" link="cpp/numeric/random/negative_binomial_distribution/params"/>
    <keyword type="function" name="std::negative_binomial_distribution::p" link="cpp/numeric/random/negative_binomial_distribution/params"/>
    <keyword type="function" name="std::negative_binomial_distribution::param" link="cpp/numeric/random/negative_binomial_distribution/param"/>
    <keyword type="function" name="std::negative_binomial_distribution::min" link="cpp/numeric/random/negative_binomial_distribution/min"/>
    <keyword type="function" name="std::negative_binomial_distribution::max" link="cpp/numeric/random/negative_binomial_distribution/max"/>
    <keyword type="function" name="operator==(std::negative_binomial_distribution)" link="cpp/numeric/random/negative_binomial_distribution/operator_cmp"/>
    <keyword type="function" name="operator!=(std::negative_binomial_distribution)" link="cpp/numeric/random/negative_binomial_distribution/operator_cmp"/>
    <keyword type="function" name="operator&lt;&lt;(std::negative_binomial_distribution)" link="cpp/numeric/random/negative_binomial_distribution/operator_ltltgtgt"/>
    <keyword type="function" name="operator&gt;&gt;(std::negative_binomial_distribution)" link="cpp/numeric/random/negative_binomial_distribution/operator_ltltgtgt"/>
    <keyword type="class" name="std::geometric_distribution" link="cpp/numeric/random/geometric_distribution"/>
    <keyword type="function" name="std::geometric_distribution::geometric_distribution" link="cpp/numeric/random/geometric_distribution/geometric_distribution"/>
    <keyword type="function" name="std::geometric_distribution::reset" link="cpp/numeric/random/geometric_distribution/reset"/>
    <keyword type="function" name="std::geometric_distribution::operator()" link="cpp/numeric/random/geometric_distribution/operator()"/>
    <keyword type="function" name="std::geometric_distribution::p" link="cpp/numeric/random/geometric_distribution/p"/>
    <keyword type="function" name="std::geometric_distribution::param" link="cpp/numeric/random/geometric_distribution/param"/>
    <keyword type="function" name="std::geometric_distribution::min" link="cpp/numeric/random/geometric_distribution/min"/>
    <keyword type="function" name="std::geometric_distribution::max" link="cpp/numeric/random/geometric_distribution/max"/>
    <keyword type="function" name="operator==(std::geometric_distribution)" link="cpp/numeric/random/geometric_distribution/operator_cmp"/>
    <keyword type="function" name="operator!=(std::geometric_distribution)" link="cpp/numeric/random/geometric_distribution/operator_cmp"/>
    <keyword type="function" name="operator&lt;&lt;(std::geometric_distribution)" link="cpp/numeric/random/geometric_distribution/operator_ltltgtgt"/>
    <keyword type="function" name="operator&gt;&gt;(std::geometric_distribution)" link="cpp/numeric/random/geometric_distribution/operator_ltltgtgt"/>
    <keyword type="class" name="std::poisson_distribution" link="cpp/numeric/random/poisson_distribution"/>
    <keyword type="function" name="std::poisson_distribution::poisson_distribution" link="cpp/numeric/random/poisson_distribution/poisson_distribution"/>
    <keyword type="function" name="std::poisson_distribution::reset" link="cpp/numeric/random/poisson_distribution/reset"/>
    <keyword type="function" name="std::poisson_distribution::operator()" link="cpp/numeric/random/poisson_distribution/operator()"/>
    <keyword type="function" name="std::poisson_distribution::mean" link="cpp/numeric/random/poisson_distribution/mean"/>
    <keyword type="function" name="std::poisson_distribution::param" link="cpp/numeric/random/poisson_distribution/param"/>
    <keyword type="function" name="std::poisson_distribution::min" link="cpp/numeric/random/poisson_distribution/min"/>
    <keyword type="function" name="std::poisson_distribution::max" link="cpp/numeric/random/poisson_distribution/max"/>
    <keyword type="function" name="operator==(std::poisson_distribution)" link="cpp/numeric/random/poisson_distribution/operator_cmp"/>
    <keyword type="function" name="operator!=(std::poisson_distribution)" link="cpp/numeric/random/poisson_distribution/operator_cmp"/>
    <keyword type="function" name="operator&lt;&lt;(std::poisson_distribution)" link="cpp/numeric/random/poisson_distribution/operator_ltltgtgt"/>
    <keyword type="function" name="operator&gt;&gt;(std::poisson_distribution)" link="cpp/numeric/random/poisson_distribution/operator_ltltgtgt"/>
    <keyword type="class" name="std::exponential_distribution" link="cpp/numeric/random/exponential_distribution"/>
    <keyword type="function" name="std::exponential_distribution::exponential_distribution" link="cpp/numeric/random/exponential_distribution/exponential_distribution"/>
    <keyword type="function" name="std::exponential_distribution::reset" link="cpp/numeric/random/exponential_distribution/reset"/>
    <keyword type="function" name="std::exponential_distribution::operator()" link="cpp/numeric/random/exponential_distribution/operator()"/>
    <keyword type="function" name="std::exponential_distribution::lambda" link="cpp/numeric/random/exponential_distribution/lambda"/>
    <keyword type="function" name="std::exponential_distribution::param" link="cpp/numeric/random/exponential_distribution/param"/>
    <keyword type="function" name="std::exponential_distribution::min" link="cpp/numeric/random/exponential_distribution/min"/>
    <keyword type="function" name="std::exponential_distribution::max" link="cpp/numeric/random/exponential_distribution/max"/>
    <keyword type="function" name="operator==(std::exponential_distribution)" link="cpp/numeric/random/exponential_distribution/operator_cmp"/>
    <keyword type="function" name="operator!=(std::exponential_distribution)" link="cpp/numeric/random/exponential_distribution/operator_cmp"/>
    <keyword type="function" name="operator&lt;&lt;(std::exponential_distribution)" link="cpp/numeric/random/exponential_distribution/operator_ltltgtgt"/>
    <keyword type="function" name="operator&gt;&gt;(std::exponential_distribution)" link="cpp/numeric/random/exponential_distribution/operator_ltltgtgt"/>
    <keyword type="class" name="std::gamma_distribution" link="cpp/numeric/random/gamma_distribution"/>
    <keyword type="function" name="std::gamma_distribution::gamma_distribution" link="cpp/numeric/random/gamma_distribution/gamma_distribution"/>
    <keyword type="function" name="std::gamma_distribution::reset" link="cpp/numeric/random/gamma_distribution/reset"/>
    <keyword type="function" name="std::gamma_distribution::operator()" link="cpp/numeric/random/gamma_distribution/operator()"/>
    <keyword type="function" name="std::gamma_distribution::alpha" link="cpp/numeric/random/gamma_distribution/params"/>
    <keyword type="function" name="std::gamma_distribution::beta" link="cpp/numeric/random/gamma_distribution/params"/>
    <keyword type="function" name="std::gamma_distribution::param" link="cpp/numeric/random/gamma_distribution/param"/>
    <keyword type="function" name="std::gamma_distribution::min" link="cpp/numeric/random/gamma_distribution/min"/>
    <keyword type="function" name="std::gamma_distribution::max" link="cpp/numeric/random/gamma_distribution/max"/>
    <keyword type="function" name="operator==(std::gamma_distribution)" link="cpp/numeric/random/gamma_distribution/operator_cmp"/>
    <keyword type="function" name="operator!=(std::gamma_distribution)" link="cpp/numeric/random/gamma_distribution/operator_cmp"/>
    <keyword type="function" name="operator&lt;&lt;(std::gamma_distribution)" link="cpp/numeric/random/gamma_distribution/operator_ltltgtgt"/>
    <keyword type="function" name="operator&gt;&gt;(std::gamma_distribution)" link="cpp/numeric/random/gamma_distribution/operator_ltltgtgt"/>
    <keyword type="class" name="std::weibull_distribution" link="cpp/numeric/random/weibull_distribution"/>
    <keyword type="function" name="std::weibull_distribution::weibull_distribution" link="cpp/numeric/random/weibull_distribution/weibull_distribution"/>
    <keyword type="function" name="std::weibull_distribution::reset" link="cpp/numeric/random/weibull_distribution/reset"/>
    <keyword type="function" name="std::weibull_distribution::operator()" link="cpp/numeric/random/weibull_distribution/operator()"/>
    <keyword type="function" name="std::weibull_distribution::a" link="cpp/numeric/random/weibull_distribution/params"/>
    <keyword type="function" name="std::weibull_distribution::b" link="cpp/numeric/random/weibull_distribution/params"/>
    <keyword type="function" name="std::weibull_distribution::param" link="cpp/numeric/random/weibull_distribution/param"/>
    <keyword type="function" name="std::weibull_distribution::min" link="cpp/numeric/random/weibull_distribution/min"/>
    <keyword type="function" name="std::weibull_distribution::max" link="cpp/numeric/random/weibull_distribution/max"/>
    <keyword type="function" name="operator==(std::weibull_distribution)" link="cpp/numeric/random/weibull_distribution/operator_cmp"/>
    <keyword type="function" name="operator!=(std::weibull_distribution)" link="cpp/numeric/random/weibull_distribution/operator_cmp"/>
    <keyword type="function" name="operator&lt;&lt;(std::weibull_distribution)" link="cpp/numeric/random/weibull_distribution/operator_ltltgtgt"/>
    <keyword type="function" name="operator&gt;&gt;(std::weibull_distribution)" link="cpp/numeric/random/weibull_distribution/operator_ltltgtgt"/>
    <keyword type="class" name="std::extreme_value_distribution" link="cpp/numeric/random/extreme_value_distribution"/>
    <keyword type="function" name="std::extreme_value_distribution::extreme_value_distribution" link="cpp/numeric/random/extreme_value_distribution/extreme_value_distribution"/>
    <keyword type="function" name="std::extreme_value_distribution::reset" link="cpp/numeric/random/extreme_value_distribution/reset"/>
    <keyword type="function" name="std::extreme_value_distribution::operator()" link="cpp/numeric/random/extreme_value_distribution/operator()"/>
    <keyword type="function" name="std::extreme_value_distribution::a" link="cpp/numeric/random/extreme_value_distribution/params"/>
    <keyword type="function" name="std::extreme_value_distribution::b" link="cpp/numeric/random/extreme_value_distribution/params"/>
    <keyword type="function" name="std::extreme_value_distribution::param" link="cpp/numeric/random/extreme_value_distribution/param"/>
    <keyword type="function" name="std::extreme_value_distribution::min" link="cpp/numeric/random/extreme_value_distribution/min"/>
    <keyword type="function" name="std::extreme_value_distribution::max" link="cpp/numeric/random/extreme_value_distribution/max"/>
    <keyword type="function" name="operator==(std::extreme_value_distribution)" link="cpp/numeric/random/extreme_value_distribution/operator_cmp"/>
    <keyword type="function" name="operator!=(std::extreme_value_distribution)" link="cpp/numeric/random/extreme_value_distribution/operator_cmp"/>
    <keyword type="function" name="operator&lt;&lt;(std::extreme_value_distribution)" link="cpp/numeric/random/extreme_value_distribution/operator_ltltgtgt"/>
    <keyword type="function" name="operator&gt;&gt;(std::extreme_value_distribution)" link="cpp/numeric/random/extreme_value_distribution/operator_ltltgtgt"/>
    <keyword type="class" name="std::normal_distribution" link="cpp/numeric/random/normal_distribution"/>
    <keyword type="function" name="std::normal_distribution::normal_distribution" link="cpp/numeric/random/normal_distribution/normal_distribution"/>
    <keyword type="function" name="std::normal_distribution::reset" link="cpp/numeric/random/normal_distribution/reset"/>
    <keyword type="function" name="std::normal_distribution::operator()" link="cpp/numeric/random/normal_distribution/operator()"/>
    <keyword type="function" name="std::normal_distribution::mean" link="cpp/numeric/random/normal_distribution/params"/>
    <keyword type="function" name="std::normal_distribution::stddev" link="cpp/numeric/random/normal_distribution/params"/>
    <keyword type="function" name="std::normal_distribution::param" link="cpp/numeric/random/normal_distribution/param"/>
    <keyword type="function" name="std::normal_distribution::min" link="cpp/numeric/random/normal_distribution/min"/>
    <keyword type="function" name="std::normal_distribution::max" link="cpp/numeric/random/normal_distribution/max"/>
    <keyword type="function" name="operator==(std::normal_distribution)" link="cpp/numeric/random/normal_distribution/operator_cmp"/>
    <keyword type="function" name="operator!=(std::normal_distribution)" link="cpp/numeric/random/normal_distribution/operator_cmp"/>
    <keyword type="function" name="operator&lt;&lt;(std::normal_distribution)" link="cpp/numeric/random/normal_distribution/operator_ltltgtgt"/>
    <keyword type="function" name="operator&gt;&gt;(std::normal_distribution)" link="cpp/numeric/random/normal_distribution/operator_ltltgtgt"/>
    <keyword type="class" name="std::lognormal_distribution" link="cpp/numeric/random/lognormal_distribution"/>
    <keyword type="function" name="std::lognormal_distribution::lognormal_distribution" link="cpp/numeric/random/lognormal_distribution/lognormal_distribution"/>
    <keyword type="function" name="std::lognormal_distribution::reset" link="cpp/numeric/random/lognormal_distribution/reset"/>
    <keyword type="function" name="std::lognormal_distribution::operator()" link="cpp/numeric/random/lognormal_distribution/operator()"/>
    <keyword type="function" name="std::lognormal_distribution::m" link="cpp/numeric/random/lognormal_distribution/params"/>
    <keyword type="function" name="std::lognormal_distribution::s" link="cpp/numeric/random/lognormal_distribution/params"/>
    <keyword type="function" name="std::lognormal_distribution::param" link="cpp/numeric/random/lognormal_distribution/param"/>
    <keyword type="function" name="std::lognormal_distribution::min" link="cpp/numeric/random/lognormal_distribution/min"/>
    <keyword type="function" name="std::lognormal_distribution::max" link="cpp/numeric/random/lognormal_distribution/max"/>
    <keyword type="function" name="operator==(std::lognormal_distribution)" link="cpp/numeric/random/lognormal_distribution/operator_cmp"/>
    <keyword type="function" name="operator!=(std::lognormal_distribution)" link="cpp/numeric/random/lognormal_distribution/operator_cmp"/>
    <keyword type="function" name="operator&lt;&lt;(std::lognormal_distribution)" link="cpp/numeric/random/lognormal_distribution/operator_ltltgtgt"/>
    <keyword type="function" name="operator&gt;&gt;(std::lognormal_distribution)" link="cpp/numeric/random/lognormal_distribution/operator_ltltgtgt"/>
    <keyword type="class" name="std::chi_squared_distribution" link="cpp/numeric/random/chi_squared_distribution"/>
    <keyword type="function" name="std::chi_squared_distribution::chi_squared_distribution" link="cpp/numeric/random/chi_squared_distribution/chi_squared_distribution"/>
    <keyword type="function" name="std::chi_squared_distribution::reset" link="cpp/numeric/random/chi_squared_distribution/reset"/>
    <keyword type="function" name="std::chi_squared_distribution::operator()" link="cpp/numeric/random/chi_squared_distribution/operator()"/>
    <keyword type="function" name="std::chi_squared_distribution::n" link="cpp/numeric/random/chi_squared_distribution/n"/>
    <keyword type="function" name="std::chi_squared_distribution::param" link="cpp/numeric/random/chi_squared_distribution/param"/>
    <keyword type="function" name="std::chi_squared_distribution::min" link="cpp/numeric/random/chi_squared_distribution/min"/>
    <keyword type="function" name="std::chi_squared_distribution::max" link="cpp/numeric/random/chi_squared_distribution/max"/>
    <keyword type="function" name="operator==(std::chi_squared_distribution)" link="cpp/numeric/random/chi_squared_distribution/operator_cmp"/>
    <keyword type="function" name="operator!=(std::chi_squared_distribution)" link="cpp/numeric/random/chi_squared_distribution/operator_cmp"/>
    <keyword type="function" name="operator&lt;&lt;(std::chi_squared_distribution)" link="cpp/numeric/random/chi_squared_distribution/operator_ltltgtgt"/>
    <keyword type="function" name="operator&gt;&gt;(std::chi_squared_distribution)" link="cpp/numeric/random/chi_squared_distribution/operator_ltltgtgt"/>
    <keyword type="class" name="std::cauchy_distribution" link="cpp/numeric/random/cauchy_distribution"/>
    <keyword type="function" name="std::cauchy_distribution::cauchy_distribution" link="cpp/numeric/random/cauchy_distribution/cauchy_distribution"/>
    <keyword type="function" name="std::cauchy_distribution::reset" link="cpp/numeric/random/cauchy_distribution/reset"/>
    <keyword type="function" name="std::cauchy_distribution::operator()" link="cpp/numeric/random/cauchy_distribution/operator()"/>
    <keyword type="function" name="std::cauchy_distribution::a" link="cpp/numeric/random/cauchy_distribution/params"/>
    <keyword type="function" name="std::cauchy_distribution::b" link="cpp/numeric/random/cauchy_distribution/params"/>
    <keyword type="function" name="std::cauchy_distribution::param" link="cpp/numeric/random/cauchy_distribution/param"/>
    <keyword type="function" name="std::cauchy_distribution::min" link="cpp/numeric/random/cauchy_distribution/min"/>
    <keyword type="function" name="std::cauchy_distribution::max" link="cpp/numeric/random/cauchy_distribution/max"/>
    <keyword type="function" name="operator==(std::cauchy_distribution)" link="cpp/numeric/random/cauchy_distribution/operator_cmp"/>
    <keyword type="function" name="operator!=(std::cauchy_distribution)" link="cpp/numeric/random/cauchy_distribution/operator_cmp"/>
    <keyword type="function" name="operator&lt;&lt;(std::cauchy_distribution)" link="cpp/numeric/random/cauchy_distribution/operator_ltltgtgt"/>
    <keyword type="function" name="operator&gt;&gt;(std::cauchy_distribution)" link="cpp/numeric/random/cauchy_distribution/operator_ltltgtgt"/>
    <keyword type="class" name="std::fisher_f_distribution" link="cpp/numeric/random/fisher_f_distribution"/>
    <keyword type="function" name="std::fisher_f_distribution::fisher_f_distribution" link="cpp/numeric/random/fisher_f_distribution/fisher_f_distribution"/>
    <keyword type="function" name="std::fisher_f_distribution::reset" link="cpp/numeric/random/fisher_f_distribution/reset"/>
    <keyword type="function" name="std::fisher_f_distribution::operator()" link="cpp/numeric/random/fisher_f_distribution/operator()"/>
    <keyword type="function" name="std::fisher_f_distribution::m" link="cpp/numeric/random/fisher_f_distribution/params"/>
    <keyword type="function" name="std::fisher_f_distribution::n" link="cpp/numeric/random/fisher_f_distribution/params"/>
    <keyword type="function" name="std::fisher_f_distribution::param" link="cpp/numeric/random/fisher_f_distribution/param"/>
    <keyword type="function" name="std::fisher_f_distribution::min" link="cpp/numeric/random/fisher_f_distribution/min"/>
    <keyword type="function" name="std::fisher_f_distribution::max" link="cpp/numeric/random/fisher_f_distribution/max"/>
    <keyword type="function" name="operator==(std::fisher_f_distribution)" link="cpp/numeric/random/fisher_f_distribution/operator_cmp"/>
    <keyword type="function" name="operator!=(std::fisher_f_distribution)" link="cpp/numeric/random/fisher_f_distribution/operator_cmp"/>
    <keyword type="function" name="operator&lt;&lt;(std::fisher_f_distribution)" link="cpp/numeric/random/fisher_f_distribution/operator_ltltgtgt"/>
    <keyword type="function" name="operator&gt;&gt;(std::fisher_f_distribution)" link="cpp/numeric/random/fisher_f_distribution/operator_ltltgtgt"/>
    <keyword type="class" name="std::student_t_distribution" link="cpp/numeric/random/student_t_distribution"/>
    <keyword type="function" name="std::student_t_distribution::student_t_distribution" link="cpp/numeric/random/student_t_distribution/student_t_distribution"/>
    <keyword type="function" name="std::student_t_distribution::reset" link="cpp/numeric/random/student_t_distribution/reset"/>
    <keyword type="function" name="std::student_t_distribution::operator()" link="cpp/numeric/random/student_t_distribution/operator()"/>
    <keyword type="function" name="std::student_t_distribution::n" link="cpp/numeric/random/student_t_distribution/n"/>
    <keyword type="function" name="std::student_t_distribution::param" link="cpp/numeric/random/student_t_distribution/param"/>
    <keyword type="function" name="std::student_t_distribution::min" link="cpp/numeric/random/student_t_distribution/min"/>
    <keyword type="function" name="std::student_t_distribution::max" link="cpp/numeric/random/student_t_distribution/max"/>
    <keyword type="function" name="operator==(std::student_t_distribution)" link="cpp/numeric/random/student_t_distribution/operator_cmp"/>
    <keyword type="function" name="operator!=(std::student_t_distribution)" link="cpp/numeric/random/student_t_distribution/operator_cmp"/>
    <keyword type="function" name="operator&lt;&lt;(std::student_t_distribution)" link="cpp/numeric/random/student_t_distribution/operator_ltltgtgt"/>
    <keyword type="function" name="operator&gt;&gt;(std::student_t_distribution)" link="cpp/numeric/random/student_t_distribution/operator_ltltgtgt"/>
    <keyword type="class" name="std::discrete_distribution" link="cpp/numeric/random/discrete_distribution"/>
    <keyword type="function" name="std::discrete_distribution::discrete_distribution" link="cpp/numeric/random/discrete_distribution/discrete_distribution"/>
    <keyword type="function" name="std::discrete_distribution::reset" link="cpp/numeric/random/discrete_distribution/reset"/>
    <keyword type="function" name="std::discrete_distribution::operator()" link="cpp/numeric/random/discrete_distribution/operator()"/>
    <keyword type="function" name="std::discrete_distribution::probabilities" link="cpp/numeric/random/discrete_distribution/probabilities"/>
    <keyword type="function" name="std::discrete_distribution::param" link="cpp/numeric/random/discrete_distribution/param"/>
    <keyword type="function" name="std::discrete_distribution::min" link="cpp/numeric/random/discrete_distribution/min"/>
    <keyword type="function" name="std::discrete_distribution::max" link="cpp/numeric/random/discrete_distribution/max"/>
    <keyword type="function" name="operator==(std::discrete_distribution)" link="cpp/numeric/random/discrete_distribution/operator_cmp"/>
    <keyword type="function" name="operator!=(std::discrete_distribution)" link="cpp/numeric/random/discrete_distribution/operator_cmp"/>
    <keyword type="function" name="operator&lt;&lt;(std::discrete_distribution)" link="cpp/numeric/random/discrete_distribution/operator_ltltgtgt"/>
    <keyword type="function" name="operator&gt;&gt;(std::discrete_distribution)" link="cpp/numeric/random/discrete_distribution/operator_ltltgtgt"/>
    <keyword type="class" name="std::piecewise_constant_distribution" link="cpp/numeric/random/piecewise_constant_distribution"/>
    <keyword type="function" name="std::piecewise_constant_distribution::piecewise_constant_distribution" link="cpp/numeric/random/piecewise_constant_distribution/piecewise_constant_distribution"/>
    <keyword type="function" name="std::piecewise_constant_distribution::reset" link="cpp/numeric/random/piecewise_constant_distribution/reset"/>
    <keyword type="function" name="std::piecewise_constant_distribution::operator()" link="cpp/numeric/random/piecewise_constant_distribution/operator()"/>
    <keyword type="function" name="std::piecewise_constant_distribution::intervals" link="cpp/numeric/random/piecewise_constant_distribution/params"/>
    <keyword type="function" name="std::piecewise_constant_distribution::densities" link="cpp/numeric/random/piecewise_constant_distribution/params"/>
    <keyword type="function" name="std::piecewise_constant_distribution::param" link="cpp/numeric/random/piecewise_constant_distribution/param"/>
    <keyword type="function" name="std::piecewise_constant_distribution::min" link="cpp/numeric/random/piecewise_constant_distribution/min"/>
    <keyword type="function" name="std::piecewise_constant_distribution::max" link="cpp/numeric/random/piecewise_constant_distribution/max"/>
    <keyword type="function" name="operator==(std::piecewise_constant_distribution)" link="cpp/numeric/random/piecewise_constant_distribution/operator_cmp"/>
    <keyword type="function" name="operator!=(std::piecewise_constant_distribution)" link="cpp/numeric/random/piecewise_constant_distribution/operator_cmp"/>
    <keyword type="function" name="operator&lt;&lt;(std::piecewise_constant_distribution)" link="cpp/numeric/random/piecewise_constant_distribution/operator_ltltgtgt"/>
    <keyword type="function" name="operator&gt;&gt;(std::piecewise_constant_distribution)" link="cpp/numeric/random/piecewise_constant_distribution/operator_ltltgtgt"/>
    <keyword type="class" name="std::piecewise_linear_distribution" link="cpp/numeric/random/piecewise_linear_distribution"/>
    <keyword type="function" name="std::piecewise_linear_distribution::piecewise_linear_distribution" link="cpp/numeric/random/piecewise_linear_distribution/piecewise_linear_distribution"/>
    <keyword type="function" name="std::piecewise_linear_distribution::reset" link="cpp/numeric/random/piecewise_linear_distribution/reset"/>
    <keyword type="function" name="std::piecewise_linear_distribution::operator()" link="cpp/numeric/random/piecewise_linear_distribution/operator()"/>
    <keyword type="function" name="std::piecewise_linear_distribution::intervals" link="cpp/numeric/random/piecewise_linear_distribution/params"/>
    <keyword type="function" name="std::piecewise_linear_distribution::densities" link="cpp/numeric/random/piecewise_linear_distribution/params"/>
    <keyword type="function" name="std::piecewise_linear_distribution::param" link="cpp/numeric/random/piecewise_linear_distribution/param"/>
    <keyword type="function" name="std::piecewise_linear_distribution::min" link="cpp/numeric/random/piecewise_linear_distribution/min"/>
    <keyword type="function" name="std::piecewise_linear_distribution::max" link="cpp/numeric/random/piecewise_linear_distribution/max"/>
    <keyword type="function" name="operator==(std::piecewise_linear_distribution)" link="cpp/numeric/random/piecewise_linear_distribution/operator_cmp"/>
    <keyword type="function" name="operator!=(std::piecewise_linear_distribution)" link="cpp/numeric/random/piecewise_linear_distribution/operator_cmp"/>
    <keyword type="function" name="operator&lt;&lt;(std::piecewise_linear_distribution)" link="cpp/numeric/random/piecewise_linear_distribution/operator_ltltgtgt"/>
    <keyword type="function" name="operator&gt;&gt;(std::piecewise_linear_distribution)" link="cpp/numeric/random/piecewise_linear_distribution/operator_ltltgtgt"/>
    <keyword type="class" name="std::ratio" link="cpp/numeric/ratio/ratio"/>
    <keyword type="typedef" name="std::yocto" link="cpp/numeric/ratio/ratio"/>
    <keyword type="typedef" name="std::zepto" link="cpp/numeric/ratio/ratio"/>
    <keyword type="typedef" name="std::atto" link="cpp/numeric/ratio/ratio"/>
    <keyword type="typedef" name="std::femto" link="cpp/numeric/ratio/ratio"/>
    <keyword type="typedef" name="std::pico" link="cpp/numeric/ratio/ratio"/>
    <keyword type="typedef" name="std::nano" link="cpp/numeric/ratio/ratio"/>
    <keyword type="typedef" name="std::micro" link="cpp/numeric/ratio/ratio"/>
    <keyword type="typedef" name="std::milli" link="cpp/numeric/ratio/ratio"/>
    <keyword type="typedef" name="std::centi" link="cpp/numeric/ratio/ratio"/>
    <keyword type="typedef" name="std::deci" link="cpp/numeric/ratio/ratio"/>
    <keyword type="typedef" name="std::deca" link="cpp/numeric/ratio/ratio"/>
    <keyword type="typedef" name="std::hecto" link="cpp/numeric/ratio/ratio"/>
    <keyword type="typedef" name="std::kilo" link="cpp/numeric/ratio/ratio"/>
    <keyword type="typedef" name="std::mega" link="cpp/numeric/ratio/ratio"/>
    <keyword type="typedef" name="std::giga" link="cpp/numeric/ratio/ratio"/>
    <keyword type="typedef" name="std::tera" link="cpp/numeric/ratio/ratio"/>
    <keyword type="typedef" name="std::peta" link="cpp/numeric/ratio/ratio"/>
    <keyword type="typedef" name="std::exa" link="cpp/numeric/ratio/ratio"/>
    <keyword type="typedef" name="std::zetta" link="cpp/numeric/ratio/ratio"/>
    <keyword type="typedef" name="std::yotta" link="cpp/numeric/ratio/ratio"/>
    <keyword type="class" name="std::ratio_add" link="cpp/numeric/ratio/ratio_add"/>
    <keyword type="class" name="std::ratio_subtract" link="cpp/numeric/ratio/ratio_subtract"/>
    <keyword type="class" name="std::ratio_multiply" link="cpp/numeric/ratio/ratio_multiply"/>
    <keyword type="class" name="std::ratio_divide" link="cpp/numeric/ratio/ratio_divide"/>
    <keyword type="class" name="std::ratio_equal" link="cpp/numeric/ratio/ratio_equal"/>
    <keyword type="" name="std::ratio_equal_v" link="cpp/numeric/ratio/ratio_equal"/>
    <keyword type="class" name="std::ratio_not_equal" link="cpp/numeric/ratio/ratio_not_equal"/>
    <keyword type="" name="std::ratio_not_equal_v" link="cpp/numeric/ratio/ratio_not_equal"/>
    <keyword type="class" name="std::ratio_less" link="cpp/numeric/ratio/ratio_less"/>
    <keyword type="" name="std::ratio_less_v" link="cpp/numeric/ratio/ratio_less"/>
    <keyword type="class" name="std::ratio_less_equal" link="cpp/numeric/ratio/ratio_less_equal"/>
    <keyword type="" name="std::ratio_less_equal_v" link="cpp/numeric/ratio/ratio_less_equal"/>
    <keyword type="class" name="std::ratio_greater" link="cpp/numeric/ratio/ratio_greater"/>
    <keyword type="" name="std::ratio_greater_v" link="cpp/numeric/ratio/ratio_greater"/>
    <keyword type="class" name="std::ratio_greater_equal" link="cpp/numeric/ratio/ratio_greater_equal"/>
    <keyword type="" name="std::ratio_greater_equal_v" link="cpp/numeric/ratio/ratio_greater_equal"/>
    <keyword type="class" name="std::execution::sequenced_policy" link="cpp/algorithm/execution_policy_tag_t"/>
    <keyword type="class" name="std::execution::parallel_policy" link="cpp/algorithm/execution_policy_tag_t"/>
    <keyword type="class" name="std::execution::parallel_unsequenced_policy" link="cpp/algorithm/execution_policy_tag_t"/>
    <keyword type="class" name="std::execution::unsequenced_policy" link="cpp/algorithm/execution_policy_tag_t"/>
    <keyword type="macro" name="std::execution::seq" link="cpp/algorithm/execution_policy_tag"/>
    <keyword type="macro" name="std::execution::par" link="cpp/algorithm/execution_policy_tag"/>
    <keyword type="macro" name="std::execution::par_unseq" link="cpp/algorithm/execution_policy_tag"/>
    <keyword type="macro" name="std::execution::unseq" link="cpp/algorithm/execution_policy_tag"/>
    <keyword type="class" name="std::is_execution_policy" link="cpp/algorithm/is_execution_policy"/>
    <keyword type="" name="std::is_execution_policy_v" link="cpp/algorithm/is_execution_policy"/>
    <keyword type="function" name="std::all_of" link="cpp/algorithm/all_any_none_of"/>
    <keyword type="function" name="std::any_of" link="cpp/algorithm/all_any_none_of"/>
    <keyword type="function" name="std::none_of" link="cpp/algorithm/all_any_none_of"/>
    <keyword type="function" name="std::for_each" link="cpp/algorithm/for_each"/>
    <keyword type="function" name="std::for_each_n" link="cpp/algorithm/for_each_n"/>
    <keyword type="function" name="std::count" link="cpp/algorithm/count"/>
    <keyword type="function" name="std::count_if" link="cpp/algorithm/count"/>
    <keyword type="function" name="std::mismatch" link="cpp/algorithm/mismatch"/>
    <keyword type="function" name="std::find" link="cpp/algorithm/find"/>
    <keyword type="function" name="std::find_if" link="cpp/algorithm/find"/>
    <keyword type="function" name="std::find_if_not" link="cpp/algorithm/find"/>
    <keyword type="function" name="std::find_end" link="cpp/algorithm/find_end"/>
    <keyword type="function" name="std::find_first_of" link="cpp/algorithm/find_first_of"/>
    <keyword type="function" name="std::adjacent_find" link="cpp/algorithm/adjacent_find"/>
    <keyword type="function" name="std::search" link="cpp/algorithm/search"/>
    <keyword type="function" name="std::search_n" link="cpp/algorithm/search_n"/>
    <keyword type="function" name="std::copy" link="cpp/algorithm/copy"/>
    <keyword type="function" name="std::copy_if" link="cpp/algorithm/copy"/>
    <keyword type="function" name="std::copy_n" link="cpp/algorithm/copy_n"/>
    <keyword type="function" name="std::copy_backward" link="cpp/algorithm/copy_backward"/>
    <keyword type="function" name="std::move (algorithm)" link="cpp/algorithm/move"/>
    <keyword type="function" name="std::move_backward" link="cpp/algorithm/move_backward"/>
    <keyword type="function" name="std::fill" link="cpp/algorithm/fill"/>
    <keyword type="function" name="std::fill_n" link="cpp/algorithm/fill_n"/>
    <keyword type="function" name="std::transform" link="cpp/algorithm/transform"/>
    <keyword type="function" name="std::generate" link="cpp/algorithm/generate"/>
    <keyword type="function" name="std::generate_n" link="cpp/algorithm/generate_n"/>
    <keyword type="function" name="std::remove (&lt;algorithm&gt;)" link="cpp/algorithm/remove"/>
    <keyword type="function" name="std::remove_if" link="cpp/algorithm/remove"/>
    <keyword type="function" name="std::remove_copy" link="cpp/algorithm/remove_copy"/>
    <keyword type="function" name="std::remove_copy_if" link="cpp/algorithm/remove_copy"/>
    <keyword type="function" name="std::replace" link="cpp/algorithm/replace"/>
    <keyword type="function" name="std::replace_if" link="cpp/algorithm/replace"/>
    <keyword type="function" name="std::replace_copy" link="cpp/algorithm/replace_copy"/>
    <keyword type="function" name="std::replace_copy_if" link="cpp/algorithm/replace_copy"/>
    <keyword type="function" name="std::swap" link="cpp/algorithm/swap"/>
    <keyword type="function" name="std::swap_ranges" link="cpp/algorithm/swap_ranges"/>
    <keyword type="function" name="std::iter_swap" link="cpp/algorithm/iter_swap"/>
    <keyword type="function" name="std::reverse" link="cpp/algorithm/reverse"/>
    <keyword type="function" name="std::reverse_copy" link="cpp/algorithm/reverse_copy"/>
    <keyword type="function" name="std::rotate" link="cpp/algorithm/rotate"/>
    <keyword type="function" name="std::rotate_copy" link="cpp/algorithm/rotate_copy"/>
    <keyword type="function" name="std::shift_left" link="cpp/algorithm/shift"/>
    <keyword type="function" name="std::shift_right" link="cpp/algorithm/shift"/>
    <keyword type="function" name="std::random_shuffle" link="cpp/algorithm/random_shuffle"/>
    <keyword type="function" name="std::shuffle" link="cpp/algorithm/random_shuffle"/>
    <keyword type="function" name="std::sample" link="cpp/algorithm/sample"/>
    <keyword type="function" name="std::unique" link="cpp/algorithm/unique"/>
    <keyword type="function" name="std::unique_copy" link="cpp/algorithm/unique_copy"/>
    <keyword type="function" name="std::is_partitioned" link="cpp/algorithm/is_partitioned"/>
    <keyword type="function" name="std::partition" link="cpp/algorithm/partition"/>
    <keyword type="function" name="std::partition_copy" link="cpp/algorithm/partition_copy"/>
    <keyword type="function" name="std::stable_partition" link="cpp/algorithm/stable_partition"/>
    <keyword type="function" name="std::partition_point" link="cpp/algorithm/partition_point"/>
    <keyword type="function" name="std::is_sorted" link="cpp/algorithm/is_sorted"/>
    <keyword type="function" name="std::is_sorted_until" link="cpp/algorithm/is_sorted_until"/>
    <keyword type="function" name="std::sort" link="cpp/algorithm/sort"/>
    <keyword type="function" name="std::partial_sort" link="cpp/algorithm/partial_sort"/>
    <keyword type="function" name="std::partial_sort_copy" link="cpp/algorithm/partial_sort_copy"/>
    <keyword type="function" name="std::stable_sort" link="cpp/algorithm/stable_sort"/>
    <keyword type="function" name="std::nth_element" link="cpp/algorithm/nth_element"/>
    <keyword type="function" name="std::lower_bound" link="cpp/algorithm/lower_bound"/>
    <keyword type="function" name="std::upper_bound" link="cpp/algorithm/upper_bound"/>
    <keyword type="function" name="std::binary_search" link="cpp/algorithm/binary_search"/>
    <keyword type="function" name="std::equal_range" link="cpp/algorithm/equal_range"/>
    <keyword type="function" name="std::merge" link="cpp/algorithm/merge"/>
    <keyword type="function" name="std::inplace_merge" link="cpp/algorithm/inplace_merge"/>
    <keyword type="function" name="std::includes" link="cpp/algorithm/includes"/>
    <keyword type="function" name="std::set_difference" link="cpp/algorithm/set_difference"/>
    <keyword type="function" name="std::set_intersection" link="cpp/algorithm/set_intersection"/>
    <keyword type="function" name="std::set_symmetric_difference" link="cpp/algorithm/set_symmetric_difference"/>
    <keyword type="function" name="std::set_union" link="cpp/algorithm/set_union"/>
    <keyword type="function" name="std::is_heap" link="cpp/algorithm/is_heap"/>
    <keyword type="function" name="std::is_heap_until" link="cpp/algorithm/is_heap_until"/>
    <keyword type="function" name="std::make_heap" link="cpp/algorithm/make_heap"/>
    <keyword type="function" name="std::push_heap" link="cpp/algorithm/push_heap"/>
    <keyword type="function" name="std::pop_heap" link="cpp/algorithm/pop_heap"/>
    <keyword type="function" name="std::sort_heap" link="cpp/algorithm/sort_heap"/>
    <keyword type="function" name="std::max" link="cpp/algorithm/max"/>
    <keyword type="function" name="std::max_element" link="cpp/algorithm/max_element"/>
    <keyword type="function" name="std::min" link="cpp/algorithm/min"/>
    <keyword type="function" name="std::min_element" link="cpp/algorithm/min_element"/>
    <keyword type="function" name="std::minmax" link="cpp/algorithm/minmax"/>
    <keyword type="function" name="std::minmax_element" link="cpp/algorithm/minmax_element"/>
    <keyword type="function" name="std::clamp" link="cpp/algorithm/clamp"/>
    <keyword type="function" name="std::equal" link="cpp/algorithm/equal"/>
    <keyword type="function" name="std::lexicographical_compare" link="cpp/algorithm/lexicographical_compare"/>
    <keyword type="function" name="std::lexicographical_compare_three_way" link="cpp/algorithm/lexicographical_compare_three_way"/>
    <keyword type="function" name="std::is_permutation" link="cpp/algorithm/is_permutation"/>
    <keyword type="function" name="std::next_permutation" link="cpp/algorithm/next_permutation"/>
    <keyword type="function" name="std::prev_permutation" link="cpp/algorithm/prev_permutation"/>
    <keyword type="function" name="std::accumulate" link="cpp/algorithm/accumulate"/>
    <keyword type="function" name="std::inner_product" link="cpp/algorithm/inner_product"/>
    <keyword type="function" name="std::adjacent_difference" link="cpp/algorithm/adjacent_difference"/>
    <keyword type="function" name="std::partial_sum" link="cpp/algorithm/partial_sum"/>
    <keyword type="function" name="std::iota" link="cpp/algorithm/iota"/>
    <keyword type="function" name="std::reduce" link="cpp/algorithm/reduce"/>
    <keyword type="function" name="std::inclusive_scan" link="cpp/algorithm/inclusive_scan"/>
    <keyword type="function" name="std::exclusive_scan" link="cpp/algorithm/exclusive_scan"/>
    <keyword type="function" name="std::transform_reduce" link="cpp/algorithm/transform_reduce"/>
    <keyword type="function" name="std::transform_inclusive_scan" link="cpp/algorithm/transform_inclusive_scan"/>
    <keyword type="function" name="std::transform_exclusive_scan" link="cpp/algorithm/transform_exclusive_scan"/>
    <keyword type="function" name="std::ranges::all_of" link="cpp/algorithm/ranges/all_any_none_of"/>
    <keyword type="function" name="std::ranges::any_of" link="cpp/algorithm/ranges/all_any_none_of"/>
    <keyword type="function" name="std::ranges::none_of" link="cpp/algorithm/ranges/all_any_none_of"/>
    <keyword type="function" name="std::ranges::for_each" link="cpp/algorithm/ranges/for_each"/>
    <keyword type="function" name="std::ranges::for_each_n" link="cpp/algorithm/ranges/for_each_n"/>
    <keyword type="function" name="std::ranges::count" link="cpp/algorithm/ranges/count"/>
    <keyword type="function" name="std::ranges::count_if" link="cpp/algorithm/ranges/count"/>
    <keyword type="function" name="std::ranges::mismatch" link="cpp/algorithm/ranges/mismatch"/>
    <keyword type="function" name="std::ranges::find" link="cpp/algorithm/ranges/find"/>
    <keyword type="function" name="std::ranges::find_if" link="cpp/algorithm/ranges/find"/>
    <keyword type="function" name="std::ranges::find_if_not" link="cpp/algorithm/ranges/find"/>
    <keyword type="function" name="std::ranges::find_end" link="cpp/algorithm/ranges/find_end"/>
    <keyword type="function" name="std::ranges::find_first_of" link="cpp/algorithm/ranges/find_first_of"/>
    <keyword type="function" name="std::ranges::adjacent_find" link="cpp/algorithm/ranges/adjacent_find"/>
    <keyword type="function" name="std::ranges::search" link="cpp/algorithm/ranges/search"/>
    <keyword type="function" name="std::ranges::search_n" link="cpp/algorithm/ranges/search_n"/>
    <keyword type="function" name="std::ranges::copy" link="cpp/algorithm/ranges/copy"/>
    <keyword type="function" name="std::ranges::copy_if" link="cpp/algorithm/ranges/copy"/>
    <keyword type="function" name="std::ranges::copy_n" link="cpp/algorithm/ranges/copy_n"/>
    <keyword type="function" name="std::ranges::copy_backward" link="cpp/algorithm/ranges/copy_backward"/>
    <keyword type="function" name="std::ranges::move" link="cpp/algorithm/ranges/move"/>
    <keyword type="function" name="std::ranges::move_backward" link="cpp/algorithm/ranges/move_backward"/>
    <keyword type="function" name="std::ranges::fill" link="cpp/algorithm/ranges/fill"/>
    <keyword type="function" name="std::ranges::fill_n" link="cpp/algorithm/ranges/fill_n"/>
    <keyword type="function" name="std::ranges::transform" link="cpp/algorithm/ranges/transform"/>
    <keyword type="function" name="std::ranges::generate" link="cpp/algorithm/ranges/generate"/>
    <keyword type="function" name="std::ranges::generate_n" link="cpp/algorithm/ranges/generate_n"/>
    <keyword type="function" name="std::ranges::remove" link="cpp/algorithm/ranges/remove"/>
    <keyword type="function" name="std::ranges::remove_if" link="cpp/algorithm/ranges/remove"/>
    <keyword type="function" name="std::ranges::remove_copy" link="cpp/algorithm/ranges/remove_copy"/>
    <keyword type="function" name="std::ranges::remove_copy_if" link="cpp/algorithm/ranges/remove_copy"/>
    <keyword type="function" name="std::ranges::replace" link="cpp/algorithm/ranges/replace"/>
    <keyword type="function" name="std::ranges::replace_if" link="cpp/algorithm/ranges/replace"/>
    <keyword type="function" name="std::ranges::replace_copy" link="cpp/algorithm/ranges/replace_copy"/>
    <keyword type="function" name="std::ranges::replace_copy_if" link="cpp/algorithm/ranges/replace_copy"/>
    <keyword type="function" name="std::ranges::swap_ranges" link="cpp/algorithm/ranges/swap_ranges"/>
    <keyword type="function" name="std::ranges::reverse" link="cpp/algorithm/ranges/reverse"/>
    <keyword type="function" name="std::ranges::reverse_copy" link="cpp/algorithm/ranges/reverse_copy"/>
    <keyword type="function" name="std::ranges::rotate" link="cpp/algorithm/ranges/rotate"/>
    <keyword type="function" name="std::ranges::rotate_copy" link="cpp/algorithm/ranges/rotate_copy"/>
    <keyword type="function" name="std::ranges::shuffle" link="cpp/algorithm/ranges/shuffle"/>
    <keyword type="function" name="std::ranges::sample" link="cpp/algorithm/ranges/sample"/>
    <keyword type="function" name="std::ranges::unique" link="cpp/algorithm/ranges/unique"/>
    <keyword type="function" name="std::ranges::unique_copy" link="cpp/algorithm/ranges/unique_copy"/>
    <keyword type="function" name="std::ranges::is_partitioned" link="cpp/algorithm/ranges/is_partitioned"/>
    <keyword type="function" name="std::ranges::partition" link="cpp/algorithm/ranges/partition"/>
    <keyword type="function" name="std::ranges::partition_copy" link="cpp/algorithm/ranges/partition_copy"/>
    <keyword type="function" name="std::ranges::stable_partition" link="cpp/algorithm/ranges/stable_partition"/>
    <keyword type="function" name="std::ranges::partition_point" link="cpp/algorithm/ranges/partition_point"/>
    <keyword type="function" name="std::ranges::is_sorted" link="cpp/algorithm/ranges/is_sorted"/>
    <keyword type="function" name="std::ranges::is_sorted_until" link="cpp/algorithm/ranges/is_sorted_until"/>
    <keyword type="function" name="std::ranges::sort" link="cpp/algorithm/ranges/sort"/>
    <keyword type="function" name="std::ranges::partial_sort" link="cpp/algorithm/ranges/partial_sort"/>
    <keyword type="function" name="std::ranges::partial_sort_copy" link="cpp/algorithm/ranges/partial_sort_copy"/>
    <keyword type="function" name="std::ranges::stable_sort" link="cpp/algorithm/ranges/stable_sort"/>
    <keyword type="function" name="std::ranges::nth_element" link="cpp/algorithm/ranges/nth_element"/>
    <keyword type="function" name="std::ranges::lower_bound" link="cpp/algorithm/ranges/lower_bound"/>
    <keyword type="function" name="std::ranges::upper_bound" link="cpp/algorithm/ranges/upper_bound"/>
    <keyword type="function" name="std::ranges::binary_search" link="cpp/algorithm/ranges/binary_search"/>
    <keyword type="function" name="std::ranges::equal_range" link="cpp/algorithm/ranges/equal_range"/>
    <keyword type="function" name="std::ranges::merge" link="cpp/algorithm/ranges/merge"/>
    <keyword type="function" name="std::ranges::inplace_merge" link="cpp/algorithm/ranges/inplace_merge"/>
    <keyword type="function" name="std::ranges::includes" link="cpp/algorithm/ranges/includes"/>
    <keyword type="function" name="std::ranges::set_difference" link="cpp/algorithm/ranges/set_difference"/>
    <keyword type="function" name="std::ranges::set_intersection" link="cpp/algorithm/ranges/set_intersection"/>
    <keyword type="function" name="std::ranges::set_symmetric_difference" link="cpp/algorithm/ranges/set_symmetric_difference"/>
    <keyword type="function" name="std::ranges::set_union" link="cpp/algorithm/ranges/set_union"/>
    <keyword type="function" name="std::ranges::is_heap" link="cpp/algorithm/ranges/is_heap"/>
    <keyword type="function" name="std::ranges::is_heap_until" link="cpp/algorithm/ranges/is_heap_until"/>
    <keyword type="function" name="std::ranges::make_heap" link="cpp/algorithm/ranges/make_heap"/>
    <keyword type="function" name="std::ranges::push_heap" link="cpp/algorithm/ranges/push_heap"/>
    <keyword type="function" name="std::ranges::pop_heap" link="cpp/algorithm/ranges/pop_heap"/>
    <keyword type="function" name="std::ranges::sort_heap" link="cpp/algorithm/ranges/sort_heap"/>
    <keyword type="function" name="std::ranges::max" link="cpp/algorithm/ranges/max"/>
    <keyword type="function" name="std::ranges::max_element" link="cpp/algorithm/ranges/max_element"/>
    <keyword type="function" name="std::ranges::min" link="cpp/algorithm/ranges/min"/>
    <keyword type="function" name="std::ranges::min_element" link="cpp/algorithm/ranges/min_element"/>
    <keyword type="function" name="std::ranges::minmax" link="cpp/algorithm/ranges/minmax"/>
    <keyword type="function" name="std::ranges::minmax_element" link="cpp/algorithm/ranges/minmax_element"/>
    <keyword type="function" name="std::ranges::clamp" link="cpp/algorithm/ranges/clamp"/>
    <keyword type="function" name="std::ranges::equal" link="cpp/algorithm/ranges/equal"/>
    <keyword type="function" name="std::ranges::lexicographical_compare" link="cpp/algorithm/ranges/lexicographical_compare"/>
    <keyword type="function" name="std::ranges::is_permutation" link="cpp/algorithm/ranges/is_permutation"/>
    <keyword type="function" name="std::ranges::next_permutation" link="cpp/algorithm/ranges/next_permutation"/>
    <keyword type="function" name="std::ranges::prev_permutation" link="cpp/algorithm/ranges/prev_permutation"/>
    <keyword type="function" name="std::gcd" link="cpp/numeric/gcd"/>
    <keyword type="function" name="std::lcm" link="cpp/numeric/lcm"/>
    <keyword type="function" name="std::qsort" link="cpp/algorithm/qsort"/>
    <keyword type="function" name="std::bsearch" link="cpp/algorithm/bsearch"/>
    <keyword type="class" name="std::basic_streambuf" link="cpp/io/basic_streambuf"/>
    <keyword type="function" name="std::basic_streambuf::basic_streambuf" link="cpp/io/basic_streambuf/basic_streambuf"/>
    <keyword type="function" name="std::basic_streambuf::~basic_streambuf" link="cpp/io/basic_streambuf/~basic_streambuf"/>
    <keyword type="function" name="std::basic_streambuf::pubimbue" link="cpp/io/basic_streambuf/pubimbue"/>
    <keyword type="function" name="std::basic_streambuf::getloc" link="cpp/io/basic_streambuf/getloc"/>
    <keyword type="function" name="std::basic_streambuf::pubsetbuf" link="cpp/io/basic_streambuf/pubsetbuf"/>
    <keyword type="function" name="std::basic_streambuf::pubseekoff" link="cpp/io/basic_streambuf/pubseekoff"/>
    <keyword type="function" name="std::basic_streambuf::pubseekpos" link="cpp/io/basic_streambuf/pubseekpos"/>
    <keyword type="function" name="std::basic_streambuf::pubsync" link="cpp/io/basic_streambuf/pubsync"/>
    <keyword type="function" name="std::basic_streambuf::in_avail" link="cpp/io/basic_streambuf/in_avail"/>
    <keyword type="function" name="std::basic_streambuf::snextc" link="cpp/io/basic_streambuf/snextc"/>
    <keyword type="function" name="std::basic_streambuf::sbumpc" link="cpp/io/basic_streambuf/sbumpc"/>
    <keyword type="function" name="std::basic_streambuf::sgetc" link="cpp/io/basic_streambuf/sgetc"/>
    <keyword type="function" name="std::basic_streambuf::sgetn" link="cpp/io/basic_streambuf/sgetn"/>
    <keyword type="function" name="std::basic_streambuf::sputc" link="cpp/io/basic_streambuf/sputc"/>
    <keyword type="function" name="std::basic_streambuf::sputn" link="cpp/io/basic_streambuf/sputn"/>
    <keyword type="function" name="std::basic_streambuf::sputbackc" link="cpp/io/basic_streambuf/sputbackc"/>
    <keyword type="function" name="std::basic_streambuf::sungetc" link="cpp/io/basic_streambuf/sungetc"/>
    <keyword type="function" name="std::basic_streambuf::operator=" link="cpp/io/basic_streambuf/operator="/>
    <keyword type="function" name="std::basic_streambuf::swap" link="cpp/io/basic_streambuf/swap"/>
    <keyword type="function" name="std::basic_streambuf::imbue" link="cpp/io/basic_streambuf/pubimbue"/>
    <keyword type="function" name="std::basic_streambuf::setbuf" link="cpp/io/basic_streambuf/pubsetbuf"/>
    <keyword type="function" name="std::basic_streambuf::seekoff" link="cpp/io/basic_streambuf/pubseekoff"/>
    <keyword type="function" name="std::basic_streambuf::seekpos" link="cpp/io/basic_streambuf/pubseekpos"/>
    <keyword type="function" name="std::basic_streambuf::sync" link="cpp/io/basic_streambuf/pubsync"/>
    <keyword type="function" name="std::basic_streambuf::showmanyc" link="cpp/io/basic_streambuf/showmanyc"/>
    <keyword type="function" name="std::basic_streambuf::underflow" link="cpp/io/basic_streambuf/underflow"/>
    <keyword type="function" name="std::basic_streambuf::uflow" link="cpp/io/basic_streambuf/uflow"/>
    <keyword type="function" name="std::basic_streambuf::xsgetn" link="cpp/io/basic_streambuf/sgetn"/>
    <keyword type="function" name="std::basic_streambuf::eback" link="cpp/io/basic_streambuf/gptr"/>
    <keyword type="function" name="std::basic_streambuf::gptr" link="cpp/io/basic_streambuf/gptr"/>
    <keyword type="function" name="std::basic_streambuf::egptr" link="cpp/io/basic_streambuf/gptr"/>
    <keyword type="function" name="std::basic_streambuf::gbump" link="cpp/io/basic_streambuf/gbump"/>
    <keyword type="function" name="std::basic_streambuf::setg" link="cpp/io/basic_streambuf/setg"/>
    <keyword type="function" name="std::basic_streambuf::xsputn" link="cpp/io/basic_streambuf/sputn"/>
    <keyword type="function" name="std::basic_streambuf::overflow" link="cpp/io/basic_streambuf/overflow"/>
    <keyword type="function" name="std::basic_streambuf::pbase" link="cpp/io/basic_streambuf/pptr"/>
    <keyword type="function" name="std::basic_streambuf::pptr" link="cpp/io/basic_streambuf/pptr"/>
    <keyword type="function" name="std::basic_streambuf::epptr" link="cpp/io/basic_streambuf/pptr"/>
    <keyword type="function" name="std::basic_streambuf::pbump" link="cpp/io/basic_streambuf/pbump"/>
    <keyword type="function" name="std::basic_streambuf::setp" link="cpp/io/basic_streambuf/setp"/>
    <keyword type="function" name="std::basic_streambuf::pbackfail" link="cpp/io/basic_streambuf/pbackfail"/>
    <keyword type="class" name="std::basic_filebuf" link="cpp/io/basic_filebuf"/>
    <keyword type="function" name="std::basic_filebuf::pubimbue" link="cpp/io/basic_streambuf/pubimbue"/>
    <keyword type="function" name="std::basic_filebuf::getloc" link="cpp/io/basic_streambuf/getloc"/>
    <keyword type="function" name="std::basic_filebuf::pubsetbuf" link="cpp/io/basic_streambuf/pubsetbuf"/>
    <keyword type="function" name="std::basic_filebuf::pubseekoff" link="cpp/io/basic_streambuf/pubseekoff"/>
    <keyword type="function" name="std::basic_filebuf::pubseekpos" link="cpp/io/basic_streambuf/pubseekpos"/>
    <keyword type="function" name="std::basic_filebuf::pubsync" link="cpp/io/basic_streambuf/pubsync"/>
    <keyword type="function" name="std::basic_filebuf::in_avail" link="cpp/io/basic_streambuf/in_avail"/>
    <keyword type="function" name="std::basic_filebuf::snextc" link="cpp/io/basic_streambuf/snextc"/>
    <keyword type="function" name="std::basic_filebuf::sbumpc" link="cpp/io/basic_streambuf/sbumpc"/>
    <keyword type="function" name="std::basic_filebuf::sgetc" link="cpp/io/basic_streambuf/sgetc"/>
    <keyword type="function" name="std::basic_filebuf::sgetn" link="cpp/io/basic_streambuf/sgetn"/>
    <keyword type="function" name="std::basic_filebuf::sputc" link="cpp/io/basic_streambuf/sputc"/>
    <keyword type="function" name="std::basic_filebuf::sputn" link="cpp/io/basic_streambuf/sputn"/>
    <keyword type="function" name="std::basic_filebuf::sputbackc" link="cpp/io/basic_streambuf/sputbackc"/>
    <keyword type="function" name="std::basic_filebuf::sungetc" link="cpp/io/basic_streambuf/sungetc"/>
    <keyword type="function" name="std::basic_filebuf::swap" link="cpp/io/basic_streambuf/swap"/>
    <keyword type="function" name="std::basic_filebuf::imbue" link="cpp/io/basic_streambuf/pubimbue"/>
    <keyword type="function" name="std::basic_filebuf::setbuf" link="cpp/io/basic_streambuf/pubsetbuf"/>
    <keyword type="function" name="std::basic_filebuf::seekoff" link="cpp/io/basic_streambuf/pubseekoff"/>
    <keyword type="function" name="std::basic_filebuf::seekpos" link="cpp/io/basic_streambuf/pubseekpos"/>
    <keyword type="function" name="std::basic_filebuf::sync" link="cpp/io/basic_streambuf/pubsync"/>
    <keyword type="function" name="std::basic_filebuf::showmanyc" link="cpp/io/basic_streambuf/showmanyc"/>
    <keyword type="function" name="std::basic_filebuf::underflow" link="cpp/io/basic_streambuf/underflow"/>
    <keyword type="function" name="std::basic_filebuf::uflow" link="cpp/io/basic_streambuf/uflow"/>
    <keyword type="function" name="std::basic_filebuf::xsgetn" link="cpp/io/basic_streambuf/sgetn"/>
    <keyword type="function" name="std::basic_filebuf::eback" link="cpp/io/basic_streambuf/gptr"/>
    <keyword type="function" name="std::basic_filebuf::gptr" link="cpp/io/basic_streambuf/gptr"/>
    <keyword type="function" name="std::basic_filebuf::egptr" link="cpp/io/basic_streambuf/gptr"/>
    <keyword type="function" name="std::basic_filebuf::gbump" link="cpp/io/basic_streambuf/gbump"/>
    <keyword type="function" name="std::basic_filebuf::setg" link="cpp/io/basic_streambuf/setg"/>
    <keyword type="function" name="std::basic_filebuf::xsputn" link="cpp/io/basic_streambuf/sputn"/>
    <keyword type="function" name="std::basic_filebuf::overflow" link="cpp/io/basic_streambuf/overflow"/>
    <keyword type="function" name="std::basic_filebuf::pbase" link="cpp/io/basic_streambuf/pptr"/>
    <keyword type="function" name="std::basic_filebuf::pptr" link="cpp/io/basic_streambuf/pptr"/>
    <keyword type="function" name="std::basic_filebuf::epptr" link="cpp/io/basic_streambuf/pptr"/>
    <keyword type="function" name="std::basic_filebuf::pbump" link="cpp/io/basic_streambuf/pbump"/>
    <keyword type="function" name="std::basic_filebuf::setp" link="cpp/io/basic_streambuf/setp"/>
    <keyword type="function" name="std::basic_filebuf::pbackfail" link="cpp/io/basic_streambuf/pbackfail"/>
    <keyword type="function" name="std::basic_filebuf::basic_filebuf" link="cpp/io/basic_filebuf/basic_filebuf"/>
    <keyword type="function" name="std::basic_filebuf::~basic_filebuf" link="cpp/io/basic_filebuf/~basic_filebuf"/>
    <keyword type="function" name="std::basic_filebuf::operator=" link="cpp/io/basic_filebuf/operator="/>
    <keyword type="function" name="std::basic_filebuf::swap" link="cpp/io/basic_filebuf/swap"/>
    <keyword type="function" name="std::basic_filebuf::is_open" link="cpp/io/basic_filebuf/is_open"/>
    <keyword type="function" name="std::basic_filebuf::open" link="cpp/io/basic_filebuf/open"/>
    <keyword type="function" name="std::basic_filebuf::close" link="cpp/io/basic_filebuf/close"/>
    <keyword type="function" name="std::basic_filebuf::showmanyc" link="cpp/io/basic_filebuf/showmanyc"/>
    <keyword type="function" name="std::basic_filebuf::underflow" link="cpp/io/basic_filebuf/underflow"/>
    <keyword type="function" name="std::basic_filebuf::uflow" link="cpp/io/basic_filebuf/uflow"/>
    <keyword type="function" name="std::basic_filebuf::pbackfail" link="cpp/io/basic_filebuf/pbackfail"/>
    <keyword type="function" name="std::basic_filebuf::overflow" link="cpp/io/basic_filebuf/overflow"/>
    <keyword type="function" name="std::basic_filebuf::setbuf" link="cpp/io/basic_filebuf/setbuf"/>
    <keyword type="function" name="std::basic_filebuf::seekoff" link="cpp/io/basic_filebuf/seekoff"/>
    <keyword type="function" name="std::basic_filebuf::seekpos" link="cpp/io/basic_filebuf/seekpos"/>
    <keyword type="function" name="std::basic_filebuf::sync" link="cpp/io/basic_filebuf/sync"/>
    <keyword type="function" name="std::basic_filebuf::imbue" link="cpp/io/basic_filebuf/imbue"/>
    <keyword type="function" name="std::swap(std::basic_filebuf)" link="cpp/io/basic_filebuf/swap2"/>
    <keyword type="class" name="std::basic_stringbuf" link="cpp/io/basic_stringbuf"/>
    <keyword type="function" name="std::basic_stringbuf::pubimbue" link="cpp/io/basic_streambuf/pubimbue"/>
    <keyword type="function" name="std::basic_stringbuf::getloc" link="cpp/io/basic_streambuf/getloc"/>
    <keyword type="function" name="std::basic_stringbuf::pubsetbuf" link="cpp/io/basic_streambuf/pubsetbuf"/>
    <keyword type="function" name="std::basic_stringbuf::pubseekoff" link="cpp/io/basic_streambuf/pubseekoff"/>
    <keyword type="function" name="std::basic_stringbuf::pubseekpos" link="cpp/io/basic_streambuf/pubseekpos"/>
    <keyword type="function" name="std::basic_stringbuf::pubsync" link="cpp/io/basic_streambuf/pubsync"/>
    <keyword type="function" name="std::basic_stringbuf::in_avail" link="cpp/io/basic_streambuf/in_avail"/>
    <keyword type="function" name="std::basic_stringbuf::snextc" link="cpp/io/basic_streambuf/snextc"/>
    <keyword type="function" name="std::basic_stringbuf::sbumpc" link="cpp/io/basic_streambuf/sbumpc"/>
    <keyword type="function" name="std::basic_stringbuf::sgetc" link="cpp/io/basic_streambuf/sgetc"/>
    <keyword type="function" name="std::basic_stringbuf::sgetn" link="cpp/io/basic_streambuf/sgetn"/>
    <keyword type="function" name="std::basic_stringbuf::sputc" link="cpp/io/basic_streambuf/sputc"/>
    <keyword type="function" name="std::basic_stringbuf::sputn" link="cpp/io/basic_streambuf/sputn"/>
    <keyword type="function" name="std::basic_stringbuf::sputbackc" link="cpp/io/basic_streambuf/sputbackc"/>
    <keyword type="function" name="std::basic_stringbuf::sungetc" link="cpp/io/basic_streambuf/sungetc"/>
    <keyword type="function" name="std::basic_stringbuf::swap" link="cpp/io/basic_streambuf/swap"/>
    <keyword type="function" name="std::basic_stringbuf::imbue" link="cpp/io/basic_streambuf/pubimbue"/>
    <keyword type="function" name="std::basic_stringbuf::setbuf" link="cpp/io/basic_streambuf/pubsetbuf"/>
    <keyword type="function" name="std::basic_stringbuf::seekoff" link="cpp/io/basic_streambuf/pubseekoff"/>
    <keyword type="function" name="std::basic_stringbuf::seekpos" link="cpp/io/basic_streambuf/pubseekpos"/>
    <keyword type="function" name="std::basic_stringbuf::sync" link="cpp/io/basic_streambuf/pubsync"/>
    <keyword type="function" name="std::basic_stringbuf::showmanyc" link="cpp/io/basic_streambuf/showmanyc"/>
    <keyword type="function" name="std::basic_stringbuf::underflow" link="cpp/io/basic_streambuf/underflow"/>
    <keyword type="function" name="std::basic_stringbuf::uflow" link="cpp/io/basic_streambuf/uflow"/>
    <keyword type="function" name="std::basic_stringbuf::xsgetn" link="cpp/io/basic_streambuf/sgetn"/>
    <keyword type="function" name="std::basic_stringbuf::eback" link="cpp/io/basic_streambuf/gptr"/>
    <keyword type="function" name="std::basic_stringbuf::gptr" link="cpp/io/basic_streambuf/gptr"/>
    <keyword type="function" name="std::basic_stringbuf::egptr" link="cpp/io/basic_streambuf/gptr"/>
    <keyword type="function" name="std::basic_stringbuf::gbump" link="cpp/io/basic_streambuf/gbump"/>
    <keyword type="function" name="std::basic_stringbuf::setg" link="cpp/io/basic_streambuf/setg"/>
    <keyword type="function" name="std::basic_stringbuf::xsputn" link="cpp/io/basic_streambuf/sputn"/>
    <keyword type="function" name="std::basic_stringbuf::overflow" link="cpp/io/basic_streambuf/overflow"/>
    <keyword type="function" name="std::basic_stringbuf::pbase" link="cpp/io/basic_streambuf/pptr"/>
    <keyword type="function" name="std::basic_stringbuf::pptr" link="cpp/io/basic_streambuf/pptr"/>
    <keyword type="function" name="std::basic_stringbuf::epptr" link="cpp/io/basic_streambuf/pptr"/>
    <keyword type="function" name="std::basic_stringbuf::pbump" link="cpp/io/basic_streambuf/pbump"/>
    <keyword type="function" name="std::basic_stringbuf::setp" link="cpp/io/basic_streambuf/setp"/>
    <keyword type="function" name="std::basic_stringbuf::pbackfail" link="cpp/io/basic_streambuf/pbackfail"/>
    <keyword type="function" name="std::basic_stringbuf::basic_stringbuf" link="cpp/io/basic_stringbuf/basic_stringbuf"/>
    <keyword type="function" name="std::basic_stringbuf::operator=" link="cpp/io/basic_stringbuf/operator="/>
    <keyword type="function" name="std::basic_stringbuf::swap" link="cpp/io/basic_stringbuf/swap"/>
    <keyword type="function" name="std::basic_stringbuf::str" link="cpp/io/basic_stringbuf/str"/>
    <keyword type="function" name="std::basic_stringbuf::underflow" link="cpp/io/basic_stringbuf/underflow"/>
    <keyword type="function" name="std::basic_stringbuf::pbackfail" link="cpp/io/basic_stringbuf/pbackfail"/>
    <keyword type="function" name="std::basic_stringbuf::overflow" link="cpp/io/basic_stringbuf/overflow"/>
    <keyword type="function" name="std::basic_stringbuf::setbuf" link="cpp/io/basic_stringbuf/setbuf"/>
    <keyword type="function" name="std::basic_stringbuf::seekoff" link="cpp/io/basic_stringbuf/seekoff"/>
    <keyword type="function" name="std::basic_stringbuf::seekpos" link="cpp/io/basic_stringbuf/seekpos"/>
    <keyword type="function" name="std::swap(std::basic_stringbuf)" link="cpp/io/basic_stringbuf/swap2"/>
    <keyword type="class" name="std::basic_syncbuf" link="cpp/io/basic_syncbuf"/>
    <keyword type="function" name="std::basic_syncbuf::pubimbue" link="cpp/io/basic_streambuf/pubimbue"/>
    <keyword type="function" name="std::basic_syncbuf::getloc" link="cpp/io/basic_streambuf/getloc"/>
    <keyword type="function" name="std::basic_syncbuf::pubsetbuf" link="cpp/io/basic_streambuf/pubsetbuf"/>
    <keyword type="function" name="std::basic_syncbuf::pubseekoff" link="cpp/io/basic_streambuf/pubseekoff"/>
    <keyword type="function" name="std::basic_syncbuf::pubseekpos" link="cpp/io/basic_streambuf/pubseekpos"/>
    <keyword type="function" name="std::basic_syncbuf::pubsync" link="cpp/io/basic_streambuf/pubsync"/>
    <keyword type="function" name="std::basic_syncbuf::in_avail" link="cpp/io/basic_streambuf/in_avail"/>
    <keyword type="function" name="std::basic_syncbuf::snextc" link="cpp/io/basic_streambuf/snextc"/>
    <keyword type="function" name="std::basic_syncbuf::sbumpc" link="cpp/io/basic_streambuf/sbumpc"/>
    <keyword type="function" name="std::basic_syncbuf::sgetc" link="cpp/io/basic_streambuf/sgetc"/>
    <keyword type="function" name="std::basic_syncbuf::sgetn" link="cpp/io/basic_streambuf/sgetn"/>
    <keyword type="function" name="std::basic_syncbuf::sputc" link="cpp/io/basic_streambuf/sputc"/>
    <keyword type="function" name="std::basic_syncbuf::sputn" link="cpp/io/basic_streambuf/sputn"/>
    <keyword type="function" name="std::basic_syncbuf::sputbackc" link="cpp/io/basic_streambuf/sputbackc"/>
    <keyword type="function" name="std::basic_syncbuf::sungetc" link="cpp/io/basic_streambuf/sungetc"/>
    <keyword type="function" name="std::basic_syncbuf::swap" link="cpp/io/basic_streambuf/swap"/>
    <keyword type="function" name="std::basic_syncbuf::imbue" link="cpp/io/basic_streambuf/pubimbue"/>
    <keyword type="function" name="std::basic_syncbuf::setbuf" link="cpp/io/basic_streambuf/pubsetbuf"/>
    <keyword type="function" name="std::basic_syncbuf::seekoff" link="cpp/io/basic_streambuf/pubseekoff"/>
    <keyword type="function" name="std::basic_syncbuf::seekpos" link="cpp/io/basic_streambuf/pubseekpos"/>
    <keyword type="function" name="std::basic_syncbuf::sync" link="cpp/io/basic_streambuf/pubsync"/>
    <keyword type="function" name="std::basic_syncbuf::showmanyc" link="cpp/io/basic_streambuf/showmanyc"/>
    <keyword type="function" name="std::basic_syncbuf::underflow" link="cpp/io/basic_streambuf/underflow"/>
    <keyword type="function" name="std::basic_syncbuf::uflow" link="cpp/io/basic_streambuf/uflow"/>
    <keyword type="function" name="std::basic_syncbuf::xsgetn" link="cpp/io/basic_streambuf/sgetn"/>
    <keyword type="function" name="std::basic_syncbuf::eback" link="cpp/io/basic_streambuf/gptr"/>
    <keyword type="function" name="std::basic_syncbuf::gptr" link="cpp/io/basic_streambuf/gptr"/>
    <keyword type="function" name="std::basic_syncbuf::egptr" link="cpp/io/basic_streambuf/gptr"/>
    <keyword type="function" name="std::basic_syncbuf::gbump" link="cpp/io/basic_streambuf/gbump"/>
    <keyword type="function" name="std::basic_syncbuf::setg" link="cpp/io/basic_streambuf/setg"/>
    <keyword type="function" name="std::basic_syncbuf::xsputn" link="cpp/io/basic_streambuf/sputn"/>
    <keyword type="function" name="std::basic_syncbuf::overflow" link="cpp/io/basic_streambuf/overflow"/>
    <keyword type="function" name="std::basic_syncbuf::pbase" link="cpp/io/basic_streambuf/pptr"/>
    <keyword type="function" name="std::basic_syncbuf::pptr" link="cpp/io/basic_streambuf/pptr"/>
    <keyword type="function" name="std::basic_syncbuf::epptr" link="cpp/io/basic_streambuf/pptr"/>
    <keyword type="function" name="std::basic_syncbuf::pbump" link="cpp/io/basic_streambuf/pbump"/>
    <keyword type="function" name="std::basic_syncbuf::setp" link="cpp/io/basic_streambuf/setp"/>
    <keyword type="function" name="std::basic_syncbuf::pbackfail" link="cpp/io/basic_streambuf/pbackfail"/>
    <keyword type="function" name="std::basic_syncbuf::basic_syncbuf" link="cpp/io/basic_syncbuf/basic_syncbuf"/>
    <keyword type="function" name="std::basic_syncbuf::~basic_syncbuf" link="cpp/io/basic_syncbuf/~basic_syncbuf"/>
    <keyword type="function" name="std::basic_syncbuf::operator=" link="cpp/io/basic_syncbuf/operator="/>
    <keyword type="function" name="std::basic_syncbuf::swap" link="cpp/io/basic_syncbuf/swap"/>
    <keyword type="function" name="std::basic_syncbuf::emit" link="cpp/io/basic_syncbuf/emit"/>
    <keyword type="function" name="std::basic_syncbuf::get_wrapped" link="cpp/io/basic_syncbuf/get_wrapped"/>
    <keyword type="function" name="std::basic_syncbuf::get_allocator" link="cpp/io/basic_syncbuf/get_allocator"/>
    <keyword type="function" name="std::basic_syncbuf::set_emit_on_sync" link="cpp/io/basic_syncbuf/set_emit_on_sync"/>
    <keyword type="function" name="std::basic_syncbuf::sync" link="cpp/io/basic_syncbuf/sync"/>
    <keyword type="function" name="std::swap(std::basic_syncbuf)" link="cpp/io/basic_syncbuf/swap2"/>
    <keyword type="class" name="std::ios_base" link="cpp/io/ios_base"/>
    <keyword type="function" name="std::ios_base::ios_base" link="cpp/io/ios_base/ios_base"/>
    <keyword type="function" name="std::ios_base::~ios_base" link="cpp/io/ios_base/~ios_base"/>
    <keyword type="function" name="std::ios_base::flags" link="cpp/io/ios_base/flags"/>
    <keyword type="function" name="std::ios_base::setf" link="cpp/io/ios_base/setf"/>
    <keyword type="function" name="std::ios_base::unsetf" link="cpp/io/ios_base/unsetf"/>
    <keyword type="function" name="std::ios_base::precision" link="cpp/io/ios_base/precision"/>
    <keyword type="function" name="std::ios_base::width" link="cpp/io/ios_base/width"/>
    <keyword type="function" name="std::ios_base::imbue" link="cpp/io/ios_base/imbue"/>
    <keyword type="function" name="std::ios_base::getloc" link="cpp/io/ios_base/getloc"/>
    <keyword type="function" name="std::ios_base::xalloc" link="cpp/io/ios_base/xalloc"/>
    <keyword type="function" name="std::ios_base::iword" link="cpp/io/ios_base/iword"/>
    <keyword type="function" name="std::ios_base::pword" link="cpp/io/ios_base/pword"/>
    <keyword type="function" name="std::ios_base::register_callback" link="cpp/io/ios_base/register_callback"/>
    <keyword type="function" name="std::ios_base::sync_with_stdio" link="cpp/io/ios_base/sync_with_stdio"/>
    <keyword type="class" name="std::ios_base::failure" link="cpp/io/ios_base/failure"/>
    <keyword type="function" name="std::ios_base::failure::what" link="cpp/error/exception/what"/>
    <keyword type="function" name="std::ios_base::failure::failure" link="cpp/io/ios_base/failure"/>
    <keyword type="enum" name="std::ios_base::openmode" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::ios_base::app" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::ios_base::binary" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::ios_base::in" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::ios_base::out" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::ios_base::trunc" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::ios_base::ate" link="cpp/io/ios_base/openmode"/>
    <keyword type="enum" name="std::ios_base::fmtflags" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ios_base::dec" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ios_base::oct" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ios_base::hex" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ios_base::basefield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ios_base::left" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ios_base::right" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ios_base::internal" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ios_base::adjustfield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ios_base::scientific" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ios_base::fixed" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ios_base::floatfield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ios_base::boolalpha" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ios_base::showbase" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ios_base::showpoint" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ios_base::showpos" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ios_base::skipws" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ios_base::unitbuf" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ios_base::uppercase" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="enum" name="std::ios_base::iostate" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::ios_base::goodbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::ios_base::badbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::ios_base::failbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::ios_base::eofbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="enum" name="std::ios_base::seekdir" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::ios_base::beg" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::ios_base::cur" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::ios_base::end" link="cpp/io/ios_base/seekdir"/>
    <keyword type="enum" name="std::ios_base::event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::ios_base::erase_event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::ios_base::imbue_event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::ios_base::copyfmt_event" link="cpp/io/ios_base/event"/>
    <keyword type="typedef" name="std::ios_base::event_callback" link="cpp/io/ios_base/event_callback"/>
    <keyword type="class" name="std::ios_base::Init" link="cpp/io/ios_base/Init"/>
    <keyword type="class" name="std::basic_ios" link="cpp/io/basic_ios"/>
    <keyword type="function" name="std::basic_ios::flags" link="cpp/io/ios_base/flags"/>
    <keyword type="function" name="std::basic_ios::setf" link="cpp/io/ios_base/setf"/>
    <keyword type="function" name="std::basic_ios::unsetf" link="cpp/io/ios_base/unsetf"/>
    <keyword type="function" name="std::basic_ios::precision" link="cpp/io/ios_base/precision"/>
    <keyword type="function" name="std::basic_ios::width" link="cpp/io/ios_base/width"/>
    <keyword type="function" name="std::basic_ios::imbue" link="cpp/io/ios_base/imbue"/>
    <keyword type="function" name="std::basic_ios::getloc" link="cpp/io/ios_base/getloc"/>
    <keyword type="function" name="std::basic_ios::xalloc" link="cpp/io/ios_base/xalloc"/>
    <keyword type="function" name="std::basic_ios::iword" link="cpp/io/ios_base/iword"/>
    <keyword type="function" name="std::basic_ios::pword" link="cpp/io/ios_base/pword"/>
    <keyword type="function" name="std::basic_ios::register_callback" link="cpp/io/ios_base/register_callback"/>
    <keyword type="function" name="std::basic_ios::sync_with_stdio" link="cpp/io/ios_base/sync_with_stdio"/>
    <keyword type="class" name="std::basic_ios::failure" link="cpp/io/ios_base/failure"/>
    <keyword type="function" name="std::basic_ios::failure::what" link="cpp/error/exception/what"/>
    <keyword type="function" name="std::basic_ios::failure::failure" link="cpp/io/ios_base/failure"/>
    <keyword type="enum" name="std::basic_ios::openmode" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::basic_ios::app" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::basic_ios::binary" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::basic_ios::in" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::basic_ios::out" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::basic_ios::trunc" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::basic_ios::ate" link="cpp/io/ios_base/openmode"/>
    <keyword type="enum" name="std::basic_ios::fmtflags" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_ios::dec" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_ios::oct" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_ios::hex" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_ios::basefield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_ios::left" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_ios::right" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_ios::internal" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_ios::adjustfield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_ios::scientific" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_ios::fixed" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_ios::floatfield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_ios::boolalpha" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_ios::showbase" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_ios::showpoint" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_ios::showpos" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_ios::skipws" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_ios::unitbuf" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_ios::uppercase" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="enum" name="std::basic_ios::iostate" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::basic_ios::goodbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::basic_ios::badbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::basic_ios::failbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::basic_ios::eofbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="enum" name="std::basic_ios::seekdir" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::basic_ios::beg" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::basic_ios::cur" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::basic_ios::end" link="cpp/io/ios_base/seekdir"/>
    <keyword type="enum" name="std::basic_ios::event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::basic_ios::erase_event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::basic_ios::imbue_event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::basic_ios::copyfmt_event" link="cpp/io/ios_base/event"/>
    <keyword type="typedef" name="std::basic_ios::event_callback" link="cpp/io/ios_base/event_callback"/>
    <keyword type="class" name="std::basic_ios::Init" link="cpp/io/ios_base/Init"/>
    <keyword type="function" name="std::basic_ios::basic_ios" link="cpp/io/basic_ios/basic_ios"/>
    <keyword type="function" name="std::basic_ios::~basic_ios" link="cpp/io/basic_ios/~basic_ios"/>
    <keyword type="function" name="std::basic_ios::good" link="cpp/io/basic_ios/good"/>
    <keyword type="function" name="std::basic_ios::eof" link="cpp/io/basic_ios/eof"/>
    <keyword type="function" name="std::basic_ios::fail" link="cpp/io/basic_ios/fail"/>
    <keyword type="function" name="std::basic_ios::bad" link="cpp/io/basic_ios/bad"/>
    <keyword type="function" name="std::basic_ios::operator!" link="cpp/io/basic_ios/operator!"/>
    <keyword type="function" name="std::basic_ios::operator bool" link="cpp/io/basic_ios/operator_bool"/>
    <keyword type="function" name="std::basic_ios::rdstate" link="cpp/io/basic_ios/rdstate"/>
    <keyword type="function" name="std::basic_ios::setstate" link="cpp/io/basic_ios/setstate"/>
    <keyword type="function" name="std::basic_ios::clear" link="cpp/io/basic_ios/clear"/>
    <keyword type="function" name="std::basic_ios::copyfmt" link="cpp/io/basic_ios/copyfmt"/>
    <keyword type="function" name="std::basic_ios::fill" link="cpp/io/basic_ios/fill"/>
    <keyword type="function" name="std::basic_ios::exceptions" link="cpp/io/basic_ios/exceptions"/>
    <keyword type="function" name="std::basic_ios::imbue" link="cpp/io/basic_ios/imbue"/>
    <keyword type="function" name="std::basic_ios::rdbuf" link="cpp/io/basic_ios/rdbuf"/>
    <keyword type="function" name="std::basic_ios::tie" link="cpp/io/basic_ios/tie"/>
    <keyword type="function" name="std::basic_ios::narrow" link="cpp/io/basic_ios/narrow"/>
    <keyword type="function" name="std::basic_ios::widen" link="cpp/io/basic_ios/widen"/>
    <keyword type="function" name="std::basic_ios::init" link="cpp/io/basic_ios/init"/>
    <keyword type="function" name="std::basic_ios::move" link="cpp/io/basic_ios/move"/>
    <keyword type="function" name="std::basic_ios::swap" link="cpp/io/basic_ios/swap"/>
    <keyword type="function" name="std::basic_ios::set_rdbuf" link="cpp/io/basic_ios/set_rdbuf"/>
    <keyword type="class" name="std::basic_istream" link="cpp/io/basic_istream"/>
    <keyword type="function" name="std::basic_istream::good" link="cpp/io/basic_ios/good"/>
    <keyword type="function" name="std::basic_istream::eof" link="cpp/io/basic_ios/eof"/>
    <keyword type="function" name="std::basic_istream::fail" link="cpp/io/basic_ios/fail"/>
    <keyword type="function" name="std::basic_istream::bad" link="cpp/io/basic_ios/bad"/>
    <keyword type="function" name="std::basic_istream::operator!" link="cpp/io/basic_ios/operator!"/>
    <keyword type="function" name="std::basic_istream::operator bool" link="cpp/io/basic_ios/operator_bool"/>
    <keyword type="function" name="std::basic_istream::rdstate" link="cpp/io/basic_ios/rdstate"/>
    <keyword type="function" name="std::basic_istream::setstate" link="cpp/io/basic_ios/setstate"/>
    <keyword type="function" name="std::basic_istream::clear" link="cpp/io/basic_ios/clear"/>
    <keyword type="function" name="std::basic_istream::copyfmt" link="cpp/io/basic_ios/copyfmt"/>
    <keyword type="function" name="std::basic_istream::fill" link="cpp/io/basic_ios/fill"/>
    <keyword type="function" name="std::basic_istream::exceptions" link="cpp/io/basic_ios/exceptions"/>
    <keyword type="function" name="std::basic_istream::imbue" link="cpp/io/basic_ios/imbue"/>
    <keyword type="function" name="std::basic_istream::rdbuf" link="cpp/io/basic_ios/rdbuf"/>
    <keyword type="function" name="std::basic_istream::tie" link="cpp/io/basic_ios/tie"/>
    <keyword type="function" name="std::basic_istream::narrow" link="cpp/io/basic_ios/narrow"/>
    <keyword type="function" name="std::basic_istream::widen" link="cpp/io/basic_ios/widen"/>
    <keyword type="function" name="std::basic_istream::init" link="cpp/io/basic_ios/init"/>
    <keyword type="function" name="std::basic_istream::move" link="cpp/io/basic_ios/move"/>
    <keyword type="function" name="std::basic_istream::swap" link="cpp/io/basic_ios/swap"/>
    <keyword type="function" name="std::basic_istream::set_rdbuf" link="cpp/io/basic_ios/set_rdbuf"/>
    <keyword type="function" name="std::basic_istream::flags" link="cpp/io/ios_base/flags"/>
    <keyword type="function" name="std::basic_istream::setf" link="cpp/io/ios_base/setf"/>
    <keyword type="function" name="std::basic_istream::unsetf" link="cpp/io/ios_base/unsetf"/>
    <keyword type="function" name="std::basic_istream::precision" link="cpp/io/ios_base/precision"/>
    <keyword type="function" name="std::basic_istream::width" link="cpp/io/ios_base/width"/>
    <keyword type="function" name="std::basic_istream::imbue" link="cpp/io/ios_base/imbue"/>
    <keyword type="function" name="std::basic_istream::getloc" link="cpp/io/ios_base/getloc"/>
    <keyword type="function" name="std::basic_istream::xalloc" link="cpp/io/ios_base/xalloc"/>
    <keyword type="function" name="std::basic_istream::iword" link="cpp/io/ios_base/iword"/>
    <keyword type="function" name="std::basic_istream::pword" link="cpp/io/ios_base/pword"/>
    <keyword type="function" name="std::basic_istream::register_callback" link="cpp/io/ios_base/register_callback"/>
    <keyword type="function" name="std::basic_istream::sync_with_stdio" link="cpp/io/ios_base/sync_with_stdio"/>
    <keyword type="class" name="std::basic_istream::failure" link="cpp/io/ios_base/failure"/>
    <keyword type="function" name="std::basic_istream::failure::what" link="cpp/error/exception/what"/>
    <keyword type="function" name="std::basic_istream::failure::failure" link="cpp/io/ios_base/failure"/>
    <keyword type="enum" name="std::basic_istream::openmode" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::basic_istream::app" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::basic_istream::binary" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::basic_istream::in" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::basic_istream::out" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::basic_istream::trunc" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::basic_istream::ate" link="cpp/io/ios_base/openmode"/>
    <keyword type="enum" name="std::basic_istream::fmtflags" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_istream::dec" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_istream::oct" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_istream::hex" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_istream::basefield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_istream::left" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_istream::right" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_istream::internal" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_istream::adjustfield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_istream::scientific" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_istream::fixed" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_istream::floatfield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_istream::boolalpha" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_istream::showbase" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_istream::showpoint" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_istream::showpos" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_istream::skipws" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_istream::unitbuf" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_istream::uppercase" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="enum" name="std::basic_istream::iostate" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::basic_istream::goodbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::basic_istream::badbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::basic_istream::failbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::basic_istream::eofbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="enum" name="std::basic_istream::seekdir" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::basic_istream::beg" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::basic_istream::cur" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::basic_istream::end" link="cpp/io/ios_base/seekdir"/>
    <keyword type="enum" name="std::basic_istream::event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::basic_istream::erase_event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::basic_istream::imbue_event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::basic_istream::copyfmt_event" link="cpp/io/ios_base/event"/>
    <keyword type="typedef" name="std::basic_istream::event_callback" link="cpp/io/ios_base/event_callback"/>
    <keyword type="class" name="std::basic_istream::Init" link="cpp/io/ios_base/Init"/>
    <keyword type="function" name="std::basic_istream::basic_istream" link="cpp/io/basic_istream/basic_istream"/>
    <keyword type="function" name="std::basic_istream::~basic_istream" link="cpp/io/basic_istream/~basic_istream"/>
    <keyword type="function" name="std::basic_istream::operator&gt;&gt;" link="cpp/io/basic_istream/operator_gtgt"/>
    <keyword type="function" name="std::basic_istream::get" link="cpp/io/basic_istream/get"/>
    <keyword type="function" name="std::basic_istream::peek" link="cpp/io/basic_istream/peek"/>
    <keyword type="function" name="std::basic_istream::unget" link="cpp/io/basic_istream/unget"/>
    <keyword type="function" name="std::basic_istream::putback" link="cpp/io/basic_istream/putback"/>
    <keyword type="function" name="std::basic_istream::getline" link="cpp/io/basic_istream/getline"/>
    <keyword type="function" name="std::basic_istream::ignore" link="cpp/io/basic_istream/ignore"/>
    <keyword type="function" name="std::basic_istream::read" link="cpp/io/basic_istream/read"/>
    <keyword type="function" name="std::basic_istream::readsome" link="cpp/io/basic_istream/readsome"/>
    <keyword type="function" name="std::basic_istream::gcount" link="cpp/io/basic_istream/gcount"/>
    <keyword type="function" name="std::basic_istream::tellg" link="cpp/io/basic_istream/tellg"/>
    <keyword type="function" name="std::basic_istream::seekg" link="cpp/io/basic_istream/seekg"/>
    <keyword type="function" name="std::basic_istream::sync" link="cpp/io/basic_istream/sync"/>
    <keyword type="class" name="std::basic_istream::sentry" link="cpp/io/basic_istream/sentry"/>
    <keyword type="function" name="std::basic_istream::sentry::sentry" link="cpp/io/basic_istream/sentry"/>
    <keyword type="function" name="std::basic_istream::sentry::~sentry" link="cpp/io/basic_istream/sentry"/>
    <keyword type="function" name="std::basic_istream::sentry::operator bool" link="cpp/io/basic_istream/sentry"/>
    <keyword type="function" name="operator&gt;&gt;(std::basic_istream)" link="cpp/io/basic_istream/operator_gtgt2"/>
    <keyword type="class" name="std::basic_ostream" link="cpp/io/basic_ostream"/>
    <keyword type="function" name="std::basic_ostream::good" link="cpp/io/basic_ios/good"/>
    <keyword type="function" name="std::basic_ostream::eof" link="cpp/io/basic_ios/eof"/>
    <keyword type="function" name="std::basic_ostream::fail" link="cpp/io/basic_ios/fail"/>
    <keyword type="function" name="std::basic_ostream::bad" link="cpp/io/basic_ios/bad"/>
    <keyword type="function" name="std::basic_ostream::operator!" link="cpp/io/basic_ios/operator!"/>
    <keyword type="function" name="std::basic_ostream::operator bool" link="cpp/io/basic_ios/operator_bool"/>
    <keyword type="function" name="std::basic_ostream::rdstate" link="cpp/io/basic_ios/rdstate"/>
    <keyword type="function" name="std::basic_ostream::setstate" link="cpp/io/basic_ios/setstate"/>
    <keyword type="function" name="std::basic_ostream::clear" link="cpp/io/basic_ios/clear"/>
    <keyword type="function" name="std::basic_ostream::copyfmt" link="cpp/io/basic_ios/copyfmt"/>
    <keyword type="function" name="std::basic_ostream::fill" link="cpp/io/basic_ios/fill"/>
    <keyword type="function" name="std::basic_ostream::exceptions" link="cpp/io/basic_ios/exceptions"/>
    <keyword type="function" name="std::basic_ostream::imbue" link="cpp/io/basic_ios/imbue"/>
    <keyword type="function" name="std::basic_ostream::rdbuf" link="cpp/io/basic_ios/rdbuf"/>
    <keyword type="function" name="std::basic_ostream::tie" link="cpp/io/basic_ios/tie"/>
    <keyword type="function" name="std::basic_ostream::narrow" link="cpp/io/basic_ios/narrow"/>
    <keyword type="function" name="std::basic_ostream::widen" link="cpp/io/basic_ios/widen"/>
    <keyword type="function" name="std::basic_ostream::init" link="cpp/io/basic_ios/init"/>
    <keyword type="function" name="std::basic_ostream::move" link="cpp/io/basic_ios/move"/>
    <keyword type="function" name="std::basic_ostream::swap" link="cpp/io/basic_ios/swap"/>
    <keyword type="function" name="std::basic_ostream::set_rdbuf" link="cpp/io/basic_ios/set_rdbuf"/>
    <keyword type="function" name="std::basic_ostream::flags" link="cpp/io/ios_base/flags"/>
    <keyword type="function" name="std::basic_ostream::setf" link="cpp/io/ios_base/setf"/>
    <keyword type="function" name="std::basic_ostream::unsetf" link="cpp/io/ios_base/unsetf"/>
    <keyword type="function" name="std::basic_ostream::precision" link="cpp/io/ios_base/precision"/>
    <keyword type="function" name="std::basic_ostream::width" link="cpp/io/ios_base/width"/>
    <keyword type="function" name="std::basic_ostream::imbue" link="cpp/io/ios_base/imbue"/>
    <keyword type="function" name="std::basic_ostream::getloc" link="cpp/io/ios_base/getloc"/>
    <keyword type="function" name="std::basic_ostream::xalloc" link="cpp/io/ios_base/xalloc"/>
    <keyword type="function" name="std::basic_ostream::iword" link="cpp/io/ios_base/iword"/>
    <keyword type="function" name="std::basic_ostream::pword" link="cpp/io/ios_base/pword"/>
    <keyword type="function" name="std::basic_ostream::register_callback" link="cpp/io/ios_base/register_callback"/>
    <keyword type="function" name="std::basic_ostream::sync_with_stdio" link="cpp/io/ios_base/sync_with_stdio"/>
    <keyword type="class" name="std::basic_ostream::failure" link="cpp/io/ios_base/failure"/>
    <keyword type="function" name="std::basic_ostream::failure::what" link="cpp/error/exception/what"/>
    <keyword type="function" name="std::basic_ostream::failure::failure" link="cpp/io/ios_base/failure"/>
    <keyword type="enum" name="std::basic_ostream::openmode" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::basic_ostream::app" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::basic_ostream::binary" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::basic_ostream::in" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::basic_ostream::out" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::basic_ostream::trunc" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::basic_ostream::ate" link="cpp/io/ios_base/openmode"/>
    <keyword type="enum" name="std::basic_ostream::fmtflags" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_ostream::dec" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_ostream::oct" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_ostream::hex" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_ostream::basefield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_ostream::left" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_ostream::right" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_ostream::internal" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_ostream::adjustfield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_ostream::scientific" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_ostream::fixed" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_ostream::floatfield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_ostream::boolalpha" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_ostream::showbase" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_ostream::showpoint" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_ostream::showpos" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_ostream::skipws" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_ostream::unitbuf" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_ostream::uppercase" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="enum" name="std::basic_ostream::iostate" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::basic_ostream::goodbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::basic_ostream::badbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::basic_ostream::failbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::basic_ostream::eofbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="enum" name="std::basic_ostream::seekdir" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::basic_ostream::beg" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::basic_ostream::cur" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::basic_ostream::end" link="cpp/io/ios_base/seekdir"/>
    <keyword type="enum" name="std::basic_ostream::event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::basic_ostream::erase_event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::basic_ostream::imbue_event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::basic_ostream::copyfmt_event" link="cpp/io/ios_base/event"/>
    <keyword type="typedef" name="std::basic_ostream::event_callback" link="cpp/io/ios_base/event_callback"/>
    <keyword type="class" name="std::basic_ostream::Init" link="cpp/io/ios_base/Init"/>
    <keyword type="function" name="std::basic_ostream::basic_ostream" link="cpp/io/basic_ostream/basic_ostream"/>
    <keyword type="function" name="std::basic_ostream::~basic_ostream" link="cpp/io/basic_ostream/~basic_ostream"/>
    <keyword type="function" name="std::basic_ostream::operator&lt;&lt;" link="cpp/io/basic_ostream/operator_ltlt"/>
    <keyword type="function" name="std::basic_ostream::put" link="cpp/io/basic_ostream/put"/>
    <keyword type="function" name="std::basic_ostream::write" link="cpp/io/basic_ostream/write"/>
    <keyword type="function" name="std::basic_ostream::tellp" link="cpp/io/basic_ostream/tellp"/>
    <keyword type="function" name="std::basic_ostream::seekp" link="cpp/io/basic_ostream/seekp"/>
    <keyword type="function" name="std::basic_ostream::flush" link="cpp/io/basic_ostream/flush"/>
    <keyword type="class" name="std::basic_ostream::sentry" link="cpp/io/basic_ostream/sentry"/>
    <keyword type="function" name="std::basic_ostream::sentry::sentry" link="cpp/io/basic_ostream/sentry"/>
    <keyword type="function" name="std::basic_ostream::sentry::~sentry" link="cpp/io/basic_ostream/sentry"/>
    <keyword type="function" name="std::basic_ostream::sentry::operator bool" link="cpp/io/basic_ostream/sentry"/>
    <keyword type="function" name="operator&lt;&lt;(std::basic_ostream)" link="cpp/io/basic_ostream/operator_ltlt2"/>
    <keyword type="class" name="std::basic_iostream" link="cpp/io/basic_iostream"/>
    <keyword type="function" name="std::basic_iostream::operator&gt;&gt;" link="cpp/io/basic_istream/operator_gtgt"/>
    <keyword type="function" name="std::basic_iostream::get" link="cpp/io/basic_istream/get"/>
    <keyword type="function" name="std::basic_iostream::peek" link="cpp/io/basic_istream/peek"/>
    <keyword type="function" name="std::basic_iostream::unget" link="cpp/io/basic_istream/unget"/>
    <keyword type="function" name="std::basic_iostream::putback" link="cpp/io/basic_istream/putback"/>
    <keyword type="function" name="std::basic_iostream::getline" link="cpp/io/basic_istream/getline"/>
    <keyword type="function" name="std::basic_iostream::ignore" link="cpp/io/basic_istream/ignore"/>
    <keyword type="function" name="std::basic_iostream::read" link="cpp/io/basic_istream/read"/>
    <keyword type="function" name="std::basic_iostream::readsome" link="cpp/io/basic_istream/readsome"/>
    <keyword type="function" name="std::basic_iostream::gcount" link="cpp/io/basic_istream/gcount"/>
    <keyword type="function" name="std::basic_iostream::tellg" link="cpp/io/basic_istream/tellg"/>
    <keyword type="function" name="std::basic_iostream::seekg" link="cpp/io/basic_istream/seekg"/>
    <keyword type="function" name="std::basic_iostream::sync" link="cpp/io/basic_istream/sync"/>
    <keyword type="class" name="std::basic_iostream::sentry" link="cpp/io/basic_istream/sentry"/>
    <keyword type="function" name="std::basic_iostream::sentry::sentry" link="cpp/io/basic_istream/sentry"/>
    <keyword type="function" name="std::basic_iostream::sentry::~sentry" link="cpp/io/basic_istream/sentry"/>
    <keyword type="function" name="std::basic_iostream::sentry::operator bool" link="cpp/io/basic_istream/sentry"/>
    <keyword type="function" name="std::basic_iostream::operator&lt;&lt;" link="cpp/io/basic_ostream/operator_ltlt"/>
    <keyword type="function" name="std::basic_iostream::put" link="cpp/io/basic_ostream/put"/>
    <keyword type="function" name="std::basic_iostream::write" link="cpp/io/basic_ostream/write"/>
    <keyword type="function" name="std::basic_iostream::tellp" link="cpp/io/basic_ostream/tellp"/>
    <keyword type="function" name="std::basic_iostream::seekp" link="cpp/io/basic_ostream/seekp"/>
    <keyword type="function" name="std::basic_iostream::flush" link="cpp/io/basic_ostream/flush"/>
    <keyword type="class" name="std::basic_iostream::sentry" link="cpp/io/basic_ostream/sentry"/>
    <keyword type="function" name="std::basic_iostream::sentry::sentry" link="cpp/io/basic_ostream/sentry"/>
    <keyword type="function" name="std::basic_iostream::sentry::~sentry" link="cpp/io/basic_ostream/sentry"/>
    <keyword type="function" name="std::basic_iostream::sentry::operator bool" link="cpp/io/basic_ostream/sentry"/>
    <keyword type="function" name="std::basic_iostream::good" link="cpp/io/basic_ios/good"/>
    <keyword type="function" name="std::basic_iostream::eof" link="cpp/io/basic_ios/eof"/>
    <keyword type="function" name="std::basic_iostream::fail" link="cpp/io/basic_ios/fail"/>
    <keyword type="function" name="std::basic_iostream::bad" link="cpp/io/basic_ios/bad"/>
    <keyword type="function" name="std::basic_iostream::operator!" link="cpp/io/basic_ios/operator!"/>
    <keyword type="function" name="std::basic_iostream::operator bool" link="cpp/io/basic_ios/operator_bool"/>
    <keyword type="function" name="std::basic_iostream::rdstate" link="cpp/io/basic_ios/rdstate"/>
    <keyword type="function" name="std::basic_iostream::setstate" link="cpp/io/basic_ios/setstate"/>
    <keyword type="function" name="std::basic_iostream::clear" link="cpp/io/basic_ios/clear"/>
    <keyword type="function" name="std::basic_iostream::copyfmt" link="cpp/io/basic_ios/copyfmt"/>
    <keyword type="function" name="std::basic_iostream::fill" link="cpp/io/basic_ios/fill"/>
    <keyword type="function" name="std::basic_iostream::exceptions" link="cpp/io/basic_ios/exceptions"/>
    <keyword type="function" name="std::basic_iostream::imbue" link="cpp/io/basic_ios/imbue"/>
    <keyword type="function" name="std::basic_iostream::rdbuf" link="cpp/io/basic_ios/rdbuf"/>
    <keyword type="function" name="std::basic_iostream::tie" link="cpp/io/basic_ios/tie"/>
    <keyword type="function" name="std::basic_iostream::narrow" link="cpp/io/basic_ios/narrow"/>
    <keyword type="function" name="std::basic_iostream::widen" link="cpp/io/basic_ios/widen"/>
    <keyword type="function" name="std::basic_iostream::init" link="cpp/io/basic_ios/init"/>
    <keyword type="function" name="std::basic_iostream::move" link="cpp/io/basic_ios/move"/>
    <keyword type="function" name="std::basic_iostream::swap" link="cpp/io/basic_ios/swap"/>
    <keyword type="function" name="std::basic_iostream::set_rdbuf" link="cpp/io/basic_ios/set_rdbuf"/>
    <keyword type="function" name="std::basic_iostream::flags" link="cpp/io/ios_base/flags"/>
    <keyword type="function" name="std::basic_iostream::setf" link="cpp/io/ios_base/setf"/>
    <keyword type="function" name="std::basic_iostream::unsetf" link="cpp/io/ios_base/unsetf"/>
    <keyword type="function" name="std::basic_iostream::precision" link="cpp/io/ios_base/precision"/>
    <keyword type="function" name="std::basic_iostream::width" link="cpp/io/ios_base/width"/>
    <keyword type="function" name="std::basic_iostream::imbue" link="cpp/io/ios_base/imbue"/>
    <keyword type="function" name="std::basic_iostream::getloc" link="cpp/io/ios_base/getloc"/>
    <keyword type="function" name="std::basic_iostream::xalloc" link="cpp/io/ios_base/xalloc"/>
    <keyword type="function" name="std::basic_iostream::iword" link="cpp/io/ios_base/iword"/>
    <keyword type="function" name="std::basic_iostream::pword" link="cpp/io/ios_base/pword"/>
    <keyword type="function" name="std::basic_iostream::register_callback" link="cpp/io/ios_base/register_callback"/>
    <keyword type="function" name="std::basic_iostream::sync_with_stdio" link="cpp/io/ios_base/sync_with_stdio"/>
    <keyword type="class" name="std::basic_iostream::failure" link="cpp/io/ios_base/failure"/>
    <keyword type="function" name="std::basic_iostream::failure::what" link="cpp/error/exception/what"/>
    <keyword type="function" name="std::basic_iostream::failure::failure" link="cpp/io/ios_base/failure"/>
    <keyword type="enum" name="std::basic_iostream::openmode" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::basic_iostream::app" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::basic_iostream::binary" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::basic_iostream::in" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::basic_iostream::out" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::basic_iostream::trunc" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::basic_iostream::ate" link="cpp/io/ios_base/openmode"/>
    <keyword type="enum" name="std::basic_iostream::fmtflags" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_iostream::dec" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_iostream::oct" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_iostream::hex" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_iostream::basefield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_iostream::left" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_iostream::right" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_iostream::internal" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_iostream::adjustfield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_iostream::scientific" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_iostream::fixed" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_iostream::floatfield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_iostream::boolalpha" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_iostream::showbase" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_iostream::showpoint" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_iostream::showpos" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_iostream::skipws" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_iostream::unitbuf" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_iostream::uppercase" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="enum" name="std::basic_iostream::iostate" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::basic_iostream::goodbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::basic_iostream::badbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::basic_iostream::failbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::basic_iostream::eofbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="enum" name="std::basic_iostream::seekdir" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::basic_iostream::beg" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::basic_iostream::cur" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::basic_iostream::end" link="cpp/io/ios_base/seekdir"/>
    <keyword type="enum" name="std::basic_iostream::event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::basic_iostream::erase_event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::basic_iostream::imbue_event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::basic_iostream::copyfmt_event" link="cpp/io/ios_base/event"/>
    <keyword type="typedef" name="std::basic_iostream::event_callback" link="cpp/io/ios_base/event_callback"/>
    <keyword type="class" name="std::basic_iostream::Init" link="cpp/io/ios_base/Init"/>
    <keyword type="function" name="std::basic_iostream::basic_iostream" link="cpp/io/basic_iostream/basic_iostream"/>
    <keyword type="function" name="std::basic_iostream::~basic_iostream" link="cpp/io/basic_iostream/~basic_iostream"/>
    <keyword type="class" name="std::basic_ifstream" link="cpp/io/basic_ifstream"/>
    <keyword type="function" name="std::basic_ifstream::operator&gt;&gt;" link="cpp/io/basic_istream/operator_gtgt"/>
    <keyword type="function" name="std::basic_ifstream::get" link="cpp/io/basic_istream/get"/>
    <keyword type="function" name="std::basic_ifstream::peek" link="cpp/io/basic_istream/peek"/>
    <keyword type="function" name="std::basic_ifstream::unget" link="cpp/io/basic_istream/unget"/>
    <keyword type="function" name="std::basic_ifstream::putback" link="cpp/io/basic_istream/putback"/>
    <keyword type="function" name="std::basic_ifstream::getline" link="cpp/io/basic_istream/getline"/>
    <keyword type="function" name="std::basic_ifstream::ignore" link="cpp/io/basic_istream/ignore"/>
    <keyword type="function" name="std::basic_ifstream::read" link="cpp/io/basic_istream/read"/>
    <keyword type="function" name="std::basic_ifstream::readsome" link="cpp/io/basic_istream/readsome"/>
    <keyword type="function" name="std::basic_ifstream::gcount" link="cpp/io/basic_istream/gcount"/>
    <keyword type="function" name="std::basic_ifstream::tellg" link="cpp/io/basic_istream/tellg"/>
    <keyword type="function" name="std::basic_ifstream::seekg" link="cpp/io/basic_istream/seekg"/>
    <keyword type="function" name="std::basic_ifstream::sync" link="cpp/io/basic_istream/sync"/>
    <keyword type="class" name="std::basic_ifstream::sentry" link="cpp/io/basic_istream/sentry"/>
    <keyword type="function" name="std::basic_ifstream::sentry::sentry" link="cpp/io/basic_istream/sentry"/>
    <keyword type="function" name="std::basic_ifstream::sentry::~sentry" link="cpp/io/basic_istream/sentry"/>
    <keyword type="function" name="std::basic_ifstream::sentry::operator bool" link="cpp/io/basic_istream/sentry"/>
    <keyword type="function" name="std::basic_ifstream::good" link="cpp/io/basic_ios/good"/>
    <keyword type="function" name="std::basic_ifstream::eof" link="cpp/io/basic_ios/eof"/>
    <keyword type="function" name="std::basic_ifstream::fail" link="cpp/io/basic_ios/fail"/>
    <keyword type="function" name="std::basic_ifstream::bad" link="cpp/io/basic_ios/bad"/>
    <keyword type="function" name="std::basic_ifstream::operator!" link="cpp/io/basic_ios/operator!"/>
    <keyword type="function" name="std::basic_ifstream::operator bool" link="cpp/io/basic_ios/operator_bool"/>
    <keyword type="function" name="std::basic_ifstream::rdstate" link="cpp/io/basic_ios/rdstate"/>
    <keyword type="function" name="std::basic_ifstream::setstate" link="cpp/io/basic_ios/setstate"/>
    <keyword type="function" name="std::basic_ifstream::clear" link="cpp/io/basic_ios/clear"/>
    <keyword type="function" name="std::basic_ifstream::copyfmt" link="cpp/io/basic_ios/copyfmt"/>
    <keyword type="function" name="std::basic_ifstream::fill" link="cpp/io/basic_ios/fill"/>
    <keyword type="function" name="std::basic_ifstream::exceptions" link="cpp/io/basic_ios/exceptions"/>
    <keyword type="function" name="std::basic_ifstream::imbue" link="cpp/io/basic_ios/imbue"/>
    <keyword type="function" name="std::basic_ifstream::rdbuf" link="cpp/io/basic_ios/rdbuf"/>
    <keyword type="function" name="std::basic_ifstream::tie" link="cpp/io/basic_ios/tie"/>
    <keyword type="function" name="std::basic_ifstream::narrow" link="cpp/io/basic_ios/narrow"/>
    <keyword type="function" name="std::basic_ifstream::widen" link="cpp/io/basic_ios/widen"/>
    <keyword type="function" name="std::basic_ifstream::init" link="cpp/io/basic_ios/init"/>
    <keyword type="function" name="std::basic_ifstream::move" link="cpp/io/basic_ios/move"/>
    <keyword type="function" name="std::basic_ifstream::swap" link="cpp/io/basic_ios/swap"/>
    <keyword type="function" name="std::basic_ifstream::set_rdbuf" link="cpp/io/basic_ios/set_rdbuf"/>
    <keyword type="function" name="std::basic_ifstream::flags" link="cpp/io/ios_base/flags"/>
    <keyword type="function" name="std::basic_ifstream::setf" link="cpp/io/ios_base/setf"/>
    <keyword type="function" name="std::basic_ifstream::unsetf" link="cpp/io/ios_base/unsetf"/>
    <keyword type="function" name="std::basic_ifstream::precision" link="cpp/io/ios_base/precision"/>
    <keyword type="function" name="std::basic_ifstream::width" link="cpp/io/ios_base/width"/>
    <keyword type="function" name="std::basic_ifstream::imbue" link="cpp/io/ios_base/imbue"/>
    <keyword type="function" name="std::basic_ifstream::getloc" link="cpp/io/ios_base/getloc"/>
    <keyword type="function" name="std::basic_ifstream::xalloc" link="cpp/io/ios_base/xalloc"/>
    <keyword type="function" name="std::basic_ifstream::iword" link="cpp/io/ios_base/iword"/>
    <keyword type="function" name="std::basic_ifstream::pword" link="cpp/io/ios_base/pword"/>
    <keyword type="function" name="std::basic_ifstream::register_callback" link="cpp/io/ios_base/register_callback"/>
    <keyword type="function" name="std::basic_ifstream::sync_with_stdio" link="cpp/io/ios_base/sync_with_stdio"/>
    <keyword type="class" name="std::basic_ifstream::failure" link="cpp/io/ios_base/failure"/>
    <keyword type="function" name="std::basic_ifstream::failure::what" link="cpp/error/exception/what"/>
    <keyword type="function" name="std::basic_ifstream::failure::failure" link="cpp/io/ios_base/failure"/>
    <keyword type="enum" name="std::basic_ifstream::openmode" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::basic_ifstream::app" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::basic_ifstream::binary" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::basic_ifstream::in" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::basic_ifstream::out" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::basic_ifstream::trunc" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::basic_ifstream::ate" link="cpp/io/ios_base/openmode"/>
    <keyword type="enum" name="std::basic_ifstream::fmtflags" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_ifstream::dec" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_ifstream::oct" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_ifstream::hex" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_ifstream::basefield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_ifstream::left" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_ifstream::right" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_ifstream::internal" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_ifstream::adjustfield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_ifstream::scientific" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_ifstream::fixed" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_ifstream::floatfield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_ifstream::boolalpha" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_ifstream::showbase" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_ifstream::showpoint" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_ifstream::showpos" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_ifstream::skipws" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_ifstream::unitbuf" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_ifstream::uppercase" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="enum" name="std::basic_ifstream::iostate" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::basic_ifstream::goodbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::basic_ifstream::badbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::basic_ifstream::failbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::basic_ifstream::eofbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="enum" name="std::basic_ifstream::seekdir" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::basic_ifstream::beg" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::basic_ifstream::cur" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::basic_ifstream::end" link="cpp/io/ios_base/seekdir"/>
    <keyword type="enum" name="std::basic_ifstream::event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::basic_ifstream::erase_event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::basic_ifstream::imbue_event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::basic_ifstream::copyfmt_event" link="cpp/io/ios_base/event"/>
    <keyword type="typedef" name="std::basic_ifstream::event_callback" link="cpp/io/ios_base/event_callback"/>
    <keyword type="class" name="std::basic_ifstream::Init" link="cpp/io/ios_base/Init"/>
    <keyword type="function" name="std::basic_ifstream::basic_ifstream" link="cpp/io/basic_ifstream/basic_ifstream"/>
    <keyword type="function" name="std::basic_ifstream::operator=" link="cpp/io/basic_ifstream/operator="/>
    <keyword type="function" name="std::basic_ifstream::swap" link="cpp/io/basic_ifstream/swap"/>
    <keyword type="function" name="std::basic_ifstream::rdbuf" link="cpp/io/basic_ifstream/rdbuf"/>
    <keyword type="function" name="std::basic_ifstream::is_open" link="cpp/io/basic_ifstream/is_open"/>
    <keyword type="function" name="std::basic_ifstream::open" link="cpp/io/basic_ifstream/open"/>
    <keyword type="function" name="std::basic_ifstream::close" link="cpp/io/basic_ifstream/close"/>
    <keyword type="function" name="std::swap(std::basic_ifstream)" link="cpp/io/basic_ifstream/swap2"/>
    <keyword type="class" name="std::basic_ofstream" link="cpp/io/basic_ofstream"/>
    <keyword type="function" name="std::basic_ofstream::operator&lt;&lt;" link="cpp/io/basic_ostream/operator_ltlt"/>
    <keyword type="function" name="std::basic_ofstream::put" link="cpp/io/basic_ostream/put"/>
    <keyword type="function" name="std::basic_ofstream::write" link="cpp/io/basic_ostream/write"/>
    <keyword type="function" name="std::basic_ofstream::tellp" link="cpp/io/basic_ostream/tellp"/>
    <keyword type="function" name="std::basic_ofstream::seekp" link="cpp/io/basic_ostream/seekp"/>
    <keyword type="function" name="std::basic_ofstream::flush" link="cpp/io/basic_ostream/flush"/>
    <keyword type="class" name="std::basic_ofstream::sentry" link="cpp/io/basic_ostream/sentry"/>
    <keyword type="function" name="std::basic_ofstream::sentry::sentry" link="cpp/io/basic_ostream/sentry"/>
    <keyword type="function" name="std::basic_ofstream::sentry::~sentry" link="cpp/io/basic_ostream/sentry"/>
    <keyword type="function" name="std::basic_ofstream::sentry::operator bool" link="cpp/io/basic_ostream/sentry"/>
    <keyword type="function" name="std::basic_ofstream::good" link="cpp/io/basic_ios/good"/>
    <keyword type="function" name="std::basic_ofstream::eof" link="cpp/io/basic_ios/eof"/>
    <keyword type="function" name="std::basic_ofstream::fail" link="cpp/io/basic_ios/fail"/>
    <keyword type="function" name="std::basic_ofstream::bad" link="cpp/io/basic_ios/bad"/>
    <keyword type="function" name="std::basic_ofstream::operator!" link="cpp/io/basic_ios/operator!"/>
    <keyword type="function" name="std::basic_ofstream::operator bool" link="cpp/io/basic_ios/operator_bool"/>
    <keyword type="function" name="std::basic_ofstream::rdstate" link="cpp/io/basic_ios/rdstate"/>
    <keyword type="function" name="std::basic_ofstream::setstate" link="cpp/io/basic_ios/setstate"/>
    <keyword type="function" name="std::basic_ofstream::clear" link="cpp/io/basic_ios/clear"/>
    <keyword type="function" name="std::basic_ofstream::copyfmt" link="cpp/io/basic_ios/copyfmt"/>
    <keyword type="function" name="std::basic_ofstream::fill" link="cpp/io/basic_ios/fill"/>
    <keyword type="function" name="std::basic_ofstream::exceptions" link="cpp/io/basic_ios/exceptions"/>
    <keyword type="function" name="std::basic_ofstream::imbue" link="cpp/io/basic_ios/imbue"/>
    <keyword type="function" name="std::basic_ofstream::rdbuf" link="cpp/io/basic_ios/rdbuf"/>
    <keyword type="function" name="std::basic_ofstream::tie" link="cpp/io/basic_ios/tie"/>
    <keyword type="function" name="std::basic_ofstream::narrow" link="cpp/io/basic_ios/narrow"/>
    <keyword type="function" name="std::basic_ofstream::widen" link="cpp/io/basic_ios/widen"/>
    <keyword type="function" name="std::basic_ofstream::init" link="cpp/io/basic_ios/init"/>
    <keyword type="function" name="std::basic_ofstream::move" link="cpp/io/basic_ios/move"/>
    <keyword type="function" name="std::basic_ofstream::swap" link="cpp/io/basic_ios/swap"/>
    <keyword type="function" name="std::basic_ofstream::set_rdbuf" link="cpp/io/basic_ios/set_rdbuf"/>
    <keyword type="function" name="std::basic_ofstream::flags" link="cpp/io/ios_base/flags"/>
    <keyword type="function" name="std::basic_ofstream::setf" link="cpp/io/ios_base/setf"/>
    <keyword type="function" name="std::basic_ofstream::unsetf" link="cpp/io/ios_base/unsetf"/>
    <keyword type="function" name="std::basic_ofstream::precision" link="cpp/io/ios_base/precision"/>
    <keyword type="function" name="std::basic_ofstream::width" link="cpp/io/ios_base/width"/>
    <keyword type="function" name="std::basic_ofstream::imbue" link="cpp/io/ios_base/imbue"/>
    <keyword type="function" name="std::basic_ofstream::getloc" link="cpp/io/ios_base/getloc"/>
    <keyword type="function" name="std::basic_ofstream::xalloc" link="cpp/io/ios_base/xalloc"/>
    <keyword type="function" name="std::basic_ofstream::iword" link="cpp/io/ios_base/iword"/>
    <keyword type="function" name="std::basic_ofstream::pword" link="cpp/io/ios_base/pword"/>
    <keyword type="function" name="std::basic_ofstream::register_callback" link="cpp/io/ios_base/register_callback"/>
    <keyword type="function" name="std::basic_ofstream::sync_with_stdio" link="cpp/io/ios_base/sync_with_stdio"/>
    <keyword type="class" name="std::basic_ofstream::failure" link="cpp/io/ios_base/failure"/>
    <keyword type="function" name="std::basic_ofstream::failure::what" link="cpp/error/exception/what"/>
    <keyword type="function" name="std::basic_ofstream::failure::failure" link="cpp/io/ios_base/failure"/>
    <keyword type="enum" name="std::basic_ofstream::openmode" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::basic_ofstream::app" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::basic_ofstream::binary" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::basic_ofstream::in" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::basic_ofstream::out" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::basic_ofstream::trunc" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::basic_ofstream::ate" link="cpp/io/ios_base/openmode"/>
    <keyword type="enum" name="std::basic_ofstream::fmtflags" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_ofstream::dec" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_ofstream::oct" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_ofstream::hex" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_ofstream::basefield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_ofstream::left" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_ofstream::right" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_ofstream::internal" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_ofstream::adjustfield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_ofstream::scientific" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_ofstream::fixed" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_ofstream::floatfield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_ofstream::boolalpha" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_ofstream::showbase" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_ofstream::showpoint" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_ofstream::showpos" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_ofstream::skipws" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_ofstream::unitbuf" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_ofstream::uppercase" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="enum" name="std::basic_ofstream::iostate" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::basic_ofstream::goodbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::basic_ofstream::badbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::basic_ofstream::failbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::basic_ofstream::eofbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="enum" name="std::basic_ofstream::seekdir" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::basic_ofstream::beg" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::basic_ofstream::cur" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::basic_ofstream::end" link="cpp/io/ios_base/seekdir"/>
    <keyword type="enum" name="std::basic_ofstream::event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::basic_ofstream::erase_event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::basic_ofstream::imbue_event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::basic_ofstream::copyfmt_event" link="cpp/io/ios_base/event"/>
    <keyword type="typedef" name="std::basic_ofstream::event_callback" link="cpp/io/ios_base/event_callback"/>
    <keyword type="class" name="std::basic_ofstream::Init" link="cpp/io/ios_base/Init"/>
    <keyword type="function" name="std::basic_ofstream::basic_ofstream" link="cpp/io/basic_ofstream/basic_ofstream"/>
    <keyword type="function" name="std::basic_ofstream::operator=" link="cpp/io/basic_ofstream/operator="/>
    <keyword type="function" name="std::basic_ofstream::swap" link="cpp/io/basic_ofstream/swap"/>
    <keyword type="function" name="std::basic_ofstream::rdbuf" link="cpp/io/basic_ofstream/rdbuf"/>
    <keyword type="function" name="std::basic_ofstream::is_open" link="cpp/io/basic_ofstream/is_open"/>
    <keyword type="function" name="std::basic_ofstream::open" link="cpp/io/basic_ofstream/open"/>
    <keyword type="function" name="std::basic_ofstream::close" link="cpp/io/basic_ofstream/close"/>
    <keyword type="function" name="std::swap(std::basic_ofstream)" link="cpp/io/basic_ofstream/swap2"/>
    <keyword type="class" name="std::basic_fstream" link="cpp/io/basic_fstream"/>
    <keyword type="function" name="std::basic_fstream::operator&gt;&gt;" link="cpp/io/basic_istream/operator_gtgt"/>
    <keyword type="function" name="std::basic_fstream::get" link="cpp/io/basic_istream/get"/>
    <keyword type="function" name="std::basic_fstream::peek" link="cpp/io/basic_istream/peek"/>
    <keyword type="function" name="std::basic_fstream::unget" link="cpp/io/basic_istream/unget"/>
    <keyword type="function" name="std::basic_fstream::putback" link="cpp/io/basic_istream/putback"/>
    <keyword type="function" name="std::basic_fstream::getline" link="cpp/io/basic_istream/getline"/>
    <keyword type="function" name="std::basic_fstream::ignore" link="cpp/io/basic_istream/ignore"/>
    <keyword type="function" name="std::basic_fstream::read" link="cpp/io/basic_istream/read"/>
    <keyword type="function" name="std::basic_fstream::readsome" link="cpp/io/basic_istream/readsome"/>
    <keyword type="function" name="std::basic_fstream::gcount" link="cpp/io/basic_istream/gcount"/>
    <keyword type="function" name="std::basic_fstream::tellg" link="cpp/io/basic_istream/tellg"/>
    <keyword type="function" name="std::basic_fstream::seekg" link="cpp/io/basic_istream/seekg"/>
    <keyword type="function" name="std::basic_fstream::sync" link="cpp/io/basic_istream/sync"/>
    <keyword type="class" name="std::basic_fstream::sentry" link="cpp/io/basic_istream/sentry"/>
    <keyword type="function" name="std::basic_fstream::sentry::sentry" link="cpp/io/basic_istream/sentry"/>
    <keyword type="function" name="std::basic_fstream::sentry::~sentry" link="cpp/io/basic_istream/sentry"/>
    <keyword type="function" name="std::basic_fstream::sentry::operator bool" link="cpp/io/basic_istream/sentry"/>
    <keyword type="function" name="std::basic_fstream::operator&lt;&lt;" link="cpp/io/basic_ostream/operator_ltlt"/>
    <keyword type="function" name="std::basic_fstream::put" link="cpp/io/basic_ostream/put"/>
    <keyword type="function" name="std::basic_fstream::write" link="cpp/io/basic_ostream/write"/>
    <keyword type="function" name="std::basic_fstream::tellp" link="cpp/io/basic_ostream/tellp"/>
    <keyword type="function" name="std::basic_fstream::seekp" link="cpp/io/basic_ostream/seekp"/>
    <keyword type="function" name="std::basic_fstream::flush" link="cpp/io/basic_ostream/flush"/>
    <keyword type="class" name="std::basic_fstream::sentry" link="cpp/io/basic_ostream/sentry"/>
    <keyword type="function" name="std::basic_fstream::sentry::sentry" link="cpp/io/basic_ostream/sentry"/>
    <keyword type="function" name="std::basic_fstream::sentry::~sentry" link="cpp/io/basic_ostream/sentry"/>
    <keyword type="function" name="std::basic_fstream::sentry::operator bool" link="cpp/io/basic_ostream/sentry"/>
    <keyword type="function" name="std::basic_fstream::good" link="cpp/io/basic_ios/good"/>
    <keyword type="function" name="std::basic_fstream::eof" link="cpp/io/basic_ios/eof"/>
    <keyword type="function" name="std::basic_fstream::fail" link="cpp/io/basic_ios/fail"/>
    <keyword type="function" name="std::basic_fstream::bad" link="cpp/io/basic_ios/bad"/>
    <keyword type="function" name="std::basic_fstream::operator!" link="cpp/io/basic_ios/operator!"/>
    <keyword type="function" name="std::basic_fstream::operator bool" link="cpp/io/basic_ios/operator_bool"/>
    <keyword type="function" name="std::basic_fstream::rdstate" link="cpp/io/basic_ios/rdstate"/>
    <keyword type="function" name="std::basic_fstream::setstate" link="cpp/io/basic_ios/setstate"/>
    <keyword type="function" name="std::basic_fstream::clear" link="cpp/io/basic_ios/clear"/>
    <keyword type="function" name="std::basic_fstream::copyfmt" link="cpp/io/basic_ios/copyfmt"/>
    <keyword type="function" name="std::basic_fstream::fill" link="cpp/io/basic_ios/fill"/>
    <keyword type="function" name="std::basic_fstream::exceptions" link="cpp/io/basic_ios/exceptions"/>
    <keyword type="function" name="std::basic_fstream::imbue" link="cpp/io/basic_ios/imbue"/>
    <keyword type="function" name="std::basic_fstream::rdbuf" link="cpp/io/basic_ios/rdbuf"/>
    <keyword type="function" name="std::basic_fstream::tie" link="cpp/io/basic_ios/tie"/>
    <keyword type="function" name="std::basic_fstream::narrow" link="cpp/io/basic_ios/narrow"/>
    <keyword type="function" name="std::basic_fstream::widen" link="cpp/io/basic_ios/widen"/>
    <keyword type="function" name="std::basic_fstream::init" link="cpp/io/basic_ios/init"/>
    <keyword type="function" name="std::basic_fstream::move" link="cpp/io/basic_ios/move"/>
    <keyword type="function" name="std::basic_fstream::swap" link="cpp/io/basic_ios/swap"/>
    <keyword type="function" name="std::basic_fstream::set_rdbuf" link="cpp/io/basic_ios/set_rdbuf"/>
    <keyword type="function" name="std::basic_fstream::flags" link="cpp/io/ios_base/flags"/>
    <keyword type="function" name="std::basic_fstream::setf" link="cpp/io/ios_base/setf"/>
    <keyword type="function" name="std::basic_fstream::unsetf" link="cpp/io/ios_base/unsetf"/>
    <keyword type="function" name="std::basic_fstream::precision" link="cpp/io/ios_base/precision"/>
    <keyword type="function" name="std::basic_fstream::width" link="cpp/io/ios_base/width"/>
    <keyword type="function" name="std::basic_fstream::imbue" link="cpp/io/ios_base/imbue"/>
    <keyword type="function" name="std::basic_fstream::getloc" link="cpp/io/ios_base/getloc"/>
    <keyword type="function" name="std::basic_fstream::xalloc" link="cpp/io/ios_base/xalloc"/>
    <keyword type="function" name="std::basic_fstream::iword" link="cpp/io/ios_base/iword"/>
    <keyword type="function" name="std::basic_fstream::pword" link="cpp/io/ios_base/pword"/>
    <keyword type="function" name="std::basic_fstream::register_callback" link="cpp/io/ios_base/register_callback"/>
    <keyword type="function" name="std::basic_fstream::sync_with_stdio" link="cpp/io/ios_base/sync_with_stdio"/>
    <keyword type="class" name="std::basic_fstream::failure" link="cpp/io/ios_base/failure"/>
    <keyword type="function" name="std::basic_fstream::failure::what" link="cpp/error/exception/what"/>
    <keyword type="function" name="std::basic_fstream::failure::failure" link="cpp/io/ios_base/failure"/>
    <keyword type="enum" name="std::basic_fstream::openmode" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::basic_fstream::app" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::basic_fstream::binary" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::basic_fstream::in" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::basic_fstream::out" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::basic_fstream::trunc" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::basic_fstream::ate" link="cpp/io/ios_base/openmode"/>
    <keyword type="enum" name="std::basic_fstream::fmtflags" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_fstream::dec" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_fstream::oct" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_fstream::hex" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_fstream::basefield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_fstream::left" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_fstream::right" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_fstream::internal" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_fstream::adjustfield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_fstream::scientific" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_fstream::fixed" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_fstream::floatfield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_fstream::boolalpha" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_fstream::showbase" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_fstream::showpoint" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_fstream::showpos" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_fstream::skipws" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_fstream::unitbuf" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_fstream::uppercase" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="enum" name="std::basic_fstream::iostate" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::basic_fstream::goodbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::basic_fstream::badbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::basic_fstream::failbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::basic_fstream::eofbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="enum" name="std::basic_fstream::seekdir" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::basic_fstream::beg" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::basic_fstream::cur" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::basic_fstream::end" link="cpp/io/ios_base/seekdir"/>
    <keyword type="enum" name="std::basic_fstream::event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::basic_fstream::erase_event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::basic_fstream::imbue_event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::basic_fstream::copyfmt_event" link="cpp/io/ios_base/event"/>
    <keyword type="typedef" name="std::basic_fstream::event_callback" link="cpp/io/ios_base/event_callback"/>
    <keyword type="class" name="std::basic_fstream::Init" link="cpp/io/ios_base/Init"/>
    <keyword type="function" name="std::basic_fstream::basic_fstream" link="cpp/io/basic_fstream/basic_fstream"/>
    <keyword type="function" name="std::basic_fstream::operator=" link="cpp/io/basic_fstream/operator="/>
    <keyword type="function" name="std::basic_fstream::swap" link="cpp/io/basic_fstream/swap"/>
    <keyword type="function" name="std::basic_fstream::rdbuf" link="cpp/io/basic_fstream/rdbuf"/>
    <keyword type="function" name="std::basic_fstream::is_open" link="cpp/io/basic_fstream/is_open"/>
    <keyword type="function" name="std::basic_fstream::open" link="cpp/io/basic_fstream/open"/>
    <keyword type="function" name="std::basic_fstream::close" link="cpp/io/basic_fstream/close"/>
    <keyword type="function" name="std::swap(std::basic_fstream)" link="cpp/io/basic_fstream/swap2"/>
    <keyword type="class" name="std::basic_istringstream" link="cpp/io/basic_istringstream"/>
    <keyword type="function" name="std::basic_istringstream::operator&gt;&gt;" link="cpp/io/basic_istream/operator_gtgt"/>
    <keyword type="function" name="std::basic_istringstream::get" link="cpp/io/basic_istream/get"/>
    <keyword type="function" name="std::basic_istringstream::peek" link="cpp/io/basic_istream/peek"/>
    <keyword type="function" name="std::basic_istringstream::unget" link="cpp/io/basic_istream/unget"/>
    <keyword type="function" name="std::basic_istringstream::putback" link="cpp/io/basic_istream/putback"/>
    <keyword type="function" name="std::basic_istringstream::getline" link="cpp/io/basic_istream/getline"/>
    <keyword type="function" name="std::basic_istringstream::ignore" link="cpp/io/basic_istream/ignore"/>
    <keyword type="function" name="std::basic_istringstream::read" link="cpp/io/basic_istream/read"/>
    <keyword type="function" name="std::basic_istringstream::readsome" link="cpp/io/basic_istream/readsome"/>
    <keyword type="function" name="std::basic_istringstream::gcount" link="cpp/io/basic_istream/gcount"/>
    <keyword type="function" name="std::basic_istringstream::tellg" link="cpp/io/basic_istream/tellg"/>
    <keyword type="function" name="std::basic_istringstream::seekg" link="cpp/io/basic_istream/seekg"/>
    <keyword type="function" name="std::basic_istringstream::sync" link="cpp/io/basic_istream/sync"/>
    <keyword type="class" name="std::basic_istringstream::sentry" link="cpp/io/basic_istream/sentry"/>
    <keyword type="function" name="std::basic_istringstream::sentry::sentry" link="cpp/io/basic_istream/sentry"/>
    <keyword type="function" name="std::basic_istringstream::sentry::~sentry" link="cpp/io/basic_istream/sentry"/>
    <keyword type="function" name="std::basic_istringstream::sentry::operator bool" link="cpp/io/basic_istream/sentry"/>
    <keyword type="function" name="std::basic_istringstream::good" link="cpp/io/basic_ios/good"/>
    <keyword type="function" name="std::basic_istringstream::eof" link="cpp/io/basic_ios/eof"/>
    <keyword type="function" name="std::basic_istringstream::fail" link="cpp/io/basic_ios/fail"/>
    <keyword type="function" name="std::basic_istringstream::bad" link="cpp/io/basic_ios/bad"/>
    <keyword type="function" name="std::basic_istringstream::operator!" link="cpp/io/basic_ios/operator!"/>
    <keyword type="function" name="std::basic_istringstream::operator bool" link="cpp/io/basic_ios/operator_bool"/>
    <keyword type="function" name="std::basic_istringstream::rdstate" link="cpp/io/basic_ios/rdstate"/>
    <keyword type="function" name="std::basic_istringstream::setstate" link="cpp/io/basic_ios/setstate"/>
    <keyword type="function" name="std::basic_istringstream::clear" link="cpp/io/basic_ios/clear"/>
    <keyword type="function" name="std::basic_istringstream::copyfmt" link="cpp/io/basic_ios/copyfmt"/>
    <keyword type="function" name="std::basic_istringstream::fill" link="cpp/io/basic_ios/fill"/>
    <keyword type="function" name="std::basic_istringstream::exceptions" link="cpp/io/basic_ios/exceptions"/>
    <keyword type="function" name="std::basic_istringstream::imbue" link="cpp/io/basic_ios/imbue"/>
    <keyword type="function" name="std::basic_istringstream::rdbuf" link="cpp/io/basic_ios/rdbuf"/>
    <keyword type="function" name="std::basic_istringstream::tie" link="cpp/io/basic_ios/tie"/>
    <keyword type="function" name="std::basic_istringstream::narrow" link="cpp/io/basic_ios/narrow"/>
    <keyword type="function" name="std::basic_istringstream::widen" link="cpp/io/basic_ios/widen"/>
    <keyword type="function" name="std::basic_istringstream::init" link="cpp/io/basic_ios/init"/>
    <keyword type="function" name="std::basic_istringstream::move" link="cpp/io/basic_ios/move"/>
    <keyword type="function" name="std::basic_istringstream::swap" link="cpp/io/basic_ios/swap"/>
    <keyword type="function" name="std::basic_istringstream::set_rdbuf" link="cpp/io/basic_ios/set_rdbuf"/>
    <keyword type="function" name="std::basic_istringstream::flags" link="cpp/io/ios_base/flags"/>
    <keyword type="function" name="std::basic_istringstream::setf" link="cpp/io/ios_base/setf"/>
    <keyword type="function" name="std::basic_istringstream::unsetf" link="cpp/io/ios_base/unsetf"/>
    <keyword type="function" name="std::basic_istringstream::precision" link="cpp/io/ios_base/precision"/>
    <keyword type="function" name="std::basic_istringstream::width" link="cpp/io/ios_base/width"/>
    <keyword type="function" name="std::basic_istringstream::imbue" link="cpp/io/ios_base/imbue"/>
    <keyword type="function" name="std::basic_istringstream::getloc" link="cpp/io/ios_base/getloc"/>
    <keyword type="function" name="std::basic_istringstream::xalloc" link="cpp/io/ios_base/xalloc"/>
    <keyword type="function" name="std::basic_istringstream::iword" link="cpp/io/ios_base/iword"/>
    <keyword type="function" name="std::basic_istringstream::pword" link="cpp/io/ios_base/pword"/>
    <keyword type="function" name="std::basic_istringstream::register_callback" link="cpp/io/ios_base/register_callback"/>
    <keyword type="function" name="std::basic_istringstream::sync_with_stdio" link="cpp/io/ios_base/sync_with_stdio"/>
    <keyword type="class" name="std::basic_istringstream::failure" link="cpp/io/ios_base/failure"/>
    <keyword type="function" name="std::basic_istringstream::failure::what" link="cpp/error/exception/what"/>
    <keyword type="function" name="std::basic_istringstream::failure::failure" link="cpp/io/ios_base/failure"/>
    <keyword type="enum" name="std::basic_istringstream::openmode" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::basic_istringstream::app" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::basic_istringstream::binary" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::basic_istringstream::in" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::basic_istringstream::out" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::basic_istringstream::trunc" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::basic_istringstream::ate" link="cpp/io/ios_base/openmode"/>
    <keyword type="enum" name="std::basic_istringstream::fmtflags" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_istringstream::dec" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_istringstream::oct" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_istringstream::hex" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_istringstream::basefield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_istringstream::left" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_istringstream::right" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_istringstream::internal" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_istringstream::adjustfield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_istringstream::scientific" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_istringstream::fixed" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_istringstream::floatfield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_istringstream::boolalpha" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_istringstream::showbase" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_istringstream::showpoint" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_istringstream::showpos" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_istringstream::skipws" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_istringstream::unitbuf" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_istringstream::uppercase" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="enum" name="std::basic_istringstream::iostate" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::basic_istringstream::goodbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::basic_istringstream::badbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::basic_istringstream::failbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::basic_istringstream::eofbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="enum" name="std::basic_istringstream::seekdir" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::basic_istringstream::beg" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::basic_istringstream::cur" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::basic_istringstream::end" link="cpp/io/ios_base/seekdir"/>
    <keyword type="enum" name="std::basic_istringstream::event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::basic_istringstream::erase_event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::basic_istringstream::imbue_event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::basic_istringstream::copyfmt_event" link="cpp/io/ios_base/event"/>
    <keyword type="typedef" name="std::basic_istringstream::event_callback" link="cpp/io/ios_base/event_callback"/>
    <keyword type="class" name="std::basic_istringstream::Init" link="cpp/io/ios_base/Init"/>
    <keyword type="function" name="std::basic_istringstream::basic_istringstream" link="cpp/io/basic_istringstream/basic_istringstream"/>
    <keyword type="function" name="std::basic_istringstream::operator=" link="cpp/io/basic_istringstream/operator="/>
    <keyword type="function" name="std::basic_istringstream::swap" link="cpp/io/basic_istringstream/swap"/>
    <keyword type="function" name="std::basic_istringstream::rdbuf" link="cpp/io/basic_istringstream/rdbuf"/>
    <keyword type="function" name="std::basic_istringstream::str" link="cpp/io/basic_istringstream/str"/>
    <keyword type="function" name="std::swap(std::basic_istringstream)" link="cpp/io/basic_istringstream/swap2"/>
    <keyword type="class" name="std::basic_ostringstream" link="cpp/io/basic_ostringstream"/>
    <keyword type="function" name="std::basic_ostringstream::operator&lt;&lt;" link="cpp/io/basic_ostream/operator_ltlt"/>
    <keyword type="function" name="std::basic_ostringstream::put" link="cpp/io/basic_ostream/put"/>
    <keyword type="function" name="std::basic_ostringstream::write" link="cpp/io/basic_ostream/write"/>
    <keyword type="function" name="std::basic_ostringstream::tellp" link="cpp/io/basic_ostream/tellp"/>
    <keyword type="function" name="std::basic_ostringstream::seekp" link="cpp/io/basic_ostream/seekp"/>
    <keyword type="function" name="std::basic_ostringstream::flush" link="cpp/io/basic_ostream/flush"/>
    <keyword type="class" name="std::basic_ostringstream::sentry" link="cpp/io/basic_ostream/sentry"/>
    <keyword type="function" name="std::basic_ostringstream::sentry::sentry" link="cpp/io/basic_ostream/sentry"/>
    <keyword type="function" name="std::basic_ostringstream::sentry::~sentry" link="cpp/io/basic_ostream/sentry"/>
    <keyword type="function" name="std::basic_ostringstream::sentry::operator bool" link="cpp/io/basic_ostream/sentry"/>
    <keyword type="function" name="std::basic_ostringstream::good" link="cpp/io/basic_ios/good"/>
    <keyword type="function" name="std::basic_ostringstream::eof" link="cpp/io/basic_ios/eof"/>
    <keyword type="function" name="std::basic_ostringstream::fail" link="cpp/io/basic_ios/fail"/>
    <keyword type="function" name="std::basic_ostringstream::bad" link="cpp/io/basic_ios/bad"/>
    <keyword type="function" name="std::basic_ostringstream::operator!" link="cpp/io/basic_ios/operator!"/>
    <keyword type="function" name="std::basic_ostringstream::operator bool" link="cpp/io/basic_ios/operator_bool"/>
    <keyword type="function" name="std::basic_ostringstream::rdstate" link="cpp/io/basic_ios/rdstate"/>
    <keyword type="function" name="std::basic_ostringstream::setstate" link="cpp/io/basic_ios/setstate"/>
    <keyword type="function" name="std::basic_ostringstream::clear" link="cpp/io/basic_ios/clear"/>
    <keyword type="function" name="std::basic_ostringstream::copyfmt" link="cpp/io/basic_ios/copyfmt"/>
    <keyword type="function" name="std::basic_ostringstream::fill" link="cpp/io/basic_ios/fill"/>
    <keyword type="function" name="std::basic_ostringstream::exceptions" link="cpp/io/basic_ios/exceptions"/>
    <keyword type="function" name="std::basic_ostringstream::imbue" link="cpp/io/basic_ios/imbue"/>
    <keyword type="function" name="std::basic_ostringstream::rdbuf" link="cpp/io/basic_ios/rdbuf"/>
    <keyword type="function" name="std::basic_ostringstream::tie" link="cpp/io/basic_ios/tie"/>
    <keyword type="function" name="std::basic_ostringstream::narrow" link="cpp/io/basic_ios/narrow"/>
    <keyword type="function" name="std::basic_ostringstream::widen" link="cpp/io/basic_ios/widen"/>
    <keyword type="function" name="std::basic_ostringstream::init" link="cpp/io/basic_ios/init"/>
    <keyword type="function" name="std::basic_ostringstream::move" link="cpp/io/basic_ios/move"/>
    <keyword type="function" name="std::basic_ostringstream::swap" link="cpp/io/basic_ios/swap"/>
    <keyword type="function" name="std::basic_ostringstream::set_rdbuf" link="cpp/io/basic_ios/set_rdbuf"/>
    <keyword type="function" name="std::basic_ostringstream::flags" link="cpp/io/ios_base/flags"/>
    <keyword type="function" name="std::basic_ostringstream::setf" link="cpp/io/ios_base/setf"/>
    <keyword type="function" name="std::basic_ostringstream::unsetf" link="cpp/io/ios_base/unsetf"/>
    <keyword type="function" name="std::basic_ostringstream::precision" link="cpp/io/ios_base/precision"/>
    <keyword type="function" name="std::basic_ostringstream::width" link="cpp/io/ios_base/width"/>
    <keyword type="function" name="std::basic_ostringstream::imbue" link="cpp/io/ios_base/imbue"/>
    <keyword type="function" name="std::basic_ostringstream::getloc" link="cpp/io/ios_base/getloc"/>
    <keyword type="function" name="std::basic_ostringstream::xalloc" link="cpp/io/ios_base/xalloc"/>
    <keyword type="function" name="std::basic_ostringstream::iword" link="cpp/io/ios_base/iword"/>
    <keyword type="function" name="std::basic_ostringstream::pword" link="cpp/io/ios_base/pword"/>
    <keyword type="function" name="std::basic_ostringstream::register_callback" link="cpp/io/ios_base/register_callback"/>
    <keyword type="function" name="std::basic_ostringstream::sync_with_stdio" link="cpp/io/ios_base/sync_with_stdio"/>
    <keyword type="class" name="std::basic_ostringstream::failure" link="cpp/io/ios_base/failure"/>
    <keyword type="function" name="std::basic_ostringstream::failure::what" link="cpp/error/exception/what"/>
    <keyword type="function" name="std::basic_ostringstream::failure::failure" link="cpp/io/ios_base/failure"/>
    <keyword type="enum" name="std::basic_ostringstream::openmode" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::basic_ostringstream::app" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::basic_ostringstream::binary" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::basic_ostringstream::in" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::basic_ostringstream::out" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::basic_ostringstream::trunc" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::basic_ostringstream::ate" link="cpp/io/ios_base/openmode"/>
    <keyword type="enum" name="std::basic_ostringstream::fmtflags" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_ostringstream::dec" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_ostringstream::oct" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_ostringstream::hex" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_ostringstream::basefield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_ostringstream::left" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_ostringstream::right" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_ostringstream::internal" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_ostringstream::adjustfield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_ostringstream::scientific" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_ostringstream::fixed" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_ostringstream::floatfield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_ostringstream::boolalpha" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_ostringstream::showbase" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_ostringstream::showpoint" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_ostringstream::showpos" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_ostringstream::skipws" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_ostringstream::unitbuf" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_ostringstream::uppercase" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="enum" name="std::basic_ostringstream::iostate" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::basic_ostringstream::goodbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::basic_ostringstream::badbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::basic_ostringstream::failbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::basic_ostringstream::eofbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="enum" name="std::basic_ostringstream::seekdir" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::basic_ostringstream::beg" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::basic_ostringstream::cur" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::basic_ostringstream::end" link="cpp/io/ios_base/seekdir"/>
    <keyword type="enum" name="std::basic_ostringstream::event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::basic_ostringstream::erase_event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::basic_ostringstream::imbue_event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::basic_ostringstream::copyfmt_event" link="cpp/io/ios_base/event"/>
    <keyword type="typedef" name="std::basic_ostringstream::event_callback" link="cpp/io/ios_base/event_callback"/>
    <keyword type="class" name="std::basic_ostringstream::Init" link="cpp/io/ios_base/Init"/>
    <keyword type="function" name="std::basic_ostringstream::basic_ostringstream" link="cpp/io/basic_ostringstream/basic_ostringstream"/>
    <keyword type="function" name="std::basic_ostringstream::operator=" link="cpp/io/basic_ostringstream/operator="/>
    <keyword type="function" name="std::basic_ostringstream::swap" link="cpp/io/basic_ostringstream/swap"/>
    <keyword type="function" name="std::basic_ostringstream::rdbuf" link="cpp/io/basic_ostringstream/rdbuf"/>
    <keyword type="function" name="std::basic_ostringstream::str" link="cpp/io/basic_ostringstream/str"/>
    <keyword type="function" name="std::swap(std::basic_ostringstream)" link="cpp/io/basic_ostringstream/swap2"/>
    <keyword type="class" name="std::basic_stringstream" link="cpp/io/basic_stringstream"/>
    <keyword type="function" name="std::basic_stringstream::operator&gt;&gt;" link="cpp/io/basic_istream/operator_gtgt"/>
    <keyword type="function" name="std::basic_stringstream::get" link="cpp/io/basic_istream/get"/>
    <keyword type="function" name="std::basic_stringstream::peek" link="cpp/io/basic_istream/peek"/>
    <keyword type="function" name="std::basic_stringstream::unget" link="cpp/io/basic_istream/unget"/>
    <keyword type="function" name="std::basic_stringstream::putback" link="cpp/io/basic_istream/putback"/>
    <keyword type="function" name="std::basic_stringstream::getline" link="cpp/io/basic_istream/getline"/>
    <keyword type="function" name="std::basic_stringstream::ignore" link="cpp/io/basic_istream/ignore"/>
    <keyword type="function" name="std::basic_stringstream::read" link="cpp/io/basic_istream/read"/>
    <keyword type="function" name="std::basic_stringstream::readsome" link="cpp/io/basic_istream/readsome"/>
    <keyword type="function" name="std::basic_stringstream::gcount" link="cpp/io/basic_istream/gcount"/>
    <keyword type="function" name="std::basic_stringstream::tellg" link="cpp/io/basic_istream/tellg"/>
    <keyword type="function" name="std::basic_stringstream::seekg" link="cpp/io/basic_istream/seekg"/>
    <keyword type="function" name="std::basic_stringstream::sync" link="cpp/io/basic_istream/sync"/>
    <keyword type="class" name="std::basic_stringstream::sentry" link="cpp/io/basic_istream/sentry"/>
    <keyword type="function" name="std::basic_stringstream::sentry::sentry" link="cpp/io/basic_istream/sentry"/>
    <keyword type="function" name="std::basic_stringstream::sentry::~sentry" link="cpp/io/basic_istream/sentry"/>
    <keyword type="function" name="std::basic_stringstream::sentry::operator bool" link="cpp/io/basic_istream/sentry"/>
    <keyword type="function" name="std::basic_stringstream::operator&lt;&lt;" link="cpp/io/basic_ostream/operator_ltlt"/>
    <keyword type="function" name="std::basic_stringstream::put" link="cpp/io/basic_ostream/put"/>
    <keyword type="function" name="std::basic_stringstream::write" link="cpp/io/basic_ostream/write"/>
    <keyword type="function" name="std::basic_stringstream::tellp" link="cpp/io/basic_ostream/tellp"/>
    <keyword type="function" name="std::basic_stringstream::seekp" link="cpp/io/basic_ostream/seekp"/>
    <keyword type="function" name="std::basic_stringstream::flush" link="cpp/io/basic_ostream/flush"/>
    <keyword type="class" name="std::basic_stringstream::sentry" link="cpp/io/basic_ostream/sentry"/>
    <keyword type="function" name="std::basic_stringstream::sentry::sentry" link="cpp/io/basic_ostream/sentry"/>
    <keyword type="function" name="std::basic_stringstream::sentry::~sentry" link="cpp/io/basic_ostream/sentry"/>
    <keyword type="function" name="std::basic_stringstream::sentry::operator bool" link="cpp/io/basic_ostream/sentry"/>
    <keyword type="function" name="std::basic_stringstream::good" link="cpp/io/basic_ios/good"/>
    <keyword type="function" name="std::basic_stringstream::eof" link="cpp/io/basic_ios/eof"/>
    <keyword type="function" name="std::basic_stringstream::fail" link="cpp/io/basic_ios/fail"/>
    <keyword type="function" name="std::basic_stringstream::bad" link="cpp/io/basic_ios/bad"/>
    <keyword type="function" name="std::basic_stringstream::operator!" link="cpp/io/basic_ios/operator!"/>
    <keyword type="function" name="std::basic_stringstream::operator bool" link="cpp/io/basic_ios/operator_bool"/>
    <keyword type="function" name="std::basic_stringstream::rdstate" link="cpp/io/basic_ios/rdstate"/>
    <keyword type="function" name="std::basic_stringstream::setstate" link="cpp/io/basic_ios/setstate"/>
    <keyword type="function" name="std::basic_stringstream::clear" link="cpp/io/basic_ios/clear"/>
    <keyword type="function" name="std::basic_stringstream::copyfmt" link="cpp/io/basic_ios/copyfmt"/>
    <keyword type="function" name="std::basic_stringstream::fill" link="cpp/io/basic_ios/fill"/>
    <keyword type="function" name="std::basic_stringstream::exceptions" link="cpp/io/basic_ios/exceptions"/>
    <keyword type="function" name="std::basic_stringstream::imbue" link="cpp/io/basic_ios/imbue"/>
    <keyword type="function" name="std::basic_stringstream::rdbuf" link="cpp/io/basic_ios/rdbuf"/>
    <keyword type="function" name="std::basic_stringstream::tie" link="cpp/io/basic_ios/tie"/>
    <keyword type="function" name="std::basic_stringstream::narrow" link="cpp/io/basic_ios/narrow"/>
    <keyword type="function" name="std::basic_stringstream::widen" link="cpp/io/basic_ios/widen"/>
    <keyword type="function" name="std::basic_stringstream::init" link="cpp/io/basic_ios/init"/>
    <keyword type="function" name="std::basic_stringstream::move" link="cpp/io/basic_ios/move"/>
    <keyword type="function" name="std::basic_stringstream::swap" link="cpp/io/basic_ios/swap"/>
    <keyword type="function" name="std::basic_stringstream::set_rdbuf" link="cpp/io/basic_ios/set_rdbuf"/>
    <keyword type="function" name="std::basic_stringstream::flags" link="cpp/io/ios_base/flags"/>
    <keyword type="function" name="std::basic_stringstream::setf" link="cpp/io/ios_base/setf"/>
    <keyword type="function" name="std::basic_stringstream::unsetf" link="cpp/io/ios_base/unsetf"/>
    <keyword type="function" name="std::basic_stringstream::precision" link="cpp/io/ios_base/precision"/>
    <keyword type="function" name="std::basic_stringstream::width" link="cpp/io/ios_base/width"/>
    <keyword type="function" name="std::basic_stringstream::imbue" link="cpp/io/ios_base/imbue"/>
    <keyword type="function" name="std::basic_stringstream::getloc" link="cpp/io/ios_base/getloc"/>
    <keyword type="function" name="std::basic_stringstream::xalloc" link="cpp/io/ios_base/xalloc"/>
    <keyword type="function" name="std::basic_stringstream::iword" link="cpp/io/ios_base/iword"/>
    <keyword type="function" name="std::basic_stringstream::pword" link="cpp/io/ios_base/pword"/>
    <keyword type="function" name="std::basic_stringstream::register_callback" link="cpp/io/ios_base/register_callback"/>
    <keyword type="function" name="std::basic_stringstream::sync_with_stdio" link="cpp/io/ios_base/sync_with_stdio"/>
    <keyword type="class" name="std::basic_stringstream::failure" link="cpp/io/ios_base/failure"/>
    <keyword type="function" name="std::basic_stringstream::failure::what" link="cpp/error/exception/what"/>
    <keyword type="function" name="std::basic_stringstream::failure::failure" link="cpp/io/ios_base/failure"/>
    <keyword type="enum" name="std::basic_stringstream::openmode" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::basic_stringstream::app" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::basic_stringstream::binary" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::basic_stringstream::in" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::basic_stringstream::out" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::basic_stringstream::trunc" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::basic_stringstream::ate" link="cpp/io/ios_base/openmode"/>
    <keyword type="enum" name="std::basic_stringstream::fmtflags" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_stringstream::dec" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_stringstream::oct" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_stringstream::hex" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_stringstream::basefield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_stringstream::left" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_stringstream::right" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_stringstream::internal" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_stringstream::adjustfield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_stringstream::scientific" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_stringstream::fixed" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_stringstream::floatfield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_stringstream::boolalpha" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_stringstream::showbase" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_stringstream::showpoint" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_stringstream::showpos" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_stringstream::skipws" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_stringstream::unitbuf" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_stringstream::uppercase" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="enum" name="std::basic_stringstream::iostate" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::basic_stringstream::goodbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::basic_stringstream::badbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::basic_stringstream::failbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::basic_stringstream::eofbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="enum" name="std::basic_stringstream::seekdir" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::basic_stringstream::beg" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::basic_stringstream::cur" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::basic_stringstream::end" link="cpp/io/ios_base/seekdir"/>
    <keyword type="enum" name="std::basic_stringstream::event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::basic_stringstream::erase_event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::basic_stringstream::imbue_event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::basic_stringstream::copyfmt_event" link="cpp/io/ios_base/event"/>
    <keyword type="typedef" name="std::basic_stringstream::event_callback" link="cpp/io/ios_base/event_callback"/>
    <keyword type="class" name="std::basic_stringstream::Init" link="cpp/io/ios_base/Init"/>
    <keyword type="function" name="std::basic_stringstream::basic_stringstream" link="cpp/io/basic_stringstream/basic_stringstream"/>
    <keyword type="function" name="std::basic_stringstream::operator=" link="cpp/io/basic_stringstream/operator="/>
    <keyword type="function" name="std::basic_stringstream::swap" link="cpp/io/basic_stringstream/swap"/>
    <keyword type="function" name="std::basic_stringstream::rdbuf" link="cpp/io/basic_stringstream/rdbuf"/>
    <keyword type="function" name="std::basic_stringstream::str" link="cpp/io/basic_stringstream/str"/>
    <keyword type="function" name="std::swap(std::basic_stringstream)" link="cpp/io/basic_stringstream/swap2"/>
    <keyword type="class" name="std::basic_osyncstream" link="cpp/io/basic_osyncstream"/>
    <keyword type="function" name="std::basic_osyncstream::operator&lt;&lt;" link="cpp/io/basic_ostream/operator_ltlt"/>
    <keyword type="function" name="std::basic_osyncstream::put" link="cpp/io/basic_ostream/put"/>
    <keyword type="function" name="std::basic_osyncstream::write" link="cpp/io/basic_ostream/write"/>
    <keyword type="function" name="std::basic_osyncstream::tellp" link="cpp/io/basic_ostream/tellp"/>
    <keyword type="function" name="std::basic_osyncstream::seekp" link="cpp/io/basic_ostream/seekp"/>
    <keyword type="function" name="std::basic_osyncstream::flush" link="cpp/io/basic_ostream/flush"/>
    <keyword type="class" name="std::basic_osyncstream::sentry" link="cpp/io/basic_ostream/sentry"/>
    <keyword type="function" name="std::basic_osyncstream::sentry::sentry" link="cpp/io/basic_ostream/sentry"/>
    <keyword type="function" name="std::basic_osyncstream::sentry::~sentry" link="cpp/io/basic_ostream/sentry"/>
    <keyword type="function" name="std::basic_osyncstream::sentry::operator bool" link="cpp/io/basic_ostream/sentry"/>
    <keyword type="function" name="std::basic_osyncstream::good" link="cpp/io/basic_ios/good"/>
    <keyword type="function" name="std::basic_osyncstream::eof" link="cpp/io/basic_ios/eof"/>
    <keyword type="function" name="std::basic_osyncstream::fail" link="cpp/io/basic_ios/fail"/>
    <keyword type="function" name="std::basic_osyncstream::bad" link="cpp/io/basic_ios/bad"/>
    <keyword type="function" name="std::basic_osyncstream::operator!" link="cpp/io/basic_ios/operator!"/>
    <keyword type="function" name="std::basic_osyncstream::operator bool" link="cpp/io/basic_ios/operator_bool"/>
    <keyword type="function" name="std::basic_osyncstream::rdstate" link="cpp/io/basic_ios/rdstate"/>
    <keyword type="function" name="std::basic_osyncstream::setstate" link="cpp/io/basic_ios/setstate"/>
    <keyword type="function" name="std::basic_osyncstream::clear" link="cpp/io/basic_ios/clear"/>
    <keyword type="function" name="std::basic_osyncstream::copyfmt" link="cpp/io/basic_ios/copyfmt"/>
    <keyword type="function" name="std::basic_osyncstream::fill" link="cpp/io/basic_ios/fill"/>
    <keyword type="function" name="std::basic_osyncstream::exceptions" link="cpp/io/basic_ios/exceptions"/>
    <keyword type="function" name="std::basic_osyncstream::imbue" link="cpp/io/basic_ios/imbue"/>
    <keyword type="function" name="std::basic_osyncstream::rdbuf" link="cpp/io/basic_ios/rdbuf"/>
    <keyword type="function" name="std::basic_osyncstream::tie" link="cpp/io/basic_ios/tie"/>
    <keyword type="function" name="std::basic_osyncstream::narrow" link="cpp/io/basic_ios/narrow"/>
    <keyword type="function" name="std::basic_osyncstream::widen" link="cpp/io/basic_ios/widen"/>
    <keyword type="function" name="std::basic_osyncstream::init" link="cpp/io/basic_ios/init"/>
    <keyword type="function" name="std::basic_osyncstream::move" link="cpp/io/basic_ios/move"/>
    <keyword type="function" name="std::basic_osyncstream::swap" link="cpp/io/basic_ios/swap"/>
    <keyword type="function" name="std::basic_osyncstream::set_rdbuf" link="cpp/io/basic_ios/set_rdbuf"/>
    <keyword type="function" name="std::basic_osyncstream::flags" link="cpp/io/ios_base/flags"/>
    <keyword type="function" name="std::basic_osyncstream::setf" link="cpp/io/ios_base/setf"/>
    <keyword type="function" name="std::basic_osyncstream::unsetf" link="cpp/io/ios_base/unsetf"/>
    <keyword type="function" name="std::basic_osyncstream::precision" link="cpp/io/ios_base/precision"/>
    <keyword type="function" name="std::basic_osyncstream::width" link="cpp/io/ios_base/width"/>
    <keyword type="function" name="std::basic_osyncstream::imbue" link="cpp/io/ios_base/imbue"/>
    <keyword type="function" name="std::basic_osyncstream::getloc" link="cpp/io/ios_base/getloc"/>
    <keyword type="function" name="std::basic_osyncstream::xalloc" link="cpp/io/ios_base/xalloc"/>
    <keyword type="function" name="std::basic_osyncstream::iword" link="cpp/io/ios_base/iword"/>
    <keyword type="function" name="std::basic_osyncstream::pword" link="cpp/io/ios_base/pword"/>
    <keyword type="function" name="std::basic_osyncstream::register_callback" link="cpp/io/ios_base/register_callback"/>
    <keyword type="function" name="std::basic_osyncstream::sync_with_stdio" link="cpp/io/ios_base/sync_with_stdio"/>
    <keyword type="class" name="std::basic_osyncstream::failure" link="cpp/io/ios_base/failure"/>
    <keyword type="function" name="std::basic_osyncstream::failure::what" link="cpp/error/exception/what"/>
    <keyword type="function" name="std::basic_osyncstream::failure::failure" link="cpp/io/ios_base/failure"/>
    <keyword type="enum" name="std::basic_osyncstream::openmode" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::basic_osyncstream::app" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::basic_osyncstream::binary" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::basic_osyncstream::in" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::basic_osyncstream::out" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::basic_osyncstream::trunc" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::basic_osyncstream::ate" link="cpp/io/ios_base/openmode"/>
    <keyword type="enum" name="std::basic_osyncstream::fmtflags" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_osyncstream::dec" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_osyncstream::oct" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_osyncstream::hex" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_osyncstream::basefield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_osyncstream::left" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_osyncstream::right" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_osyncstream::internal" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_osyncstream::adjustfield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_osyncstream::scientific" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_osyncstream::fixed" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_osyncstream::floatfield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_osyncstream::boolalpha" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_osyncstream::showbase" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_osyncstream::showpoint" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_osyncstream::showpos" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_osyncstream::skipws" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_osyncstream::unitbuf" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::basic_osyncstream::uppercase" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="enum" name="std::basic_osyncstream::iostate" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::basic_osyncstream::goodbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::basic_osyncstream::badbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::basic_osyncstream::failbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::basic_osyncstream::eofbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="enum" name="std::basic_osyncstream::seekdir" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::basic_osyncstream::beg" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::basic_osyncstream::cur" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::basic_osyncstream::end" link="cpp/io/ios_base/seekdir"/>
    <keyword type="enum" name="std::basic_osyncstream::event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::basic_osyncstream::erase_event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::basic_osyncstream::imbue_event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::basic_osyncstream::copyfmt_event" link="cpp/io/ios_base/event"/>
    <keyword type="typedef" name="std::basic_osyncstream::event_callback" link="cpp/io/ios_base/event_callback"/>
    <keyword type="class" name="std::basic_osyncstream::Init" link="cpp/io/ios_base/Init"/>
    <keyword type="function" name="std::basic_osyncstream::basic_osyncstream" link="cpp/io/basic_osyncstream/basic_osyncstream"/>
    <keyword type="function" name="std::basic_osyncstream::~basic_osyncstream" link="cpp/io/basic_osyncstream/~basic_osyncstream"/>
    <keyword type="function" name="std::basic_osyncstream::operator=" link="cpp/io/basic_osyncstream/operator="/>
    <keyword type="function" name="std::basic_osyncstream::rdbuf" link="cpp/io/basic_osyncstream/rdbuf"/>
    <keyword type="function" name="std::basic_osyncstream::get_wrapped" link="cpp/io/basic_osyncstream/get_wrapped"/>
    <keyword type="function" name="std::basic_osyncstream::emit" link="cpp/io/basic_osyncstream/emit"/>
    <keyword type="typedef" name="std::streambuf" link="cpp/io/basic_streambuf"/>
    <keyword type="function" name="std::streambuf::streambuf" link="cpp/io/basic_streambuf/basic_streambuf"/>
    <keyword type="function" name="std::streambuf::~streambuf" link="cpp/io/basic_streambuf/~basic_streambuf"/>
    <keyword type="function" name="std::streambuf::pubimbue" link="cpp/io/basic_streambuf/pubimbue"/>
    <keyword type="function" name="std::streambuf::getloc" link="cpp/io/basic_streambuf/getloc"/>
    <keyword type="function" name="std::streambuf::pubsetbuf" link="cpp/io/basic_streambuf/pubsetbuf"/>
    <keyword type="function" name="std::streambuf::pubseekoff" link="cpp/io/basic_streambuf/pubseekoff"/>
    <keyword type="function" name="std::streambuf::pubseekpos" link="cpp/io/basic_streambuf/pubseekpos"/>
    <keyword type="function" name="std::streambuf::pubsync" link="cpp/io/basic_streambuf/pubsync"/>
    <keyword type="function" name="std::streambuf::in_avail" link="cpp/io/basic_streambuf/in_avail"/>
    <keyword type="function" name="std::streambuf::snextc" link="cpp/io/basic_streambuf/snextc"/>
    <keyword type="function" name="std::streambuf::sbumpc" link="cpp/io/basic_streambuf/sbumpc"/>
    <keyword type="function" name="std::streambuf::sgetc" link="cpp/io/basic_streambuf/sgetc"/>
    <keyword type="function" name="std::streambuf::sgetn" link="cpp/io/basic_streambuf/sgetn"/>
    <keyword type="function" name="std::streambuf::sputc" link="cpp/io/basic_streambuf/sputc"/>
    <keyword type="function" name="std::streambuf::sputn" link="cpp/io/basic_streambuf/sputn"/>
    <keyword type="function" name="std::streambuf::sputbackc" link="cpp/io/basic_streambuf/sputbackc"/>
    <keyword type="function" name="std::streambuf::sungetc" link="cpp/io/basic_streambuf/sungetc"/>
    <keyword type="function" name="std::streambuf::operator=" link="cpp/io/basic_streambuf/operator="/>
    <keyword type="function" name="std::streambuf::swap" link="cpp/io/basic_streambuf/swap"/>
    <keyword type="function" name="std::streambuf::imbue" link="cpp/io/basic_streambuf/pubimbue"/>
    <keyword type="function" name="std::streambuf::setbuf" link="cpp/io/basic_streambuf/pubsetbuf"/>
    <keyword type="function" name="std::streambuf::seekoff" link="cpp/io/basic_streambuf/pubseekoff"/>
    <keyword type="function" name="std::streambuf::seekpos" link="cpp/io/basic_streambuf/pubseekpos"/>
    <keyword type="function" name="std::streambuf::sync" link="cpp/io/basic_streambuf/pubsync"/>
    <keyword type="function" name="std::streambuf::showmanyc" link="cpp/io/basic_streambuf/showmanyc"/>
    <keyword type="function" name="std::streambuf::underflow" link="cpp/io/basic_streambuf/underflow"/>
    <keyword type="function" name="std::streambuf::uflow" link="cpp/io/basic_streambuf/uflow"/>
    <keyword type="function" name="std::streambuf::xsgetn" link="cpp/io/basic_streambuf/sgetn"/>
    <keyword type="function" name="std::streambuf::eback" link="cpp/io/basic_streambuf/gptr"/>
    <keyword type="function" name="std::streambuf::gptr" link="cpp/io/basic_streambuf/gptr"/>
    <keyword type="function" name="std::streambuf::egptr" link="cpp/io/basic_streambuf/gptr"/>
    <keyword type="function" name="std::streambuf::gbump" link="cpp/io/basic_streambuf/gbump"/>
    <keyword type="function" name="std::streambuf::setg" link="cpp/io/basic_streambuf/setg"/>
    <keyword type="function" name="std::streambuf::xsputn" link="cpp/io/basic_streambuf/sputn"/>
    <keyword type="function" name="std::streambuf::overflow" link="cpp/io/basic_streambuf/overflow"/>
    <keyword type="function" name="std::streambuf::pbase" link="cpp/io/basic_streambuf/pptr"/>
    <keyword type="function" name="std::streambuf::pptr" link="cpp/io/basic_streambuf/pptr"/>
    <keyword type="function" name="std::streambuf::epptr" link="cpp/io/basic_streambuf/pptr"/>
    <keyword type="function" name="std::streambuf::pbump" link="cpp/io/basic_streambuf/pbump"/>
    <keyword type="function" name="std::streambuf::setp" link="cpp/io/basic_streambuf/setp"/>
    <keyword type="function" name="std::streambuf::pbackfail" link="cpp/io/basic_streambuf/pbackfail"/>
    <keyword type="typedef" name="std::filebuf" link="cpp/io/basic_filebuf"/>
    <keyword type="function" name="std::filebuf::pubimbue" link="cpp/io/basic_streambuf/pubimbue"/>
    <keyword type="function" name="std::filebuf::getloc" link="cpp/io/basic_streambuf/getloc"/>
    <keyword type="function" name="std::filebuf::pubsetbuf" link="cpp/io/basic_streambuf/pubsetbuf"/>
    <keyword type="function" name="std::filebuf::pubseekoff" link="cpp/io/basic_streambuf/pubseekoff"/>
    <keyword type="function" name="std::filebuf::pubseekpos" link="cpp/io/basic_streambuf/pubseekpos"/>
    <keyword type="function" name="std::filebuf::pubsync" link="cpp/io/basic_streambuf/pubsync"/>
    <keyword type="function" name="std::filebuf::in_avail" link="cpp/io/basic_streambuf/in_avail"/>
    <keyword type="function" name="std::filebuf::snextc" link="cpp/io/basic_streambuf/snextc"/>
    <keyword type="function" name="std::filebuf::sbumpc" link="cpp/io/basic_streambuf/sbumpc"/>
    <keyword type="function" name="std::filebuf::sgetc" link="cpp/io/basic_streambuf/sgetc"/>
    <keyword type="function" name="std::filebuf::sgetn" link="cpp/io/basic_streambuf/sgetn"/>
    <keyword type="function" name="std::filebuf::sputc" link="cpp/io/basic_streambuf/sputc"/>
    <keyword type="function" name="std::filebuf::sputn" link="cpp/io/basic_streambuf/sputn"/>
    <keyword type="function" name="std::filebuf::sputbackc" link="cpp/io/basic_streambuf/sputbackc"/>
    <keyword type="function" name="std::filebuf::sungetc" link="cpp/io/basic_streambuf/sungetc"/>
    <keyword type="function" name="std::filebuf::swap" link="cpp/io/basic_streambuf/swap"/>
    <keyword type="function" name="std::filebuf::imbue" link="cpp/io/basic_streambuf/pubimbue"/>
    <keyword type="function" name="std::filebuf::setbuf" link="cpp/io/basic_streambuf/pubsetbuf"/>
    <keyword type="function" name="std::filebuf::seekoff" link="cpp/io/basic_streambuf/pubseekoff"/>
    <keyword type="function" name="std::filebuf::seekpos" link="cpp/io/basic_streambuf/pubseekpos"/>
    <keyword type="function" name="std::filebuf::sync" link="cpp/io/basic_streambuf/pubsync"/>
    <keyword type="function" name="std::filebuf::showmanyc" link="cpp/io/basic_streambuf/showmanyc"/>
    <keyword type="function" name="std::filebuf::underflow" link="cpp/io/basic_streambuf/underflow"/>
    <keyword type="function" name="std::filebuf::uflow" link="cpp/io/basic_streambuf/uflow"/>
    <keyword type="function" name="std::filebuf::xsgetn" link="cpp/io/basic_streambuf/sgetn"/>
    <keyword type="function" name="std::filebuf::eback" link="cpp/io/basic_streambuf/gptr"/>
    <keyword type="function" name="std::filebuf::gptr" link="cpp/io/basic_streambuf/gptr"/>
    <keyword type="function" name="std::filebuf::egptr" link="cpp/io/basic_streambuf/gptr"/>
    <keyword type="function" name="std::filebuf::gbump" link="cpp/io/basic_streambuf/gbump"/>
    <keyword type="function" name="std::filebuf::setg" link="cpp/io/basic_streambuf/setg"/>
    <keyword type="function" name="std::filebuf::xsputn" link="cpp/io/basic_streambuf/sputn"/>
    <keyword type="function" name="std::filebuf::overflow" link="cpp/io/basic_streambuf/overflow"/>
    <keyword type="function" name="std::filebuf::pbase" link="cpp/io/basic_streambuf/pptr"/>
    <keyword type="function" name="std::filebuf::pptr" link="cpp/io/basic_streambuf/pptr"/>
    <keyword type="function" name="std::filebuf::epptr" link="cpp/io/basic_streambuf/pptr"/>
    <keyword type="function" name="std::filebuf::pbump" link="cpp/io/basic_streambuf/pbump"/>
    <keyword type="function" name="std::filebuf::setp" link="cpp/io/basic_streambuf/setp"/>
    <keyword type="function" name="std::filebuf::pbackfail" link="cpp/io/basic_streambuf/pbackfail"/>
    <keyword type="function" name="std::filebuf::filebuf" link="cpp/io/basic_filebuf/basic_filebuf"/>
    <keyword type="function" name="std::filebuf::~filebuf" link="cpp/io/basic_filebuf/~basic_filebuf"/>
    <keyword type="function" name="std::filebuf::operator=" link="cpp/io/basic_filebuf/operator="/>
    <keyword type="function" name="std::filebuf::swap" link="cpp/io/basic_filebuf/swap"/>
    <keyword type="function" name="std::filebuf::is_open" link="cpp/io/basic_filebuf/is_open"/>
    <keyword type="function" name="std::filebuf::open" link="cpp/io/basic_filebuf/open"/>
    <keyword type="function" name="std::filebuf::close" link="cpp/io/basic_filebuf/close"/>
    <keyword type="function" name="std::filebuf::showmanyc" link="cpp/io/basic_filebuf/showmanyc"/>
    <keyword type="function" name="std::filebuf::underflow" link="cpp/io/basic_filebuf/underflow"/>
    <keyword type="function" name="std::filebuf::uflow" link="cpp/io/basic_filebuf/uflow"/>
    <keyword type="function" name="std::filebuf::pbackfail" link="cpp/io/basic_filebuf/pbackfail"/>
    <keyword type="function" name="std::filebuf::overflow" link="cpp/io/basic_filebuf/overflow"/>
    <keyword type="function" name="std::filebuf::setbuf" link="cpp/io/basic_filebuf/setbuf"/>
    <keyword type="function" name="std::filebuf::seekoff" link="cpp/io/basic_filebuf/seekoff"/>
    <keyword type="function" name="std::filebuf::seekpos" link="cpp/io/basic_filebuf/seekpos"/>
    <keyword type="function" name="std::filebuf::sync" link="cpp/io/basic_filebuf/sync"/>
    <keyword type="function" name="std::filebuf::imbue" link="cpp/io/basic_filebuf/imbue"/>
    <keyword type="function" name="std::swap(std::filebuf)" link="cpp/io/basic_filebuf/swap2"/>
    <keyword type="typedef" name="std::stringbuf" link="cpp/io/basic_stringbuf"/>
    <keyword type="function" name="std::stringbuf::pubimbue" link="cpp/io/basic_streambuf/pubimbue"/>
    <keyword type="function" name="std::stringbuf::getloc" link="cpp/io/basic_streambuf/getloc"/>
    <keyword type="function" name="std::stringbuf::pubsetbuf" link="cpp/io/basic_streambuf/pubsetbuf"/>
    <keyword type="function" name="std::stringbuf::pubseekoff" link="cpp/io/basic_streambuf/pubseekoff"/>
    <keyword type="function" name="std::stringbuf::pubseekpos" link="cpp/io/basic_streambuf/pubseekpos"/>
    <keyword type="function" name="std::stringbuf::pubsync" link="cpp/io/basic_streambuf/pubsync"/>
    <keyword type="function" name="std::stringbuf::in_avail" link="cpp/io/basic_streambuf/in_avail"/>
    <keyword type="function" name="std::stringbuf::snextc" link="cpp/io/basic_streambuf/snextc"/>
    <keyword type="function" name="std::stringbuf::sbumpc" link="cpp/io/basic_streambuf/sbumpc"/>
    <keyword type="function" name="std::stringbuf::sgetc" link="cpp/io/basic_streambuf/sgetc"/>
    <keyword type="function" name="std::stringbuf::sgetn" link="cpp/io/basic_streambuf/sgetn"/>
    <keyword type="function" name="std::stringbuf::sputc" link="cpp/io/basic_streambuf/sputc"/>
    <keyword type="function" name="std::stringbuf::sputn" link="cpp/io/basic_streambuf/sputn"/>
    <keyword type="function" name="std::stringbuf::sputbackc" link="cpp/io/basic_streambuf/sputbackc"/>
    <keyword type="function" name="std::stringbuf::sungetc" link="cpp/io/basic_streambuf/sungetc"/>
    <keyword type="function" name="std::stringbuf::swap" link="cpp/io/basic_streambuf/swap"/>
    <keyword type="function" name="std::stringbuf::imbue" link="cpp/io/basic_streambuf/pubimbue"/>
    <keyword type="function" name="std::stringbuf::setbuf" link="cpp/io/basic_streambuf/pubsetbuf"/>
    <keyword type="function" name="std::stringbuf::seekoff" link="cpp/io/basic_streambuf/pubseekoff"/>
    <keyword type="function" name="std::stringbuf::seekpos" link="cpp/io/basic_streambuf/pubseekpos"/>
    <keyword type="function" name="std::stringbuf::sync" link="cpp/io/basic_streambuf/pubsync"/>
    <keyword type="function" name="std::stringbuf::showmanyc" link="cpp/io/basic_streambuf/showmanyc"/>
    <keyword type="function" name="std::stringbuf::underflow" link="cpp/io/basic_streambuf/underflow"/>
    <keyword type="function" name="std::stringbuf::uflow" link="cpp/io/basic_streambuf/uflow"/>
    <keyword type="function" name="std::stringbuf::xsgetn" link="cpp/io/basic_streambuf/sgetn"/>
    <keyword type="function" name="std::stringbuf::eback" link="cpp/io/basic_streambuf/gptr"/>
    <keyword type="function" name="std::stringbuf::gptr" link="cpp/io/basic_streambuf/gptr"/>
    <keyword type="function" name="std::stringbuf::egptr" link="cpp/io/basic_streambuf/gptr"/>
    <keyword type="function" name="std::stringbuf::gbump" link="cpp/io/basic_streambuf/gbump"/>
    <keyword type="function" name="std::stringbuf::setg" link="cpp/io/basic_streambuf/setg"/>
    <keyword type="function" name="std::stringbuf::xsputn" link="cpp/io/basic_streambuf/sputn"/>
    <keyword type="function" name="std::stringbuf::overflow" link="cpp/io/basic_streambuf/overflow"/>
    <keyword type="function" name="std::stringbuf::pbase" link="cpp/io/basic_streambuf/pptr"/>
    <keyword type="function" name="std::stringbuf::pptr" link="cpp/io/basic_streambuf/pptr"/>
    <keyword type="function" name="std::stringbuf::epptr" link="cpp/io/basic_streambuf/pptr"/>
    <keyword type="function" name="std::stringbuf::pbump" link="cpp/io/basic_streambuf/pbump"/>
    <keyword type="function" name="std::stringbuf::setp" link="cpp/io/basic_streambuf/setp"/>
    <keyword type="function" name="std::stringbuf::pbackfail" link="cpp/io/basic_streambuf/pbackfail"/>
    <keyword type="function" name="std::stringbuf::stringbuf" link="cpp/io/basic_stringbuf/basic_stringbuf"/>
    <keyword type="function" name="std::stringbuf::operator=" link="cpp/io/basic_stringbuf/operator="/>
    <keyword type="function" name="std::stringbuf::swap" link="cpp/io/basic_stringbuf/swap"/>
    <keyword type="function" name="std::stringbuf::str" link="cpp/io/basic_stringbuf/str"/>
    <keyword type="function" name="std::stringbuf::underflow" link="cpp/io/basic_stringbuf/underflow"/>
    <keyword type="function" name="std::stringbuf::pbackfail" link="cpp/io/basic_stringbuf/pbackfail"/>
    <keyword type="function" name="std::stringbuf::overflow" link="cpp/io/basic_stringbuf/overflow"/>
    <keyword type="function" name="std::stringbuf::setbuf" link="cpp/io/basic_stringbuf/setbuf"/>
    <keyword type="function" name="std::stringbuf::seekoff" link="cpp/io/basic_stringbuf/seekoff"/>
    <keyword type="function" name="std::stringbuf::seekpos" link="cpp/io/basic_stringbuf/seekpos"/>
    <keyword type="function" name="std::swap(std::stringbuf)" link="cpp/io/basic_stringbuf/swap2"/>
    <keyword type="typedef" name="std::syncbuf" link="cpp/io/basic_syncbuf"/>
    <keyword type="function" name="std::syncbuf::pubimbue" link="cpp/io/basic_streambuf/pubimbue"/>
    <keyword type="function" name="std::syncbuf::getloc" link="cpp/io/basic_streambuf/getloc"/>
    <keyword type="function" name="std::syncbuf::pubsetbuf" link="cpp/io/basic_streambuf/pubsetbuf"/>
    <keyword type="function" name="std::syncbuf::pubseekoff" link="cpp/io/basic_streambuf/pubseekoff"/>
    <keyword type="function" name="std::syncbuf::pubseekpos" link="cpp/io/basic_streambuf/pubseekpos"/>
    <keyword type="function" name="std::syncbuf::pubsync" link="cpp/io/basic_streambuf/pubsync"/>
    <keyword type="function" name="std::syncbuf::in_avail" link="cpp/io/basic_streambuf/in_avail"/>
    <keyword type="function" name="std::syncbuf::snextc" link="cpp/io/basic_streambuf/snextc"/>
    <keyword type="function" name="std::syncbuf::sbumpc" link="cpp/io/basic_streambuf/sbumpc"/>
    <keyword type="function" name="std::syncbuf::sgetc" link="cpp/io/basic_streambuf/sgetc"/>
    <keyword type="function" name="std::syncbuf::sgetn" link="cpp/io/basic_streambuf/sgetn"/>
    <keyword type="function" name="std::syncbuf::sputc" link="cpp/io/basic_streambuf/sputc"/>
    <keyword type="function" name="std::syncbuf::sputn" link="cpp/io/basic_streambuf/sputn"/>
    <keyword type="function" name="std::syncbuf::sputbackc" link="cpp/io/basic_streambuf/sputbackc"/>
    <keyword type="function" name="std::syncbuf::sungetc" link="cpp/io/basic_streambuf/sungetc"/>
    <keyword type="function" name="std::syncbuf::swap" link="cpp/io/basic_streambuf/swap"/>
    <keyword type="function" name="std::syncbuf::imbue" link="cpp/io/basic_streambuf/pubimbue"/>
    <keyword type="function" name="std::syncbuf::setbuf" link="cpp/io/basic_streambuf/pubsetbuf"/>
    <keyword type="function" name="std::syncbuf::seekoff" link="cpp/io/basic_streambuf/pubseekoff"/>
    <keyword type="function" name="std::syncbuf::seekpos" link="cpp/io/basic_streambuf/pubseekpos"/>
    <keyword type="function" name="std::syncbuf::sync" link="cpp/io/basic_streambuf/pubsync"/>
    <keyword type="function" name="std::syncbuf::showmanyc" link="cpp/io/basic_streambuf/showmanyc"/>
    <keyword type="function" name="std::syncbuf::underflow" link="cpp/io/basic_streambuf/underflow"/>
    <keyword type="function" name="std::syncbuf::uflow" link="cpp/io/basic_streambuf/uflow"/>
    <keyword type="function" name="std::syncbuf::xsgetn" link="cpp/io/basic_streambuf/sgetn"/>
    <keyword type="function" name="std::syncbuf::eback" link="cpp/io/basic_streambuf/gptr"/>
    <keyword type="function" name="std::syncbuf::gptr" link="cpp/io/basic_streambuf/gptr"/>
    <keyword type="function" name="std::syncbuf::egptr" link="cpp/io/basic_streambuf/gptr"/>
    <keyword type="function" name="std::syncbuf::gbump" link="cpp/io/basic_streambuf/gbump"/>
    <keyword type="function" name="std::syncbuf::setg" link="cpp/io/basic_streambuf/setg"/>
    <keyword type="function" name="std::syncbuf::xsputn" link="cpp/io/basic_streambuf/sputn"/>
    <keyword type="function" name="std::syncbuf::overflow" link="cpp/io/basic_streambuf/overflow"/>
    <keyword type="function" name="std::syncbuf::pbase" link="cpp/io/basic_streambuf/pptr"/>
    <keyword type="function" name="std::syncbuf::pptr" link="cpp/io/basic_streambuf/pptr"/>
    <keyword type="function" name="std::syncbuf::epptr" link="cpp/io/basic_streambuf/pptr"/>
    <keyword type="function" name="std::syncbuf::pbump" link="cpp/io/basic_streambuf/pbump"/>
    <keyword type="function" name="std::syncbuf::setp" link="cpp/io/basic_streambuf/setp"/>
    <keyword type="function" name="std::syncbuf::pbackfail" link="cpp/io/basic_streambuf/pbackfail"/>
    <keyword type="function" name="std::syncbuf::syncbuf" link="cpp/io/basic_syncbuf/basic_syncbuf"/>
    <keyword type="function" name="std::syncbuf::~syncbuf" link="cpp/io/basic_syncbuf/~basic_syncbuf"/>
    <keyword type="function" name="std::syncbuf::operator=" link="cpp/io/basic_syncbuf/operator="/>
    <keyword type="function" name="std::syncbuf::swap" link="cpp/io/basic_syncbuf/swap"/>
    <keyword type="function" name="std::syncbuf::emit" link="cpp/io/basic_syncbuf/emit"/>
    <keyword type="function" name="std::syncbuf::get_wrapped" link="cpp/io/basic_syncbuf/get_wrapped"/>
    <keyword type="function" name="std::syncbuf::get_allocator" link="cpp/io/basic_syncbuf/get_allocator"/>
    <keyword type="function" name="std::syncbuf::set_emit_on_sync" link="cpp/io/basic_syncbuf/set_emit_on_sync"/>
    <keyword type="function" name="std::syncbuf::sync" link="cpp/io/basic_syncbuf/sync"/>
    <keyword type="function" name="std::swap(std::syncbuf)" link="cpp/io/basic_syncbuf/swap2"/>
    <keyword type="typedef" name="std::ios" link="cpp/io/basic_ios"/>
    <keyword type="function" name="std::ios::flags" link="cpp/io/ios_base/flags"/>
    <keyword type="function" name="std::ios::setf" link="cpp/io/ios_base/setf"/>
    <keyword type="function" name="std::ios::unsetf" link="cpp/io/ios_base/unsetf"/>
    <keyword type="function" name="std::ios::precision" link="cpp/io/ios_base/precision"/>
    <keyword type="function" name="std::ios::width" link="cpp/io/ios_base/width"/>
    <keyword type="function" name="std::ios::imbue" link="cpp/io/ios_base/imbue"/>
    <keyword type="function" name="std::ios::getloc" link="cpp/io/ios_base/getloc"/>
    <keyword type="function" name="std::ios::xalloc" link="cpp/io/ios_base/xalloc"/>
    <keyword type="function" name="std::ios::iword" link="cpp/io/ios_base/iword"/>
    <keyword type="function" name="std::ios::pword" link="cpp/io/ios_base/pword"/>
    <keyword type="function" name="std::ios::register_callback" link="cpp/io/ios_base/register_callback"/>
    <keyword type="function" name="std::ios::sync_with_stdio" link="cpp/io/ios_base/sync_with_stdio"/>
    <keyword type="class" name="std::ios::failure" link="cpp/io/ios_base/failure"/>
    <keyword type="function" name="std::ios::failure::what" link="cpp/error/exception/what"/>
    <keyword type="function" name="std::ios::failure::failure" link="cpp/io/ios_base/failure"/>
    <keyword type="enum" name="std::ios::openmode" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::ios::app" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::ios::binary" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::ios::in" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::ios::out" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::ios::trunc" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::ios::ate" link="cpp/io/ios_base/openmode"/>
    <keyword type="enum" name="std::ios::fmtflags" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ios::dec" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ios::oct" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ios::hex" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ios::basefield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ios::left" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ios::right" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ios::internal" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ios::adjustfield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ios::scientific" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ios::fixed" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ios::floatfield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ios::boolalpha" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ios::showbase" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ios::showpoint" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ios::showpos" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ios::skipws" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ios::unitbuf" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ios::uppercase" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="enum" name="std::ios::iostate" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::ios::goodbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::ios::badbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::ios::failbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::ios::eofbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="enum" name="std::ios::seekdir" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::ios::beg" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::ios::cur" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::ios::end" link="cpp/io/ios_base/seekdir"/>
    <keyword type="enum" name="std::ios::event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::ios::erase_event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::ios::imbue_event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::ios::copyfmt_event" link="cpp/io/ios_base/event"/>
    <keyword type="typedef" name="std::ios::event_callback" link="cpp/io/ios_base/event_callback"/>
    <keyword type="class" name="std::ios::Init" link="cpp/io/ios_base/Init"/>
    <keyword type="function" name="std::ios::ios" link="cpp/io/basic_ios/basic_ios"/>
    <keyword type="function" name="std::ios::~ios" link="cpp/io/basic_ios/~basic_ios"/>
    <keyword type="function" name="std::ios::good" link="cpp/io/basic_ios/good"/>
    <keyword type="function" name="std::ios::eof" link="cpp/io/basic_ios/eof"/>
    <keyword type="function" name="std::ios::fail" link="cpp/io/basic_ios/fail"/>
    <keyword type="function" name="std::ios::bad" link="cpp/io/basic_ios/bad"/>
    <keyword type="function" name="std::ios::operator!" link="cpp/io/basic_ios/operator!"/>
    <keyword type="function" name="std::ios::operator bool" link="cpp/io/basic_ios/operator_bool"/>
    <keyword type="function" name="std::ios::rdstate" link="cpp/io/basic_ios/rdstate"/>
    <keyword type="function" name="std::ios::setstate" link="cpp/io/basic_ios/setstate"/>
    <keyword type="function" name="std::ios::clear" link="cpp/io/basic_ios/clear"/>
    <keyword type="function" name="std::ios::copyfmt" link="cpp/io/basic_ios/copyfmt"/>
    <keyword type="function" name="std::ios::fill" link="cpp/io/basic_ios/fill"/>
    <keyword type="function" name="std::ios::exceptions" link="cpp/io/basic_ios/exceptions"/>
    <keyword type="function" name="std::ios::imbue" link="cpp/io/basic_ios/imbue"/>
    <keyword type="function" name="std::ios::rdbuf" link="cpp/io/basic_ios/rdbuf"/>
    <keyword type="function" name="std::ios::tie" link="cpp/io/basic_ios/tie"/>
    <keyword type="function" name="std::ios::narrow" link="cpp/io/basic_ios/narrow"/>
    <keyword type="function" name="std::ios::widen" link="cpp/io/basic_ios/widen"/>
    <keyword type="function" name="std::ios::init" link="cpp/io/basic_ios/init"/>
    <keyword type="function" name="std::ios::move" link="cpp/io/basic_ios/move"/>
    <keyword type="function" name="std::ios::swap" link="cpp/io/basic_ios/swap"/>
    <keyword type="function" name="std::ios::set_rdbuf" link="cpp/io/basic_ios/set_rdbuf"/>
    <keyword type="typedef" name="std::istream" link="cpp/io/basic_istream"/>
    <keyword type="function" name="std::istream::good" link="cpp/io/basic_ios/good"/>
    <keyword type="function" name="std::istream::eof" link="cpp/io/basic_ios/eof"/>
    <keyword type="function" name="std::istream::fail" link="cpp/io/basic_ios/fail"/>
    <keyword type="function" name="std::istream::bad" link="cpp/io/basic_ios/bad"/>
    <keyword type="function" name="std::istream::operator!" link="cpp/io/basic_ios/operator!"/>
    <keyword type="function" name="std::istream::operator bool" link="cpp/io/basic_ios/operator_bool"/>
    <keyword type="function" name="std::istream::rdstate" link="cpp/io/basic_ios/rdstate"/>
    <keyword type="function" name="std::istream::setstate" link="cpp/io/basic_ios/setstate"/>
    <keyword type="function" name="std::istream::clear" link="cpp/io/basic_ios/clear"/>
    <keyword type="function" name="std::istream::copyfmt" link="cpp/io/basic_ios/copyfmt"/>
    <keyword type="function" name="std::istream::fill" link="cpp/io/basic_ios/fill"/>
    <keyword type="function" name="std::istream::exceptions" link="cpp/io/basic_ios/exceptions"/>
    <keyword type="function" name="std::istream::imbue" link="cpp/io/basic_ios/imbue"/>
    <keyword type="function" name="std::istream::rdbuf" link="cpp/io/basic_ios/rdbuf"/>
    <keyword type="function" name="std::istream::tie" link="cpp/io/basic_ios/tie"/>
    <keyword type="function" name="std::istream::narrow" link="cpp/io/basic_ios/narrow"/>
    <keyword type="function" name="std::istream::widen" link="cpp/io/basic_ios/widen"/>
    <keyword type="function" name="std::istream::init" link="cpp/io/basic_ios/init"/>
    <keyword type="function" name="std::istream::move" link="cpp/io/basic_ios/move"/>
    <keyword type="function" name="std::istream::swap" link="cpp/io/basic_ios/swap"/>
    <keyword type="function" name="std::istream::set_rdbuf" link="cpp/io/basic_ios/set_rdbuf"/>
    <keyword type="function" name="std::istream::flags" link="cpp/io/ios_base/flags"/>
    <keyword type="function" name="std::istream::setf" link="cpp/io/ios_base/setf"/>
    <keyword type="function" name="std::istream::unsetf" link="cpp/io/ios_base/unsetf"/>
    <keyword type="function" name="std::istream::precision" link="cpp/io/ios_base/precision"/>
    <keyword type="function" name="std::istream::width" link="cpp/io/ios_base/width"/>
    <keyword type="function" name="std::istream::imbue" link="cpp/io/ios_base/imbue"/>
    <keyword type="function" name="std::istream::getloc" link="cpp/io/ios_base/getloc"/>
    <keyword type="function" name="std::istream::xalloc" link="cpp/io/ios_base/xalloc"/>
    <keyword type="function" name="std::istream::iword" link="cpp/io/ios_base/iword"/>
    <keyword type="function" name="std::istream::pword" link="cpp/io/ios_base/pword"/>
    <keyword type="function" name="std::istream::register_callback" link="cpp/io/ios_base/register_callback"/>
    <keyword type="function" name="std::istream::sync_with_stdio" link="cpp/io/ios_base/sync_with_stdio"/>
    <keyword type="class" name="std::istream::failure" link="cpp/io/ios_base/failure"/>
    <keyword type="function" name="std::istream::failure::what" link="cpp/error/exception/what"/>
    <keyword type="function" name="std::istream::failure::failure" link="cpp/io/ios_base/failure"/>
    <keyword type="enum" name="std::istream::openmode" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::istream::app" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::istream::binary" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::istream::in" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::istream::out" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::istream::trunc" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::istream::ate" link="cpp/io/ios_base/openmode"/>
    <keyword type="enum" name="std::istream::fmtflags" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::istream::dec" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::istream::oct" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::istream::hex" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::istream::basefield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::istream::left" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::istream::right" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::istream::internal" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::istream::adjustfield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::istream::scientific" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::istream::fixed" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::istream::floatfield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::istream::boolalpha" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::istream::showbase" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::istream::showpoint" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::istream::showpos" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::istream::skipws" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::istream::unitbuf" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::istream::uppercase" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="enum" name="std::istream::iostate" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::istream::goodbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::istream::badbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::istream::failbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::istream::eofbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="enum" name="std::istream::seekdir" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::istream::beg" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::istream::cur" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::istream::end" link="cpp/io/ios_base/seekdir"/>
    <keyword type="enum" name="std::istream::event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::istream::erase_event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::istream::imbue_event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::istream::copyfmt_event" link="cpp/io/ios_base/event"/>
    <keyword type="typedef" name="std::istream::event_callback" link="cpp/io/ios_base/event_callback"/>
    <keyword type="class" name="std::istream::Init" link="cpp/io/ios_base/Init"/>
    <keyword type="function" name="std::istream::istream" link="cpp/io/basic_istream/basic_istream"/>
    <keyword type="function" name="std::istream::~istream" link="cpp/io/basic_istream/~basic_istream"/>
    <keyword type="function" name="std::istream::operator&gt;&gt;" link="cpp/io/basic_istream/operator_gtgt"/>
    <keyword type="function" name="std::istream::get" link="cpp/io/basic_istream/get"/>
    <keyword type="function" name="std::istream::peek" link="cpp/io/basic_istream/peek"/>
    <keyword type="function" name="std::istream::unget" link="cpp/io/basic_istream/unget"/>
    <keyword type="function" name="std::istream::putback" link="cpp/io/basic_istream/putback"/>
    <keyword type="function" name="std::istream::getline" link="cpp/io/basic_istream/getline"/>
    <keyword type="function" name="std::istream::ignore" link="cpp/io/basic_istream/ignore"/>
    <keyword type="function" name="std::istream::read" link="cpp/io/basic_istream/read"/>
    <keyword type="function" name="std::istream::readsome" link="cpp/io/basic_istream/readsome"/>
    <keyword type="function" name="std::istream::gcount" link="cpp/io/basic_istream/gcount"/>
    <keyword type="function" name="std::istream::tellg" link="cpp/io/basic_istream/tellg"/>
    <keyword type="function" name="std::istream::seekg" link="cpp/io/basic_istream/seekg"/>
    <keyword type="function" name="std::istream::sync" link="cpp/io/basic_istream/sync"/>
    <keyword type="class" name="std::istream::sentry" link="cpp/io/basic_istream/sentry"/>
    <keyword type="function" name="std::istream::sentry::sentry" link="cpp/io/basic_istream/sentry"/>
    <keyword type="function" name="std::istream::sentry::~sentry" link="cpp/io/basic_istream/sentry"/>
    <keyword type="function" name="std::istream::sentry::operator bool" link="cpp/io/basic_istream/sentry"/>
    <keyword type="function" name="operator&gt;&gt;(std::istream)" link="cpp/io/basic_istream/operator_gtgt2"/>
    <keyword type="typedef" name="std::ostream" link="cpp/io/basic_ostream"/>
    <keyword type="function" name="std::ostream::good" link="cpp/io/basic_ios/good"/>
    <keyword type="function" name="std::ostream::eof" link="cpp/io/basic_ios/eof"/>
    <keyword type="function" name="std::ostream::fail" link="cpp/io/basic_ios/fail"/>
    <keyword type="function" name="std::ostream::bad" link="cpp/io/basic_ios/bad"/>
    <keyword type="function" name="std::ostream::operator!" link="cpp/io/basic_ios/operator!"/>
    <keyword type="function" name="std::ostream::operator bool" link="cpp/io/basic_ios/operator_bool"/>
    <keyword type="function" name="std::ostream::rdstate" link="cpp/io/basic_ios/rdstate"/>
    <keyword type="function" name="std::ostream::setstate" link="cpp/io/basic_ios/setstate"/>
    <keyword type="function" name="std::ostream::clear" link="cpp/io/basic_ios/clear"/>
    <keyword type="function" name="std::ostream::copyfmt" link="cpp/io/basic_ios/copyfmt"/>
    <keyword type="function" name="std::ostream::fill" link="cpp/io/basic_ios/fill"/>
    <keyword type="function" name="std::ostream::exceptions" link="cpp/io/basic_ios/exceptions"/>
    <keyword type="function" name="std::ostream::imbue" link="cpp/io/basic_ios/imbue"/>
    <keyword type="function" name="std::ostream::rdbuf" link="cpp/io/basic_ios/rdbuf"/>
    <keyword type="function" name="std::ostream::tie" link="cpp/io/basic_ios/tie"/>
    <keyword type="function" name="std::ostream::narrow" link="cpp/io/basic_ios/narrow"/>
    <keyword type="function" name="std::ostream::widen" link="cpp/io/basic_ios/widen"/>
    <keyword type="function" name="std::ostream::init" link="cpp/io/basic_ios/init"/>
    <keyword type="function" name="std::ostream::move" link="cpp/io/basic_ios/move"/>
    <keyword type="function" name="std::ostream::swap" link="cpp/io/basic_ios/swap"/>
    <keyword type="function" name="std::ostream::set_rdbuf" link="cpp/io/basic_ios/set_rdbuf"/>
    <keyword type="function" name="std::ostream::flags" link="cpp/io/ios_base/flags"/>
    <keyword type="function" name="std::ostream::setf" link="cpp/io/ios_base/setf"/>
    <keyword type="function" name="std::ostream::unsetf" link="cpp/io/ios_base/unsetf"/>
    <keyword type="function" name="std::ostream::precision" link="cpp/io/ios_base/precision"/>
    <keyword type="function" name="std::ostream::width" link="cpp/io/ios_base/width"/>
    <keyword type="function" name="std::ostream::imbue" link="cpp/io/ios_base/imbue"/>
    <keyword type="function" name="std::ostream::getloc" link="cpp/io/ios_base/getloc"/>
    <keyword type="function" name="std::ostream::xalloc" link="cpp/io/ios_base/xalloc"/>
    <keyword type="function" name="std::ostream::iword" link="cpp/io/ios_base/iword"/>
    <keyword type="function" name="std::ostream::pword" link="cpp/io/ios_base/pword"/>
    <keyword type="function" name="std::ostream::register_callback" link="cpp/io/ios_base/register_callback"/>
    <keyword type="function" name="std::ostream::sync_with_stdio" link="cpp/io/ios_base/sync_with_stdio"/>
    <keyword type="class" name="std::ostream::failure" link="cpp/io/ios_base/failure"/>
    <keyword type="function" name="std::ostream::failure::what" link="cpp/error/exception/what"/>
    <keyword type="function" name="std::ostream::failure::failure" link="cpp/io/ios_base/failure"/>
    <keyword type="enum" name="std::ostream::openmode" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::ostream::app" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::ostream::binary" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::ostream::in" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::ostream::out" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::ostream::trunc" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::ostream::ate" link="cpp/io/ios_base/openmode"/>
    <keyword type="enum" name="std::ostream::fmtflags" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ostream::dec" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ostream::oct" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ostream::hex" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ostream::basefield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ostream::left" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ostream::right" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ostream::internal" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ostream::adjustfield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ostream::scientific" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ostream::fixed" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ostream::floatfield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ostream::boolalpha" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ostream::showbase" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ostream::showpoint" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ostream::showpos" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ostream::skipws" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ostream::unitbuf" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ostream::uppercase" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="enum" name="std::ostream::iostate" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::ostream::goodbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::ostream::badbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::ostream::failbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::ostream::eofbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="enum" name="std::ostream::seekdir" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::ostream::beg" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::ostream::cur" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::ostream::end" link="cpp/io/ios_base/seekdir"/>
    <keyword type="enum" name="std::ostream::event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::ostream::erase_event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::ostream::imbue_event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::ostream::copyfmt_event" link="cpp/io/ios_base/event"/>
    <keyword type="typedef" name="std::ostream::event_callback" link="cpp/io/ios_base/event_callback"/>
    <keyword type="class" name="std::ostream::Init" link="cpp/io/ios_base/Init"/>
    <keyword type="function" name="std::ostream::ostream" link="cpp/io/basic_ostream/basic_ostream"/>
    <keyword type="function" name="std::ostream::~ostream" link="cpp/io/basic_ostream/~basic_ostream"/>
    <keyword type="function" name="std::ostream::operator&lt;&lt;" link="cpp/io/basic_ostream/operator_ltlt"/>
    <keyword type="function" name="std::ostream::put" link="cpp/io/basic_ostream/put"/>
    <keyword type="function" name="std::ostream::write" link="cpp/io/basic_ostream/write"/>
    <keyword type="function" name="std::ostream::tellp" link="cpp/io/basic_ostream/tellp"/>
    <keyword type="function" name="std::ostream::seekp" link="cpp/io/basic_ostream/seekp"/>
    <keyword type="function" name="std::ostream::flush" link="cpp/io/basic_ostream/flush"/>
    <keyword type="class" name="std::ostream::sentry" link="cpp/io/basic_ostream/sentry"/>
    <keyword type="function" name="std::ostream::sentry::sentry" link="cpp/io/basic_ostream/sentry"/>
    <keyword type="function" name="std::ostream::sentry::~sentry" link="cpp/io/basic_ostream/sentry"/>
    <keyword type="function" name="std::ostream::sentry::operator bool" link="cpp/io/basic_ostream/sentry"/>
    <keyword type="function" name="operator&lt;&lt;(std::ostream)" link="cpp/io/basic_ostream/operator_ltlt2"/>
    <keyword type="typedef" name="std::iostream" link="cpp/io/basic_iostream"/>
    <keyword type="function" name="std::iostream::operator&gt;&gt;" link="cpp/io/basic_istream/operator_gtgt"/>
    <keyword type="function" name="std::iostream::get" link="cpp/io/basic_istream/get"/>
    <keyword type="function" name="std::iostream::peek" link="cpp/io/basic_istream/peek"/>
    <keyword type="function" name="std::iostream::unget" link="cpp/io/basic_istream/unget"/>
    <keyword type="function" name="std::iostream::putback" link="cpp/io/basic_istream/putback"/>
    <keyword type="function" name="std::iostream::getline" link="cpp/io/basic_istream/getline"/>
    <keyword type="function" name="std::iostream::ignore" link="cpp/io/basic_istream/ignore"/>
    <keyword type="function" name="std::iostream::read" link="cpp/io/basic_istream/read"/>
    <keyword type="function" name="std::iostream::readsome" link="cpp/io/basic_istream/readsome"/>
    <keyword type="function" name="std::iostream::gcount" link="cpp/io/basic_istream/gcount"/>
    <keyword type="function" name="std::iostream::tellg" link="cpp/io/basic_istream/tellg"/>
    <keyword type="function" name="std::iostream::seekg" link="cpp/io/basic_istream/seekg"/>
    <keyword type="function" name="std::iostream::sync" link="cpp/io/basic_istream/sync"/>
    <keyword type="class" name="std::iostream::sentry" link="cpp/io/basic_istream/sentry"/>
    <keyword type="function" name="std::iostream::sentry::sentry" link="cpp/io/basic_istream/sentry"/>
    <keyword type="function" name="std::iostream::sentry::~sentry" link="cpp/io/basic_istream/sentry"/>
    <keyword type="function" name="std::iostream::sentry::operator bool" link="cpp/io/basic_istream/sentry"/>
    <keyword type="function" name="std::iostream::operator&lt;&lt;" link="cpp/io/basic_ostream/operator_ltlt"/>
    <keyword type="function" name="std::iostream::put" link="cpp/io/basic_ostream/put"/>
    <keyword type="function" name="std::iostream::write" link="cpp/io/basic_ostream/write"/>
    <keyword type="function" name="std::iostream::tellp" link="cpp/io/basic_ostream/tellp"/>
    <keyword type="function" name="std::iostream::seekp" link="cpp/io/basic_ostream/seekp"/>
    <keyword type="function" name="std::iostream::flush" link="cpp/io/basic_ostream/flush"/>
    <keyword type="class" name="std::iostream::sentry" link="cpp/io/basic_ostream/sentry"/>
    <keyword type="function" name="std::iostream::sentry::sentry" link="cpp/io/basic_ostream/sentry"/>
    <keyword type="function" name="std::iostream::sentry::~sentry" link="cpp/io/basic_ostream/sentry"/>
    <keyword type="function" name="std::iostream::sentry::operator bool" link="cpp/io/basic_ostream/sentry"/>
    <keyword type="function" name="std::iostream::good" link="cpp/io/basic_ios/good"/>
    <keyword type="function" name="std::iostream::eof" link="cpp/io/basic_ios/eof"/>
    <keyword type="function" name="std::iostream::fail" link="cpp/io/basic_ios/fail"/>
    <keyword type="function" name="std::iostream::bad" link="cpp/io/basic_ios/bad"/>
    <keyword type="function" name="std::iostream::operator!" link="cpp/io/basic_ios/operator!"/>
    <keyword type="function" name="std::iostream::operator bool" link="cpp/io/basic_ios/operator_bool"/>
    <keyword type="function" name="std::iostream::rdstate" link="cpp/io/basic_ios/rdstate"/>
    <keyword type="function" name="std::iostream::setstate" link="cpp/io/basic_ios/setstate"/>
    <keyword type="function" name="std::iostream::clear" link="cpp/io/basic_ios/clear"/>
    <keyword type="function" name="std::iostream::copyfmt" link="cpp/io/basic_ios/copyfmt"/>
    <keyword type="function" name="std::iostream::fill" link="cpp/io/basic_ios/fill"/>
    <keyword type="function" name="std::iostream::exceptions" link="cpp/io/basic_ios/exceptions"/>
    <keyword type="function" name="std::iostream::imbue" link="cpp/io/basic_ios/imbue"/>
    <keyword type="function" name="std::iostream::rdbuf" link="cpp/io/basic_ios/rdbuf"/>
    <keyword type="function" name="std::iostream::tie" link="cpp/io/basic_ios/tie"/>
    <keyword type="function" name="std::iostream::narrow" link="cpp/io/basic_ios/narrow"/>
    <keyword type="function" name="std::iostream::widen" link="cpp/io/basic_ios/widen"/>
    <keyword type="function" name="std::iostream::init" link="cpp/io/basic_ios/init"/>
    <keyword type="function" name="std::iostream::move" link="cpp/io/basic_ios/move"/>
    <keyword type="function" name="std::iostream::swap" link="cpp/io/basic_ios/swap"/>
    <keyword type="function" name="std::iostream::set_rdbuf" link="cpp/io/basic_ios/set_rdbuf"/>
    <keyword type="function" name="std::iostream::flags" link="cpp/io/ios_base/flags"/>
    <keyword type="function" name="std::iostream::setf" link="cpp/io/ios_base/setf"/>
    <keyword type="function" name="std::iostream::unsetf" link="cpp/io/ios_base/unsetf"/>
    <keyword type="function" name="std::iostream::precision" link="cpp/io/ios_base/precision"/>
    <keyword type="function" name="std::iostream::width" link="cpp/io/ios_base/width"/>
    <keyword type="function" name="std::iostream::imbue" link="cpp/io/ios_base/imbue"/>
    <keyword type="function" name="std::iostream::getloc" link="cpp/io/ios_base/getloc"/>
    <keyword type="function" name="std::iostream::xalloc" link="cpp/io/ios_base/xalloc"/>
    <keyword type="function" name="std::iostream::iword" link="cpp/io/ios_base/iword"/>
    <keyword type="function" name="std::iostream::pword" link="cpp/io/ios_base/pword"/>
    <keyword type="function" name="std::iostream::register_callback" link="cpp/io/ios_base/register_callback"/>
    <keyword type="function" name="std::iostream::sync_with_stdio" link="cpp/io/ios_base/sync_with_stdio"/>
    <keyword type="class" name="std::iostream::failure" link="cpp/io/ios_base/failure"/>
    <keyword type="function" name="std::iostream::failure::what" link="cpp/error/exception/what"/>
    <keyword type="function" name="std::iostream::failure::failure" link="cpp/io/ios_base/failure"/>
    <keyword type="enum" name="std::iostream::openmode" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::iostream::app" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::iostream::binary" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::iostream::in" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::iostream::out" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::iostream::trunc" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::iostream::ate" link="cpp/io/ios_base/openmode"/>
    <keyword type="enum" name="std::iostream::fmtflags" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::iostream::dec" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::iostream::oct" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::iostream::hex" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::iostream::basefield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::iostream::left" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::iostream::right" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::iostream::internal" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::iostream::adjustfield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::iostream::scientific" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::iostream::fixed" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::iostream::floatfield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::iostream::boolalpha" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::iostream::showbase" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::iostream::showpoint" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::iostream::showpos" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::iostream::skipws" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::iostream::unitbuf" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::iostream::uppercase" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="enum" name="std::iostream::iostate" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::iostream::goodbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::iostream::badbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::iostream::failbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::iostream::eofbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="enum" name="std::iostream::seekdir" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::iostream::beg" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::iostream::cur" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::iostream::end" link="cpp/io/ios_base/seekdir"/>
    <keyword type="enum" name="std::iostream::event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::iostream::erase_event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::iostream::imbue_event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::iostream::copyfmt_event" link="cpp/io/ios_base/event"/>
    <keyword type="typedef" name="std::iostream::event_callback" link="cpp/io/ios_base/event_callback"/>
    <keyword type="class" name="std::iostream::Init" link="cpp/io/ios_base/Init"/>
    <keyword type="function" name="std::iostream::iostream" link="cpp/io/basic_iostream/basic_iostream"/>
    <keyword type="function" name="std::iostream::~iostream" link="cpp/io/basic_iostream/~basic_iostream"/>
    <keyword type="typedef" name="std::ifstream" link="cpp/io/basic_ifstream"/>
    <keyword type="function" name="std::ifstream::operator&gt;&gt;" link="cpp/io/basic_istream/operator_gtgt"/>
    <keyword type="function" name="std::ifstream::get" link="cpp/io/basic_istream/get"/>
    <keyword type="function" name="std::ifstream::peek" link="cpp/io/basic_istream/peek"/>
    <keyword type="function" name="std::ifstream::unget" link="cpp/io/basic_istream/unget"/>
    <keyword type="function" name="std::ifstream::putback" link="cpp/io/basic_istream/putback"/>
    <keyword type="function" name="std::ifstream::getline" link="cpp/io/basic_istream/getline"/>
    <keyword type="function" name="std::ifstream::ignore" link="cpp/io/basic_istream/ignore"/>
    <keyword type="function" name="std::ifstream::read" link="cpp/io/basic_istream/read"/>
    <keyword type="function" name="std::ifstream::readsome" link="cpp/io/basic_istream/readsome"/>
    <keyword type="function" name="std::ifstream::gcount" link="cpp/io/basic_istream/gcount"/>
    <keyword type="function" name="std::ifstream::tellg" link="cpp/io/basic_istream/tellg"/>
    <keyword type="function" name="std::ifstream::seekg" link="cpp/io/basic_istream/seekg"/>
    <keyword type="function" name="std::ifstream::sync" link="cpp/io/basic_istream/sync"/>
    <keyword type="class" name="std::ifstream::sentry" link="cpp/io/basic_istream/sentry"/>
    <keyword type="function" name="std::ifstream::sentry::sentry" link="cpp/io/basic_istream/sentry"/>
    <keyword type="function" name="std::ifstream::sentry::~sentry" link="cpp/io/basic_istream/sentry"/>
    <keyword type="function" name="std::ifstream::sentry::operator bool" link="cpp/io/basic_istream/sentry"/>
    <keyword type="function" name="std::ifstream::good" link="cpp/io/basic_ios/good"/>
    <keyword type="function" name="std::ifstream::eof" link="cpp/io/basic_ios/eof"/>
    <keyword type="function" name="std::ifstream::fail" link="cpp/io/basic_ios/fail"/>
    <keyword type="function" name="std::ifstream::bad" link="cpp/io/basic_ios/bad"/>
    <keyword type="function" name="std::ifstream::operator!" link="cpp/io/basic_ios/operator!"/>
    <keyword type="function" name="std::ifstream::operator bool" link="cpp/io/basic_ios/operator_bool"/>
    <keyword type="function" name="std::ifstream::rdstate" link="cpp/io/basic_ios/rdstate"/>
    <keyword type="function" name="std::ifstream::setstate" link="cpp/io/basic_ios/setstate"/>
    <keyword type="function" name="std::ifstream::clear" link="cpp/io/basic_ios/clear"/>
    <keyword type="function" name="std::ifstream::copyfmt" link="cpp/io/basic_ios/copyfmt"/>
    <keyword type="function" name="std::ifstream::fill" link="cpp/io/basic_ios/fill"/>
    <keyword type="function" name="std::ifstream::exceptions" link="cpp/io/basic_ios/exceptions"/>
    <keyword type="function" name="std::ifstream::imbue" link="cpp/io/basic_ios/imbue"/>
    <keyword type="function" name="std::ifstream::rdbuf" link="cpp/io/basic_ios/rdbuf"/>
    <keyword type="function" name="std::ifstream::tie" link="cpp/io/basic_ios/tie"/>
    <keyword type="function" name="std::ifstream::narrow" link="cpp/io/basic_ios/narrow"/>
    <keyword type="function" name="std::ifstream::widen" link="cpp/io/basic_ios/widen"/>
    <keyword type="function" name="std::ifstream::init" link="cpp/io/basic_ios/init"/>
    <keyword type="function" name="std::ifstream::move" link="cpp/io/basic_ios/move"/>
    <keyword type="function" name="std::ifstream::swap" link="cpp/io/basic_ios/swap"/>
    <keyword type="function" name="std::ifstream::set_rdbuf" link="cpp/io/basic_ios/set_rdbuf"/>
    <keyword type="function" name="std::ifstream::flags" link="cpp/io/ios_base/flags"/>
    <keyword type="function" name="std::ifstream::setf" link="cpp/io/ios_base/setf"/>
    <keyword type="function" name="std::ifstream::unsetf" link="cpp/io/ios_base/unsetf"/>
    <keyword type="function" name="std::ifstream::precision" link="cpp/io/ios_base/precision"/>
    <keyword type="function" name="std::ifstream::width" link="cpp/io/ios_base/width"/>
    <keyword type="function" name="std::ifstream::imbue" link="cpp/io/ios_base/imbue"/>
    <keyword type="function" name="std::ifstream::getloc" link="cpp/io/ios_base/getloc"/>
    <keyword type="function" name="std::ifstream::xalloc" link="cpp/io/ios_base/xalloc"/>
    <keyword type="function" name="std::ifstream::iword" link="cpp/io/ios_base/iword"/>
    <keyword type="function" name="std::ifstream::pword" link="cpp/io/ios_base/pword"/>
    <keyword type="function" name="std::ifstream::register_callback" link="cpp/io/ios_base/register_callback"/>
    <keyword type="function" name="std::ifstream::sync_with_stdio" link="cpp/io/ios_base/sync_with_stdio"/>
    <keyword type="class" name="std::ifstream::failure" link="cpp/io/ios_base/failure"/>
    <keyword type="function" name="std::ifstream::failure::what" link="cpp/error/exception/what"/>
    <keyword type="function" name="std::ifstream::failure::failure" link="cpp/io/ios_base/failure"/>
    <keyword type="enum" name="std::ifstream::openmode" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::ifstream::app" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::ifstream::binary" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::ifstream::in" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::ifstream::out" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::ifstream::trunc" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::ifstream::ate" link="cpp/io/ios_base/openmode"/>
    <keyword type="enum" name="std::ifstream::fmtflags" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ifstream::dec" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ifstream::oct" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ifstream::hex" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ifstream::basefield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ifstream::left" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ifstream::right" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ifstream::internal" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ifstream::adjustfield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ifstream::scientific" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ifstream::fixed" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ifstream::floatfield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ifstream::boolalpha" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ifstream::showbase" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ifstream::showpoint" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ifstream::showpos" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ifstream::skipws" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ifstream::unitbuf" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ifstream::uppercase" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="enum" name="std::ifstream::iostate" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::ifstream::goodbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::ifstream::badbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::ifstream::failbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::ifstream::eofbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="enum" name="std::ifstream::seekdir" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::ifstream::beg" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::ifstream::cur" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::ifstream::end" link="cpp/io/ios_base/seekdir"/>
    <keyword type="enum" name="std::ifstream::event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::ifstream::erase_event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::ifstream::imbue_event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::ifstream::copyfmt_event" link="cpp/io/ios_base/event"/>
    <keyword type="typedef" name="std::ifstream::event_callback" link="cpp/io/ios_base/event_callback"/>
    <keyword type="class" name="std::ifstream::Init" link="cpp/io/ios_base/Init"/>
    <keyword type="function" name="std::ifstream::ifstream" link="cpp/io/basic_ifstream/basic_ifstream"/>
    <keyword type="function" name="std::ifstream::operator=" link="cpp/io/basic_ifstream/operator="/>
    <keyword type="function" name="std::ifstream::swap" link="cpp/io/basic_ifstream/swap"/>
    <keyword type="function" name="std::ifstream::rdbuf" link="cpp/io/basic_ifstream/rdbuf"/>
    <keyword type="function" name="std::ifstream::is_open" link="cpp/io/basic_ifstream/is_open"/>
    <keyword type="function" name="std::ifstream::open" link="cpp/io/basic_ifstream/open"/>
    <keyword type="function" name="std::ifstream::close" link="cpp/io/basic_ifstream/close"/>
    <keyword type="function" name="std::swap(std::ifstream)" link="cpp/io/basic_ifstream/swap2"/>
    <keyword type="typedef" name="std::ofstream" link="cpp/io/basic_ofstream"/>
    <keyword type="function" name="std::ofstream::operator&lt;&lt;" link="cpp/io/basic_ostream/operator_ltlt"/>
    <keyword type="function" name="std::ofstream::put" link="cpp/io/basic_ostream/put"/>
    <keyword type="function" name="std::ofstream::write" link="cpp/io/basic_ostream/write"/>
    <keyword type="function" name="std::ofstream::tellp" link="cpp/io/basic_ostream/tellp"/>
    <keyword type="function" name="std::ofstream::seekp" link="cpp/io/basic_ostream/seekp"/>
    <keyword type="function" name="std::ofstream::flush" link="cpp/io/basic_ostream/flush"/>
    <keyword type="class" name="std::ofstream::sentry" link="cpp/io/basic_ostream/sentry"/>
    <keyword type="function" name="std::ofstream::sentry::sentry" link="cpp/io/basic_ostream/sentry"/>
    <keyword type="function" name="std::ofstream::sentry::~sentry" link="cpp/io/basic_ostream/sentry"/>
    <keyword type="function" name="std::ofstream::sentry::operator bool" link="cpp/io/basic_ostream/sentry"/>
    <keyword type="function" name="std::ofstream::good" link="cpp/io/basic_ios/good"/>
    <keyword type="function" name="std::ofstream::eof" link="cpp/io/basic_ios/eof"/>
    <keyword type="function" name="std::ofstream::fail" link="cpp/io/basic_ios/fail"/>
    <keyword type="function" name="std::ofstream::bad" link="cpp/io/basic_ios/bad"/>
    <keyword type="function" name="std::ofstream::operator!" link="cpp/io/basic_ios/operator!"/>
    <keyword type="function" name="std::ofstream::operator bool" link="cpp/io/basic_ios/operator_bool"/>
    <keyword type="function" name="std::ofstream::rdstate" link="cpp/io/basic_ios/rdstate"/>
    <keyword type="function" name="std::ofstream::setstate" link="cpp/io/basic_ios/setstate"/>
    <keyword type="function" name="std::ofstream::clear" link="cpp/io/basic_ios/clear"/>
    <keyword type="function" name="std::ofstream::copyfmt" link="cpp/io/basic_ios/copyfmt"/>
    <keyword type="function" name="std::ofstream::fill" link="cpp/io/basic_ios/fill"/>
    <keyword type="function" name="std::ofstream::exceptions" link="cpp/io/basic_ios/exceptions"/>
    <keyword type="function" name="std::ofstream::imbue" link="cpp/io/basic_ios/imbue"/>
    <keyword type="function" name="std::ofstream::rdbuf" link="cpp/io/basic_ios/rdbuf"/>
    <keyword type="function" name="std::ofstream::tie" link="cpp/io/basic_ios/tie"/>
    <keyword type="function" name="std::ofstream::narrow" link="cpp/io/basic_ios/narrow"/>
    <keyword type="function" name="std::ofstream::widen" link="cpp/io/basic_ios/widen"/>
    <keyword type="function" name="std::ofstream::init" link="cpp/io/basic_ios/init"/>
    <keyword type="function" name="std::ofstream::move" link="cpp/io/basic_ios/move"/>
    <keyword type="function" name="std::ofstream::swap" link="cpp/io/basic_ios/swap"/>
    <keyword type="function" name="std::ofstream::set_rdbuf" link="cpp/io/basic_ios/set_rdbuf"/>
    <keyword type="function" name="std::ofstream::flags" link="cpp/io/ios_base/flags"/>
    <keyword type="function" name="std::ofstream::setf" link="cpp/io/ios_base/setf"/>
    <keyword type="function" name="std::ofstream::unsetf" link="cpp/io/ios_base/unsetf"/>
    <keyword type="function" name="std::ofstream::precision" link="cpp/io/ios_base/precision"/>
    <keyword type="function" name="std::ofstream::width" link="cpp/io/ios_base/width"/>
    <keyword type="function" name="std::ofstream::imbue" link="cpp/io/ios_base/imbue"/>
    <keyword type="function" name="std::ofstream::getloc" link="cpp/io/ios_base/getloc"/>
    <keyword type="function" name="std::ofstream::xalloc" link="cpp/io/ios_base/xalloc"/>
    <keyword type="function" name="std::ofstream::iword" link="cpp/io/ios_base/iword"/>
    <keyword type="function" name="std::ofstream::pword" link="cpp/io/ios_base/pword"/>
    <keyword type="function" name="std::ofstream::register_callback" link="cpp/io/ios_base/register_callback"/>
    <keyword type="function" name="std::ofstream::sync_with_stdio" link="cpp/io/ios_base/sync_with_stdio"/>
    <keyword type="class" name="std::ofstream::failure" link="cpp/io/ios_base/failure"/>
    <keyword type="function" name="std::ofstream::failure::what" link="cpp/error/exception/what"/>
    <keyword type="function" name="std::ofstream::failure::failure" link="cpp/io/ios_base/failure"/>
    <keyword type="enum" name="std::ofstream::openmode" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::ofstream::app" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::ofstream::binary" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::ofstream::in" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::ofstream::out" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::ofstream::trunc" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::ofstream::ate" link="cpp/io/ios_base/openmode"/>
    <keyword type="enum" name="std::ofstream::fmtflags" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ofstream::dec" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ofstream::oct" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ofstream::hex" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ofstream::basefield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ofstream::left" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ofstream::right" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ofstream::internal" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ofstream::adjustfield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ofstream::scientific" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ofstream::fixed" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ofstream::floatfield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ofstream::boolalpha" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ofstream::showbase" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ofstream::showpoint" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ofstream::showpos" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ofstream::skipws" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ofstream::unitbuf" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ofstream::uppercase" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="enum" name="std::ofstream::iostate" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::ofstream::goodbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::ofstream::badbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::ofstream::failbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::ofstream::eofbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="enum" name="std::ofstream::seekdir" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::ofstream::beg" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::ofstream::cur" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::ofstream::end" link="cpp/io/ios_base/seekdir"/>
    <keyword type="enum" name="std::ofstream::event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::ofstream::erase_event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::ofstream::imbue_event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::ofstream::copyfmt_event" link="cpp/io/ios_base/event"/>
    <keyword type="typedef" name="std::ofstream::event_callback" link="cpp/io/ios_base/event_callback"/>
    <keyword type="class" name="std::ofstream::Init" link="cpp/io/ios_base/Init"/>
    <keyword type="function" name="std::ofstream::ofstream" link="cpp/io/basic_ofstream/basic_ofstream"/>
    <keyword type="function" name="std::ofstream::operator=" link="cpp/io/basic_ofstream/operator="/>
    <keyword type="function" name="std::ofstream::swap" link="cpp/io/basic_ofstream/swap"/>
    <keyword type="function" name="std::ofstream::rdbuf" link="cpp/io/basic_ofstream/rdbuf"/>
    <keyword type="function" name="std::ofstream::is_open" link="cpp/io/basic_ofstream/is_open"/>
    <keyword type="function" name="std::ofstream::open" link="cpp/io/basic_ofstream/open"/>
    <keyword type="function" name="std::ofstream::close" link="cpp/io/basic_ofstream/close"/>
    <keyword type="function" name="std::swap(std::ofstream)" link="cpp/io/basic_ofstream/swap2"/>
    <keyword type="typedef" name="std::fstream" link="cpp/io/basic_fstream"/>
    <keyword type="function" name="std::fstream::operator&gt;&gt;" link="cpp/io/basic_istream/operator_gtgt"/>
    <keyword type="function" name="std::fstream::get" link="cpp/io/basic_istream/get"/>
    <keyword type="function" name="std::fstream::peek" link="cpp/io/basic_istream/peek"/>
    <keyword type="function" name="std::fstream::unget" link="cpp/io/basic_istream/unget"/>
    <keyword type="function" name="std::fstream::putback" link="cpp/io/basic_istream/putback"/>
    <keyword type="function" name="std::fstream::getline" link="cpp/io/basic_istream/getline"/>
    <keyword type="function" name="std::fstream::ignore" link="cpp/io/basic_istream/ignore"/>
    <keyword type="function" name="std::fstream::read" link="cpp/io/basic_istream/read"/>
    <keyword type="function" name="std::fstream::readsome" link="cpp/io/basic_istream/readsome"/>
    <keyword type="function" name="std::fstream::gcount" link="cpp/io/basic_istream/gcount"/>
    <keyword type="function" name="std::fstream::tellg" link="cpp/io/basic_istream/tellg"/>
    <keyword type="function" name="std::fstream::seekg" link="cpp/io/basic_istream/seekg"/>
    <keyword type="function" name="std::fstream::sync" link="cpp/io/basic_istream/sync"/>
    <keyword type="class" name="std::fstream::sentry" link="cpp/io/basic_istream/sentry"/>
    <keyword type="function" name="std::fstream::sentry::sentry" link="cpp/io/basic_istream/sentry"/>
    <keyword type="function" name="std::fstream::sentry::~sentry" link="cpp/io/basic_istream/sentry"/>
    <keyword type="function" name="std::fstream::sentry::operator bool" link="cpp/io/basic_istream/sentry"/>
    <keyword type="function" name="std::fstream::operator&lt;&lt;" link="cpp/io/basic_ostream/operator_ltlt"/>
    <keyword type="function" name="std::fstream::put" link="cpp/io/basic_ostream/put"/>
    <keyword type="function" name="std::fstream::write" link="cpp/io/basic_ostream/write"/>
    <keyword type="function" name="std::fstream::tellp" link="cpp/io/basic_ostream/tellp"/>
    <keyword type="function" name="std::fstream::seekp" link="cpp/io/basic_ostream/seekp"/>
    <keyword type="function" name="std::fstream::flush" link="cpp/io/basic_ostream/flush"/>
    <keyword type="class" name="std::fstream::sentry" link="cpp/io/basic_ostream/sentry"/>
    <keyword type="function" name="std::fstream::sentry::sentry" link="cpp/io/basic_ostream/sentry"/>
    <keyword type="function" name="std::fstream::sentry::~sentry" link="cpp/io/basic_ostream/sentry"/>
    <keyword type="function" name="std::fstream::sentry::operator bool" link="cpp/io/basic_ostream/sentry"/>
    <keyword type="function" name="std::fstream::good" link="cpp/io/basic_ios/good"/>
    <keyword type="function" name="std::fstream::eof" link="cpp/io/basic_ios/eof"/>
    <keyword type="function" name="std::fstream::fail" link="cpp/io/basic_ios/fail"/>
    <keyword type="function" name="std::fstream::bad" link="cpp/io/basic_ios/bad"/>
    <keyword type="function" name="std::fstream::operator!" link="cpp/io/basic_ios/operator!"/>
    <keyword type="function" name="std::fstream::operator bool" link="cpp/io/basic_ios/operator_bool"/>
    <keyword type="function" name="std::fstream::rdstate" link="cpp/io/basic_ios/rdstate"/>
    <keyword type="function" name="std::fstream::setstate" link="cpp/io/basic_ios/setstate"/>
    <keyword type="function" name="std::fstream::clear" link="cpp/io/basic_ios/clear"/>
    <keyword type="function" name="std::fstream::copyfmt" link="cpp/io/basic_ios/copyfmt"/>
    <keyword type="function" name="std::fstream::fill" link="cpp/io/basic_ios/fill"/>
    <keyword type="function" name="std::fstream::exceptions" link="cpp/io/basic_ios/exceptions"/>
    <keyword type="function" name="std::fstream::imbue" link="cpp/io/basic_ios/imbue"/>
    <keyword type="function" name="std::fstream::rdbuf" link="cpp/io/basic_ios/rdbuf"/>
    <keyword type="function" name="std::fstream::tie" link="cpp/io/basic_ios/tie"/>
    <keyword type="function" name="std::fstream::narrow" link="cpp/io/basic_ios/narrow"/>
    <keyword type="function" name="std::fstream::widen" link="cpp/io/basic_ios/widen"/>
    <keyword type="function" name="std::fstream::init" link="cpp/io/basic_ios/init"/>
    <keyword type="function" name="std::fstream::move" link="cpp/io/basic_ios/move"/>
    <keyword type="function" name="std::fstream::swap" link="cpp/io/basic_ios/swap"/>
    <keyword type="function" name="std::fstream::set_rdbuf" link="cpp/io/basic_ios/set_rdbuf"/>
    <keyword type="function" name="std::fstream::flags" link="cpp/io/ios_base/flags"/>
    <keyword type="function" name="std::fstream::setf" link="cpp/io/ios_base/setf"/>
    <keyword type="function" name="std::fstream::unsetf" link="cpp/io/ios_base/unsetf"/>
    <keyword type="function" name="std::fstream::precision" link="cpp/io/ios_base/precision"/>
    <keyword type="function" name="std::fstream::width" link="cpp/io/ios_base/width"/>
    <keyword type="function" name="std::fstream::imbue" link="cpp/io/ios_base/imbue"/>
    <keyword type="function" name="std::fstream::getloc" link="cpp/io/ios_base/getloc"/>
    <keyword type="function" name="std::fstream::xalloc" link="cpp/io/ios_base/xalloc"/>
    <keyword type="function" name="std::fstream::iword" link="cpp/io/ios_base/iword"/>
    <keyword type="function" name="std::fstream::pword" link="cpp/io/ios_base/pword"/>
    <keyword type="function" name="std::fstream::register_callback" link="cpp/io/ios_base/register_callback"/>
    <keyword type="function" name="std::fstream::sync_with_stdio" link="cpp/io/ios_base/sync_with_stdio"/>
    <keyword type="class" name="std::fstream::failure" link="cpp/io/ios_base/failure"/>
    <keyword type="function" name="std::fstream::failure::what" link="cpp/error/exception/what"/>
    <keyword type="function" name="std::fstream::failure::failure" link="cpp/io/ios_base/failure"/>
    <keyword type="enum" name="std::fstream::openmode" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::fstream::app" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::fstream::binary" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::fstream::in" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::fstream::out" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::fstream::trunc" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::fstream::ate" link="cpp/io/ios_base/openmode"/>
    <keyword type="enum" name="std::fstream::fmtflags" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::fstream::dec" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::fstream::oct" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::fstream::hex" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::fstream::basefield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::fstream::left" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::fstream::right" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::fstream::internal" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::fstream::adjustfield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::fstream::scientific" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::fstream::fixed" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::fstream::floatfield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::fstream::boolalpha" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::fstream::showbase" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::fstream::showpoint" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::fstream::showpos" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::fstream::skipws" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::fstream::unitbuf" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::fstream::uppercase" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="enum" name="std::fstream::iostate" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::fstream::goodbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::fstream::badbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::fstream::failbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::fstream::eofbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="enum" name="std::fstream::seekdir" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::fstream::beg" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::fstream::cur" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::fstream::end" link="cpp/io/ios_base/seekdir"/>
    <keyword type="enum" name="std::fstream::event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::fstream::erase_event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::fstream::imbue_event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::fstream::copyfmt_event" link="cpp/io/ios_base/event"/>
    <keyword type="typedef" name="std::fstream::event_callback" link="cpp/io/ios_base/event_callback"/>
    <keyword type="class" name="std::fstream::Init" link="cpp/io/ios_base/Init"/>
    <keyword type="function" name="std::fstream::fstream" link="cpp/io/basic_fstream/basic_fstream"/>
    <keyword type="function" name="std::fstream::operator=" link="cpp/io/basic_fstream/operator="/>
    <keyword type="function" name="std::fstream::swap" link="cpp/io/basic_fstream/swap"/>
    <keyword type="function" name="std::fstream::rdbuf" link="cpp/io/basic_fstream/rdbuf"/>
    <keyword type="function" name="std::fstream::is_open" link="cpp/io/basic_fstream/is_open"/>
    <keyword type="function" name="std::fstream::open" link="cpp/io/basic_fstream/open"/>
    <keyword type="function" name="std::fstream::close" link="cpp/io/basic_fstream/close"/>
    <keyword type="function" name="std::swap(std::fstream)" link="cpp/io/basic_fstream/swap2"/>
    <keyword type="typedef" name="std::istringstream" link="cpp/io/basic_istringstream"/>
    <keyword type="function" name="std::istringstream::operator&gt;&gt;" link="cpp/io/basic_istream/operator_gtgt"/>
    <keyword type="function" name="std::istringstream::get" link="cpp/io/basic_istream/get"/>
    <keyword type="function" name="std::istringstream::peek" link="cpp/io/basic_istream/peek"/>
    <keyword type="function" name="std::istringstream::unget" link="cpp/io/basic_istream/unget"/>
    <keyword type="function" name="std::istringstream::putback" link="cpp/io/basic_istream/putback"/>
    <keyword type="function" name="std::istringstream::getline" link="cpp/io/basic_istream/getline"/>
    <keyword type="function" name="std::istringstream::ignore" link="cpp/io/basic_istream/ignore"/>
    <keyword type="function" name="std::istringstream::read" link="cpp/io/basic_istream/read"/>
    <keyword type="function" name="std::istringstream::readsome" link="cpp/io/basic_istream/readsome"/>
    <keyword type="function" name="std::istringstream::gcount" link="cpp/io/basic_istream/gcount"/>
    <keyword type="function" name="std::istringstream::tellg" link="cpp/io/basic_istream/tellg"/>
    <keyword type="function" name="std::istringstream::seekg" link="cpp/io/basic_istream/seekg"/>
    <keyword type="function" name="std::istringstream::sync" link="cpp/io/basic_istream/sync"/>
    <keyword type="class" name="std::istringstream::sentry" link="cpp/io/basic_istream/sentry"/>
    <keyword type="function" name="std::istringstream::sentry::sentry" link="cpp/io/basic_istream/sentry"/>
    <keyword type="function" name="std::istringstream::sentry::~sentry" link="cpp/io/basic_istream/sentry"/>
    <keyword type="function" name="std::istringstream::sentry::operator bool" link="cpp/io/basic_istream/sentry"/>
    <keyword type="function" name="std::istringstream::good" link="cpp/io/basic_ios/good"/>
    <keyword type="function" name="std::istringstream::eof" link="cpp/io/basic_ios/eof"/>
    <keyword type="function" name="std::istringstream::fail" link="cpp/io/basic_ios/fail"/>
    <keyword type="function" name="std::istringstream::bad" link="cpp/io/basic_ios/bad"/>
    <keyword type="function" name="std::istringstream::operator!" link="cpp/io/basic_ios/operator!"/>
    <keyword type="function" name="std::istringstream::operator bool" link="cpp/io/basic_ios/operator_bool"/>
    <keyword type="function" name="std::istringstream::rdstate" link="cpp/io/basic_ios/rdstate"/>
    <keyword type="function" name="std::istringstream::setstate" link="cpp/io/basic_ios/setstate"/>
    <keyword type="function" name="std::istringstream::clear" link="cpp/io/basic_ios/clear"/>
    <keyword type="function" name="std::istringstream::copyfmt" link="cpp/io/basic_ios/copyfmt"/>
    <keyword type="function" name="std::istringstream::fill" link="cpp/io/basic_ios/fill"/>
    <keyword type="function" name="std::istringstream::exceptions" link="cpp/io/basic_ios/exceptions"/>
    <keyword type="function" name="std::istringstream::imbue" link="cpp/io/basic_ios/imbue"/>
    <keyword type="function" name="std::istringstream::rdbuf" link="cpp/io/basic_ios/rdbuf"/>
    <keyword type="function" name="std::istringstream::tie" link="cpp/io/basic_ios/tie"/>
    <keyword type="function" name="std::istringstream::narrow" link="cpp/io/basic_ios/narrow"/>
    <keyword type="function" name="std::istringstream::widen" link="cpp/io/basic_ios/widen"/>
    <keyword type="function" name="std::istringstream::init" link="cpp/io/basic_ios/init"/>
    <keyword type="function" name="std::istringstream::move" link="cpp/io/basic_ios/move"/>
    <keyword type="function" name="std::istringstream::swap" link="cpp/io/basic_ios/swap"/>
    <keyword type="function" name="std::istringstream::set_rdbuf" link="cpp/io/basic_ios/set_rdbuf"/>
    <keyword type="function" name="std::istringstream::flags" link="cpp/io/ios_base/flags"/>
    <keyword type="function" name="std::istringstream::setf" link="cpp/io/ios_base/setf"/>
    <keyword type="function" name="std::istringstream::unsetf" link="cpp/io/ios_base/unsetf"/>
    <keyword type="function" name="std::istringstream::precision" link="cpp/io/ios_base/precision"/>
    <keyword type="function" name="std::istringstream::width" link="cpp/io/ios_base/width"/>
    <keyword type="function" name="std::istringstream::imbue" link="cpp/io/ios_base/imbue"/>
    <keyword type="function" name="std::istringstream::getloc" link="cpp/io/ios_base/getloc"/>
    <keyword type="function" name="std::istringstream::xalloc" link="cpp/io/ios_base/xalloc"/>
    <keyword type="function" name="std::istringstream::iword" link="cpp/io/ios_base/iword"/>
    <keyword type="function" name="std::istringstream::pword" link="cpp/io/ios_base/pword"/>
    <keyword type="function" name="std::istringstream::register_callback" link="cpp/io/ios_base/register_callback"/>
    <keyword type="function" name="std::istringstream::sync_with_stdio" link="cpp/io/ios_base/sync_with_stdio"/>
    <keyword type="class" name="std::istringstream::failure" link="cpp/io/ios_base/failure"/>
    <keyword type="function" name="std::istringstream::failure::what" link="cpp/error/exception/what"/>
    <keyword type="function" name="std::istringstream::failure::failure" link="cpp/io/ios_base/failure"/>
    <keyword type="enum" name="std::istringstream::openmode" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::istringstream::app" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::istringstream::binary" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::istringstream::in" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::istringstream::out" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::istringstream::trunc" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::istringstream::ate" link="cpp/io/ios_base/openmode"/>
    <keyword type="enum" name="std::istringstream::fmtflags" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::istringstream::dec" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::istringstream::oct" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::istringstream::hex" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::istringstream::basefield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::istringstream::left" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::istringstream::right" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::istringstream::internal" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::istringstream::adjustfield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::istringstream::scientific" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::istringstream::fixed" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::istringstream::floatfield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::istringstream::boolalpha" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::istringstream::showbase" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::istringstream::showpoint" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::istringstream::showpos" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::istringstream::skipws" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::istringstream::unitbuf" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::istringstream::uppercase" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="enum" name="std::istringstream::iostate" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::istringstream::goodbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::istringstream::badbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::istringstream::failbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::istringstream::eofbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="enum" name="std::istringstream::seekdir" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::istringstream::beg" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::istringstream::cur" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::istringstream::end" link="cpp/io/ios_base/seekdir"/>
    <keyword type="enum" name="std::istringstream::event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::istringstream::erase_event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::istringstream::imbue_event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::istringstream::copyfmt_event" link="cpp/io/ios_base/event"/>
    <keyword type="typedef" name="std::istringstream::event_callback" link="cpp/io/ios_base/event_callback"/>
    <keyword type="class" name="std::istringstream::Init" link="cpp/io/ios_base/Init"/>
    <keyword type="function" name="std::istringstream::istringstream" link="cpp/io/basic_istringstream/basic_istringstream"/>
    <keyword type="function" name="std::istringstream::operator=" link="cpp/io/basic_istringstream/operator="/>
    <keyword type="function" name="std::istringstream::swap" link="cpp/io/basic_istringstream/swap"/>
    <keyword type="function" name="std::istringstream::rdbuf" link="cpp/io/basic_istringstream/rdbuf"/>
    <keyword type="function" name="std::istringstream::str" link="cpp/io/basic_istringstream/str"/>
    <keyword type="function" name="std::swap(std::istringstream)" link="cpp/io/basic_istringstream/swap2"/>
    <keyword type="typedef" name="std::ostringstream" link="cpp/io/basic_ostringstream"/>
    <keyword type="function" name="std::ostringstream::operator&lt;&lt;" link="cpp/io/basic_ostream/operator_ltlt"/>
    <keyword type="function" name="std::ostringstream::put" link="cpp/io/basic_ostream/put"/>
    <keyword type="function" name="std::ostringstream::write" link="cpp/io/basic_ostream/write"/>
    <keyword type="function" name="std::ostringstream::tellp" link="cpp/io/basic_ostream/tellp"/>
    <keyword type="function" name="std::ostringstream::seekp" link="cpp/io/basic_ostream/seekp"/>
    <keyword type="function" name="std::ostringstream::flush" link="cpp/io/basic_ostream/flush"/>
    <keyword type="class" name="std::ostringstream::sentry" link="cpp/io/basic_ostream/sentry"/>
    <keyword type="function" name="std::ostringstream::sentry::sentry" link="cpp/io/basic_ostream/sentry"/>
    <keyword type="function" name="std::ostringstream::sentry::~sentry" link="cpp/io/basic_ostream/sentry"/>
    <keyword type="function" name="std::ostringstream::sentry::operator bool" link="cpp/io/basic_ostream/sentry"/>
    <keyword type="function" name="std::ostringstream::good" link="cpp/io/basic_ios/good"/>
    <keyword type="function" name="std::ostringstream::eof" link="cpp/io/basic_ios/eof"/>
    <keyword type="function" name="std::ostringstream::fail" link="cpp/io/basic_ios/fail"/>
    <keyword type="function" name="std::ostringstream::bad" link="cpp/io/basic_ios/bad"/>
    <keyword type="function" name="std::ostringstream::operator!" link="cpp/io/basic_ios/operator!"/>
    <keyword type="function" name="std::ostringstream::operator bool" link="cpp/io/basic_ios/operator_bool"/>
    <keyword type="function" name="std::ostringstream::rdstate" link="cpp/io/basic_ios/rdstate"/>
    <keyword type="function" name="std::ostringstream::setstate" link="cpp/io/basic_ios/setstate"/>
    <keyword type="function" name="std::ostringstream::clear" link="cpp/io/basic_ios/clear"/>
    <keyword type="function" name="std::ostringstream::copyfmt" link="cpp/io/basic_ios/copyfmt"/>
    <keyword type="function" name="std::ostringstream::fill" link="cpp/io/basic_ios/fill"/>
    <keyword type="function" name="std::ostringstream::exceptions" link="cpp/io/basic_ios/exceptions"/>
    <keyword type="function" name="std::ostringstream::imbue" link="cpp/io/basic_ios/imbue"/>
    <keyword type="function" name="std::ostringstream::rdbuf" link="cpp/io/basic_ios/rdbuf"/>
    <keyword type="function" name="std::ostringstream::tie" link="cpp/io/basic_ios/tie"/>
    <keyword type="function" name="std::ostringstream::narrow" link="cpp/io/basic_ios/narrow"/>
    <keyword type="function" name="std::ostringstream::widen" link="cpp/io/basic_ios/widen"/>
    <keyword type="function" name="std::ostringstream::init" link="cpp/io/basic_ios/init"/>
    <keyword type="function" name="std::ostringstream::move" link="cpp/io/basic_ios/move"/>
    <keyword type="function" name="std::ostringstream::swap" link="cpp/io/basic_ios/swap"/>
    <keyword type="function" name="std::ostringstream::set_rdbuf" link="cpp/io/basic_ios/set_rdbuf"/>
    <keyword type="function" name="std::ostringstream::flags" link="cpp/io/ios_base/flags"/>
    <keyword type="function" name="std::ostringstream::setf" link="cpp/io/ios_base/setf"/>
    <keyword type="function" name="std::ostringstream::unsetf" link="cpp/io/ios_base/unsetf"/>
    <keyword type="function" name="std::ostringstream::precision" link="cpp/io/ios_base/precision"/>
    <keyword type="function" name="std::ostringstream::width" link="cpp/io/ios_base/width"/>
    <keyword type="function" name="std::ostringstream::imbue" link="cpp/io/ios_base/imbue"/>
    <keyword type="function" name="std::ostringstream::getloc" link="cpp/io/ios_base/getloc"/>
    <keyword type="function" name="std::ostringstream::xalloc" link="cpp/io/ios_base/xalloc"/>
    <keyword type="function" name="std::ostringstream::iword" link="cpp/io/ios_base/iword"/>
    <keyword type="function" name="std::ostringstream::pword" link="cpp/io/ios_base/pword"/>
    <keyword type="function" name="std::ostringstream::register_callback" link="cpp/io/ios_base/register_callback"/>
    <keyword type="function" name="std::ostringstream::sync_with_stdio" link="cpp/io/ios_base/sync_with_stdio"/>
    <keyword type="class" name="std::ostringstream::failure" link="cpp/io/ios_base/failure"/>
    <keyword type="function" name="std::ostringstream::failure::what" link="cpp/error/exception/what"/>
    <keyword type="function" name="std::ostringstream::failure::failure" link="cpp/io/ios_base/failure"/>
    <keyword type="enum" name="std::ostringstream::openmode" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::ostringstream::app" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::ostringstream::binary" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::ostringstream::in" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::ostringstream::out" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::ostringstream::trunc" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::ostringstream::ate" link="cpp/io/ios_base/openmode"/>
    <keyword type="enum" name="std::ostringstream::fmtflags" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ostringstream::dec" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ostringstream::oct" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ostringstream::hex" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ostringstream::basefield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ostringstream::left" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ostringstream::right" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ostringstream::internal" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ostringstream::adjustfield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ostringstream::scientific" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ostringstream::fixed" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ostringstream::floatfield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ostringstream::boolalpha" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ostringstream::showbase" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ostringstream::showpoint" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ostringstream::showpos" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ostringstream::skipws" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ostringstream::unitbuf" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ostringstream::uppercase" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="enum" name="std::ostringstream::iostate" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::ostringstream::goodbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::ostringstream::badbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::ostringstream::failbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::ostringstream::eofbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="enum" name="std::ostringstream::seekdir" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::ostringstream::beg" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::ostringstream::cur" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::ostringstream::end" link="cpp/io/ios_base/seekdir"/>
    <keyword type="enum" name="std::ostringstream::event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::ostringstream::erase_event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::ostringstream::imbue_event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::ostringstream::copyfmt_event" link="cpp/io/ios_base/event"/>
    <keyword type="typedef" name="std::ostringstream::event_callback" link="cpp/io/ios_base/event_callback"/>
    <keyword type="class" name="std::ostringstream::Init" link="cpp/io/ios_base/Init"/>
    <keyword type="function" name="std::ostringstream::ostringstream" link="cpp/io/basic_ostringstream/basic_ostringstream"/>
    <keyword type="function" name="std::ostringstream::operator=" link="cpp/io/basic_ostringstream/operator="/>
    <keyword type="function" name="std::ostringstream::swap" link="cpp/io/basic_ostringstream/swap"/>
    <keyword type="function" name="std::ostringstream::rdbuf" link="cpp/io/basic_ostringstream/rdbuf"/>
    <keyword type="function" name="std::ostringstream::str" link="cpp/io/basic_ostringstream/str"/>
    <keyword type="function" name="std::swap(std::ostringstream)" link="cpp/io/basic_ostringstream/swap2"/>
    <keyword type="typedef" name="std::stringstream" link="cpp/io/basic_stringstream"/>
    <keyword type="function" name="std::stringstream::operator&gt;&gt;" link="cpp/io/basic_istream/operator_gtgt"/>
    <keyword type="function" name="std::stringstream::get" link="cpp/io/basic_istream/get"/>
    <keyword type="function" name="std::stringstream::peek" link="cpp/io/basic_istream/peek"/>
    <keyword type="function" name="std::stringstream::unget" link="cpp/io/basic_istream/unget"/>
    <keyword type="function" name="std::stringstream::putback" link="cpp/io/basic_istream/putback"/>
    <keyword type="function" name="std::stringstream::getline" link="cpp/io/basic_istream/getline"/>
    <keyword type="function" name="std::stringstream::ignore" link="cpp/io/basic_istream/ignore"/>
    <keyword type="function" name="std::stringstream::read" link="cpp/io/basic_istream/read"/>
    <keyword type="function" name="std::stringstream::readsome" link="cpp/io/basic_istream/readsome"/>
    <keyword type="function" name="std::stringstream::gcount" link="cpp/io/basic_istream/gcount"/>
    <keyword type="function" name="std::stringstream::tellg" link="cpp/io/basic_istream/tellg"/>
    <keyword type="function" name="std::stringstream::seekg" link="cpp/io/basic_istream/seekg"/>
    <keyword type="function" name="std::stringstream::sync" link="cpp/io/basic_istream/sync"/>
    <keyword type="class" name="std::stringstream::sentry" link="cpp/io/basic_istream/sentry"/>
    <keyword type="function" name="std::stringstream::sentry::sentry" link="cpp/io/basic_istream/sentry"/>
    <keyword type="function" name="std::stringstream::sentry::~sentry" link="cpp/io/basic_istream/sentry"/>
    <keyword type="function" name="std::stringstream::sentry::operator bool" link="cpp/io/basic_istream/sentry"/>
    <keyword type="function" name="std::stringstream::operator&lt;&lt;" link="cpp/io/basic_ostream/operator_ltlt"/>
    <keyword type="function" name="std::stringstream::put" link="cpp/io/basic_ostream/put"/>
    <keyword type="function" name="std::stringstream::write" link="cpp/io/basic_ostream/write"/>
    <keyword type="function" name="std::stringstream::tellp" link="cpp/io/basic_ostream/tellp"/>
    <keyword type="function" name="std::stringstream::seekp" link="cpp/io/basic_ostream/seekp"/>
    <keyword type="function" name="std::stringstream::flush" link="cpp/io/basic_ostream/flush"/>
    <keyword type="class" name="std::stringstream::sentry" link="cpp/io/basic_ostream/sentry"/>
    <keyword type="function" name="std::stringstream::sentry::sentry" link="cpp/io/basic_ostream/sentry"/>
    <keyword type="function" name="std::stringstream::sentry::~sentry" link="cpp/io/basic_ostream/sentry"/>
    <keyword type="function" name="std::stringstream::sentry::operator bool" link="cpp/io/basic_ostream/sentry"/>
    <keyword type="function" name="std::stringstream::good" link="cpp/io/basic_ios/good"/>
    <keyword type="function" name="std::stringstream::eof" link="cpp/io/basic_ios/eof"/>
    <keyword type="function" name="std::stringstream::fail" link="cpp/io/basic_ios/fail"/>
    <keyword type="function" name="std::stringstream::bad" link="cpp/io/basic_ios/bad"/>
    <keyword type="function" name="std::stringstream::operator!" link="cpp/io/basic_ios/operator!"/>
    <keyword type="function" name="std::stringstream::operator bool" link="cpp/io/basic_ios/operator_bool"/>
    <keyword type="function" name="std::stringstream::rdstate" link="cpp/io/basic_ios/rdstate"/>
    <keyword type="function" name="std::stringstream::setstate" link="cpp/io/basic_ios/setstate"/>
    <keyword type="function" name="std::stringstream::clear" link="cpp/io/basic_ios/clear"/>
    <keyword type="function" name="std::stringstream::copyfmt" link="cpp/io/basic_ios/copyfmt"/>
    <keyword type="function" name="std::stringstream::fill" link="cpp/io/basic_ios/fill"/>
    <keyword type="function" name="std::stringstream::exceptions" link="cpp/io/basic_ios/exceptions"/>
    <keyword type="function" name="std::stringstream::imbue" link="cpp/io/basic_ios/imbue"/>
    <keyword type="function" name="std::stringstream::rdbuf" link="cpp/io/basic_ios/rdbuf"/>
    <keyword type="function" name="std::stringstream::tie" link="cpp/io/basic_ios/tie"/>
    <keyword type="function" name="std::stringstream::narrow" link="cpp/io/basic_ios/narrow"/>
    <keyword type="function" name="std::stringstream::widen" link="cpp/io/basic_ios/widen"/>
    <keyword type="function" name="std::stringstream::init" link="cpp/io/basic_ios/init"/>
    <keyword type="function" name="std::stringstream::move" link="cpp/io/basic_ios/move"/>
    <keyword type="function" name="std::stringstream::swap" link="cpp/io/basic_ios/swap"/>
    <keyword type="function" name="std::stringstream::set_rdbuf" link="cpp/io/basic_ios/set_rdbuf"/>
    <keyword type="function" name="std::stringstream::flags" link="cpp/io/ios_base/flags"/>
    <keyword type="function" name="std::stringstream::setf" link="cpp/io/ios_base/setf"/>
    <keyword type="function" name="std::stringstream::unsetf" link="cpp/io/ios_base/unsetf"/>
    <keyword type="function" name="std::stringstream::precision" link="cpp/io/ios_base/precision"/>
    <keyword type="function" name="std::stringstream::width" link="cpp/io/ios_base/width"/>
    <keyword type="function" name="std::stringstream::imbue" link="cpp/io/ios_base/imbue"/>
    <keyword type="function" name="std::stringstream::getloc" link="cpp/io/ios_base/getloc"/>
    <keyword type="function" name="std::stringstream::xalloc" link="cpp/io/ios_base/xalloc"/>
    <keyword type="function" name="std::stringstream::iword" link="cpp/io/ios_base/iword"/>
    <keyword type="function" name="std::stringstream::pword" link="cpp/io/ios_base/pword"/>
    <keyword type="function" name="std::stringstream::register_callback" link="cpp/io/ios_base/register_callback"/>
    <keyword type="function" name="std::stringstream::sync_with_stdio" link="cpp/io/ios_base/sync_with_stdio"/>
    <keyword type="class" name="std::stringstream::failure" link="cpp/io/ios_base/failure"/>
    <keyword type="function" name="std::stringstream::failure::what" link="cpp/error/exception/what"/>
    <keyword type="function" name="std::stringstream::failure::failure" link="cpp/io/ios_base/failure"/>
    <keyword type="enum" name="std::stringstream::openmode" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::stringstream::app" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::stringstream::binary" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::stringstream::in" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::stringstream::out" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::stringstream::trunc" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::stringstream::ate" link="cpp/io/ios_base/openmode"/>
    <keyword type="enum" name="std::stringstream::fmtflags" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::stringstream::dec" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::stringstream::oct" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::stringstream::hex" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::stringstream::basefield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::stringstream::left" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::stringstream::right" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::stringstream::internal" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::stringstream::adjustfield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::stringstream::scientific" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::stringstream::fixed" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::stringstream::floatfield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::stringstream::boolalpha" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::stringstream::showbase" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::stringstream::showpoint" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::stringstream::showpos" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::stringstream::skipws" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::stringstream::unitbuf" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::stringstream::uppercase" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="enum" name="std::stringstream::iostate" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::stringstream::goodbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::stringstream::badbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::stringstream::failbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::stringstream::eofbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="enum" name="std::stringstream::seekdir" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::stringstream::beg" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::stringstream::cur" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::stringstream::end" link="cpp/io/ios_base/seekdir"/>
    <keyword type="enum" name="std::stringstream::event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::stringstream::erase_event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::stringstream::imbue_event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::stringstream::copyfmt_event" link="cpp/io/ios_base/event"/>
    <keyword type="typedef" name="std::stringstream::event_callback" link="cpp/io/ios_base/event_callback"/>
    <keyword type="class" name="std::stringstream::Init" link="cpp/io/ios_base/Init"/>
    <keyword type="function" name="std::stringstream::stringstream" link="cpp/io/basic_stringstream/basic_stringstream"/>
    <keyword type="function" name="std::stringstream::operator=" link="cpp/io/basic_stringstream/operator="/>
    <keyword type="function" name="std::stringstream::swap" link="cpp/io/basic_stringstream/swap"/>
    <keyword type="function" name="std::stringstream::rdbuf" link="cpp/io/basic_stringstream/rdbuf"/>
    <keyword type="function" name="std::stringstream::str" link="cpp/io/basic_stringstream/str"/>
    <keyword type="function" name="std::swap(std::stringstream)" link="cpp/io/basic_stringstream/swap2"/>
    <keyword type="typedef" name="std::osyncstream" link="cpp/io/basic_osyncstream"/>
    <keyword type="function" name="std::osyncstream::operator&lt;&lt;" link="cpp/io/basic_ostream/operator_ltlt"/>
    <keyword type="function" name="std::osyncstream::put" link="cpp/io/basic_ostream/put"/>
    <keyword type="function" name="std::osyncstream::write" link="cpp/io/basic_ostream/write"/>
    <keyword type="function" name="std::osyncstream::tellp" link="cpp/io/basic_ostream/tellp"/>
    <keyword type="function" name="std::osyncstream::seekp" link="cpp/io/basic_ostream/seekp"/>
    <keyword type="function" name="std::osyncstream::flush" link="cpp/io/basic_ostream/flush"/>
    <keyword type="class" name="std::osyncstream::sentry" link="cpp/io/basic_ostream/sentry"/>
    <keyword type="function" name="std::osyncstream::sentry::sentry" link="cpp/io/basic_ostream/sentry"/>
    <keyword type="function" name="std::osyncstream::sentry::~sentry" link="cpp/io/basic_ostream/sentry"/>
    <keyword type="function" name="std::osyncstream::sentry::operator bool" link="cpp/io/basic_ostream/sentry"/>
    <keyword type="function" name="std::osyncstream::good" link="cpp/io/basic_ios/good"/>
    <keyword type="function" name="std::osyncstream::eof" link="cpp/io/basic_ios/eof"/>
    <keyword type="function" name="std::osyncstream::fail" link="cpp/io/basic_ios/fail"/>
    <keyword type="function" name="std::osyncstream::bad" link="cpp/io/basic_ios/bad"/>
    <keyword type="function" name="std::osyncstream::operator!" link="cpp/io/basic_ios/operator!"/>
    <keyword type="function" name="std::osyncstream::operator bool" link="cpp/io/basic_ios/operator_bool"/>
    <keyword type="function" name="std::osyncstream::rdstate" link="cpp/io/basic_ios/rdstate"/>
    <keyword type="function" name="std::osyncstream::setstate" link="cpp/io/basic_ios/setstate"/>
    <keyword type="function" name="std::osyncstream::clear" link="cpp/io/basic_ios/clear"/>
    <keyword type="function" name="std::osyncstream::copyfmt" link="cpp/io/basic_ios/copyfmt"/>
    <keyword type="function" name="std::osyncstream::fill" link="cpp/io/basic_ios/fill"/>
    <keyword type="function" name="std::osyncstream::exceptions" link="cpp/io/basic_ios/exceptions"/>
    <keyword type="function" name="std::osyncstream::imbue" link="cpp/io/basic_ios/imbue"/>
    <keyword type="function" name="std::osyncstream::rdbuf" link="cpp/io/basic_ios/rdbuf"/>
    <keyword type="function" name="std::osyncstream::tie" link="cpp/io/basic_ios/tie"/>
    <keyword type="function" name="std::osyncstream::narrow" link="cpp/io/basic_ios/narrow"/>
    <keyword type="function" name="std::osyncstream::widen" link="cpp/io/basic_ios/widen"/>
    <keyword type="function" name="std::osyncstream::init" link="cpp/io/basic_ios/init"/>
    <keyword type="function" name="std::osyncstream::move" link="cpp/io/basic_ios/move"/>
    <keyword type="function" name="std::osyncstream::swap" link="cpp/io/basic_ios/swap"/>
    <keyword type="function" name="std::osyncstream::set_rdbuf" link="cpp/io/basic_ios/set_rdbuf"/>
    <keyword type="function" name="std::osyncstream::flags" link="cpp/io/ios_base/flags"/>
    <keyword type="function" name="std::osyncstream::setf" link="cpp/io/ios_base/setf"/>
    <keyword type="function" name="std::osyncstream::unsetf" link="cpp/io/ios_base/unsetf"/>
    <keyword type="function" name="std::osyncstream::precision" link="cpp/io/ios_base/precision"/>
    <keyword type="function" name="std::osyncstream::width" link="cpp/io/ios_base/width"/>
    <keyword type="function" name="std::osyncstream::imbue" link="cpp/io/ios_base/imbue"/>
    <keyword type="function" name="std::osyncstream::getloc" link="cpp/io/ios_base/getloc"/>
    <keyword type="function" name="std::osyncstream::xalloc" link="cpp/io/ios_base/xalloc"/>
    <keyword type="function" name="std::osyncstream::iword" link="cpp/io/ios_base/iword"/>
    <keyword type="function" name="std::osyncstream::pword" link="cpp/io/ios_base/pword"/>
    <keyword type="function" name="std::osyncstream::register_callback" link="cpp/io/ios_base/register_callback"/>
    <keyword type="function" name="std::osyncstream::sync_with_stdio" link="cpp/io/ios_base/sync_with_stdio"/>
    <keyword type="class" name="std::osyncstream::failure" link="cpp/io/ios_base/failure"/>
    <keyword type="function" name="std::osyncstream::failure::what" link="cpp/error/exception/what"/>
    <keyword type="function" name="std::osyncstream::failure::failure" link="cpp/io/ios_base/failure"/>
    <keyword type="enum" name="std::osyncstream::openmode" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::osyncstream::app" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::osyncstream::binary" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::osyncstream::in" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::osyncstream::out" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::osyncstream::trunc" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::osyncstream::ate" link="cpp/io/ios_base/openmode"/>
    <keyword type="enum" name="std::osyncstream::fmtflags" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::osyncstream::dec" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::osyncstream::oct" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::osyncstream::hex" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::osyncstream::basefield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::osyncstream::left" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::osyncstream::right" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::osyncstream::internal" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::osyncstream::adjustfield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::osyncstream::scientific" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::osyncstream::fixed" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::osyncstream::floatfield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::osyncstream::boolalpha" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::osyncstream::showbase" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::osyncstream::showpoint" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::osyncstream::showpos" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::osyncstream::skipws" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::osyncstream::unitbuf" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::osyncstream::uppercase" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="enum" name="std::osyncstream::iostate" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::osyncstream::goodbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::osyncstream::badbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::osyncstream::failbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::osyncstream::eofbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="enum" name="std::osyncstream::seekdir" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::osyncstream::beg" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::osyncstream::cur" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::osyncstream::end" link="cpp/io/ios_base/seekdir"/>
    <keyword type="enum" name="std::osyncstream::event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::osyncstream::erase_event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::osyncstream::imbue_event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::osyncstream::copyfmt_event" link="cpp/io/ios_base/event"/>
    <keyword type="typedef" name="std::osyncstream::event_callback" link="cpp/io/ios_base/event_callback"/>
    <keyword type="class" name="std::osyncstream::Init" link="cpp/io/ios_base/Init"/>
    <keyword type="function" name="std::osyncstream::osyncstream" link="cpp/io/basic_osyncstream/basic_osyncstream"/>
    <keyword type="function" name="std::osyncstream::~osyncstream" link="cpp/io/basic_osyncstream/~basic_osyncstream"/>
    <keyword type="function" name="std::osyncstream::operator=" link="cpp/io/basic_osyncstream/operator="/>
    <keyword type="function" name="std::osyncstream::rdbuf" link="cpp/io/basic_osyncstream/rdbuf"/>
    <keyword type="function" name="std::osyncstream::get_wrapped" link="cpp/io/basic_osyncstream/get_wrapped"/>
    <keyword type="function" name="std::osyncstream::emit" link="cpp/io/basic_osyncstream/emit"/>
    <keyword type="typedef" name="std::wstreambuf" link="cpp/io/basic_streambuf"/>
    <keyword type="function" name="std::wstreambuf::wstreambuf" link="cpp/io/basic_streambuf/basic_streambuf"/>
    <keyword type="function" name="std::wstreambuf::~wstreambuf" link="cpp/io/basic_streambuf/~basic_streambuf"/>
    <keyword type="function" name="std::wstreambuf::pubimbue" link="cpp/io/basic_streambuf/pubimbue"/>
    <keyword type="function" name="std::wstreambuf::getloc" link="cpp/io/basic_streambuf/getloc"/>
    <keyword type="function" name="std::wstreambuf::pubsetbuf" link="cpp/io/basic_streambuf/pubsetbuf"/>
    <keyword type="function" name="std::wstreambuf::pubseekoff" link="cpp/io/basic_streambuf/pubseekoff"/>
    <keyword type="function" name="std::wstreambuf::pubseekpos" link="cpp/io/basic_streambuf/pubseekpos"/>
    <keyword type="function" name="std::wstreambuf::pubsync" link="cpp/io/basic_streambuf/pubsync"/>
    <keyword type="function" name="std::wstreambuf::in_avail" link="cpp/io/basic_streambuf/in_avail"/>
    <keyword type="function" name="std::wstreambuf::snextc" link="cpp/io/basic_streambuf/snextc"/>
    <keyword type="function" name="std::wstreambuf::sbumpc" link="cpp/io/basic_streambuf/sbumpc"/>
    <keyword type="function" name="std::wstreambuf::sgetc" link="cpp/io/basic_streambuf/sgetc"/>
    <keyword type="function" name="std::wstreambuf::sgetn" link="cpp/io/basic_streambuf/sgetn"/>
    <keyword type="function" name="std::wstreambuf::sputc" link="cpp/io/basic_streambuf/sputc"/>
    <keyword type="function" name="std::wstreambuf::sputn" link="cpp/io/basic_streambuf/sputn"/>
    <keyword type="function" name="std::wstreambuf::sputbackc" link="cpp/io/basic_streambuf/sputbackc"/>
    <keyword type="function" name="std::wstreambuf::sungetc" link="cpp/io/basic_streambuf/sungetc"/>
    <keyword type="function" name="std::wstreambuf::operator=" link="cpp/io/basic_streambuf/operator="/>
    <keyword type="function" name="std::wstreambuf::swap" link="cpp/io/basic_streambuf/swap"/>
    <keyword type="function" name="std::wstreambuf::imbue" link="cpp/io/basic_streambuf/pubimbue"/>
    <keyword type="function" name="std::wstreambuf::setbuf" link="cpp/io/basic_streambuf/pubsetbuf"/>
    <keyword type="function" name="std::wstreambuf::seekoff" link="cpp/io/basic_streambuf/pubseekoff"/>
    <keyword type="function" name="std::wstreambuf::seekpos" link="cpp/io/basic_streambuf/pubseekpos"/>
    <keyword type="function" name="std::wstreambuf::sync" link="cpp/io/basic_streambuf/pubsync"/>
    <keyword type="function" name="std::wstreambuf::showmanyc" link="cpp/io/basic_streambuf/showmanyc"/>
    <keyword type="function" name="std::wstreambuf::underflow" link="cpp/io/basic_streambuf/underflow"/>
    <keyword type="function" name="std::wstreambuf::uflow" link="cpp/io/basic_streambuf/uflow"/>
    <keyword type="function" name="std::wstreambuf::xsgetn" link="cpp/io/basic_streambuf/sgetn"/>
    <keyword type="function" name="std::wstreambuf::eback" link="cpp/io/basic_streambuf/gptr"/>
    <keyword type="function" name="std::wstreambuf::gptr" link="cpp/io/basic_streambuf/gptr"/>
    <keyword type="function" name="std::wstreambuf::egptr" link="cpp/io/basic_streambuf/gptr"/>
    <keyword type="function" name="std::wstreambuf::gbump" link="cpp/io/basic_streambuf/gbump"/>
    <keyword type="function" name="std::wstreambuf::setg" link="cpp/io/basic_streambuf/setg"/>
    <keyword type="function" name="std::wstreambuf::xsputn" link="cpp/io/basic_streambuf/sputn"/>
    <keyword type="function" name="std::wstreambuf::overflow" link="cpp/io/basic_streambuf/overflow"/>
    <keyword type="function" name="std::wstreambuf::pbase" link="cpp/io/basic_streambuf/pptr"/>
    <keyword type="function" name="std::wstreambuf::pptr" link="cpp/io/basic_streambuf/pptr"/>
    <keyword type="function" name="std::wstreambuf::epptr" link="cpp/io/basic_streambuf/pptr"/>
    <keyword type="function" name="std::wstreambuf::pbump" link="cpp/io/basic_streambuf/pbump"/>
    <keyword type="function" name="std::wstreambuf::setp" link="cpp/io/basic_streambuf/setp"/>
    <keyword type="function" name="std::wstreambuf::pbackfail" link="cpp/io/basic_streambuf/pbackfail"/>
    <keyword type="typedef" name="std::wfilebuf" link="cpp/io/basic_filebuf"/>
    <keyword type="function" name="std::wfilebuf::pubimbue" link="cpp/io/basic_streambuf/pubimbue"/>
    <keyword type="function" name="std::wfilebuf::getloc" link="cpp/io/basic_streambuf/getloc"/>
    <keyword type="function" name="std::wfilebuf::pubsetbuf" link="cpp/io/basic_streambuf/pubsetbuf"/>
    <keyword type="function" name="std::wfilebuf::pubseekoff" link="cpp/io/basic_streambuf/pubseekoff"/>
    <keyword type="function" name="std::wfilebuf::pubseekpos" link="cpp/io/basic_streambuf/pubseekpos"/>
    <keyword type="function" name="std::wfilebuf::pubsync" link="cpp/io/basic_streambuf/pubsync"/>
    <keyword type="function" name="std::wfilebuf::in_avail" link="cpp/io/basic_streambuf/in_avail"/>
    <keyword type="function" name="std::wfilebuf::snextc" link="cpp/io/basic_streambuf/snextc"/>
    <keyword type="function" name="std::wfilebuf::sbumpc" link="cpp/io/basic_streambuf/sbumpc"/>
    <keyword type="function" name="std::wfilebuf::sgetc" link="cpp/io/basic_streambuf/sgetc"/>
    <keyword type="function" name="std::wfilebuf::sgetn" link="cpp/io/basic_streambuf/sgetn"/>
    <keyword type="function" name="std::wfilebuf::sputc" link="cpp/io/basic_streambuf/sputc"/>
    <keyword type="function" name="std::wfilebuf::sputn" link="cpp/io/basic_streambuf/sputn"/>
    <keyword type="function" name="std::wfilebuf::sputbackc" link="cpp/io/basic_streambuf/sputbackc"/>
    <keyword type="function" name="std::wfilebuf::sungetc" link="cpp/io/basic_streambuf/sungetc"/>
    <keyword type="function" name="std::wfilebuf::swap" link="cpp/io/basic_streambuf/swap"/>
    <keyword type="function" name="std::wfilebuf::imbue" link="cpp/io/basic_streambuf/pubimbue"/>
    <keyword type="function" name="std::wfilebuf::setbuf" link="cpp/io/basic_streambuf/pubsetbuf"/>
    <keyword type="function" name="std::wfilebuf::seekoff" link="cpp/io/basic_streambuf/pubseekoff"/>
    <keyword type="function" name="std::wfilebuf::seekpos" link="cpp/io/basic_streambuf/pubseekpos"/>
    <keyword type="function" name="std::wfilebuf::sync" link="cpp/io/basic_streambuf/pubsync"/>
    <keyword type="function" name="std::wfilebuf::showmanyc" link="cpp/io/basic_streambuf/showmanyc"/>
    <keyword type="function" name="std::wfilebuf::underflow" link="cpp/io/basic_streambuf/underflow"/>
    <keyword type="function" name="std::wfilebuf::uflow" link="cpp/io/basic_streambuf/uflow"/>
    <keyword type="function" name="std::wfilebuf::xsgetn" link="cpp/io/basic_streambuf/sgetn"/>
    <keyword type="function" name="std::wfilebuf::eback" link="cpp/io/basic_streambuf/gptr"/>
    <keyword type="function" name="std::wfilebuf::gptr" link="cpp/io/basic_streambuf/gptr"/>
    <keyword type="function" name="std::wfilebuf::egptr" link="cpp/io/basic_streambuf/gptr"/>
    <keyword type="function" name="std::wfilebuf::gbump" link="cpp/io/basic_streambuf/gbump"/>
    <keyword type="function" name="std::wfilebuf::setg" link="cpp/io/basic_streambuf/setg"/>
    <keyword type="function" name="std::wfilebuf::xsputn" link="cpp/io/basic_streambuf/sputn"/>
    <keyword type="function" name="std::wfilebuf::overflow" link="cpp/io/basic_streambuf/overflow"/>
    <keyword type="function" name="std::wfilebuf::pbase" link="cpp/io/basic_streambuf/pptr"/>
    <keyword type="function" name="std::wfilebuf::pptr" link="cpp/io/basic_streambuf/pptr"/>
    <keyword type="function" name="std::wfilebuf::epptr" link="cpp/io/basic_streambuf/pptr"/>
    <keyword type="function" name="std::wfilebuf::pbump" link="cpp/io/basic_streambuf/pbump"/>
    <keyword type="function" name="std::wfilebuf::setp" link="cpp/io/basic_streambuf/setp"/>
    <keyword type="function" name="std::wfilebuf::pbackfail" link="cpp/io/basic_streambuf/pbackfail"/>
    <keyword type="function" name="std::wfilebuf::wfilebuf" link="cpp/io/basic_filebuf/basic_filebuf"/>
    <keyword type="function" name="std::wfilebuf::~wfilebuf" link="cpp/io/basic_filebuf/~basic_filebuf"/>
    <keyword type="function" name="std::wfilebuf::operator=" link="cpp/io/basic_filebuf/operator="/>
    <keyword type="function" name="std::wfilebuf::swap" link="cpp/io/basic_filebuf/swap"/>
    <keyword type="function" name="std::wfilebuf::is_open" link="cpp/io/basic_filebuf/is_open"/>
    <keyword type="function" name="std::wfilebuf::open" link="cpp/io/basic_filebuf/open"/>
    <keyword type="function" name="std::wfilebuf::close" link="cpp/io/basic_filebuf/close"/>
    <keyword type="function" name="std::wfilebuf::showmanyc" link="cpp/io/basic_filebuf/showmanyc"/>
    <keyword type="function" name="std::wfilebuf::underflow" link="cpp/io/basic_filebuf/underflow"/>
    <keyword type="function" name="std::wfilebuf::uflow" link="cpp/io/basic_filebuf/uflow"/>
    <keyword type="function" name="std::wfilebuf::pbackfail" link="cpp/io/basic_filebuf/pbackfail"/>
    <keyword type="function" name="std::wfilebuf::overflow" link="cpp/io/basic_filebuf/overflow"/>
    <keyword type="function" name="std::wfilebuf::setbuf" link="cpp/io/basic_filebuf/setbuf"/>
    <keyword type="function" name="std::wfilebuf::seekoff" link="cpp/io/basic_filebuf/seekoff"/>
    <keyword type="function" name="std::wfilebuf::seekpos" link="cpp/io/basic_filebuf/seekpos"/>
    <keyword type="function" name="std::wfilebuf::sync" link="cpp/io/basic_filebuf/sync"/>
    <keyword type="function" name="std::wfilebuf::imbue" link="cpp/io/basic_filebuf/imbue"/>
    <keyword type="function" name="std::swap(std::wfilebuf)" link="cpp/io/basic_filebuf/swap2"/>
    <keyword type="typedef" name="std::wstringbuf" link="cpp/io/basic_stringbuf"/>
    <keyword type="function" name="std::wstringbuf::pubimbue" link="cpp/io/basic_streambuf/pubimbue"/>
    <keyword type="function" name="std::wstringbuf::getloc" link="cpp/io/basic_streambuf/getloc"/>
    <keyword type="function" name="std::wstringbuf::pubsetbuf" link="cpp/io/basic_streambuf/pubsetbuf"/>
    <keyword type="function" name="std::wstringbuf::pubseekoff" link="cpp/io/basic_streambuf/pubseekoff"/>
    <keyword type="function" name="std::wstringbuf::pubseekpos" link="cpp/io/basic_streambuf/pubseekpos"/>
    <keyword type="function" name="std::wstringbuf::pubsync" link="cpp/io/basic_streambuf/pubsync"/>
    <keyword type="function" name="std::wstringbuf::in_avail" link="cpp/io/basic_streambuf/in_avail"/>
    <keyword type="function" name="std::wstringbuf::snextc" link="cpp/io/basic_streambuf/snextc"/>
    <keyword type="function" name="std::wstringbuf::sbumpc" link="cpp/io/basic_streambuf/sbumpc"/>
    <keyword type="function" name="std::wstringbuf::sgetc" link="cpp/io/basic_streambuf/sgetc"/>
    <keyword type="function" name="std::wstringbuf::sgetn" link="cpp/io/basic_streambuf/sgetn"/>
    <keyword type="function" name="std::wstringbuf::sputc" link="cpp/io/basic_streambuf/sputc"/>
    <keyword type="function" name="std::wstringbuf::sputn" link="cpp/io/basic_streambuf/sputn"/>
    <keyword type="function" name="std::wstringbuf::sputbackc" link="cpp/io/basic_streambuf/sputbackc"/>
    <keyword type="function" name="std::wstringbuf::sungetc" link="cpp/io/basic_streambuf/sungetc"/>
    <keyword type="function" name="std::wstringbuf::swap" link="cpp/io/basic_streambuf/swap"/>
    <keyword type="function" name="std::wstringbuf::imbue" link="cpp/io/basic_streambuf/pubimbue"/>
    <keyword type="function" name="std::wstringbuf::setbuf" link="cpp/io/basic_streambuf/pubsetbuf"/>
    <keyword type="function" name="std::wstringbuf::seekoff" link="cpp/io/basic_streambuf/pubseekoff"/>
    <keyword type="function" name="std::wstringbuf::seekpos" link="cpp/io/basic_streambuf/pubseekpos"/>
    <keyword type="function" name="std::wstringbuf::sync" link="cpp/io/basic_streambuf/pubsync"/>
    <keyword type="function" name="std::wstringbuf::showmanyc" link="cpp/io/basic_streambuf/showmanyc"/>
    <keyword type="function" name="std::wstringbuf::underflow" link="cpp/io/basic_streambuf/underflow"/>
    <keyword type="function" name="std::wstringbuf::uflow" link="cpp/io/basic_streambuf/uflow"/>
    <keyword type="function" name="std::wstringbuf::xsgetn" link="cpp/io/basic_streambuf/sgetn"/>
    <keyword type="function" name="std::wstringbuf::eback" link="cpp/io/basic_streambuf/gptr"/>
    <keyword type="function" name="std::wstringbuf::gptr" link="cpp/io/basic_streambuf/gptr"/>
    <keyword type="function" name="std::wstringbuf::egptr" link="cpp/io/basic_streambuf/gptr"/>
    <keyword type="function" name="std::wstringbuf::gbump" link="cpp/io/basic_streambuf/gbump"/>
    <keyword type="function" name="std::wstringbuf::setg" link="cpp/io/basic_streambuf/setg"/>
    <keyword type="function" name="std::wstringbuf::xsputn" link="cpp/io/basic_streambuf/sputn"/>
    <keyword type="function" name="std::wstringbuf::overflow" link="cpp/io/basic_streambuf/overflow"/>
    <keyword type="function" name="std::wstringbuf::pbase" link="cpp/io/basic_streambuf/pptr"/>
    <keyword type="function" name="std::wstringbuf::pptr" link="cpp/io/basic_streambuf/pptr"/>
    <keyword type="function" name="std::wstringbuf::epptr" link="cpp/io/basic_streambuf/pptr"/>
    <keyword type="function" name="std::wstringbuf::pbump" link="cpp/io/basic_streambuf/pbump"/>
    <keyword type="function" name="std::wstringbuf::setp" link="cpp/io/basic_streambuf/setp"/>
    <keyword type="function" name="std::wstringbuf::pbackfail" link="cpp/io/basic_streambuf/pbackfail"/>
    <keyword type="function" name="std::wstringbuf::wstringbuf" link="cpp/io/basic_stringbuf/basic_stringbuf"/>
    <keyword type="function" name="std::wstringbuf::operator=" link="cpp/io/basic_stringbuf/operator="/>
    <keyword type="function" name="std::wstringbuf::swap" link="cpp/io/basic_stringbuf/swap"/>
    <keyword type="function" name="std::wstringbuf::str" link="cpp/io/basic_stringbuf/str"/>
    <keyword type="function" name="std::wstringbuf::underflow" link="cpp/io/basic_stringbuf/underflow"/>
    <keyword type="function" name="std::wstringbuf::pbackfail" link="cpp/io/basic_stringbuf/pbackfail"/>
    <keyword type="function" name="std::wstringbuf::overflow" link="cpp/io/basic_stringbuf/overflow"/>
    <keyword type="function" name="std::wstringbuf::setbuf" link="cpp/io/basic_stringbuf/setbuf"/>
    <keyword type="function" name="std::wstringbuf::seekoff" link="cpp/io/basic_stringbuf/seekoff"/>
    <keyword type="function" name="std::wstringbuf::seekpos" link="cpp/io/basic_stringbuf/seekpos"/>
    <keyword type="function" name="std::swap(std::wstringbuf)" link="cpp/io/basic_stringbuf/swap2"/>
    <keyword type="typedef" name="std::wsyncbuf" link="cpp/io/basic_syncbuf"/>
    <keyword type="function" name="std::wsyncbuf::pubimbue" link="cpp/io/basic_streambuf/pubimbue"/>
    <keyword type="function" name="std::wsyncbuf::getloc" link="cpp/io/basic_streambuf/getloc"/>
    <keyword type="function" name="std::wsyncbuf::pubsetbuf" link="cpp/io/basic_streambuf/pubsetbuf"/>
    <keyword type="function" name="std::wsyncbuf::pubseekoff" link="cpp/io/basic_streambuf/pubseekoff"/>
    <keyword type="function" name="std::wsyncbuf::pubseekpos" link="cpp/io/basic_streambuf/pubseekpos"/>
    <keyword type="function" name="std::wsyncbuf::pubsync" link="cpp/io/basic_streambuf/pubsync"/>
    <keyword type="function" name="std::wsyncbuf::in_avail" link="cpp/io/basic_streambuf/in_avail"/>
    <keyword type="function" name="std::wsyncbuf::snextc" link="cpp/io/basic_streambuf/snextc"/>
    <keyword type="function" name="std::wsyncbuf::sbumpc" link="cpp/io/basic_streambuf/sbumpc"/>
    <keyword type="function" name="std::wsyncbuf::sgetc" link="cpp/io/basic_streambuf/sgetc"/>
    <keyword type="function" name="std::wsyncbuf::sgetn" link="cpp/io/basic_streambuf/sgetn"/>
    <keyword type="function" name="std::wsyncbuf::sputc" link="cpp/io/basic_streambuf/sputc"/>
    <keyword type="function" name="std::wsyncbuf::sputn" link="cpp/io/basic_streambuf/sputn"/>
    <keyword type="function" name="std::wsyncbuf::sputbackc" link="cpp/io/basic_streambuf/sputbackc"/>
    <keyword type="function" name="std::wsyncbuf::sungetc" link="cpp/io/basic_streambuf/sungetc"/>
    <keyword type="function" name="std::wsyncbuf::swap" link="cpp/io/basic_streambuf/swap"/>
    <keyword type="function" name="std::wsyncbuf::imbue" link="cpp/io/basic_streambuf/pubimbue"/>
    <keyword type="function" name="std::wsyncbuf::setbuf" link="cpp/io/basic_streambuf/pubsetbuf"/>
    <keyword type="function" name="std::wsyncbuf::seekoff" link="cpp/io/basic_streambuf/pubseekoff"/>
    <keyword type="function" name="std::wsyncbuf::seekpos" link="cpp/io/basic_streambuf/pubseekpos"/>
    <keyword type="function" name="std::wsyncbuf::sync" link="cpp/io/basic_streambuf/pubsync"/>
    <keyword type="function" name="std::wsyncbuf::showmanyc" link="cpp/io/basic_streambuf/showmanyc"/>
    <keyword type="function" name="std::wsyncbuf::underflow" link="cpp/io/basic_streambuf/underflow"/>
    <keyword type="function" name="std::wsyncbuf::uflow" link="cpp/io/basic_streambuf/uflow"/>
    <keyword type="function" name="std::wsyncbuf::xsgetn" link="cpp/io/basic_streambuf/sgetn"/>
    <keyword type="function" name="std::wsyncbuf::eback" link="cpp/io/basic_streambuf/gptr"/>
    <keyword type="function" name="std::wsyncbuf::gptr" link="cpp/io/basic_streambuf/gptr"/>
    <keyword type="function" name="std::wsyncbuf::egptr" link="cpp/io/basic_streambuf/gptr"/>
    <keyword type="function" name="std::wsyncbuf::gbump" link="cpp/io/basic_streambuf/gbump"/>
    <keyword type="function" name="std::wsyncbuf::setg" link="cpp/io/basic_streambuf/setg"/>
    <keyword type="function" name="std::wsyncbuf::xsputn" link="cpp/io/basic_streambuf/sputn"/>
    <keyword type="function" name="std::wsyncbuf::overflow" link="cpp/io/basic_streambuf/overflow"/>
    <keyword type="function" name="std::wsyncbuf::pbase" link="cpp/io/basic_streambuf/pptr"/>
    <keyword type="function" name="std::wsyncbuf::pptr" link="cpp/io/basic_streambuf/pptr"/>
    <keyword type="function" name="std::wsyncbuf::epptr" link="cpp/io/basic_streambuf/pptr"/>
    <keyword type="function" name="std::wsyncbuf::pbump" link="cpp/io/basic_streambuf/pbump"/>
    <keyword type="function" name="std::wsyncbuf::setp" link="cpp/io/basic_streambuf/setp"/>
    <keyword type="function" name="std::wsyncbuf::pbackfail" link="cpp/io/basic_streambuf/pbackfail"/>
    <keyword type="function" name="std::wsyncbuf::wsyncbuf" link="cpp/io/basic_syncbuf/basic_syncbuf"/>
    <keyword type="function" name="std::wsyncbuf::~wsyncbuf" link="cpp/io/basic_syncbuf/~basic_syncbuf"/>
    <keyword type="function" name="std::wsyncbuf::operator=" link="cpp/io/basic_syncbuf/operator="/>
    <keyword type="function" name="std::wsyncbuf::swap" link="cpp/io/basic_syncbuf/swap"/>
    <keyword type="function" name="std::wsyncbuf::emit" link="cpp/io/basic_syncbuf/emit"/>
    <keyword type="function" name="std::wsyncbuf::get_wrapped" link="cpp/io/basic_syncbuf/get_wrapped"/>
    <keyword type="function" name="std::wsyncbuf::get_allocator" link="cpp/io/basic_syncbuf/get_allocator"/>
    <keyword type="function" name="std::wsyncbuf::set_emit_on_sync" link="cpp/io/basic_syncbuf/set_emit_on_sync"/>
    <keyword type="function" name="std::wsyncbuf::sync" link="cpp/io/basic_syncbuf/sync"/>
    <keyword type="function" name="std::swap(std::wsyncbuf)" link="cpp/io/basic_syncbuf/swap2"/>
    <keyword type="typedef" name="std::wios" link="cpp/io/basic_ios"/>
    <keyword type="function" name="std::wios::flags" link="cpp/io/ios_base/flags"/>
    <keyword type="function" name="std::wios::setf" link="cpp/io/ios_base/setf"/>
    <keyword type="function" name="std::wios::unsetf" link="cpp/io/ios_base/unsetf"/>
    <keyword type="function" name="std::wios::precision" link="cpp/io/ios_base/precision"/>
    <keyword type="function" name="std::wios::width" link="cpp/io/ios_base/width"/>
    <keyword type="function" name="std::wios::imbue" link="cpp/io/ios_base/imbue"/>
    <keyword type="function" name="std::wios::getloc" link="cpp/io/ios_base/getloc"/>
    <keyword type="function" name="std::wios::xalloc" link="cpp/io/ios_base/xalloc"/>
    <keyword type="function" name="std::wios::iword" link="cpp/io/ios_base/iword"/>
    <keyword type="function" name="std::wios::pword" link="cpp/io/ios_base/pword"/>
    <keyword type="function" name="std::wios::register_callback" link="cpp/io/ios_base/register_callback"/>
    <keyword type="function" name="std::wios::sync_with_stdio" link="cpp/io/ios_base/sync_with_stdio"/>
    <keyword type="class" name="std::wios::failure" link="cpp/io/ios_base/failure"/>
    <keyword type="function" name="std::wios::failure::what" link="cpp/error/exception/what"/>
    <keyword type="function" name="std::wios::failure::failure" link="cpp/io/ios_base/failure"/>
    <keyword type="enum" name="std::wios::openmode" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::wios::app" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::wios::binary" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::wios::in" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::wios::out" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::wios::trunc" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::wios::ate" link="cpp/io/ios_base/openmode"/>
    <keyword type="enum" name="std::wios::fmtflags" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wios::dec" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wios::oct" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wios::hex" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wios::basefield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wios::left" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wios::right" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wios::internal" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wios::adjustfield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wios::scientific" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wios::fixed" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wios::floatfield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wios::boolalpha" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wios::showbase" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wios::showpoint" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wios::showpos" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wios::skipws" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wios::unitbuf" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wios::uppercase" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="enum" name="std::wios::iostate" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::wios::goodbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::wios::badbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::wios::failbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::wios::eofbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="enum" name="std::wios::seekdir" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::wios::beg" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::wios::cur" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::wios::end" link="cpp/io/ios_base/seekdir"/>
    <keyword type="enum" name="std::wios::event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::wios::erase_event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::wios::imbue_event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::wios::copyfmt_event" link="cpp/io/ios_base/event"/>
    <keyword type="typedef" name="std::wios::event_callback" link="cpp/io/ios_base/event_callback"/>
    <keyword type="class" name="std::wios::Init" link="cpp/io/ios_base/Init"/>
    <keyword type="function" name="std::wios::wios" link="cpp/io/basic_ios/basic_ios"/>
    <keyword type="function" name="std::wios::~wios" link="cpp/io/basic_ios/~basic_ios"/>
    <keyword type="function" name="std::wios::good" link="cpp/io/basic_ios/good"/>
    <keyword type="function" name="std::wios::eof" link="cpp/io/basic_ios/eof"/>
    <keyword type="function" name="std::wios::fail" link="cpp/io/basic_ios/fail"/>
    <keyword type="function" name="std::wios::bad" link="cpp/io/basic_ios/bad"/>
    <keyword type="function" name="std::wios::operator!" link="cpp/io/basic_ios/operator!"/>
    <keyword type="function" name="std::wios::operator bool" link="cpp/io/basic_ios/operator_bool"/>
    <keyword type="function" name="std::wios::rdstate" link="cpp/io/basic_ios/rdstate"/>
    <keyword type="function" name="std::wios::setstate" link="cpp/io/basic_ios/setstate"/>
    <keyword type="function" name="std::wios::clear" link="cpp/io/basic_ios/clear"/>
    <keyword type="function" name="std::wios::copyfmt" link="cpp/io/basic_ios/copyfmt"/>
    <keyword type="function" name="std::wios::fill" link="cpp/io/basic_ios/fill"/>
    <keyword type="function" name="std::wios::exceptions" link="cpp/io/basic_ios/exceptions"/>
    <keyword type="function" name="std::wios::imbue" link="cpp/io/basic_ios/imbue"/>
    <keyword type="function" name="std::wios::rdbuf" link="cpp/io/basic_ios/rdbuf"/>
    <keyword type="function" name="std::wios::tie" link="cpp/io/basic_ios/tie"/>
    <keyword type="function" name="std::wios::narrow" link="cpp/io/basic_ios/narrow"/>
    <keyword type="function" name="std::wios::widen" link="cpp/io/basic_ios/widen"/>
    <keyword type="function" name="std::wios::init" link="cpp/io/basic_ios/init"/>
    <keyword type="function" name="std::wios::move" link="cpp/io/basic_ios/move"/>
    <keyword type="function" name="std::wios::swap" link="cpp/io/basic_ios/swap"/>
    <keyword type="function" name="std::wios::set_rdbuf" link="cpp/io/basic_ios/set_rdbuf"/>
    <keyword type="typedef" name="std::wistream" link="cpp/io/basic_istream"/>
    <keyword type="function" name="std::wistream::good" link="cpp/io/basic_ios/good"/>
    <keyword type="function" name="std::wistream::eof" link="cpp/io/basic_ios/eof"/>
    <keyword type="function" name="std::wistream::fail" link="cpp/io/basic_ios/fail"/>
    <keyword type="function" name="std::wistream::bad" link="cpp/io/basic_ios/bad"/>
    <keyword type="function" name="std::wistream::operator!" link="cpp/io/basic_ios/operator!"/>
    <keyword type="function" name="std::wistream::operator bool" link="cpp/io/basic_ios/operator_bool"/>
    <keyword type="function" name="std::wistream::rdstate" link="cpp/io/basic_ios/rdstate"/>
    <keyword type="function" name="std::wistream::setstate" link="cpp/io/basic_ios/setstate"/>
    <keyword type="function" name="std::wistream::clear" link="cpp/io/basic_ios/clear"/>
    <keyword type="function" name="std::wistream::copyfmt" link="cpp/io/basic_ios/copyfmt"/>
    <keyword type="function" name="std::wistream::fill" link="cpp/io/basic_ios/fill"/>
    <keyword type="function" name="std::wistream::exceptions" link="cpp/io/basic_ios/exceptions"/>
    <keyword type="function" name="std::wistream::imbue" link="cpp/io/basic_ios/imbue"/>
    <keyword type="function" name="std::wistream::rdbuf" link="cpp/io/basic_ios/rdbuf"/>
    <keyword type="function" name="std::wistream::tie" link="cpp/io/basic_ios/tie"/>
    <keyword type="function" name="std::wistream::narrow" link="cpp/io/basic_ios/narrow"/>
    <keyword type="function" name="std::wistream::widen" link="cpp/io/basic_ios/widen"/>
    <keyword type="function" name="std::wistream::init" link="cpp/io/basic_ios/init"/>
    <keyword type="function" name="std::wistream::move" link="cpp/io/basic_ios/move"/>
    <keyword type="function" name="std::wistream::swap" link="cpp/io/basic_ios/swap"/>
    <keyword type="function" name="std::wistream::set_rdbuf" link="cpp/io/basic_ios/set_rdbuf"/>
    <keyword type="function" name="std::wistream::flags" link="cpp/io/ios_base/flags"/>
    <keyword type="function" name="std::wistream::setf" link="cpp/io/ios_base/setf"/>
    <keyword type="function" name="std::wistream::unsetf" link="cpp/io/ios_base/unsetf"/>
    <keyword type="function" name="std::wistream::precision" link="cpp/io/ios_base/precision"/>
    <keyword type="function" name="std::wistream::width" link="cpp/io/ios_base/width"/>
    <keyword type="function" name="std::wistream::imbue" link="cpp/io/ios_base/imbue"/>
    <keyword type="function" name="std::wistream::getloc" link="cpp/io/ios_base/getloc"/>
    <keyword type="function" name="std::wistream::xalloc" link="cpp/io/ios_base/xalloc"/>
    <keyword type="function" name="std::wistream::iword" link="cpp/io/ios_base/iword"/>
    <keyword type="function" name="std::wistream::pword" link="cpp/io/ios_base/pword"/>
    <keyword type="function" name="std::wistream::register_callback" link="cpp/io/ios_base/register_callback"/>
    <keyword type="function" name="std::wistream::sync_with_stdio" link="cpp/io/ios_base/sync_with_stdio"/>
    <keyword type="class" name="std::wistream::failure" link="cpp/io/ios_base/failure"/>
    <keyword type="function" name="std::wistream::failure::what" link="cpp/error/exception/what"/>
    <keyword type="function" name="std::wistream::failure::failure" link="cpp/io/ios_base/failure"/>
    <keyword type="enum" name="std::wistream::openmode" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::wistream::app" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::wistream::binary" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::wistream::in" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::wistream::out" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::wistream::trunc" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::wistream::ate" link="cpp/io/ios_base/openmode"/>
    <keyword type="enum" name="std::wistream::fmtflags" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wistream::dec" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wistream::oct" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wistream::hex" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wistream::basefield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wistream::left" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wistream::right" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wistream::internal" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wistream::adjustfield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wistream::scientific" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wistream::fixed" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wistream::floatfield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wistream::boolalpha" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wistream::showbase" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wistream::showpoint" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wistream::showpos" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wistream::skipws" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wistream::unitbuf" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wistream::uppercase" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="enum" name="std::wistream::iostate" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::wistream::goodbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::wistream::badbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::wistream::failbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::wistream::eofbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="enum" name="std::wistream::seekdir" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::wistream::beg" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::wistream::cur" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::wistream::end" link="cpp/io/ios_base/seekdir"/>
    <keyword type="enum" name="std::wistream::event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::wistream::erase_event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::wistream::imbue_event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::wistream::copyfmt_event" link="cpp/io/ios_base/event"/>
    <keyword type="typedef" name="std::wistream::event_callback" link="cpp/io/ios_base/event_callback"/>
    <keyword type="class" name="std::wistream::Init" link="cpp/io/ios_base/Init"/>
    <keyword type="function" name="std::wistream::wistream" link="cpp/io/basic_istream/basic_istream"/>
    <keyword type="function" name="std::wistream::~wistream" link="cpp/io/basic_istream/~basic_istream"/>
    <keyword type="function" name="std::wistream::operator&gt;&gt;" link="cpp/io/basic_istream/operator_gtgt"/>
    <keyword type="function" name="std::wistream::get" link="cpp/io/basic_istream/get"/>
    <keyword type="function" name="std::wistream::peek" link="cpp/io/basic_istream/peek"/>
    <keyword type="function" name="std::wistream::unget" link="cpp/io/basic_istream/unget"/>
    <keyword type="function" name="std::wistream::putback" link="cpp/io/basic_istream/putback"/>
    <keyword type="function" name="std::wistream::getline" link="cpp/io/basic_istream/getline"/>
    <keyword type="function" name="std::wistream::ignore" link="cpp/io/basic_istream/ignore"/>
    <keyword type="function" name="std::wistream::read" link="cpp/io/basic_istream/read"/>
    <keyword type="function" name="std::wistream::readsome" link="cpp/io/basic_istream/readsome"/>
    <keyword type="function" name="std::wistream::gcount" link="cpp/io/basic_istream/gcount"/>
    <keyword type="function" name="std::wistream::tellg" link="cpp/io/basic_istream/tellg"/>
    <keyword type="function" name="std::wistream::seekg" link="cpp/io/basic_istream/seekg"/>
    <keyword type="function" name="std::wistream::sync" link="cpp/io/basic_istream/sync"/>
    <keyword type="class" name="std::wistream::sentry" link="cpp/io/basic_istream/sentry"/>
    <keyword type="function" name="std::wistream::sentry::sentry" link="cpp/io/basic_istream/sentry"/>
    <keyword type="function" name="std::wistream::sentry::~sentry" link="cpp/io/basic_istream/sentry"/>
    <keyword type="function" name="std::wistream::sentry::operator bool" link="cpp/io/basic_istream/sentry"/>
    <keyword type="function" name="operator&gt;&gt;(std::wistream)" link="cpp/io/basic_istream/operator_gtgt2"/>
    <keyword type="typedef" name="std::wostream" link="cpp/io/basic_ostream"/>
    <keyword type="function" name="std::wostream::good" link="cpp/io/basic_ios/good"/>
    <keyword type="function" name="std::wostream::eof" link="cpp/io/basic_ios/eof"/>
    <keyword type="function" name="std::wostream::fail" link="cpp/io/basic_ios/fail"/>
    <keyword type="function" name="std::wostream::bad" link="cpp/io/basic_ios/bad"/>
    <keyword type="function" name="std::wostream::operator!" link="cpp/io/basic_ios/operator!"/>
    <keyword type="function" name="std::wostream::operator bool" link="cpp/io/basic_ios/operator_bool"/>
    <keyword type="function" name="std::wostream::rdstate" link="cpp/io/basic_ios/rdstate"/>
    <keyword type="function" name="std::wostream::setstate" link="cpp/io/basic_ios/setstate"/>
    <keyword type="function" name="std::wostream::clear" link="cpp/io/basic_ios/clear"/>
    <keyword type="function" name="std::wostream::copyfmt" link="cpp/io/basic_ios/copyfmt"/>
    <keyword type="function" name="std::wostream::fill" link="cpp/io/basic_ios/fill"/>
    <keyword type="function" name="std::wostream::exceptions" link="cpp/io/basic_ios/exceptions"/>
    <keyword type="function" name="std::wostream::imbue" link="cpp/io/basic_ios/imbue"/>
    <keyword type="function" name="std::wostream::rdbuf" link="cpp/io/basic_ios/rdbuf"/>
    <keyword type="function" name="std::wostream::tie" link="cpp/io/basic_ios/tie"/>
    <keyword type="function" name="std::wostream::narrow" link="cpp/io/basic_ios/narrow"/>
    <keyword type="function" name="std::wostream::widen" link="cpp/io/basic_ios/widen"/>
    <keyword type="function" name="std::wostream::init" link="cpp/io/basic_ios/init"/>
    <keyword type="function" name="std::wostream::move" link="cpp/io/basic_ios/move"/>
    <keyword type="function" name="std::wostream::swap" link="cpp/io/basic_ios/swap"/>
    <keyword type="function" name="std::wostream::set_rdbuf" link="cpp/io/basic_ios/set_rdbuf"/>
    <keyword type="function" name="std::wostream::flags" link="cpp/io/ios_base/flags"/>
    <keyword type="function" name="std::wostream::setf" link="cpp/io/ios_base/setf"/>
    <keyword type="function" name="std::wostream::unsetf" link="cpp/io/ios_base/unsetf"/>
    <keyword type="function" name="std::wostream::precision" link="cpp/io/ios_base/precision"/>
    <keyword type="function" name="std::wostream::width" link="cpp/io/ios_base/width"/>
    <keyword type="function" name="std::wostream::imbue" link="cpp/io/ios_base/imbue"/>
    <keyword type="function" name="std::wostream::getloc" link="cpp/io/ios_base/getloc"/>
    <keyword type="function" name="std::wostream::xalloc" link="cpp/io/ios_base/xalloc"/>
    <keyword type="function" name="std::wostream::iword" link="cpp/io/ios_base/iword"/>
    <keyword type="function" name="std::wostream::pword" link="cpp/io/ios_base/pword"/>
    <keyword type="function" name="std::wostream::register_callback" link="cpp/io/ios_base/register_callback"/>
    <keyword type="function" name="std::wostream::sync_with_stdio" link="cpp/io/ios_base/sync_with_stdio"/>
    <keyword type="class" name="std::wostream::failure" link="cpp/io/ios_base/failure"/>
    <keyword type="function" name="std::wostream::failure::what" link="cpp/error/exception/what"/>
    <keyword type="function" name="std::wostream::failure::failure" link="cpp/io/ios_base/failure"/>
    <keyword type="enum" name="std::wostream::openmode" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::wostream::app" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::wostream::binary" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::wostream::in" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::wostream::out" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::wostream::trunc" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::wostream::ate" link="cpp/io/ios_base/openmode"/>
    <keyword type="enum" name="std::wostream::fmtflags" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wostream::dec" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wostream::oct" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wostream::hex" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wostream::basefield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wostream::left" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wostream::right" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wostream::internal" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wostream::adjustfield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wostream::scientific" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wostream::fixed" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wostream::floatfield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wostream::boolalpha" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wostream::showbase" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wostream::showpoint" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wostream::showpos" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wostream::skipws" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wostream::unitbuf" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wostream::uppercase" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="enum" name="std::wostream::iostate" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::wostream::goodbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::wostream::badbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::wostream::failbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::wostream::eofbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="enum" name="std::wostream::seekdir" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::wostream::beg" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::wostream::cur" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::wostream::end" link="cpp/io/ios_base/seekdir"/>
    <keyword type="enum" name="std::wostream::event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::wostream::erase_event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::wostream::imbue_event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::wostream::copyfmt_event" link="cpp/io/ios_base/event"/>
    <keyword type="typedef" name="std::wostream::event_callback" link="cpp/io/ios_base/event_callback"/>
    <keyword type="class" name="std::wostream::Init" link="cpp/io/ios_base/Init"/>
    <keyword type="function" name="std::wostream::wostream" link="cpp/io/basic_ostream/basic_ostream"/>
    <keyword type="function" name="std::wostream::~wostream" link="cpp/io/basic_ostream/~basic_ostream"/>
    <keyword type="function" name="std::wostream::operator&lt;&lt;" link="cpp/io/basic_ostream/operator_ltlt"/>
    <keyword type="function" name="std::wostream::put" link="cpp/io/basic_ostream/put"/>
    <keyword type="function" name="std::wostream::write" link="cpp/io/basic_ostream/write"/>
    <keyword type="function" name="std::wostream::tellp" link="cpp/io/basic_ostream/tellp"/>
    <keyword type="function" name="std::wostream::seekp" link="cpp/io/basic_ostream/seekp"/>
    <keyword type="function" name="std::wostream::flush" link="cpp/io/basic_ostream/flush"/>
    <keyword type="class" name="std::wostream::sentry" link="cpp/io/basic_ostream/sentry"/>
    <keyword type="function" name="std::wostream::sentry::sentry" link="cpp/io/basic_ostream/sentry"/>
    <keyword type="function" name="std::wostream::sentry::~sentry" link="cpp/io/basic_ostream/sentry"/>
    <keyword type="function" name="std::wostream::sentry::operator bool" link="cpp/io/basic_ostream/sentry"/>
    <keyword type="function" name="operator&lt;&lt;(std::wostream)" link="cpp/io/basic_ostream/operator_ltlt2"/>
    <keyword type="typedef" name="std::wiostream" link="cpp/io/basic_iostream"/>
    <keyword type="function" name="std::wiostream::operator&gt;&gt;" link="cpp/io/basic_istream/operator_gtgt"/>
    <keyword type="function" name="std::wiostream::get" link="cpp/io/basic_istream/get"/>
    <keyword type="function" name="std::wiostream::peek" link="cpp/io/basic_istream/peek"/>
    <keyword type="function" name="std::wiostream::unget" link="cpp/io/basic_istream/unget"/>
    <keyword type="function" name="std::wiostream::putback" link="cpp/io/basic_istream/putback"/>
    <keyword type="function" name="std::wiostream::getline" link="cpp/io/basic_istream/getline"/>
    <keyword type="function" name="std::wiostream::ignore" link="cpp/io/basic_istream/ignore"/>
    <keyword type="function" name="std::wiostream::read" link="cpp/io/basic_istream/read"/>
    <keyword type="function" name="std::wiostream::readsome" link="cpp/io/basic_istream/readsome"/>
    <keyword type="function" name="std::wiostream::gcount" link="cpp/io/basic_istream/gcount"/>
    <keyword type="function" name="std::wiostream::tellg" link="cpp/io/basic_istream/tellg"/>
    <keyword type="function" name="std::wiostream::seekg" link="cpp/io/basic_istream/seekg"/>
    <keyword type="function" name="std::wiostream::sync" link="cpp/io/basic_istream/sync"/>
    <keyword type="class" name="std::wiostream::sentry" link="cpp/io/basic_istream/sentry"/>
    <keyword type="function" name="std::wiostream::sentry::sentry" link="cpp/io/basic_istream/sentry"/>
    <keyword type="function" name="std::wiostream::sentry::~sentry" link="cpp/io/basic_istream/sentry"/>
    <keyword type="function" name="std::wiostream::sentry::operator bool" link="cpp/io/basic_istream/sentry"/>
    <keyword type="function" name="std::wiostream::operator&lt;&lt;" link="cpp/io/basic_ostream/operator_ltlt"/>
    <keyword type="function" name="std::wiostream::put" link="cpp/io/basic_ostream/put"/>
    <keyword type="function" name="std::wiostream::write" link="cpp/io/basic_ostream/write"/>
    <keyword type="function" name="std::wiostream::tellp" link="cpp/io/basic_ostream/tellp"/>
    <keyword type="function" name="std::wiostream::seekp" link="cpp/io/basic_ostream/seekp"/>
    <keyword type="function" name="std::wiostream::flush" link="cpp/io/basic_ostream/flush"/>
    <keyword type="class" name="std::wiostream::sentry" link="cpp/io/basic_ostream/sentry"/>
    <keyword type="function" name="std::wiostream::sentry::sentry" link="cpp/io/basic_ostream/sentry"/>
    <keyword type="function" name="std::wiostream::sentry::~sentry" link="cpp/io/basic_ostream/sentry"/>
    <keyword type="function" name="std::wiostream::sentry::operator bool" link="cpp/io/basic_ostream/sentry"/>
    <keyword type="function" name="std::wiostream::good" link="cpp/io/basic_ios/good"/>
    <keyword type="function" name="std::wiostream::eof" link="cpp/io/basic_ios/eof"/>
    <keyword type="function" name="std::wiostream::fail" link="cpp/io/basic_ios/fail"/>
    <keyword type="function" name="std::wiostream::bad" link="cpp/io/basic_ios/bad"/>
    <keyword type="function" name="std::wiostream::operator!" link="cpp/io/basic_ios/operator!"/>
    <keyword type="function" name="std::wiostream::operator bool" link="cpp/io/basic_ios/operator_bool"/>
    <keyword type="function" name="std::wiostream::rdstate" link="cpp/io/basic_ios/rdstate"/>
    <keyword type="function" name="std::wiostream::setstate" link="cpp/io/basic_ios/setstate"/>
    <keyword type="function" name="std::wiostream::clear" link="cpp/io/basic_ios/clear"/>
    <keyword type="function" name="std::wiostream::copyfmt" link="cpp/io/basic_ios/copyfmt"/>
    <keyword type="function" name="std::wiostream::fill" link="cpp/io/basic_ios/fill"/>
    <keyword type="function" name="std::wiostream::exceptions" link="cpp/io/basic_ios/exceptions"/>
    <keyword type="function" name="std::wiostream::imbue" link="cpp/io/basic_ios/imbue"/>
    <keyword type="function" name="std::wiostream::rdbuf" link="cpp/io/basic_ios/rdbuf"/>
    <keyword type="function" name="std::wiostream::tie" link="cpp/io/basic_ios/tie"/>
    <keyword type="function" name="std::wiostream::narrow" link="cpp/io/basic_ios/narrow"/>
    <keyword type="function" name="std::wiostream::widen" link="cpp/io/basic_ios/widen"/>
    <keyword type="function" name="std::wiostream::init" link="cpp/io/basic_ios/init"/>
    <keyword type="function" name="std::wiostream::move" link="cpp/io/basic_ios/move"/>
    <keyword type="function" name="std::wiostream::swap" link="cpp/io/basic_ios/swap"/>
    <keyword type="function" name="std::wiostream::set_rdbuf" link="cpp/io/basic_ios/set_rdbuf"/>
    <keyword type="function" name="std::wiostream::flags" link="cpp/io/ios_base/flags"/>
    <keyword type="function" name="std::wiostream::setf" link="cpp/io/ios_base/setf"/>
    <keyword type="function" name="std::wiostream::unsetf" link="cpp/io/ios_base/unsetf"/>
    <keyword type="function" name="std::wiostream::precision" link="cpp/io/ios_base/precision"/>
    <keyword type="function" name="std::wiostream::width" link="cpp/io/ios_base/width"/>
    <keyword type="function" name="std::wiostream::imbue" link="cpp/io/ios_base/imbue"/>
    <keyword type="function" name="std::wiostream::getloc" link="cpp/io/ios_base/getloc"/>
    <keyword type="function" name="std::wiostream::xalloc" link="cpp/io/ios_base/xalloc"/>
    <keyword type="function" name="std::wiostream::iword" link="cpp/io/ios_base/iword"/>
    <keyword type="function" name="std::wiostream::pword" link="cpp/io/ios_base/pword"/>
    <keyword type="function" name="std::wiostream::register_callback" link="cpp/io/ios_base/register_callback"/>
    <keyword type="function" name="std::wiostream::sync_with_stdio" link="cpp/io/ios_base/sync_with_stdio"/>
    <keyword type="class" name="std::wiostream::failure" link="cpp/io/ios_base/failure"/>
    <keyword type="function" name="std::wiostream::failure::what" link="cpp/error/exception/what"/>
    <keyword type="function" name="std::wiostream::failure::failure" link="cpp/io/ios_base/failure"/>
    <keyword type="enum" name="std::wiostream::openmode" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::wiostream::app" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::wiostream::binary" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::wiostream::in" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::wiostream::out" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::wiostream::trunc" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::wiostream::ate" link="cpp/io/ios_base/openmode"/>
    <keyword type="enum" name="std::wiostream::fmtflags" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wiostream::dec" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wiostream::oct" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wiostream::hex" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wiostream::basefield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wiostream::left" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wiostream::right" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wiostream::internal" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wiostream::adjustfield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wiostream::scientific" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wiostream::fixed" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wiostream::floatfield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wiostream::boolalpha" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wiostream::showbase" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wiostream::showpoint" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wiostream::showpos" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wiostream::skipws" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wiostream::unitbuf" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wiostream::uppercase" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="enum" name="std::wiostream::iostate" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::wiostream::goodbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::wiostream::badbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::wiostream::failbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::wiostream::eofbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="enum" name="std::wiostream::seekdir" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::wiostream::beg" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::wiostream::cur" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::wiostream::end" link="cpp/io/ios_base/seekdir"/>
    <keyword type="enum" name="std::wiostream::event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::wiostream::erase_event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::wiostream::imbue_event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::wiostream::copyfmt_event" link="cpp/io/ios_base/event"/>
    <keyword type="typedef" name="std::wiostream::event_callback" link="cpp/io/ios_base/event_callback"/>
    <keyword type="class" name="std::wiostream::Init" link="cpp/io/ios_base/Init"/>
    <keyword type="function" name="std::wiostream::wiostream" link="cpp/io/basic_iostream/basic_iostream"/>
    <keyword type="function" name="std::wiostream::~wiostream" link="cpp/io/basic_iostream/~basic_iostream"/>
    <keyword type="typedef" name="std::wifstream" link="cpp/io/basic_ifstream"/>
    <keyword type="function" name="std::wifstream::operator&gt;&gt;" link="cpp/io/basic_istream/operator_gtgt"/>
    <keyword type="function" name="std::wifstream::get" link="cpp/io/basic_istream/get"/>
    <keyword type="function" name="std::wifstream::peek" link="cpp/io/basic_istream/peek"/>
    <keyword type="function" name="std::wifstream::unget" link="cpp/io/basic_istream/unget"/>
    <keyword type="function" name="std::wifstream::putback" link="cpp/io/basic_istream/putback"/>
    <keyword type="function" name="std::wifstream::getline" link="cpp/io/basic_istream/getline"/>
    <keyword type="function" name="std::wifstream::ignore" link="cpp/io/basic_istream/ignore"/>
    <keyword type="function" name="std::wifstream::read" link="cpp/io/basic_istream/read"/>
    <keyword type="function" name="std::wifstream::readsome" link="cpp/io/basic_istream/readsome"/>
    <keyword type="function" name="std::wifstream::gcount" link="cpp/io/basic_istream/gcount"/>
    <keyword type="function" name="std::wifstream::tellg" link="cpp/io/basic_istream/tellg"/>
    <keyword type="function" name="std::wifstream::seekg" link="cpp/io/basic_istream/seekg"/>
    <keyword type="function" name="std::wifstream::sync" link="cpp/io/basic_istream/sync"/>
    <keyword type="class" name="std::wifstream::sentry" link="cpp/io/basic_istream/sentry"/>
    <keyword type="function" name="std::wifstream::sentry::sentry" link="cpp/io/basic_istream/sentry"/>
    <keyword type="function" name="std::wifstream::sentry::~sentry" link="cpp/io/basic_istream/sentry"/>
    <keyword type="function" name="std::wifstream::sentry::operator bool" link="cpp/io/basic_istream/sentry"/>
    <keyword type="function" name="std::wifstream::good" link="cpp/io/basic_ios/good"/>
    <keyword type="function" name="std::wifstream::eof" link="cpp/io/basic_ios/eof"/>
    <keyword type="function" name="std::wifstream::fail" link="cpp/io/basic_ios/fail"/>
    <keyword type="function" name="std::wifstream::bad" link="cpp/io/basic_ios/bad"/>
    <keyword type="function" name="std::wifstream::operator!" link="cpp/io/basic_ios/operator!"/>
    <keyword type="function" name="std::wifstream::operator bool" link="cpp/io/basic_ios/operator_bool"/>
    <keyword type="function" name="std::wifstream::rdstate" link="cpp/io/basic_ios/rdstate"/>
    <keyword type="function" name="std::wifstream::setstate" link="cpp/io/basic_ios/setstate"/>
    <keyword type="function" name="std::wifstream::clear" link="cpp/io/basic_ios/clear"/>
    <keyword type="function" name="std::wifstream::copyfmt" link="cpp/io/basic_ios/copyfmt"/>
    <keyword type="function" name="std::wifstream::fill" link="cpp/io/basic_ios/fill"/>
    <keyword type="function" name="std::wifstream::exceptions" link="cpp/io/basic_ios/exceptions"/>
    <keyword type="function" name="std::wifstream::imbue" link="cpp/io/basic_ios/imbue"/>
    <keyword type="function" name="std::wifstream::rdbuf" link="cpp/io/basic_ios/rdbuf"/>
    <keyword type="function" name="std::wifstream::tie" link="cpp/io/basic_ios/tie"/>
    <keyword type="function" name="std::wifstream::narrow" link="cpp/io/basic_ios/narrow"/>
    <keyword type="function" name="std::wifstream::widen" link="cpp/io/basic_ios/widen"/>
    <keyword type="function" name="std::wifstream::init" link="cpp/io/basic_ios/init"/>
    <keyword type="function" name="std::wifstream::move" link="cpp/io/basic_ios/move"/>
    <keyword type="function" name="std::wifstream::swap" link="cpp/io/basic_ios/swap"/>
    <keyword type="function" name="std::wifstream::set_rdbuf" link="cpp/io/basic_ios/set_rdbuf"/>
    <keyword type="function" name="std::wifstream::flags" link="cpp/io/ios_base/flags"/>
    <keyword type="function" name="std::wifstream::setf" link="cpp/io/ios_base/setf"/>
    <keyword type="function" name="std::wifstream::unsetf" link="cpp/io/ios_base/unsetf"/>
    <keyword type="function" name="std::wifstream::precision" link="cpp/io/ios_base/precision"/>
    <keyword type="function" name="std::wifstream::width" link="cpp/io/ios_base/width"/>
    <keyword type="function" name="std::wifstream::imbue" link="cpp/io/ios_base/imbue"/>
    <keyword type="function" name="std::wifstream::getloc" link="cpp/io/ios_base/getloc"/>
    <keyword type="function" name="std::wifstream::xalloc" link="cpp/io/ios_base/xalloc"/>
    <keyword type="function" name="std::wifstream::iword" link="cpp/io/ios_base/iword"/>
    <keyword type="function" name="std::wifstream::pword" link="cpp/io/ios_base/pword"/>
    <keyword type="function" name="std::wifstream::register_callback" link="cpp/io/ios_base/register_callback"/>
    <keyword type="function" name="std::wifstream::sync_with_stdio" link="cpp/io/ios_base/sync_with_stdio"/>
    <keyword type="class" name="std::wifstream::failure" link="cpp/io/ios_base/failure"/>
    <keyword type="function" name="std::wifstream::failure::what" link="cpp/error/exception/what"/>
    <keyword type="function" name="std::wifstream::failure::failure" link="cpp/io/ios_base/failure"/>
    <keyword type="enum" name="std::wifstream::openmode" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::wifstream::app" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::wifstream::binary" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::wifstream::in" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::wifstream::out" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::wifstream::trunc" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::wifstream::ate" link="cpp/io/ios_base/openmode"/>
    <keyword type="enum" name="std::wifstream::fmtflags" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wifstream::dec" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wifstream::oct" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wifstream::hex" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wifstream::basefield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wifstream::left" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wifstream::right" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wifstream::internal" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wifstream::adjustfield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wifstream::scientific" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wifstream::fixed" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wifstream::floatfield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wifstream::boolalpha" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wifstream::showbase" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wifstream::showpoint" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wifstream::showpos" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wifstream::skipws" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wifstream::unitbuf" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wifstream::uppercase" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="enum" name="std::wifstream::iostate" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::wifstream::goodbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::wifstream::badbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::wifstream::failbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::wifstream::eofbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="enum" name="std::wifstream::seekdir" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::wifstream::beg" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::wifstream::cur" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::wifstream::end" link="cpp/io/ios_base/seekdir"/>
    <keyword type="enum" name="std::wifstream::event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::wifstream::erase_event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::wifstream::imbue_event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::wifstream::copyfmt_event" link="cpp/io/ios_base/event"/>
    <keyword type="typedef" name="std::wifstream::event_callback" link="cpp/io/ios_base/event_callback"/>
    <keyword type="class" name="std::wifstream::Init" link="cpp/io/ios_base/Init"/>
    <keyword type="function" name="std::wifstream::wifstream" link="cpp/io/basic_ifstream/basic_ifstream"/>
    <keyword type="function" name="std::wifstream::operator=" link="cpp/io/basic_ifstream/operator="/>
    <keyword type="function" name="std::wifstream::swap" link="cpp/io/basic_ifstream/swap"/>
    <keyword type="function" name="std::wifstream::rdbuf" link="cpp/io/basic_ifstream/rdbuf"/>
    <keyword type="function" name="std::wifstream::is_open" link="cpp/io/basic_ifstream/is_open"/>
    <keyword type="function" name="std::wifstream::open" link="cpp/io/basic_ifstream/open"/>
    <keyword type="function" name="std::wifstream::close" link="cpp/io/basic_ifstream/close"/>
    <keyword type="function" name="std::swap(std::wifstream)" link="cpp/io/basic_ifstream/swap2"/>
    <keyword type="typedef" name="std::wofstream" link="cpp/io/basic_ofstream"/>
    <keyword type="function" name="std::wofstream::operator&lt;&lt;" link="cpp/io/basic_ostream/operator_ltlt"/>
    <keyword type="function" name="std::wofstream::put" link="cpp/io/basic_ostream/put"/>
    <keyword type="function" name="std::wofstream::write" link="cpp/io/basic_ostream/write"/>
    <keyword type="function" name="std::wofstream::tellp" link="cpp/io/basic_ostream/tellp"/>
    <keyword type="function" name="std::wofstream::seekp" link="cpp/io/basic_ostream/seekp"/>
    <keyword type="function" name="std::wofstream::flush" link="cpp/io/basic_ostream/flush"/>
    <keyword type="class" name="std::wofstream::sentry" link="cpp/io/basic_ostream/sentry"/>
    <keyword type="function" name="std::wofstream::sentry::sentry" link="cpp/io/basic_ostream/sentry"/>
    <keyword type="function" name="std::wofstream::sentry::~sentry" link="cpp/io/basic_ostream/sentry"/>
    <keyword type="function" name="std::wofstream::sentry::operator bool" link="cpp/io/basic_ostream/sentry"/>
    <keyword type="function" name="std::wofstream::good" link="cpp/io/basic_ios/good"/>
    <keyword type="function" name="std::wofstream::eof" link="cpp/io/basic_ios/eof"/>
    <keyword type="function" name="std::wofstream::fail" link="cpp/io/basic_ios/fail"/>
    <keyword type="function" name="std::wofstream::bad" link="cpp/io/basic_ios/bad"/>
    <keyword type="function" name="std::wofstream::operator!" link="cpp/io/basic_ios/operator!"/>
    <keyword type="function" name="std::wofstream::operator bool" link="cpp/io/basic_ios/operator_bool"/>
    <keyword type="function" name="std::wofstream::rdstate" link="cpp/io/basic_ios/rdstate"/>
    <keyword type="function" name="std::wofstream::setstate" link="cpp/io/basic_ios/setstate"/>
    <keyword type="function" name="std::wofstream::clear" link="cpp/io/basic_ios/clear"/>
    <keyword type="function" name="std::wofstream::copyfmt" link="cpp/io/basic_ios/copyfmt"/>
    <keyword type="function" name="std::wofstream::fill" link="cpp/io/basic_ios/fill"/>
    <keyword type="function" name="std::wofstream::exceptions" link="cpp/io/basic_ios/exceptions"/>
    <keyword type="function" name="std::wofstream::imbue" link="cpp/io/basic_ios/imbue"/>
    <keyword type="function" name="std::wofstream::rdbuf" link="cpp/io/basic_ios/rdbuf"/>
    <keyword type="function" name="std::wofstream::tie" link="cpp/io/basic_ios/tie"/>
    <keyword type="function" name="std::wofstream::narrow" link="cpp/io/basic_ios/narrow"/>
    <keyword type="function" name="std::wofstream::widen" link="cpp/io/basic_ios/widen"/>
    <keyword type="function" name="std::wofstream::init" link="cpp/io/basic_ios/init"/>
    <keyword type="function" name="std::wofstream::move" link="cpp/io/basic_ios/move"/>
    <keyword type="function" name="std::wofstream::swap" link="cpp/io/basic_ios/swap"/>
    <keyword type="function" name="std::wofstream::set_rdbuf" link="cpp/io/basic_ios/set_rdbuf"/>
    <keyword type="function" name="std::wofstream::flags" link="cpp/io/ios_base/flags"/>
    <keyword type="function" name="std::wofstream::setf" link="cpp/io/ios_base/setf"/>
    <keyword type="function" name="std::wofstream::unsetf" link="cpp/io/ios_base/unsetf"/>
    <keyword type="function" name="std::wofstream::precision" link="cpp/io/ios_base/precision"/>
    <keyword type="function" name="std::wofstream::width" link="cpp/io/ios_base/width"/>
    <keyword type="function" name="std::wofstream::imbue" link="cpp/io/ios_base/imbue"/>
    <keyword type="function" name="std::wofstream::getloc" link="cpp/io/ios_base/getloc"/>
    <keyword type="function" name="std::wofstream::xalloc" link="cpp/io/ios_base/xalloc"/>
    <keyword type="function" name="std::wofstream::iword" link="cpp/io/ios_base/iword"/>
    <keyword type="function" name="std::wofstream::pword" link="cpp/io/ios_base/pword"/>
    <keyword type="function" name="std::wofstream::register_callback" link="cpp/io/ios_base/register_callback"/>
    <keyword type="function" name="std::wofstream::sync_with_stdio" link="cpp/io/ios_base/sync_with_stdio"/>
    <keyword type="class" name="std::wofstream::failure" link="cpp/io/ios_base/failure"/>
    <keyword type="function" name="std::wofstream::failure::what" link="cpp/error/exception/what"/>
    <keyword type="function" name="std::wofstream::failure::failure" link="cpp/io/ios_base/failure"/>
    <keyword type="enum" name="std::wofstream::openmode" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::wofstream::app" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::wofstream::binary" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::wofstream::in" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::wofstream::out" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::wofstream::trunc" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::wofstream::ate" link="cpp/io/ios_base/openmode"/>
    <keyword type="enum" name="std::wofstream::fmtflags" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wofstream::dec" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wofstream::oct" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wofstream::hex" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wofstream::basefield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wofstream::left" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wofstream::right" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wofstream::internal" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wofstream::adjustfield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wofstream::scientific" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wofstream::fixed" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wofstream::floatfield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wofstream::boolalpha" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wofstream::showbase" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wofstream::showpoint" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wofstream::showpos" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wofstream::skipws" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wofstream::unitbuf" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wofstream::uppercase" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="enum" name="std::wofstream::iostate" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::wofstream::goodbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::wofstream::badbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::wofstream::failbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::wofstream::eofbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="enum" name="std::wofstream::seekdir" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::wofstream::beg" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::wofstream::cur" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::wofstream::end" link="cpp/io/ios_base/seekdir"/>
    <keyword type="enum" name="std::wofstream::event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::wofstream::erase_event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::wofstream::imbue_event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::wofstream::copyfmt_event" link="cpp/io/ios_base/event"/>
    <keyword type="typedef" name="std::wofstream::event_callback" link="cpp/io/ios_base/event_callback"/>
    <keyword type="class" name="std::wofstream::Init" link="cpp/io/ios_base/Init"/>
    <keyword type="function" name="std::wofstream::wofstream" link="cpp/io/basic_ofstream/basic_ofstream"/>
    <keyword type="function" name="std::wofstream::operator=" link="cpp/io/basic_ofstream/operator="/>
    <keyword type="function" name="std::wofstream::swap" link="cpp/io/basic_ofstream/swap"/>
    <keyword type="function" name="std::wofstream::rdbuf" link="cpp/io/basic_ofstream/rdbuf"/>
    <keyword type="function" name="std::wofstream::is_open" link="cpp/io/basic_ofstream/is_open"/>
    <keyword type="function" name="std::wofstream::open" link="cpp/io/basic_ofstream/open"/>
    <keyword type="function" name="std::wofstream::close" link="cpp/io/basic_ofstream/close"/>
    <keyword type="function" name="std::swap(std::wofstream)" link="cpp/io/basic_ofstream/swap2"/>
    <keyword type="typedef" name="std::wfstream" link="cpp/io/basic_fstream"/>
    <keyword type="function" name="std::wfstream::operator&gt;&gt;" link="cpp/io/basic_istream/operator_gtgt"/>
    <keyword type="function" name="std::wfstream::get" link="cpp/io/basic_istream/get"/>
    <keyword type="function" name="std::wfstream::peek" link="cpp/io/basic_istream/peek"/>
    <keyword type="function" name="std::wfstream::unget" link="cpp/io/basic_istream/unget"/>
    <keyword type="function" name="std::wfstream::putback" link="cpp/io/basic_istream/putback"/>
    <keyword type="function" name="std::wfstream::getline" link="cpp/io/basic_istream/getline"/>
    <keyword type="function" name="std::wfstream::ignore" link="cpp/io/basic_istream/ignore"/>
    <keyword type="function" name="std::wfstream::read" link="cpp/io/basic_istream/read"/>
    <keyword type="function" name="std::wfstream::readsome" link="cpp/io/basic_istream/readsome"/>
    <keyword type="function" name="std::wfstream::gcount" link="cpp/io/basic_istream/gcount"/>
    <keyword type="function" name="std::wfstream::tellg" link="cpp/io/basic_istream/tellg"/>
    <keyword type="function" name="std::wfstream::seekg" link="cpp/io/basic_istream/seekg"/>
    <keyword type="function" name="std::wfstream::sync" link="cpp/io/basic_istream/sync"/>
    <keyword type="class" name="std::wfstream::sentry" link="cpp/io/basic_istream/sentry"/>
    <keyword type="function" name="std::wfstream::sentry::sentry" link="cpp/io/basic_istream/sentry"/>
    <keyword type="function" name="std::wfstream::sentry::~sentry" link="cpp/io/basic_istream/sentry"/>
    <keyword type="function" name="std::wfstream::sentry::operator bool" link="cpp/io/basic_istream/sentry"/>
    <keyword type="function" name="std::wfstream::operator&lt;&lt;" link="cpp/io/basic_ostream/operator_ltlt"/>
    <keyword type="function" name="std::wfstream::put" link="cpp/io/basic_ostream/put"/>
    <keyword type="function" name="std::wfstream::write" link="cpp/io/basic_ostream/write"/>
    <keyword type="function" name="std::wfstream::tellp" link="cpp/io/basic_ostream/tellp"/>
    <keyword type="function" name="std::wfstream::seekp" link="cpp/io/basic_ostream/seekp"/>
    <keyword type="function" name="std::wfstream::flush" link="cpp/io/basic_ostream/flush"/>
    <keyword type="class" name="std::wfstream::sentry" link="cpp/io/basic_ostream/sentry"/>
    <keyword type="function" name="std::wfstream::sentry::sentry" link="cpp/io/basic_ostream/sentry"/>
    <keyword type="function" name="std::wfstream::sentry::~sentry" link="cpp/io/basic_ostream/sentry"/>
    <keyword type="function" name="std::wfstream::sentry::operator bool" link="cpp/io/basic_ostream/sentry"/>
    <keyword type="function" name="std::wfstream::good" link="cpp/io/basic_ios/good"/>
    <keyword type="function" name="std::wfstream::eof" link="cpp/io/basic_ios/eof"/>
    <keyword type="function" name="std::wfstream::fail" link="cpp/io/basic_ios/fail"/>
    <keyword type="function" name="std::wfstream::bad" link="cpp/io/basic_ios/bad"/>
    <keyword type="function" name="std::wfstream::operator!" link="cpp/io/basic_ios/operator!"/>
    <keyword type="function" name="std::wfstream::operator bool" link="cpp/io/basic_ios/operator_bool"/>
    <keyword type="function" name="std::wfstream::rdstate" link="cpp/io/basic_ios/rdstate"/>
    <keyword type="function" name="std::wfstream::setstate" link="cpp/io/basic_ios/setstate"/>
    <keyword type="function" name="std::wfstream::clear" link="cpp/io/basic_ios/clear"/>
    <keyword type="function" name="std::wfstream::copyfmt" link="cpp/io/basic_ios/copyfmt"/>
    <keyword type="function" name="std::wfstream::fill" link="cpp/io/basic_ios/fill"/>
    <keyword type="function" name="std::wfstream::exceptions" link="cpp/io/basic_ios/exceptions"/>
    <keyword type="function" name="std::wfstream::imbue" link="cpp/io/basic_ios/imbue"/>
    <keyword type="function" name="std::wfstream::rdbuf" link="cpp/io/basic_ios/rdbuf"/>
    <keyword type="function" name="std::wfstream::tie" link="cpp/io/basic_ios/tie"/>
    <keyword type="function" name="std::wfstream::narrow" link="cpp/io/basic_ios/narrow"/>
    <keyword type="function" name="std::wfstream::widen" link="cpp/io/basic_ios/widen"/>
    <keyword type="function" name="std::wfstream::init" link="cpp/io/basic_ios/init"/>
    <keyword type="function" name="std::wfstream::move" link="cpp/io/basic_ios/move"/>
    <keyword type="function" name="std::wfstream::swap" link="cpp/io/basic_ios/swap"/>
    <keyword type="function" name="std::wfstream::set_rdbuf" link="cpp/io/basic_ios/set_rdbuf"/>
    <keyword type="function" name="std::wfstream::flags" link="cpp/io/ios_base/flags"/>
    <keyword type="function" name="std::wfstream::setf" link="cpp/io/ios_base/setf"/>
    <keyword type="function" name="std::wfstream::unsetf" link="cpp/io/ios_base/unsetf"/>
    <keyword type="function" name="std::wfstream::precision" link="cpp/io/ios_base/precision"/>
    <keyword type="function" name="std::wfstream::width" link="cpp/io/ios_base/width"/>
    <keyword type="function" name="std::wfstream::imbue" link="cpp/io/ios_base/imbue"/>
    <keyword type="function" name="std::wfstream::getloc" link="cpp/io/ios_base/getloc"/>
    <keyword type="function" name="std::wfstream::xalloc" link="cpp/io/ios_base/xalloc"/>
    <keyword type="function" name="std::wfstream::iword" link="cpp/io/ios_base/iword"/>
    <keyword type="function" name="std::wfstream::pword" link="cpp/io/ios_base/pword"/>
    <keyword type="function" name="std::wfstream::register_callback" link="cpp/io/ios_base/register_callback"/>
    <keyword type="function" name="std::wfstream::sync_with_stdio" link="cpp/io/ios_base/sync_with_stdio"/>
    <keyword type="class" name="std::wfstream::failure" link="cpp/io/ios_base/failure"/>
    <keyword type="function" name="std::wfstream::failure::what" link="cpp/error/exception/what"/>
    <keyword type="function" name="std::wfstream::failure::failure" link="cpp/io/ios_base/failure"/>
    <keyword type="enum" name="std::wfstream::openmode" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::wfstream::app" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::wfstream::binary" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::wfstream::in" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::wfstream::out" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::wfstream::trunc" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::wfstream::ate" link="cpp/io/ios_base/openmode"/>
    <keyword type="enum" name="std::wfstream::fmtflags" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wfstream::dec" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wfstream::oct" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wfstream::hex" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wfstream::basefield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wfstream::left" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wfstream::right" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wfstream::internal" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wfstream::adjustfield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wfstream::scientific" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wfstream::fixed" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wfstream::floatfield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wfstream::boolalpha" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wfstream::showbase" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wfstream::showpoint" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wfstream::showpos" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wfstream::skipws" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wfstream::unitbuf" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wfstream::uppercase" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="enum" name="std::wfstream::iostate" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::wfstream::goodbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::wfstream::badbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::wfstream::failbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::wfstream::eofbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="enum" name="std::wfstream::seekdir" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::wfstream::beg" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::wfstream::cur" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::wfstream::end" link="cpp/io/ios_base/seekdir"/>
    <keyword type="enum" name="std::wfstream::event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::wfstream::erase_event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::wfstream::imbue_event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::wfstream::copyfmt_event" link="cpp/io/ios_base/event"/>
    <keyword type="typedef" name="std::wfstream::event_callback" link="cpp/io/ios_base/event_callback"/>
    <keyword type="class" name="std::wfstream::Init" link="cpp/io/ios_base/Init"/>
    <keyword type="function" name="std::wfstream::wfstream" link="cpp/io/basic_fstream/basic_fstream"/>
    <keyword type="function" name="std::wfstream::operator=" link="cpp/io/basic_fstream/operator="/>
    <keyword type="function" name="std::wfstream::swap" link="cpp/io/basic_fstream/swap"/>
    <keyword type="function" name="std::wfstream::rdbuf" link="cpp/io/basic_fstream/rdbuf"/>
    <keyword type="function" name="std::wfstream::is_open" link="cpp/io/basic_fstream/is_open"/>
    <keyword type="function" name="std::wfstream::open" link="cpp/io/basic_fstream/open"/>
    <keyword type="function" name="std::wfstream::close" link="cpp/io/basic_fstream/close"/>
    <keyword type="function" name="std::swap(std::wfstream)" link="cpp/io/basic_fstream/swap2"/>
    <keyword type="typedef" name="std::wistringstream" link="cpp/io/basic_istringstream"/>
    <keyword type="function" name="std::wistringstream::operator&gt;&gt;" link="cpp/io/basic_istream/operator_gtgt"/>
    <keyword type="function" name="std::wistringstream::get" link="cpp/io/basic_istream/get"/>
    <keyword type="function" name="std::wistringstream::peek" link="cpp/io/basic_istream/peek"/>
    <keyword type="function" name="std::wistringstream::unget" link="cpp/io/basic_istream/unget"/>
    <keyword type="function" name="std::wistringstream::putback" link="cpp/io/basic_istream/putback"/>
    <keyword type="function" name="std::wistringstream::getline" link="cpp/io/basic_istream/getline"/>
    <keyword type="function" name="std::wistringstream::ignore" link="cpp/io/basic_istream/ignore"/>
    <keyword type="function" name="std::wistringstream::read" link="cpp/io/basic_istream/read"/>
    <keyword type="function" name="std::wistringstream::readsome" link="cpp/io/basic_istream/readsome"/>
    <keyword type="function" name="std::wistringstream::gcount" link="cpp/io/basic_istream/gcount"/>
    <keyword type="function" name="std::wistringstream::tellg" link="cpp/io/basic_istream/tellg"/>
    <keyword type="function" name="std::wistringstream::seekg" link="cpp/io/basic_istream/seekg"/>
    <keyword type="function" name="std::wistringstream::sync" link="cpp/io/basic_istream/sync"/>
    <keyword type="class" name="std::wistringstream::sentry" link="cpp/io/basic_istream/sentry"/>
    <keyword type="function" name="std::wistringstream::sentry::sentry" link="cpp/io/basic_istream/sentry"/>
    <keyword type="function" name="std::wistringstream::sentry::~sentry" link="cpp/io/basic_istream/sentry"/>
    <keyword type="function" name="std::wistringstream::sentry::operator bool" link="cpp/io/basic_istream/sentry"/>
    <keyword type="function" name="std::wistringstream::good" link="cpp/io/basic_ios/good"/>
    <keyword type="function" name="std::wistringstream::eof" link="cpp/io/basic_ios/eof"/>
    <keyword type="function" name="std::wistringstream::fail" link="cpp/io/basic_ios/fail"/>
    <keyword type="function" name="std::wistringstream::bad" link="cpp/io/basic_ios/bad"/>
    <keyword type="function" name="std::wistringstream::operator!" link="cpp/io/basic_ios/operator!"/>
    <keyword type="function" name="std::wistringstream::operator bool" link="cpp/io/basic_ios/operator_bool"/>
    <keyword type="function" name="std::wistringstream::rdstate" link="cpp/io/basic_ios/rdstate"/>
    <keyword type="function" name="std::wistringstream::setstate" link="cpp/io/basic_ios/setstate"/>
    <keyword type="function" name="std::wistringstream::clear" link="cpp/io/basic_ios/clear"/>
    <keyword type="function" name="std::wistringstream::copyfmt" link="cpp/io/basic_ios/copyfmt"/>
    <keyword type="function" name="std::wistringstream::fill" link="cpp/io/basic_ios/fill"/>
    <keyword type="function" name="std::wistringstream::exceptions" link="cpp/io/basic_ios/exceptions"/>
    <keyword type="function" name="std::wistringstream::imbue" link="cpp/io/basic_ios/imbue"/>
    <keyword type="function" name="std::wistringstream::rdbuf" link="cpp/io/basic_ios/rdbuf"/>
    <keyword type="function" name="std::wistringstream::tie" link="cpp/io/basic_ios/tie"/>
    <keyword type="function" name="std::wistringstream::narrow" link="cpp/io/basic_ios/narrow"/>
    <keyword type="function" name="std::wistringstream::widen" link="cpp/io/basic_ios/widen"/>
    <keyword type="function" name="std::wistringstream::init" link="cpp/io/basic_ios/init"/>
    <keyword type="function" name="std::wistringstream::move" link="cpp/io/basic_ios/move"/>
    <keyword type="function" name="std::wistringstream::swap" link="cpp/io/basic_ios/swap"/>
    <keyword type="function" name="std::wistringstream::set_rdbuf" link="cpp/io/basic_ios/set_rdbuf"/>
    <keyword type="function" name="std::wistringstream::flags" link="cpp/io/ios_base/flags"/>
    <keyword type="function" name="std::wistringstream::setf" link="cpp/io/ios_base/setf"/>
    <keyword type="function" name="std::wistringstream::unsetf" link="cpp/io/ios_base/unsetf"/>
    <keyword type="function" name="std::wistringstream::precision" link="cpp/io/ios_base/precision"/>
    <keyword type="function" name="std::wistringstream::width" link="cpp/io/ios_base/width"/>
    <keyword type="function" name="std::wistringstream::imbue" link="cpp/io/ios_base/imbue"/>
    <keyword type="function" name="std::wistringstream::getloc" link="cpp/io/ios_base/getloc"/>
    <keyword type="function" name="std::wistringstream::xalloc" link="cpp/io/ios_base/xalloc"/>
    <keyword type="function" name="std::wistringstream::iword" link="cpp/io/ios_base/iword"/>
    <keyword type="function" name="std::wistringstream::pword" link="cpp/io/ios_base/pword"/>
    <keyword type="function" name="std::wistringstream::register_callback" link="cpp/io/ios_base/register_callback"/>
    <keyword type="function" name="std::wistringstream::sync_with_stdio" link="cpp/io/ios_base/sync_with_stdio"/>
    <keyword type="class" name="std::wistringstream::failure" link="cpp/io/ios_base/failure"/>
    <keyword type="function" name="std::wistringstream::failure::what" link="cpp/error/exception/what"/>
    <keyword type="function" name="std::wistringstream::failure::failure" link="cpp/io/ios_base/failure"/>
    <keyword type="enum" name="std::wistringstream::openmode" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::wistringstream::app" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::wistringstream::binary" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::wistringstream::in" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::wistringstream::out" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::wistringstream::trunc" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::wistringstream::ate" link="cpp/io/ios_base/openmode"/>
    <keyword type="enum" name="std::wistringstream::fmtflags" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wistringstream::dec" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wistringstream::oct" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wistringstream::hex" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wistringstream::basefield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wistringstream::left" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wistringstream::right" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wistringstream::internal" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wistringstream::adjustfield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wistringstream::scientific" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wistringstream::fixed" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wistringstream::floatfield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wistringstream::boolalpha" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wistringstream::showbase" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wistringstream::showpoint" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wistringstream::showpos" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wistringstream::skipws" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wistringstream::unitbuf" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wistringstream::uppercase" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="enum" name="std::wistringstream::iostate" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::wistringstream::goodbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::wistringstream::badbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::wistringstream::failbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::wistringstream::eofbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="enum" name="std::wistringstream::seekdir" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::wistringstream::beg" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::wistringstream::cur" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::wistringstream::end" link="cpp/io/ios_base/seekdir"/>
    <keyword type="enum" name="std::wistringstream::event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::wistringstream::erase_event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::wistringstream::imbue_event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::wistringstream::copyfmt_event" link="cpp/io/ios_base/event"/>
    <keyword type="typedef" name="std::wistringstream::event_callback" link="cpp/io/ios_base/event_callback"/>
    <keyword type="class" name="std::wistringstream::Init" link="cpp/io/ios_base/Init"/>
    <keyword type="function" name="std::wistringstream::wistringstream" link="cpp/io/basic_istringstream/basic_istringstream"/>
    <keyword type="function" name="std::wistringstream::operator=" link="cpp/io/basic_istringstream/operator="/>
    <keyword type="function" name="std::wistringstream::swap" link="cpp/io/basic_istringstream/swap"/>
    <keyword type="function" name="std::wistringstream::rdbuf" link="cpp/io/basic_istringstream/rdbuf"/>
    <keyword type="function" name="std::wistringstream::str" link="cpp/io/basic_istringstream/str"/>
    <keyword type="function" name="std::swap(std::wistringstream)" link="cpp/io/basic_istringstream/swap2"/>
    <keyword type="typedef" name="std::wostringstream" link="cpp/io/basic_ostringstream"/>
    <keyword type="function" name="std::wostringstream::operator&lt;&lt;" link="cpp/io/basic_ostream/operator_ltlt"/>
    <keyword type="function" name="std::wostringstream::put" link="cpp/io/basic_ostream/put"/>
    <keyword type="function" name="std::wostringstream::write" link="cpp/io/basic_ostream/write"/>
    <keyword type="function" name="std::wostringstream::tellp" link="cpp/io/basic_ostream/tellp"/>
    <keyword type="function" name="std::wostringstream::seekp" link="cpp/io/basic_ostream/seekp"/>
    <keyword type="function" name="std::wostringstream::flush" link="cpp/io/basic_ostream/flush"/>
    <keyword type="class" name="std::wostringstream::sentry" link="cpp/io/basic_ostream/sentry"/>
    <keyword type="function" name="std::wostringstream::sentry::sentry" link="cpp/io/basic_ostream/sentry"/>
    <keyword type="function" name="std::wostringstream::sentry::~sentry" link="cpp/io/basic_ostream/sentry"/>
    <keyword type="function" name="std::wostringstream::sentry::operator bool" link="cpp/io/basic_ostream/sentry"/>
    <keyword type="function" name="std::wostringstream::good" link="cpp/io/basic_ios/good"/>
    <keyword type="function" name="std::wostringstream::eof" link="cpp/io/basic_ios/eof"/>
    <keyword type="function" name="std::wostringstream::fail" link="cpp/io/basic_ios/fail"/>
    <keyword type="function" name="std::wostringstream::bad" link="cpp/io/basic_ios/bad"/>
    <keyword type="function" name="std::wostringstream::operator!" link="cpp/io/basic_ios/operator!"/>
    <keyword type="function" name="std::wostringstream::operator bool" link="cpp/io/basic_ios/operator_bool"/>
    <keyword type="function" name="std::wostringstream::rdstate" link="cpp/io/basic_ios/rdstate"/>
    <keyword type="function" name="std::wostringstream::setstate" link="cpp/io/basic_ios/setstate"/>
    <keyword type="function" name="std::wostringstream::clear" link="cpp/io/basic_ios/clear"/>
    <keyword type="function" name="std::wostringstream::copyfmt" link="cpp/io/basic_ios/copyfmt"/>
    <keyword type="function" name="std::wostringstream::fill" link="cpp/io/basic_ios/fill"/>
    <keyword type="function" name="std::wostringstream::exceptions" link="cpp/io/basic_ios/exceptions"/>
    <keyword type="function" name="std::wostringstream::imbue" link="cpp/io/basic_ios/imbue"/>
    <keyword type="function" name="std::wostringstream::rdbuf" link="cpp/io/basic_ios/rdbuf"/>
    <keyword type="function" name="std::wostringstream::tie" link="cpp/io/basic_ios/tie"/>
    <keyword type="function" name="std::wostringstream::narrow" link="cpp/io/basic_ios/narrow"/>
    <keyword type="function" name="std::wostringstream::widen" link="cpp/io/basic_ios/widen"/>
    <keyword type="function" name="std::wostringstream::init" link="cpp/io/basic_ios/init"/>
    <keyword type="function" name="std::wostringstream::move" link="cpp/io/basic_ios/move"/>
    <keyword type="function" name="std::wostringstream::swap" link="cpp/io/basic_ios/swap"/>
    <keyword type="function" name="std::wostringstream::set_rdbuf" link="cpp/io/basic_ios/set_rdbuf"/>
    <keyword type="function" name="std::wostringstream::flags" link="cpp/io/ios_base/flags"/>
    <keyword type="function" name="std::wostringstream::setf" link="cpp/io/ios_base/setf"/>
    <keyword type="function" name="std::wostringstream::unsetf" link="cpp/io/ios_base/unsetf"/>
    <keyword type="function" name="std::wostringstream::precision" link="cpp/io/ios_base/precision"/>
    <keyword type="function" name="std::wostringstream::width" link="cpp/io/ios_base/width"/>
    <keyword type="function" name="std::wostringstream::imbue" link="cpp/io/ios_base/imbue"/>
    <keyword type="function" name="std::wostringstream::getloc" link="cpp/io/ios_base/getloc"/>
    <keyword type="function" name="std::wostringstream::xalloc" link="cpp/io/ios_base/xalloc"/>
    <keyword type="function" name="std::wostringstream::iword" link="cpp/io/ios_base/iword"/>
    <keyword type="function" name="std::wostringstream::pword" link="cpp/io/ios_base/pword"/>
    <keyword type="function" name="std::wostringstream::register_callback" link="cpp/io/ios_base/register_callback"/>
    <keyword type="function" name="std::wostringstream::sync_with_stdio" link="cpp/io/ios_base/sync_with_stdio"/>
    <keyword type="class" name="std::wostringstream::failure" link="cpp/io/ios_base/failure"/>
    <keyword type="function" name="std::wostringstream::failure::what" link="cpp/error/exception/what"/>
    <keyword type="function" name="std::wostringstream::failure::failure" link="cpp/io/ios_base/failure"/>
    <keyword type="enum" name="std::wostringstream::openmode" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::wostringstream::app" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::wostringstream::binary" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::wostringstream::in" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::wostringstream::out" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::wostringstream::trunc" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::wostringstream::ate" link="cpp/io/ios_base/openmode"/>
    <keyword type="enum" name="std::wostringstream::fmtflags" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wostringstream::dec" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wostringstream::oct" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wostringstream::hex" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wostringstream::basefield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wostringstream::left" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wostringstream::right" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wostringstream::internal" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wostringstream::adjustfield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wostringstream::scientific" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wostringstream::fixed" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wostringstream::floatfield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wostringstream::boolalpha" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wostringstream::showbase" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wostringstream::showpoint" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wostringstream::showpos" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wostringstream::skipws" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wostringstream::unitbuf" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wostringstream::uppercase" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="enum" name="std::wostringstream::iostate" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::wostringstream::goodbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::wostringstream::badbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::wostringstream::failbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::wostringstream::eofbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="enum" name="std::wostringstream::seekdir" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::wostringstream::beg" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::wostringstream::cur" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::wostringstream::end" link="cpp/io/ios_base/seekdir"/>
    <keyword type="enum" name="std::wostringstream::event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::wostringstream::erase_event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::wostringstream::imbue_event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::wostringstream::copyfmt_event" link="cpp/io/ios_base/event"/>
    <keyword type="typedef" name="std::wostringstream::event_callback" link="cpp/io/ios_base/event_callback"/>
    <keyword type="class" name="std::wostringstream::Init" link="cpp/io/ios_base/Init"/>
    <keyword type="function" name="std::wostringstream::wostringstream" link="cpp/io/basic_ostringstream/basic_ostringstream"/>
    <keyword type="function" name="std::wostringstream::operator=" link="cpp/io/basic_ostringstream/operator="/>
    <keyword type="function" name="std::wostringstream::swap" link="cpp/io/basic_ostringstream/swap"/>
    <keyword type="function" name="std::wostringstream::rdbuf" link="cpp/io/basic_ostringstream/rdbuf"/>
    <keyword type="function" name="std::wostringstream::str" link="cpp/io/basic_ostringstream/str"/>
    <keyword type="function" name="std::swap(std::wostringstream)" link="cpp/io/basic_ostringstream/swap2"/>
    <keyword type="typedef" name="std::wstringstream" link="cpp/io/basic_stringstream"/>
    <keyword type="function" name="std::wstringstream::operator&gt;&gt;" link="cpp/io/basic_istream/operator_gtgt"/>
    <keyword type="function" name="std::wstringstream::get" link="cpp/io/basic_istream/get"/>
    <keyword type="function" name="std::wstringstream::peek" link="cpp/io/basic_istream/peek"/>
    <keyword type="function" name="std::wstringstream::unget" link="cpp/io/basic_istream/unget"/>
    <keyword type="function" name="std::wstringstream::putback" link="cpp/io/basic_istream/putback"/>
    <keyword type="function" name="std::wstringstream::getline" link="cpp/io/basic_istream/getline"/>
    <keyword type="function" name="std::wstringstream::ignore" link="cpp/io/basic_istream/ignore"/>
    <keyword type="function" name="std::wstringstream::read" link="cpp/io/basic_istream/read"/>
    <keyword type="function" name="std::wstringstream::readsome" link="cpp/io/basic_istream/readsome"/>
    <keyword type="function" name="std::wstringstream::gcount" link="cpp/io/basic_istream/gcount"/>
    <keyword type="function" name="std::wstringstream::tellg" link="cpp/io/basic_istream/tellg"/>
    <keyword type="function" name="std::wstringstream::seekg" link="cpp/io/basic_istream/seekg"/>
    <keyword type="function" name="std::wstringstream::sync" link="cpp/io/basic_istream/sync"/>
    <keyword type="class" name="std::wstringstream::sentry" link="cpp/io/basic_istream/sentry"/>
    <keyword type="function" name="std::wstringstream::sentry::sentry" link="cpp/io/basic_istream/sentry"/>
    <keyword type="function" name="std::wstringstream::sentry::~sentry" link="cpp/io/basic_istream/sentry"/>
    <keyword type="function" name="std::wstringstream::sentry::operator bool" link="cpp/io/basic_istream/sentry"/>
    <keyword type="function" name="std::wstringstream::operator&lt;&lt;" link="cpp/io/basic_ostream/operator_ltlt"/>
    <keyword type="function" name="std::wstringstream::put" link="cpp/io/basic_ostream/put"/>
    <keyword type="function" name="std::wstringstream::write" link="cpp/io/basic_ostream/write"/>
    <keyword type="function" name="std::wstringstream::tellp" link="cpp/io/basic_ostream/tellp"/>
    <keyword type="function" name="std::wstringstream::seekp" link="cpp/io/basic_ostream/seekp"/>
    <keyword type="function" name="std::wstringstream::flush" link="cpp/io/basic_ostream/flush"/>
    <keyword type="class" name="std::wstringstream::sentry" link="cpp/io/basic_ostream/sentry"/>
    <keyword type="function" name="std::wstringstream::sentry::sentry" link="cpp/io/basic_ostream/sentry"/>
    <keyword type="function" name="std::wstringstream::sentry::~sentry" link="cpp/io/basic_ostream/sentry"/>
    <keyword type="function" name="std::wstringstream::sentry::operator bool" link="cpp/io/basic_ostream/sentry"/>
    <keyword type="function" name="std::wstringstream::good" link="cpp/io/basic_ios/good"/>
    <keyword type="function" name="std::wstringstream::eof" link="cpp/io/basic_ios/eof"/>
    <keyword type="function" name="std::wstringstream::fail" link="cpp/io/basic_ios/fail"/>
    <keyword type="function" name="std::wstringstream::bad" link="cpp/io/basic_ios/bad"/>
    <keyword type="function" name="std::wstringstream::operator!" link="cpp/io/basic_ios/operator!"/>
    <keyword type="function" name="std::wstringstream::operator bool" link="cpp/io/basic_ios/operator_bool"/>
    <keyword type="function" name="std::wstringstream::rdstate" link="cpp/io/basic_ios/rdstate"/>
    <keyword type="function" name="std::wstringstream::setstate" link="cpp/io/basic_ios/setstate"/>
    <keyword type="function" name="std::wstringstream::clear" link="cpp/io/basic_ios/clear"/>
    <keyword type="function" name="std::wstringstream::copyfmt" link="cpp/io/basic_ios/copyfmt"/>
    <keyword type="function" name="std::wstringstream::fill" link="cpp/io/basic_ios/fill"/>
    <keyword type="function" name="std::wstringstream::exceptions" link="cpp/io/basic_ios/exceptions"/>
    <keyword type="function" name="std::wstringstream::imbue" link="cpp/io/basic_ios/imbue"/>
    <keyword type="function" name="std::wstringstream::rdbuf" link="cpp/io/basic_ios/rdbuf"/>
    <keyword type="function" name="std::wstringstream::tie" link="cpp/io/basic_ios/tie"/>
    <keyword type="function" name="std::wstringstream::narrow" link="cpp/io/basic_ios/narrow"/>
    <keyword type="function" name="std::wstringstream::widen" link="cpp/io/basic_ios/widen"/>
    <keyword type="function" name="std::wstringstream::init" link="cpp/io/basic_ios/init"/>
    <keyword type="function" name="std::wstringstream::move" link="cpp/io/basic_ios/move"/>
    <keyword type="function" name="std::wstringstream::swap" link="cpp/io/basic_ios/swap"/>
    <keyword type="function" name="std::wstringstream::set_rdbuf" link="cpp/io/basic_ios/set_rdbuf"/>
    <keyword type="function" name="std::wstringstream::flags" link="cpp/io/ios_base/flags"/>
    <keyword type="function" name="std::wstringstream::setf" link="cpp/io/ios_base/setf"/>
    <keyword type="function" name="std::wstringstream::unsetf" link="cpp/io/ios_base/unsetf"/>
    <keyword type="function" name="std::wstringstream::precision" link="cpp/io/ios_base/precision"/>
    <keyword type="function" name="std::wstringstream::width" link="cpp/io/ios_base/width"/>
    <keyword type="function" name="std::wstringstream::imbue" link="cpp/io/ios_base/imbue"/>
    <keyword type="function" name="std::wstringstream::getloc" link="cpp/io/ios_base/getloc"/>
    <keyword type="function" name="std::wstringstream::xalloc" link="cpp/io/ios_base/xalloc"/>
    <keyword type="function" name="std::wstringstream::iword" link="cpp/io/ios_base/iword"/>
    <keyword type="function" name="std::wstringstream::pword" link="cpp/io/ios_base/pword"/>
    <keyword type="function" name="std::wstringstream::register_callback" link="cpp/io/ios_base/register_callback"/>
    <keyword type="function" name="std::wstringstream::sync_with_stdio" link="cpp/io/ios_base/sync_with_stdio"/>
    <keyword type="class" name="std::wstringstream::failure" link="cpp/io/ios_base/failure"/>
    <keyword type="function" name="std::wstringstream::failure::what" link="cpp/error/exception/what"/>
    <keyword type="function" name="std::wstringstream::failure::failure" link="cpp/io/ios_base/failure"/>
    <keyword type="enum" name="std::wstringstream::openmode" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::wstringstream::app" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::wstringstream::binary" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::wstringstream::in" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::wstringstream::out" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::wstringstream::trunc" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::wstringstream::ate" link="cpp/io/ios_base/openmode"/>
    <keyword type="enum" name="std::wstringstream::fmtflags" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wstringstream::dec" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wstringstream::oct" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wstringstream::hex" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wstringstream::basefield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wstringstream::left" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wstringstream::right" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wstringstream::internal" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wstringstream::adjustfield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wstringstream::scientific" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wstringstream::fixed" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wstringstream::floatfield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wstringstream::boolalpha" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wstringstream::showbase" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wstringstream::showpoint" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wstringstream::showpos" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wstringstream::skipws" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wstringstream::unitbuf" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wstringstream::uppercase" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="enum" name="std::wstringstream::iostate" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::wstringstream::goodbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::wstringstream::badbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::wstringstream::failbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::wstringstream::eofbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="enum" name="std::wstringstream::seekdir" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::wstringstream::beg" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::wstringstream::cur" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::wstringstream::end" link="cpp/io/ios_base/seekdir"/>
    <keyword type="enum" name="std::wstringstream::event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::wstringstream::erase_event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::wstringstream::imbue_event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::wstringstream::copyfmt_event" link="cpp/io/ios_base/event"/>
    <keyword type="typedef" name="std::wstringstream::event_callback" link="cpp/io/ios_base/event_callback"/>
    <keyword type="class" name="std::wstringstream::Init" link="cpp/io/ios_base/Init"/>
    <keyword type="function" name="std::wstringstream::wstringstream" link="cpp/io/basic_stringstream/basic_stringstream"/>
    <keyword type="function" name="std::wstringstream::operator=" link="cpp/io/basic_stringstream/operator="/>
    <keyword type="function" name="std::wstringstream::swap" link="cpp/io/basic_stringstream/swap"/>
    <keyword type="function" name="std::wstringstream::rdbuf" link="cpp/io/basic_stringstream/rdbuf"/>
    <keyword type="function" name="std::wstringstream::str" link="cpp/io/basic_stringstream/str"/>
    <keyword type="function" name="std::swap(std::wstringstream)" link="cpp/io/basic_stringstream/swap2"/>
    <keyword type="typedef" name="std::wosyncstream" link="cpp/io/basic_osyncstream"/>
    <keyword type="function" name="std::wosyncstream::operator&lt;&lt;" link="cpp/io/basic_ostream/operator_ltlt"/>
    <keyword type="function" name="std::wosyncstream::put" link="cpp/io/basic_ostream/put"/>
    <keyword type="function" name="std::wosyncstream::write" link="cpp/io/basic_ostream/write"/>
    <keyword type="function" name="std::wosyncstream::tellp" link="cpp/io/basic_ostream/tellp"/>
    <keyword type="function" name="std::wosyncstream::seekp" link="cpp/io/basic_ostream/seekp"/>
    <keyword type="function" name="std::wosyncstream::flush" link="cpp/io/basic_ostream/flush"/>
    <keyword type="class" name="std::wosyncstream::sentry" link="cpp/io/basic_ostream/sentry"/>
    <keyword type="function" name="std::wosyncstream::sentry::sentry" link="cpp/io/basic_ostream/sentry"/>
    <keyword type="function" name="std::wosyncstream::sentry::~sentry" link="cpp/io/basic_ostream/sentry"/>
    <keyword type="function" name="std::wosyncstream::sentry::operator bool" link="cpp/io/basic_ostream/sentry"/>
    <keyword type="function" name="std::wosyncstream::good" link="cpp/io/basic_ios/good"/>
    <keyword type="function" name="std::wosyncstream::eof" link="cpp/io/basic_ios/eof"/>
    <keyword type="function" name="std::wosyncstream::fail" link="cpp/io/basic_ios/fail"/>
    <keyword type="function" name="std::wosyncstream::bad" link="cpp/io/basic_ios/bad"/>
    <keyword type="function" name="std::wosyncstream::operator!" link="cpp/io/basic_ios/operator!"/>
    <keyword type="function" name="std::wosyncstream::operator bool" link="cpp/io/basic_ios/operator_bool"/>
    <keyword type="function" name="std::wosyncstream::rdstate" link="cpp/io/basic_ios/rdstate"/>
    <keyword type="function" name="std::wosyncstream::setstate" link="cpp/io/basic_ios/setstate"/>
    <keyword type="function" name="std::wosyncstream::clear" link="cpp/io/basic_ios/clear"/>
    <keyword type="function" name="std::wosyncstream::copyfmt" link="cpp/io/basic_ios/copyfmt"/>
    <keyword type="function" name="std::wosyncstream::fill" link="cpp/io/basic_ios/fill"/>
    <keyword type="function" name="std::wosyncstream::exceptions" link="cpp/io/basic_ios/exceptions"/>
    <keyword type="function" name="std::wosyncstream::imbue" link="cpp/io/basic_ios/imbue"/>
    <keyword type="function" name="std::wosyncstream::rdbuf" link="cpp/io/basic_ios/rdbuf"/>
    <keyword type="function" name="std::wosyncstream::tie" link="cpp/io/basic_ios/tie"/>
    <keyword type="function" name="std::wosyncstream::narrow" link="cpp/io/basic_ios/narrow"/>
    <keyword type="function" name="std::wosyncstream::widen" link="cpp/io/basic_ios/widen"/>
    <keyword type="function" name="std::wosyncstream::init" link="cpp/io/basic_ios/init"/>
    <keyword type="function" name="std::wosyncstream::move" link="cpp/io/basic_ios/move"/>
    <keyword type="function" name="std::wosyncstream::swap" link="cpp/io/basic_ios/swap"/>
    <keyword type="function" name="std::wosyncstream::set_rdbuf" link="cpp/io/basic_ios/set_rdbuf"/>
    <keyword type="function" name="std::wosyncstream::flags" link="cpp/io/ios_base/flags"/>
    <keyword type="function" name="std::wosyncstream::setf" link="cpp/io/ios_base/setf"/>
    <keyword type="function" name="std::wosyncstream::unsetf" link="cpp/io/ios_base/unsetf"/>
    <keyword type="function" name="std::wosyncstream::precision" link="cpp/io/ios_base/precision"/>
    <keyword type="function" name="std::wosyncstream::width" link="cpp/io/ios_base/width"/>
    <keyword type="function" name="std::wosyncstream::imbue" link="cpp/io/ios_base/imbue"/>
    <keyword type="function" name="std::wosyncstream::getloc" link="cpp/io/ios_base/getloc"/>
    <keyword type="function" name="std::wosyncstream::xalloc" link="cpp/io/ios_base/xalloc"/>
    <keyword type="function" name="std::wosyncstream::iword" link="cpp/io/ios_base/iword"/>
    <keyword type="function" name="std::wosyncstream::pword" link="cpp/io/ios_base/pword"/>
    <keyword type="function" name="std::wosyncstream::register_callback" link="cpp/io/ios_base/register_callback"/>
    <keyword type="function" name="std::wosyncstream::sync_with_stdio" link="cpp/io/ios_base/sync_with_stdio"/>
    <keyword type="class" name="std::wosyncstream::failure" link="cpp/io/ios_base/failure"/>
    <keyword type="function" name="std::wosyncstream::failure::what" link="cpp/error/exception/what"/>
    <keyword type="function" name="std::wosyncstream::failure::failure" link="cpp/io/ios_base/failure"/>
    <keyword type="enum" name="std::wosyncstream::openmode" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::wosyncstream::app" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::wosyncstream::binary" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::wosyncstream::in" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::wosyncstream::out" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::wosyncstream::trunc" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::wosyncstream::ate" link="cpp/io/ios_base/openmode"/>
    <keyword type="enum" name="std::wosyncstream::fmtflags" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wosyncstream::dec" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wosyncstream::oct" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wosyncstream::hex" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wosyncstream::basefield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wosyncstream::left" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wosyncstream::right" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wosyncstream::internal" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wosyncstream::adjustfield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wosyncstream::scientific" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wosyncstream::fixed" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wosyncstream::floatfield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wosyncstream::boolalpha" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wosyncstream::showbase" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wosyncstream::showpoint" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wosyncstream::showpos" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wosyncstream::skipws" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wosyncstream::unitbuf" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::wosyncstream::uppercase" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="enum" name="std::wosyncstream::iostate" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::wosyncstream::goodbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::wosyncstream::badbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::wosyncstream::failbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::wosyncstream::eofbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="enum" name="std::wosyncstream::seekdir" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::wosyncstream::beg" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::wosyncstream::cur" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::wosyncstream::end" link="cpp/io/ios_base/seekdir"/>
    <keyword type="enum" name="std::wosyncstream::event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::wosyncstream::erase_event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::wosyncstream::imbue_event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::wosyncstream::copyfmt_event" link="cpp/io/ios_base/event"/>
    <keyword type="typedef" name="std::wosyncstream::event_callback" link="cpp/io/ios_base/event_callback"/>
    <keyword type="class" name="std::wosyncstream::Init" link="cpp/io/ios_base/Init"/>
    <keyword type="function" name="std::wosyncstream::wosyncstream" link="cpp/io/basic_osyncstream/basic_osyncstream"/>
    <keyword type="function" name="std::wosyncstream::~wosyncstream" link="cpp/io/basic_osyncstream/~basic_osyncstream"/>
    <keyword type="function" name="std::wosyncstream::operator=" link="cpp/io/basic_osyncstream/operator="/>
    <keyword type="function" name="std::wosyncstream::rdbuf" link="cpp/io/basic_osyncstream/rdbuf"/>
    <keyword type="function" name="std::wosyncstream::get_wrapped" link="cpp/io/basic_osyncstream/get_wrapped"/>
    <keyword type="function" name="std::wosyncstream::emit" link="cpp/io/basic_osyncstream/emit"/>
    <keyword type="class" name="std::strstreambuf" link="cpp/io/strstreambuf"/>
    <keyword type="function" name="std::strstreambuf::pubimbue" link="cpp/io/basic_streambuf/pubimbue"/>
    <keyword type="function" name="std::strstreambuf::getloc" link="cpp/io/basic_streambuf/getloc"/>
    <keyword type="function" name="std::strstreambuf::pubsetbuf" link="cpp/io/basic_streambuf/pubsetbuf"/>
    <keyword type="function" name="std::strstreambuf::pubseekoff" link="cpp/io/basic_streambuf/pubseekoff"/>
    <keyword type="function" name="std::strstreambuf::pubseekpos" link="cpp/io/basic_streambuf/pubseekpos"/>
    <keyword type="function" name="std::strstreambuf::pubsync" link="cpp/io/basic_streambuf/pubsync"/>
    <keyword type="function" name="std::strstreambuf::in_avail" link="cpp/io/basic_streambuf/in_avail"/>
    <keyword type="function" name="std::strstreambuf::snextc" link="cpp/io/basic_streambuf/snextc"/>
    <keyword type="function" name="std::strstreambuf::sbumpc" link="cpp/io/basic_streambuf/sbumpc"/>
    <keyword type="function" name="std::strstreambuf::sgetc" link="cpp/io/basic_streambuf/sgetc"/>
    <keyword type="function" name="std::strstreambuf::sgetn" link="cpp/io/basic_streambuf/sgetn"/>
    <keyword type="function" name="std::strstreambuf::sputc" link="cpp/io/basic_streambuf/sputc"/>
    <keyword type="function" name="std::strstreambuf::sputn" link="cpp/io/basic_streambuf/sputn"/>
    <keyword type="function" name="std::strstreambuf::sputbackc" link="cpp/io/basic_streambuf/sputbackc"/>
    <keyword type="function" name="std::strstreambuf::sungetc" link="cpp/io/basic_streambuf/sungetc"/>
    <keyword type="function" name="std::strstreambuf::swap" link="cpp/io/basic_streambuf/swap"/>
    <keyword type="function" name="std::strstreambuf::imbue" link="cpp/io/basic_streambuf/pubimbue"/>
    <keyword type="function" name="std::strstreambuf::setbuf" link="cpp/io/basic_streambuf/pubsetbuf"/>
    <keyword type="function" name="std::strstreambuf::seekoff" link="cpp/io/basic_streambuf/pubseekoff"/>
    <keyword type="function" name="std::strstreambuf::seekpos" link="cpp/io/basic_streambuf/pubseekpos"/>
    <keyword type="function" name="std::strstreambuf::sync" link="cpp/io/basic_streambuf/pubsync"/>
    <keyword type="function" name="std::strstreambuf::showmanyc" link="cpp/io/basic_streambuf/showmanyc"/>
    <keyword type="function" name="std::strstreambuf::underflow" link="cpp/io/basic_streambuf/underflow"/>
    <keyword type="function" name="std::strstreambuf::uflow" link="cpp/io/basic_streambuf/uflow"/>
    <keyword type="function" name="std::strstreambuf::xsgetn" link="cpp/io/basic_streambuf/sgetn"/>
    <keyword type="function" name="std::strstreambuf::eback" link="cpp/io/basic_streambuf/gptr"/>
    <keyword type="function" name="std::strstreambuf::gptr" link="cpp/io/basic_streambuf/gptr"/>
    <keyword type="function" name="std::strstreambuf::egptr" link="cpp/io/basic_streambuf/gptr"/>
    <keyword type="function" name="std::strstreambuf::gbump" link="cpp/io/basic_streambuf/gbump"/>
    <keyword type="function" name="std::strstreambuf::setg" link="cpp/io/basic_streambuf/setg"/>
    <keyword type="function" name="std::strstreambuf::xsputn" link="cpp/io/basic_streambuf/sputn"/>
    <keyword type="function" name="std::strstreambuf::overflow" link="cpp/io/basic_streambuf/overflow"/>
    <keyword type="function" name="std::strstreambuf::pbase" link="cpp/io/basic_streambuf/pptr"/>
    <keyword type="function" name="std::strstreambuf::pptr" link="cpp/io/basic_streambuf/pptr"/>
    <keyword type="function" name="std::strstreambuf::epptr" link="cpp/io/basic_streambuf/pptr"/>
    <keyword type="function" name="std::strstreambuf::pbump" link="cpp/io/basic_streambuf/pbump"/>
    <keyword type="function" name="std::strstreambuf::setp" link="cpp/io/basic_streambuf/setp"/>
    <keyword type="function" name="std::strstreambuf::pbackfail" link="cpp/io/basic_streambuf/pbackfail"/>
    <keyword type="function" name="std::strstreambuf::strstreambuf" link="cpp/io/strstreambuf/strstreambuf"/>
    <keyword type="function" name="std::strstreambuf::~strstreambuf" link="cpp/io/strstreambuf/~strstreambuf"/>
    <keyword type="function" name="std::strstreambuf::freeze" link="cpp/io/strstreambuf/freeze"/>
    <keyword type="function" name="std::strstreambuf::str" link="cpp/io/strstreambuf/str"/>
    <keyword type="function" name="std::strstreambuf::pcount" link="cpp/io/strstreambuf/pcount"/>
    <keyword type="function" name="std::strstreambuf::underflow" link="cpp/io/strstreambuf/underflow"/>
    <keyword type="function" name="std::strstreambuf::pbackfail" link="cpp/io/strstreambuf/pbackfail"/>
    <keyword type="function" name="std::strstreambuf::overflow" link="cpp/io/strstreambuf/overflow"/>
    <keyword type="function" name="std::strstreambuf::setbuf" link="cpp/io/strstreambuf/setbuf"/>
    <keyword type="function" name="std::strstreambuf::seekoff" link="cpp/io/strstreambuf/seekoff"/>
    <keyword type="function" name="std::strstreambuf::seekpos" link="cpp/io/strstreambuf/seekpos"/>
    <keyword type="class" name="std::istrstream" link="cpp/io/istrstream"/>
    <keyword type="function" name="std::istrstream::operator&gt;&gt;" link="cpp/io/basic_istream/operator_gtgt"/>
    <keyword type="function" name="std::istrstream::get" link="cpp/io/basic_istream/get"/>
    <keyword type="function" name="std::istrstream::peek" link="cpp/io/basic_istream/peek"/>
    <keyword type="function" name="std::istrstream::unget" link="cpp/io/basic_istream/unget"/>
    <keyword type="function" name="std::istrstream::putback" link="cpp/io/basic_istream/putback"/>
    <keyword type="function" name="std::istrstream::getline" link="cpp/io/basic_istream/getline"/>
    <keyword type="function" name="std::istrstream::ignore" link="cpp/io/basic_istream/ignore"/>
    <keyword type="function" name="std::istrstream::read" link="cpp/io/basic_istream/read"/>
    <keyword type="function" name="std::istrstream::readsome" link="cpp/io/basic_istream/readsome"/>
    <keyword type="function" name="std::istrstream::gcount" link="cpp/io/basic_istream/gcount"/>
    <keyword type="function" name="std::istrstream::tellg" link="cpp/io/basic_istream/tellg"/>
    <keyword type="function" name="std::istrstream::seekg" link="cpp/io/basic_istream/seekg"/>
    <keyword type="function" name="std::istrstream::sync" link="cpp/io/basic_istream/sync"/>
    <keyword type="class" name="std::istrstream::sentry" link="cpp/io/basic_istream/sentry"/>
    <keyword type="function" name="std::istrstream::sentry::sentry" link="cpp/io/basic_istream/sentry"/>
    <keyword type="function" name="std::istrstream::sentry::~sentry" link="cpp/io/basic_istream/sentry"/>
    <keyword type="function" name="std::istrstream::sentry::operator bool" link="cpp/io/basic_istream/sentry"/>
    <keyword type="function" name="std::istrstream::good" link="cpp/io/basic_ios/good"/>
    <keyword type="function" name="std::istrstream::eof" link="cpp/io/basic_ios/eof"/>
    <keyword type="function" name="std::istrstream::fail" link="cpp/io/basic_ios/fail"/>
    <keyword type="function" name="std::istrstream::bad" link="cpp/io/basic_ios/bad"/>
    <keyword type="function" name="std::istrstream::operator!" link="cpp/io/basic_ios/operator!"/>
    <keyword type="function" name="std::istrstream::operator bool" link="cpp/io/basic_ios/operator_bool"/>
    <keyword type="function" name="std::istrstream::rdstate" link="cpp/io/basic_ios/rdstate"/>
    <keyword type="function" name="std::istrstream::setstate" link="cpp/io/basic_ios/setstate"/>
    <keyword type="function" name="std::istrstream::clear" link="cpp/io/basic_ios/clear"/>
    <keyword type="function" name="std::istrstream::copyfmt" link="cpp/io/basic_ios/copyfmt"/>
    <keyword type="function" name="std::istrstream::fill" link="cpp/io/basic_ios/fill"/>
    <keyword type="function" name="std::istrstream::exceptions" link="cpp/io/basic_ios/exceptions"/>
    <keyword type="function" name="std::istrstream::imbue" link="cpp/io/basic_ios/imbue"/>
    <keyword type="function" name="std::istrstream::rdbuf" link="cpp/io/basic_ios/rdbuf"/>
    <keyword type="function" name="std::istrstream::tie" link="cpp/io/basic_ios/tie"/>
    <keyword type="function" name="std::istrstream::narrow" link="cpp/io/basic_ios/narrow"/>
    <keyword type="function" name="std::istrstream::widen" link="cpp/io/basic_ios/widen"/>
    <keyword type="function" name="std::istrstream::init" link="cpp/io/basic_ios/init"/>
    <keyword type="function" name="std::istrstream::move" link="cpp/io/basic_ios/move"/>
    <keyword type="function" name="std::istrstream::swap" link="cpp/io/basic_ios/swap"/>
    <keyword type="function" name="std::istrstream::set_rdbuf" link="cpp/io/basic_ios/set_rdbuf"/>
    <keyword type="function" name="std::istrstream::flags" link="cpp/io/ios_base/flags"/>
    <keyword type="function" name="std::istrstream::setf" link="cpp/io/ios_base/setf"/>
    <keyword type="function" name="std::istrstream::unsetf" link="cpp/io/ios_base/unsetf"/>
    <keyword type="function" name="std::istrstream::precision" link="cpp/io/ios_base/precision"/>
    <keyword type="function" name="std::istrstream::width" link="cpp/io/ios_base/width"/>
    <keyword type="function" name="std::istrstream::imbue" link="cpp/io/ios_base/imbue"/>
    <keyword type="function" name="std::istrstream::getloc" link="cpp/io/ios_base/getloc"/>
    <keyword type="function" name="std::istrstream::xalloc" link="cpp/io/ios_base/xalloc"/>
    <keyword type="function" name="std::istrstream::iword" link="cpp/io/ios_base/iword"/>
    <keyword type="function" name="std::istrstream::pword" link="cpp/io/ios_base/pword"/>
    <keyword type="function" name="std::istrstream::register_callback" link="cpp/io/ios_base/register_callback"/>
    <keyword type="function" name="std::istrstream::sync_with_stdio" link="cpp/io/ios_base/sync_with_stdio"/>
    <keyword type="class" name="std::istrstream::failure" link="cpp/io/ios_base/failure"/>
    <keyword type="function" name="std::istrstream::failure::what" link="cpp/error/exception/what"/>
    <keyword type="function" name="std::istrstream::failure::failure" link="cpp/io/ios_base/failure"/>
    <keyword type="enum" name="std::istrstream::openmode" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::istrstream::app" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::istrstream::binary" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::istrstream::in" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::istrstream::out" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::istrstream::trunc" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::istrstream::ate" link="cpp/io/ios_base/openmode"/>
    <keyword type="enum" name="std::istrstream::fmtflags" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::istrstream::dec" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::istrstream::oct" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::istrstream::hex" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::istrstream::basefield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::istrstream::left" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::istrstream::right" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::istrstream::internal" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::istrstream::adjustfield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::istrstream::scientific" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::istrstream::fixed" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::istrstream::floatfield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::istrstream::boolalpha" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::istrstream::showbase" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::istrstream::showpoint" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::istrstream::showpos" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::istrstream::skipws" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::istrstream::unitbuf" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::istrstream::uppercase" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="enum" name="std::istrstream::iostate" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::istrstream::goodbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::istrstream::badbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::istrstream::failbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::istrstream::eofbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="enum" name="std::istrstream::seekdir" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::istrstream::beg" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::istrstream::cur" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::istrstream::end" link="cpp/io/ios_base/seekdir"/>
    <keyword type="enum" name="std::istrstream::event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::istrstream::erase_event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::istrstream::imbue_event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::istrstream::copyfmt_event" link="cpp/io/ios_base/event"/>
    <keyword type="typedef" name="std::istrstream::event_callback" link="cpp/io/ios_base/event_callback"/>
    <keyword type="class" name="std::istrstream::Init" link="cpp/io/ios_base/Init"/>
    <keyword type="function" name="std::istrstream::istrstream" link="cpp/io/istrstream/istrstream"/>
    <keyword type="function" name="std::istrstream::~istrstream" link="cpp/io/istrstream/~istrstream"/>
    <keyword type="function" name="std::istrstream::rdbuf" link="cpp/io/istrstream/rdbuf"/>
    <keyword type="function" name="std::istrstream::str" link="cpp/io/istrstream/str"/>
    <keyword type="class" name="std::ostrstream" link="cpp/io/ostrstream"/>
    <keyword type="function" name="std::ostrstream::operator&lt;&lt;" link="cpp/io/basic_ostream/operator_ltlt"/>
    <keyword type="function" name="std::ostrstream::put" link="cpp/io/basic_ostream/put"/>
    <keyword type="function" name="std::ostrstream::write" link="cpp/io/basic_ostream/write"/>
    <keyword type="function" name="std::ostrstream::tellp" link="cpp/io/basic_ostream/tellp"/>
    <keyword type="function" name="std::ostrstream::seekp" link="cpp/io/basic_ostream/seekp"/>
    <keyword type="function" name="std::ostrstream::flush" link="cpp/io/basic_ostream/flush"/>
    <keyword type="class" name="std::ostrstream::sentry" link="cpp/io/basic_ostream/sentry"/>
    <keyword type="function" name="std::ostrstream::sentry::sentry" link="cpp/io/basic_ostream/sentry"/>
    <keyword type="function" name="std::ostrstream::sentry::~sentry" link="cpp/io/basic_ostream/sentry"/>
    <keyword type="function" name="std::ostrstream::sentry::operator bool" link="cpp/io/basic_ostream/sentry"/>
    <keyword type="function" name="std::ostrstream::good" link="cpp/io/basic_ios/good"/>
    <keyword type="function" name="std::ostrstream::eof" link="cpp/io/basic_ios/eof"/>
    <keyword type="function" name="std::ostrstream::fail" link="cpp/io/basic_ios/fail"/>
    <keyword type="function" name="std::ostrstream::bad" link="cpp/io/basic_ios/bad"/>
    <keyword type="function" name="std::ostrstream::operator!" link="cpp/io/basic_ios/operator!"/>
    <keyword type="function" name="std::ostrstream::operator bool" link="cpp/io/basic_ios/operator_bool"/>
    <keyword type="function" name="std::ostrstream::rdstate" link="cpp/io/basic_ios/rdstate"/>
    <keyword type="function" name="std::ostrstream::setstate" link="cpp/io/basic_ios/setstate"/>
    <keyword type="function" name="std::ostrstream::clear" link="cpp/io/basic_ios/clear"/>
    <keyword type="function" name="std::ostrstream::copyfmt" link="cpp/io/basic_ios/copyfmt"/>
    <keyword type="function" name="std::ostrstream::fill" link="cpp/io/basic_ios/fill"/>
    <keyword type="function" name="std::ostrstream::exceptions" link="cpp/io/basic_ios/exceptions"/>
    <keyword type="function" name="std::ostrstream::imbue" link="cpp/io/basic_ios/imbue"/>
    <keyword type="function" name="std::ostrstream::rdbuf" link="cpp/io/basic_ios/rdbuf"/>
    <keyword type="function" name="std::ostrstream::tie" link="cpp/io/basic_ios/tie"/>
    <keyword type="function" name="std::ostrstream::narrow" link="cpp/io/basic_ios/narrow"/>
    <keyword type="function" name="std::ostrstream::widen" link="cpp/io/basic_ios/widen"/>
    <keyword type="function" name="std::ostrstream::init" link="cpp/io/basic_ios/init"/>
    <keyword type="function" name="std::ostrstream::move" link="cpp/io/basic_ios/move"/>
    <keyword type="function" name="std::ostrstream::swap" link="cpp/io/basic_ios/swap"/>
    <keyword type="function" name="std::ostrstream::set_rdbuf" link="cpp/io/basic_ios/set_rdbuf"/>
    <keyword type="function" name="std::ostrstream::flags" link="cpp/io/ios_base/flags"/>
    <keyword type="function" name="std::ostrstream::setf" link="cpp/io/ios_base/setf"/>
    <keyword type="function" name="std::ostrstream::unsetf" link="cpp/io/ios_base/unsetf"/>
    <keyword type="function" name="std::ostrstream::precision" link="cpp/io/ios_base/precision"/>
    <keyword type="function" name="std::ostrstream::width" link="cpp/io/ios_base/width"/>
    <keyword type="function" name="std::ostrstream::imbue" link="cpp/io/ios_base/imbue"/>
    <keyword type="function" name="std::ostrstream::getloc" link="cpp/io/ios_base/getloc"/>
    <keyword type="function" name="std::ostrstream::xalloc" link="cpp/io/ios_base/xalloc"/>
    <keyword type="function" name="std::ostrstream::iword" link="cpp/io/ios_base/iword"/>
    <keyword type="function" name="std::ostrstream::pword" link="cpp/io/ios_base/pword"/>
    <keyword type="function" name="std::ostrstream::register_callback" link="cpp/io/ios_base/register_callback"/>
    <keyword type="function" name="std::ostrstream::sync_with_stdio" link="cpp/io/ios_base/sync_with_stdio"/>
    <keyword type="class" name="std::ostrstream::failure" link="cpp/io/ios_base/failure"/>
    <keyword type="function" name="std::ostrstream::failure::what" link="cpp/error/exception/what"/>
    <keyword type="function" name="std::ostrstream::failure::failure" link="cpp/io/ios_base/failure"/>
    <keyword type="enum" name="std::ostrstream::openmode" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::ostrstream::app" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::ostrstream::binary" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::ostrstream::in" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::ostrstream::out" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::ostrstream::trunc" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::ostrstream::ate" link="cpp/io/ios_base/openmode"/>
    <keyword type="enum" name="std::ostrstream::fmtflags" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ostrstream::dec" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ostrstream::oct" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ostrstream::hex" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ostrstream::basefield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ostrstream::left" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ostrstream::right" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ostrstream::internal" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ostrstream::adjustfield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ostrstream::scientific" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ostrstream::fixed" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ostrstream::floatfield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ostrstream::boolalpha" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ostrstream::showbase" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ostrstream::showpoint" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ostrstream::showpos" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ostrstream::skipws" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ostrstream::unitbuf" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::ostrstream::uppercase" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="enum" name="std::ostrstream::iostate" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::ostrstream::goodbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::ostrstream::badbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::ostrstream::failbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::ostrstream::eofbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="enum" name="std::ostrstream::seekdir" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::ostrstream::beg" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::ostrstream::cur" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::ostrstream::end" link="cpp/io/ios_base/seekdir"/>
    <keyword type="enum" name="std::ostrstream::event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::ostrstream::erase_event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::ostrstream::imbue_event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::ostrstream::copyfmt_event" link="cpp/io/ios_base/event"/>
    <keyword type="typedef" name="std::ostrstream::event_callback" link="cpp/io/ios_base/event_callback"/>
    <keyword type="class" name="std::ostrstream::Init" link="cpp/io/ios_base/Init"/>
    <keyword type="function" name="std::ostrstream::ostrstream" link="cpp/io/ostrstream/ostrstream"/>
    <keyword type="function" name="std::ostrstream::~ostrstream" link="cpp/io/ostrstream/~ostrstream"/>
    <keyword type="function" name="std::ostrstream::rdbuf" link="cpp/io/ostrstream/rdbuf"/>
    <keyword type="function" name="std::ostrstream::str" link="cpp/io/ostrstream/str"/>
    <keyword type="function" name="std::ostrstream::freeze" link="cpp/io/ostrstream/freeze"/>
    <keyword type="function" name="std::ostrstream::pcount" link="cpp/io/ostrstream/pcount"/>
    <keyword type="class" name="std::strstream" link="cpp/io/strstream"/>
    <keyword type="function" name="std::strstream::operator&gt;&gt;" link="cpp/io/basic_istream/operator_gtgt"/>
    <keyword type="function" name="std::strstream::get" link="cpp/io/basic_istream/get"/>
    <keyword type="function" name="std::strstream::peek" link="cpp/io/basic_istream/peek"/>
    <keyword type="function" name="std::strstream::unget" link="cpp/io/basic_istream/unget"/>
    <keyword type="function" name="std::strstream::putback" link="cpp/io/basic_istream/putback"/>
    <keyword type="function" name="std::strstream::getline" link="cpp/io/basic_istream/getline"/>
    <keyword type="function" name="std::strstream::ignore" link="cpp/io/basic_istream/ignore"/>
    <keyword type="function" name="std::strstream::read" link="cpp/io/basic_istream/read"/>
    <keyword type="function" name="std::strstream::readsome" link="cpp/io/basic_istream/readsome"/>
    <keyword type="function" name="std::strstream::gcount" link="cpp/io/basic_istream/gcount"/>
    <keyword type="function" name="std::strstream::tellg" link="cpp/io/basic_istream/tellg"/>
    <keyword type="function" name="std::strstream::seekg" link="cpp/io/basic_istream/seekg"/>
    <keyword type="function" name="std::strstream::sync" link="cpp/io/basic_istream/sync"/>
    <keyword type="class" name="std::strstream::sentry" link="cpp/io/basic_istream/sentry"/>
    <keyword type="function" name="std::strstream::sentry::sentry" link="cpp/io/basic_istream/sentry"/>
    <keyword type="function" name="std::strstream::sentry::~sentry" link="cpp/io/basic_istream/sentry"/>
    <keyword type="function" name="std::strstream::sentry::operator bool" link="cpp/io/basic_istream/sentry"/>
    <keyword type="function" name="std::strstream::operator&lt;&lt;" link="cpp/io/basic_ostream/operator_ltlt"/>
    <keyword type="function" name="std::strstream::put" link="cpp/io/basic_ostream/put"/>
    <keyword type="function" name="std::strstream::write" link="cpp/io/basic_ostream/write"/>
    <keyword type="function" name="std::strstream::tellp" link="cpp/io/basic_ostream/tellp"/>
    <keyword type="function" name="std::strstream::seekp" link="cpp/io/basic_ostream/seekp"/>
    <keyword type="function" name="std::strstream::flush" link="cpp/io/basic_ostream/flush"/>
    <keyword type="class" name="std::strstream::sentry" link="cpp/io/basic_ostream/sentry"/>
    <keyword type="function" name="std::strstream::sentry::sentry" link="cpp/io/basic_ostream/sentry"/>
    <keyword type="function" name="std::strstream::sentry::~sentry" link="cpp/io/basic_ostream/sentry"/>
    <keyword type="function" name="std::strstream::sentry::operator bool" link="cpp/io/basic_ostream/sentry"/>
    <keyword type="function" name="std::strstream::good" link="cpp/io/basic_ios/good"/>
    <keyword type="function" name="std::strstream::eof" link="cpp/io/basic_ios/eof"/>
    <keyword type="function" name="std::strstream::fail" link="cpp/io/basic_ios/fail"/>
    <keyword type="function" name="std::strstream::bad" link="cpp/io/basic_ios/bad"/>
    <keyword type="function" name="std::strstream::operator!" link="cpp/io/basic_ios/operator!"/>
    <keyword type="function" name="std::strstream::operator bool" link="cpp/io/basic_ios/operator_bool"/>
    <keyword type="function" name="std::strstream::rdstate" link="cpp/io/basic_ios/rdstate"/>
    <keyword type="function" name="std::strstream::setstate" link="cpp/io/basic_ios/setstate"/>
    <keyword type="function" name="std::strstream::clear" link="cpp/io/basic_ios/clear"/>
    <keyword type="function" name="std::strstream::copyfmt" link="cpp/io/basic_ios/copyfmt"/>
    <keyword type="function" name="std::strstream::fill" link="cpp/io/basic_ios/fill"/>
    <keyword type="function" name="std::strstream::exceptions" link="cpp/io/basic_ios/exceptions"/>
    <keyword type="function" name="std::strstream::imbue" link="cpp/io/basic_ios/imbue"/>
    <keyword type="function" name="std::strstream::rdbuf" link="cpp/io/basic_ios/rdbuf"/>
    <keyword type="function" name="std::strstream::tie" link="cpp/io/basic_ios/tie"/>
    <keyword type="function" name="std::strstream::narrow" link="cpp/io/basic_ios/narrow"/>
    <keyword type="function" name="std::strstream::widen" link="cpp/io/basic_ios/widen"/>
    <keyword type="function" name="std::strstream::init" link="cpp/io/basic_ios/init"/>
    <keyword type="function" name="std::strstream::move" link="cpp/io/basic_ios/move"/>
    <keyword type="function" name="std::strstream::swap" link="cpp/io/basic_ios/swap"/>
    <keyword type="function" name="std::strstream::set_rdbuf" link="cpp/io/basic_ios/set_rdbuf"/>
    <keyword type="function" name="std::strstream::flags" link="cpp/io/ios_base/flags"/>
    <keyword type="function" name="std::strstream::setf" link="cpp/io/ios_base/setf"/>
    <keyword type="function" name="std::strstream::unsetf" link="cpp/io/ios_base/unsetf"/>
    <keyword type="function" name="std::strstream::precision" link="cpp/io/ios_base/precision"/>
    <keyword type="function" name="std::strstream::width" link="cpp/io/ios_base/width"/>
    <keyword type="function" name="std::strstream::imbue" link="cpp/io/ios_base/imbue"/>
    <keyword type="function" name="std::strstream::getloc" link="cpp/io/ios_base/getloc"/>
    <keyword type="function" name="std::strstream::xalloc" link="cpp/io/ios_base/xalloc"/>
    <keyword type="function" name="std::strstream::iword" link="cpp/io/ios_base/iword"/>
    <keyword type="function" name="std::strstream::pword" link="cpp/io/ios_base/pword"/>
    <keyword type="function" name="std::strstream::register_callback" link="cpp/io/ios_base/register_callback"/>
    <keyword type="function" name="std::strstream::sync_with_stdio" link="cpp/io/ios_base/sync_with_stdio"/>
    <keyword type="class" name="std::strstream::failure" link="cpp/io/ios_base/failure"/>
    <keyword type="function" name="std::strstream::failure::what" link="cpp/error/exception/what"/>
    <keyword type="function" name="std::strstream::failure::failure" link="cpp/io/ios_base/failure"/>
    <keyword type="enum" name="std::strstream::openmode" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::strstream::app" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::strstream::binary" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::strstream::in" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::strstream::out" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::strstream::trunc" link="cpp/io/ios_base/openmode"/>
    <keyword type="macro" name="std::strstream::ate" link="cpp/io/ios_base/openmode"/>
    <keyword type="enum" name="std::strstream::fmtflags" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::strstream::dec" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::strstream::oct" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::strstream::hex" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::strstream::basefield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::strstream::left" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::strstream::right" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::strstream::internal" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::strstream::adjustfield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::strstream::scientific" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::strstream::fixed" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::strstream::floatfield" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::strstream::boolalpha" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::strstream::showbase" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::strstream::showpoint" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::strstream::showpos" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::strstream::skipws" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::strstream::unitbuf" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="macro" name="std::strstream::uppercase" link="cpp/io/ios_base/fmtflags"/>
    <keyword type="enum" name="std::strstream::iostate" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::strstream::goodbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::strstream::badbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::strstream::failbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="macro" name="std::strstream::eofbit" link="cpp/io/ios_base/iostate"/>
    <keyword type="enum" name="std::strstream::seekdir" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::strstream::beg" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::strstream::cur" link="cpp/io/ios_base/seekdir"/>
    <keyword type="macro" name="std::strstream::end" link="cpp/io/ios_base/seekdir"/>
    <keyword type="enum" name="std::strstream::event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::strstream::erase_event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::strstream::imbue_event" link="cpp/io/ios_base/event"/>
    <keyword type="macro" name="std::strstream::copyfmt_event" link="cpp/io/ios_base/event"/>
    <keyword type="typedef" name="std::strstream::event_callback" link="cpp/io/ios_base/event_callback"/>
    <keyword type="class" name="std::strstream::Init" link="cpp/io/ios_base/Init"/>
    <keyword type="function" name="std::strstream::strstream" link="cpp/io/strstream/strstream"/>
    <keyword type="function" name="std::strstream::~strstream" link="cpp/io/strstream/~strstream"/>
    <keyword type="function" name="std::strstream::rdbuf" link="cpp/io/strstream/rdbuf"/>
    <keyword type="function" name="std::strstream::str" link="cpp/io/strstream/str"/>
    <keyword type="function" name="std::strstream::freeze" link="cpp/io/strstream/freeze"/>
    <keyword type="function" name="std::strstream::pcount" link="cpp/io/strstream/pcount"/>
    <keyword type="class" name="std::cin" link="cpp/io/cin"/>
    <keyword type="class" name="std::wcin" link="cpp/io/cin"/>
    <keyword type="class" name="std::cout" link="cpp/io/cout"/>
    <keyword type="class" name="std::wcout" link="cpp/io/cout"/>
    <keyword type="class" name="std::cerr" link="cpp/io/cerr"/>
    <keyword type="class" name="std::wcerr" link="cpp/io/cerr"/>
    <keyword type="class" name="std::clog" link="cpp/io/clog"/>
    <keyword type="class" name="std::wclog" link="cpp/io/clog"/>
    <keyword type="function" name="std::boolalpha" link="cpp/io/manip/boolalpha"/>
    <keyword type="function" name="std::noboolalpha" link="cpp/io/manip/boolalpha"/>
    <keyword type="function" name="std::showbase" link="cpp/io/manip/showbase"/>
    <keyword type="function" name="std::noshowbase" link="cpp/io/manip/showbase"/>
    <keyword type="function" name="std::showpoint" link="cpp/io/manip/showpoint"/>
    <keyword type="function" name="std::noshowpoint" link="cpp/io/manip/showpoint"/>
    <keyword type="function" name="std::showpos" link="cpp/io/manip/showpos"/>
    <keyword type="function" name="std::noshowpos" link="cpp/io/manip/showpos"/>
    <keyword type="function" name="std::skipws" link="cpp/io/manip/skipws"/>
    <keyword type="function" name="std::noskipws" link="cpp/io/manip/skipws"/>
    <keyword type="function" name="std::uppercase" link="cpp/io/manip/uppercase"/>
    <keyword type="function" name="std::nouppercase" link="cpp/io/manip/uppercase"/>
    <keyword type="function" name="std::unitbuf" link="cpp/io/manip/unitbuf"/>
    <keyword type="function" name="std::nounitbuf" link="cpp/io/manip/unitbuf"/>
    <keyword type="function" name="std::internal" link="cpp/io/manip/left"/>
    <keyword type="function" name="std::left" link="cpp/io/manip/left"/>
    <keyword type="function" name="std::right" link="cpp/io/manip/left"/>
    <keyword type="function" name="std::dec" link="cpp/io/manip/hex"/>
    <keyword type="function" name="std::hex" link="cpp/io/manip/hex"/>
    <keyword type="function" name="std::oct" link="cpp/io/manip/hex"/>
    <keyword type="function" name="std::fixed" link="cpp/io/manip/fixed"/>
    <keyword type="function" name="std::scientific" link="cpp/io/manip/fixed"/>
    <keyword type="function" name="std::hexfloat" link="cpp/io/manip/fixed"/>
    <keyword type="function" name="std::defaultfloat" link="cpp/io/manip/fixed"/>
    <keyword type="function" name="std::ws" link="cpp/io/manip/ws"/>
    <keyword type="function" name="std::ends" link="cpp/io/manip/ends"/>
    <keyword type="function" name="std::flush" link="cpp/io/manip/flush"/>
    <keyword type="function" name="std::endl" link="cpp/io/manip/endl"/>
    <keyword type="function" name="std::emit_on_flush" link="cpp/io/manip/emit_on_flush"/>
    <keyword type="function" name="std::no_emit_on_flush" link="cpp/io/manip/emit_on_flush"/>
    <keyword type="function" name="std::flush_emit" link="cpp/io/manip/flush_emit"/>
    <keyword type="function" name="std::resetiosflags" link="cpp/io/manip/resetiosflags"/>
    <keyword type="function" name="std::setiosflags" link="cpp/io/manip/setiosflags"/>
    <keyword type="function" name="std::setbase" link="cpp/io/manip/setbase"/>
    <keyword type="function" name="std::setfill" link="cpp/io/manip/setfill"/>
    <keyword type="function" name="std::setprecision" link="cpp/io/manip/setprecision"/>
    <keyword type="function" name="std::setw" link="cpp/io/manip/setw"/>
    <keyword type="function" name="std::get_money" link="cpp/io/manip/get_money"/>
    <keyword type="function" name="std::put_money" link="cpp/io/manip/put_money"/>
    <keyword type="function" name="std::get_time" link="cpp/io/manip/get_time"/>
    <keyword type="function" name="std::put_time" link="cpp/io/manip/put_time"/>
    <keyword type="function" name="std::quoted" link="cpp/io/manip/quoted"/>
    <keyword type="typedef" name="std::streamoff" link="cpp/io/streamoff"/>
    <keyword type="typedef" name="std::streamsize" link="cpp/io/streamsize"/>
    <keyword type="class" name="std::fpos" link="cpp/io/fpos"/>
    <keyword type="function" name="std::fpos::state" link="cpp/io/fpos/state"/>
    <keyword type="typedef" name="std::streampos" link="cpp/io/fpos"/>
    <keyword type="function" name="std::streampos::state" link="cpp/io/fpos/state"/>
    <keyword type="typedef" name="std::u8streampos" link="cpp/io/fpos"/>
    <keyword type="function" name="std::u8streampos::state" link="cpp/io/fpos/state"/>
    <keyword type="typedef" name="std::u16streampos" link="cpp/io/fpos"/>
    <keyword type="function" name="std::u16streampos::state" link="cpp/io/fpos/state"/>
    <keyword type="typedef" name="std::u32streampos" link="cpp/io/fpos"/>
    <keyword type="function" name="std::u32streampos::state" link="cpp/io/fpos/state"/>
    <keyword type="typedef" name="std::wstreampos" link="cpp/io/fpos"/>
    <keyword type="function" name="std::wstreampos::state" link="cpp/io/fpos/state"/>
    <keyword type="class" name="std::io_errc" link="cpp/io/io_errc"/>
    <keyword type="macro" name="std::io_errc::stream" link="cpp/io/io_errc"/>
    <keyword type="class" name="std::is_error_code_enum&lt;std::io_errc&gt;" link="cpp/io/io_errc/is_error_code_enum"/>
    <keyword type="function" name="std::make_error_code(std::io_errc)" link="cpp/io/io_errc/make_error_code"/>
    <keyword type="function" name="std::make_error_condition(std::io_errc)" link="cpp/io/io_errc/make_error_condition"/>
    <keyword type="function" name="std::iostream_category" link="cpp/io/iostream_category"/>
    <keyword type="function" name="std::fopen" link="cpp/io/c/fopen"/>
    <keyword type="function" name="std::freopen" link="cpp/io/c/freopen"/>
    <keyword type="function" name="std::fflush" link="cpp/io/c/fflush"/>
    <keyword type="function" name="std::fclose" link="cpp/io/c/fclose"/>
    <keyword type="function" name="std::fwide" link="cpp/io/c/fwide"/>
    <keyword type="function" name="std::setbuf" link="cpp/io/c/setbuf"/>
    <keyword type="function" name="std::setvbuf" link="cpp/io/c/setvbuf"/>
    <keyword type="function" name="std::fread" link="cpp/io/c/fread"/>
    <keyword type="function" name="std::fwrite" link="cpp/io/c/fwrite"/>
    <keyword type="function" name="std::fgetc" link="cpp/io/c/fgetc"/>
    <keyword type="function" name="std::getc" link="cpp/io/c/fgetc"/>
    <keyword type="function" name="std::fgets" link="cpp/io/c/fgets"/>
    <keyword type="function" name="std::fputc" link="cpp/io/c/fputc"/>
    <keyword type="function" name="std::putc" link="cpp/io/c/fputc"/>
    <keyword type="function" name="std::fputs" link="cpp/io/c/fputs"/>
    <keyword type="function" name="std::getchar" link="cpp/io/c/getchar"/>
    <keyword type="function" name="std::gets" link="cpp/io/c/gets"/>
    <keyword type="function" name="std::putchar" link="cpp/io/c/putchar"/>
    <keyword type="function" name="std::puts" link="cpp/io/c/puts"/>
    <keyword type="function" name="std::ungetc" link="cpp/io/c/ungetc"/>
    <keyword type="function" name="std::fgetwc" link="cpp/io/c/fgetwc"/>
    <keyword type="function" name="std::getwc" link="cpp/io/c/fgetwc"/>
    <keyword type="function" name="std::fgetws" link="cpp/io/c/fgetws"/>
    <keyword type="function" name="std::fputwc" link="cpp/io/c/fputwc"/>
    <keyword type="function" name="std::putwc" link="cpp/io/c/fputwc"/>
    <keyword type="function" name="std::fputws" link="cpp/io/c/fputws"/>
    <keyword type="function" name="std::getwchar" link="cpp/io/c/getwchar"/>
    <keyword type="function" name="std::putwchar" link="cpp/io/c/putwchar"/>
    <keyword type="function" name="std::ungetwc" link="cpp/io/c/ungetwc"/>
    <keyword type="function" name="std::scanf" link="cpp/io/c/fscanf"/>
    <keyword type="function" name="std::fscanf" link="cpp/io/c/fscanf"/>
    <keyword type="function" name="std::sscanf" link="cpp/io/c/fscanf"/>
    <keyword type="function" name="std::vscanf" link="cpp/io/c/vfscanf"/>
    <keyword type="function" name="std::vfscanf" link="cpp/io/c/vfscanf"/>
    <keyword type="function" name="std::vsscanf" link="cpp/io/c/vfscanf"/>
    <keyword type="function" name="std::printf" link="cpp/io/c/fprintf"/>
    <keyword type="function" name="std::fprintf" link="cpp/io/c/fprintf"/>
    <keyword type="function" name="std::sprintf" link="cpp/io/c/fprintf"/>
    <keyword type="function" name="std::snprintf" link="cpp/io/c/fprintf"/>
    <keyword type="function" name="std::vprintf" link="cpp/io/c/vfprintf"/>
    <keyword type="function" name="std::vfprintf" link="cpp/io/c/vfprintf"/>
    <keyword type="function" name="std::vsprintf" link="cpp/io/c/vfprintf"/>
    <keyword type="function" name="std::vsnprintf" link="cpp/io/c/vfprintf"/>
    <keyword type="function" name="std::wscanf" link="cpp/io/c/fwscanf"/>
    <keyword type="function" name="std::fwscanf" link="cpp/io/c/fwscanf"/>
    <keyword type="function" name="std::swscanf" link="cpp/io/c/fwscanf"/>
    <keyword type="function" name="std::vwscanf" link="cpp/io/c/vfwscanf"/>
    <keyword type="function" name="std::vfwscanf" link="cpp/io/c/vfwscanf"/>
    <keyword type="function" name="std::vswscanf" link="cpp/io/c/vfwscanf"/>
    <keyword type="function" name="std::wprintf" link="cpp/io/c/fwprintf"/>
    <keyword type="function" name="std::fwprintf" link="cpp/io/c/fwprintf"/>
    <keyword type="function" name="std::swprintf" link="cpp/io/c/fwprintf"/>
    <keyword type="function" name="std::vwprintf" link="cpp/io/c/vfwprintf"/>
    <keyword type="function" name="std::vfwprintf" link="cpp/io/c/vfwprintf"/>
    <keyword type="function" name="std::vswprintf" link="cpp/io/c/vfwprintf"/>
    <keyword type="function" name="std::ftell" link="cpp/io/c/ftell"/>
    <keyword type="function" name="std::fgetpos" link="cpp/io/c/fgetpos"/>
    <keyword type="function" name="std::fseek" link="cpp/io/c/fseek"/>
    <keyword type="function" name="std::fsetpos" link="cpp/io/c/fsetpos"/>
    <keyword type="function" name="std::rewind" link="cpp/io/c/rewind"/>
    <keyword type="function" name="std::clearerr" link="cpp/io/c/clearerr"/>
    <keyword type="function" name="std::feof" link="cpp/io/c/feof"/>
    <keyword type="function" name="std::ferror" link="cpp/io/c/ferror"/>
    <keyword type="function" name="std::perror" link="cpp/io/c/perror"/>
    <keyword type="function" name="std::remove (&lt;cstdio&gt;)" link="cpp/io/c/remove"/>
    <keyword type="function" name="std::rename" link="cpp/io/c/rename"/>
    <keyword type="function" name="std::tmpfile" link="cpp/io/c/tmpfile"/>
    <keyword type="function" name="std::tmpnam" link="cpp/io/c/tmpnam"/>
    <keyword type="typedef" name="std::FILE" link="cpp/io/c/FILE"/>
    <keyword type="typedef" name="std::fpos_t" link="cpp/io/c/fpos_t"/>
    <keyword type="macro" name="stdin" link="cpp/io/c/std_streams"/>
    <keyword type="macro" name="stdout" link="cpp/io/c/std_streams"/>
    <keyword type="macro" name="stderr" link="cpp/io/c/std_streams"/>
    <keyword type="macro" name="EOF" link="cpp/io/c"/>
    <keyword type="macro" name="FOPEN_MAX" link="cpp/io/c"/>
    <keyword type="macro" name="FILENAME_MAX" link="cpp/io/c"/>
    <keyword type="macro" name="BUFSIZ" link="cpp/io/c"/>
    <keyword type="macro" name="_IOFBF" link="cpp/io/c"/>
    <keyword type="macro" name="_IOLBF" link="cpp/io/c"/>
    <keyword type="macro" name="_IONBF" link="cpp/io/c"/>
    <keyword type="macro" name="SEEK_SET" link="cpp/io/c"/>
    <keyword type="macro" name="SEEK_CUR" link="cpp/io/c"/>
    <keyword type="macro" name="SEEK_END" link="cpp/io/c"/>
    <keyword type="macro" name="TMP_MAX" link="cpp/io/c"/>
    <keyword type="macro" name="L_tmpnam" link="cpp/io/c"/>
    <keyword type="function" name="std::isalnum (&lt;clocale&gt;)" link="cpp/locale/isalnum"/>
    <keyword type="function" name="std::isalpha (&lt;clocale&gt;)" link="cpp/locale/isalpha"/>
    <keyword type="function" name="std::islower (&lt;clocale&gt;)" link="cpp/locale/islower"/>
    <keyword type="function" name="std::isupper (&lt;clocale&gt;)" link="cpp/locale/isupper"/>
    <keyword type="function" name="std::isdigit (&lt;clocale&gt;)" link="cpp/locale/isdigit"/>
    <keyword type="function" name="std::isxdigit (&lt;clocale&gt;)" link="cpp/locale/isxdigit"/>
    <keyword type="function" name="std::iscntrl (&lt;clocale&gt;)" link="cpp/locale/iscntrl"/>
    <keyword type="function" name="std::isgraph (&lt;clocale&gt;)" link="cpp/locale/isgraph"/>
    <keyword type="function" name="std::isspace (&lt;clocale&gt;)" link="cpp/locale/isspace"/>
    <keyword type="function" name="std::isblank (&lt;clocale&gt;)" link="cpp/locale/isblank"/>
    <keyword type="function" name="std::isprint (&lt;clocale&gt;)" link="cpp/locale/isprint"/>
    <keyword type="function" name="std::ispunct (&lt;clocale&gt;)" link="cpp/locale/ispunct"/>
    <keyword type="function" name="std::tolower (&lt;clocale&gt;)" link="cpp/locale/tolower"/>
    <keyword type="function" name="std::toupper (&lt;clocale&gt;)" link="cpp/locale/toupper"/>
    <keyword type="class" name="std::locale" link="cpp/locale/locale"/>
    <keyword type="function" name="std::locale::locale" link="cpp/locale/locale/locale"/>
    <keyword type="function" name="std::locale::~locale" link="cpp/locale/locale/~locale"/>
    <keyword type="function" name="std::locale::operator=" link="cpp/locale/locale/operator="/>
    <keyword type="function" name="std::locale::combine" link="cpp/locale/locale/combine"/>
    <keyword type="function" name="std::locale::name" link="cpp/locale/locale/name"/>
    <keyword type="function" name="std::locale::operator==" link="cpp/locale/locale/operator_cmp"/>
    <keyword type="function" name="std::locale::operator!=" link="cpp/locale/locale/operator_cmp"/>
    <keyword type="function" name="std::locale::operator()" link="cpp/locale/locale/operator()"/>
    <keyword type="function" name="std::locale::global" link="cpp/locale/locale/global"/>
    <keyword type="function" name="std::locale::classic" link="cpp/locale/locale/classic"/>
    <keyword type="class" name="std::locale::id" link="cpp/locale/locale/id"/>
    <keyword type="function" name="std::locale::id::id" link="cpp/locale/locale/id/id"/>
    <keyword type="class" name="std::locale::facet" link="cpp/locale/locale/facet"/>
    <keyword type="function" name="std::locale::facet::facet" link="cpp/locale/locale/facet/facet"/>
    <keyword type="function" name="std::use_facet" link="cpp/locale/use_facet"/>
    <keyword type="function" name="std::has_facet" link="cpp/locale/has_facet"/>
    <keyword type="class" name="std::wstring_convert" link="cpp/locale/wstring_convert"/>
    <keyword type="function" name="std::wstring_convert::wstring_convert" link="cpp/locale/wstring_convert/wstring_convert"/>
    <keyword type="function" name="std::wstring_convert::~wstring_convert" link="cpp/locale/wstring_convert/~wstring_convert"/>
    <keyword type="function" name="std::wstring_convert::from_bytes" link="cpp/locale/wstring_convert/from_bytes"/>
    <keyword type="function" name="std::wstring_convert::to_bytes" link="cpp/locale/wstring_convert/to_bytes"/>
    <keyword type="function" name="std::wstring_convert::converted" link="cpp/locale/wstring_convert/converted"/>
    <keyword type="function" name="std::wstring_convert::state" link="cpp/locale/wstring_convert/state"/>
    <keyword type="class" name="std::wbuffer_convert" link="cpp/locale/wbuffer_convert"/>
    <keyword type="function" name="std::wbuffer_convert::wbuffer_convert" link="cpp/locale/wbuffer_convert/wbuffer_convert"/>
    <keyword type="function" name="std::wbuffer_convert::~wbuffer_convert" link="cpp/locale/wbuffer_convert/~wbuffer_convert"/>
    <keyword type="function" name="std::wbuffer_convert::rdbuf" link="cpp/locale/wbuffer_convert/rdbuf"/>
    <keyword type="function" name="std::wbuffer_convert::state" link="cpp/locale/wbuffer_convert/state"/>
    <keyword type="class" name="std::ctype_base" link="cpp/locale/ctype_base"/>
    <keyword type="typedef" name="std::ctype_base::mask" link="cpp/locale/ctype_base"/>
    <keyword type="macro" name="std::ctype_base::space" link="cpp/locale/ctype_base"/>
    <keyword type="macro" name="std::ctype_base::print" link="cpp/locale/ctype_base"/>
    <keyword type="macro" name="std::ctype_base::cntrl" link="cpp/locale/ctype_base"/>
    <keyword type="macro" name="std::ctype_base::upper" link="cpp/locale/ctype_base"/>
    <keyword type="macro" name="std::ctype_base::lower" link="cpp/locale/ctype_base"/>
    <keyword type="macro" name="std::ctype_base::alpha" link="cpp/locale/ctype_base"/>
    <keyword type="macro" name="std::ctype_base::digit" link="cpp/locale/ctype_base"/>
    <keyword type="macro" name="std::ctype_base::punct" link="cpp/locale/ctype_base"/>
    <keyword type="macro" name="std::ctype_base::xdigit" link="cpp/locale/ctype_base"/>
    <keyword type="macro" name="std::ctype_base::blank" link="cpp/locale/ctype_base"/>
    <keyword type="macro" name="std::ctype_base::alnum" link="cpp/locale/ctype_base"/>
    <keyword type="macro" name="std::ctype_base::graph" link="cpp/locale/ctype_base"/>
    <keyword type="class" name="std::codecvt_base" link="cpp/locale/codecvt_base"/>
    <keyword type="enum" name="std::codecvt_base::result" link="cpp/locale/codecvt_base"/>
    <keyword type="macro" name="std::codecvt_base::ok" link="cpp/locale/codecvt_base"/>
    <keyword type="macro" name="std::codecvt_base::partial" link="cpp/locale/codecvt_base"/>
    <keyword type="macro" name="std::codecvt_base::error" link="cpp/locale/codecvt_base"/>
    <keyword type="macro" name="std::codecvt_base::noconv" link="cpp/locale/codecvt_base"/>
    <keyword type="class" name="std::messages_base" link="cpp/locale/messages_base"/>
    <keyword type="typedef" name="std::messages_base::catalog" link="cpp/locale/messages_base"/>
    <keyword type="class" name="std::time_base" link="cpp/locale/time_base"/>
    <keyword type="enum" name="std::time_base::dateorder" link="cpp/locale/time_base"/>
    <keyword type="macro" name="std::time_base::no_order" link="cpp/locale/time_base"/>
    <keyword type="macro" name="std::time_base::dmy" link="cpp/locale/time_base"/>
    <keyword type="macro" name="std::time_base::mdy" link="cpp/locale/time_base"/>
    <keyword type="macro" name="std::time_base::ymd" link="cpp/locale/time_base"/>
    <keyword type="macro" name="std::time_base::ydm" link="cpp/locale/time_base"/>
    <keyword type="class" name="std::money_base" link="cpp/locale/money_base"/>
    <keyword type="enum" name="std::money_base::part" link="cpp/locale/money_base"/>
    <keyword type="macro" name="std::money_base::none" link="cpp/locale/money_base"/>
    <keyword type="macro" name="std::money_base::space" link="cpp/locale/money_base"/>
    <keyword type="macro" name="std::money_base::symbol" link="cpp/locale/money_base"/>
    <keyword type="macro" name="std::money_base::sign" link="cpp/locale/money_base"/>
    <keyword type="macro" name="std::money_base::value" link="cpp/locale/money_base"/>
    <keyword type="class" name="std::money_base::pattern" link="cpp/locale/money_base"/>
    <keyword type="class" name="std::ctype" link="cpp/locale/ctype"/>
    <keyword type="typedef" name="std::ctype::mask" link="cpp/locale/ctype_base"/>
    <keyword type="macro" name="std::ctype::space" link="cpp/locale/ctype_base"/>
    <keyword type="macro" name="std::ctype::print" link="cpp/locale/ctype_base"/>
    <keyword type="macro" name="std::ctype::cntrl" link="cpp/locale/ctype_base"/>
    <keyword type="macro" name="std::ctype::upper" link="cpp/locale/ctype_base"/>
    <keyword type="macro" name="std::ctype::lower" link="cpp/locale/ctype_base"/>
    <keyword type="macro" name="std::ctype::alpha" link="cpp/locale/ctype_base"/>
    <keyword type="macro" name="std::ctype::digit" link="cpp/locale/ctype_base"/>
    <keyword type="macro" name="std::ctype::punct" link="cpp/locale/ctype_base"/>
    <keyword type="macro" name="std::ctype::xdigit" link="cpp/locale/ctype_base"/>
    <keyword type="macro" name="std::ctype::blank" link="cpp/locale/ctype_base"/>
    <keyword type="macro" name="std::ctype::alnum" link="cpp/locale/ctype_base"/>
    <keyword type="macro" name="std::ctype::graph" link="cpp/locale/ctype_base"/>
    <keyword type="function" name="std::ctype::ctype" link="cpp/locale/ctype/ctype"/>
    <keyword type="function" name="std::ctype::~ctype" link="cpp/locale/ctype/~ctype"/>
    <keyword type="function" name="std::ctype::is" link="cpp/locale/ctype/is"/>
    <keyword type="function" name="std::ctype::scan_is" link="cpp/locale/ctype/scan_is"/>
    <keyword type="function" name="std::ctype::scan_not" link="cpp/locale/ctype/scan_not"/>
    <keyword type="function" name="std::ctype::toupper" link="cpp/locale/ctype/toupper"/>
    <keyword type="function" name="std::ctype::tolower" link="cpp/locale/ctype/tolower"/>
    <keyword type="function" name="std::ctype::widen" link="cpp/locale/ctype/widen"/>
    <keyword type="function" name="std::ctype::narrow" link="cpp/locale/ctype/narrow"/>
    <keyword type="function" name="std::ctype::do_is" link="cpp/locale/ctype/is"/>
    <keyword type="function" name="std::ctype::do_scan_is" link="cpp/locale/ctype/scan_is"/>
    <keyword type="function" name="std::ctype::do_scan_not" link="cpp/locale/ctype/scan_not"/>
    <keyword type="function" name="std::ctype::do_toupper" link="cpp/locale/ctype/toupper"/>
    <keyword type="function" name="std::ctype::do_tolower" link="cpp/locale/ctype/tolower"/>
    <keyword type="function" name="std::ctype::do_widen" link="cpp/locale/ctype/widen"/>
    <keyword type="function" name="std::ctype::do_narrow" link="cpp/locale/ctype/narrow"/>
    <keyword type="" name="std::ctype::id" link="cpp/locale/ctype"/>
    <keyword type="class" name="std::codecvt" link="cpp/locale/codecvt"/>
    <keyword type="enum" name="std::codecvt::result" link="cpp/locale/codecvt_base"/>
    <keyword type="macro" name="std::codecvt::ok" link="cpp/locale/codecvt_base"/>
    <keyword type="macro" name="std::codecvt::partial" link="cpp/locale/codecvt_base"/>
    <keyword type="macro" name="std::codecvt::error" link="cpp/locale/codecvt_base"/>
    <keyword type="macro" name="std::codecvt::noconv" link="cpp/locale/codecvt_base"/>
    <keyword type="typedef" name="std::codecvt::intern_type" link="cpp/locale/codecvt"/>
    <keyword type="typedef" name="std::codecvt::extern_type" link="cpp/locale/codecvt"/>
    <keyword type="typedef" name="std::codecvt::state_type" link="cpp/locale/codecvt"/>
    <keyword type="function" name="std::codecvt::codecvt" link="cpp/locale/codecvt/codecvt"/>
    <keyword type="function" name="std::codecvt::~codecvt" link="cpp/locale/codecvt/~codecvt"/>
    <keyword type="function" name="std::codecvt::out" link="cpp/locale/codecvt/out"/>
    <keyword type="function" name="std::codecvt::in" link="cpp/locale/codecvt/in"/>
    <keyword type="function" name="std::codecvt::unshift" link="cpp/locale/codecvt/unshift"/>
    <keyword type="function" name="std::codecvt::encoding" link="cpp/locale/codecvt/encoding"/>
    <keyword type="function" name="std::codecvt::always_noconv" link="cpp/locale/codecvt/always_noconv"/>
    <keyword type="function" name="std::codecvt::length" link="cpp/locale/codecvt/length"/>
    <keyword type="function" name="std::codecvt::max_length" link="cpp/locale/codecvt/max_length"/>
    <keyword type="function" name="std::codecvt::do_out" link="cpp/locale/codecvt/out"/>
    <keyword type="function" name="std::codecvt::do_in" link="cpp/locale/codecvt/in"/>
    <keyword type="function" name="std::codecvt::do_unshift" link="cpp/locale/codecvt/unshift"/>
    <keyword type="function" name="std::codecvt::do_encoding" link="cpp/locale/codecvt/encoding"/>
    <keyword type="function" name="std::codecvt::do_always_noconv" link="cpp/locale/codecvt/always_noconv"/>
    <keyword type="function" name="std::codecvt::do_length" link="cpp/locale/codecvt/length"/>
    <keyword type="function" name="std::codecvt::do_max_length" link="cpp/locale/codecvt/max_length"/>
    <keyword type="" name="std::codecvt::id" link="cpp/locale/codecvt"/>
    <keyword type="class" name="std::collate" link="cpp/locale/collate"/>
    <keyword type="typedef" name="std::collate::char_type" link="cpp/locale/collate"/>
    <keyword type="typedef" name="std::collate::string_type" link="cpp/locale/collate"/>
    <keyword type="function" name="std::collate::collate" link="cpp/locale/collate/collate"/>
    <keyword type="function" name="std::collate::~collate" link="cpp/locale/collate/~collate"/>
    <keyword type="function" name="std::collate::compare" link="cpp/locale/collate/compare"/>
    <keyword type="function" name="std::collate::transform" link="cpp/locale/collate/transform"/>
    <keyword type="function" name="std::collate::hash" link="cpp/locale/collate/hash"/>
    <keyword type="function" name="std::collate::do_compare" link="cpp/locale/collate/compare"/>
    <keyword type="function" name="std::collate::do_transform" link="cpp/locale/collate/transform"/>
    <keyword type="function" name="std::collate::do_hash" link="cpp/locale/collate/hash"/>
    <keyword type="" name="std::collate::id" link="cpp/locale/collate"/>
    <keyword type="class" name="std::messages" link="cpp/locale/messages"/>
    <keyword type="typedef" name="std::messages::catalog" link="cpp/locale/messages_base"/>
    <keyword type="typedef" name="std::messages::char_type" link="cpp/locale/messages"/>
    <keyword type="typedef" name="std::messages::string_type" link="cpp/locale/messages"/>
    <keyword type="function" name="std::messages::messages" link="cpp/locale/messages/messages"/>
    <keyword type="function" name="std::messages::~messages" link="cpp/locale/messages/~messages"/>
    <keyword type="function" name="std::messages::open" link="cpp/locale/messages/open"/>
    <keyword type="function" name="std::messages::get" link="cpp/locale/messages/get"/>
    <keyword type="function" name="std::messages::close" link="cpp/locale/messages/close"/>
    <keyword type="function" name="std::messages::do_open" link="cpp/locale/messages/open"/>
    <keyword type="function" name="std::messages::do_get" link="cpp/locale/messages/get"/>
    <keyword type="function" name="std::messages::do_close" link="cpp/locale/messages/close"/>
    <keyword type="" name="std::messages::id" link="cpp/locale/messages"/>
    <keyword type="class" name="std::time_get" link="cpp/locale/time_get"/>
    <keyword type="enum" name="std::time_get::dateorder" link="cpp/locale/time_base"/>
    <keyword type="macro" name="std::time_get::no_order" link="cpp/locale/time_base"/>
    <keyword type="macro" name="std::time_get::dmy" link="cpp/locale/time_base"/>
    <keyword type="macro" name="std::time_get::mdy" link="cpp/locale/time_base"/>
    <keyword type="macro" name="std::time_get::ymd" link="cpp/locale/time_base"/>
    <keyword type="macro" name="std::time_get::ydm" link="cpp/locale/time_base"/>
    <keyword type="typedef" name="std::time_get::char_type" link="cpp/locale/time_get"/>
    <keyword type="typedef" name="std::time_get::iter_type" link="cpp/locale/time_get"/>
    <keyword type="function" name="std::time_get::time_get" link="cpp/locale/time_get/time_get"/>
    <keyword type="function" name="std::time_get::~time_get" link="cpp/locale/time_get/~time_get"/>
    <keyword type="function" name="std::time_get::date_order" link="cpp/locale/time_get/date_order"/>
    <keyword type="function" name="std::time_get::get_time" link="cpp/locale/time_get/get_time"/>
    <keyword type="function" name="std::time_get::get_date" link="cpp/locale/time_get/get_date"/>
    <keyword type="function" name="std::time_get::get_weekday" link="cpp/locale/time_get/get_weekday"/>
    <keyword type="function" name="std::time_get::get_monthname" link="cpp/locale/time_get/get_monthname"/>
    <keyword type="function" name="std::time_get::get_year" link="cpp/locale/time_get/get_year"/>
    <keyword type="function" name="std::time_get::get" link="cpp/locale/time_get/get"/>
    <keyword type="function" name="std::time_get::do_date_order" link="cpp/locale/time_get/date_order"/>
    <keyword type="function" name="std::time_get::do_get_time" link="cpp/locale/time_get/get_time"/>
    <keyword type="function" name="std::time_get::do_get_date" link="cpp/locale/time_get/get_date"/>
    <keyword type="function" name="std::time_get::do_get_weekday" link="cpp/locale/time_get/get_weekday"/>
    <keyword type="function" name="std::time_get::do_get_monthname" link="cpp/locale/time_get/get_monthname"/>
    <keyword type="function" name="std::time_get::do_get_year" link="cpp/locale/time_get/get_year"/>
    <keyword type="function" name="std::time_get::do_get" link="cpp/locale/time_get/get"/>
    <keyword type="" name="std::time_get::id" link="cpp/locale/time_get"/>
    <keyword type="class" name="std::time_put" link="cpp/locale/time_put"/>
    <keyword type="enum" name="std::time_put::dateorder" link="cpp/locale/time_base"/>
    <keyword type="macro" name="std::time_put::no_order" link="cpp/locale/time_base"/>
    <keyword type="macro" name="std::time_put::dmy" link="cpp/locale/time_base"/>
    <keyword type="macro" name="std::time_put::mdy" link="cpp/locale/time_base"/>
    <keyword type="macro" name="std::time_put::ymd" link="cpp/locale/time_base"/>
    <keyword type="macro" name="std::time_put::ydm" link="cpp/locale/time_base"/>
    <keyword type="typedef" name="std::time_put::char_type" link="cpp/locale/time_put"/>
    <keyword type="typedef" name="std::time_put::iter_type" link="cpp/locale/time_put"/>
    <keyword type="function" name="std::time_put::time_put" link="cpp/locale/time_put/time_put"/>
    <keyword type="function" name="std::time_put::~time_put" link="cpp/locale/time_put/~time_put"/>
    <keyword type="function" name="std::time_put::put" link="cpp/locale/time_put/put"/>
    <keyword type="function" name="std::time_put::do_put" link="cpp/locale/time_put/put"/>
    <keyword type="" name="std::time_put::id" link="cpp/locale/time_put"/>
    <keyword type="class" name="std::num_get" link="cpp/locale/num_get"/>
    <keyword type="typedef" name="std::num_get::char_type" link="cpp/locale/num_get"/>
    <keyword type="typedef" name="std::num_get::iter_type" link="cpp/locale/num_get"/>
    <keyword type="function" name="std::num_get::num_get" link="cpp/locale/num_get/num_get"/>
    <keyword type="function" name="std::num_get::~num_get" link="cpp/locale/num_get/~num_get"/>
    <keyword type="function" name="std::num_get::get" link="cpp/locale/num_get/get"/>
    <keyword type="function" name="std::num_get::do_get" link="cpp/locale/num_get/get"/>
    <keyword type="" name="std::num_get::id" link="cpp/locale/num_get"/>
    <keyword type="class" name="std::num_put" link="cpp/locale/num_put"/>
    <keyword type="typedef" name="std::num_put::char_type" link="cpp/locale/num_put"/>
    <keyword type="typedef" name="std::num_put::iter_type" link="cpp/locale/num_put"/>
    <keyword type="function" name="std::num_put::num_put" link="cpp/locale/num_put/num_put"/>
    <keyword type="function" name="std::num_put::~num_put" link="cpp/locale/num_put/~num_put"/>
    <keyword type="function" name="std::num_put::put" link="cpp/locale/num_put/put"/>
    <keyword type="function" name="std::num_put::do_put" link="cpp/locale/num_put/put"/>
    <keyword type="" name="std::num_put::id" link="cpp/locale/num_put"/>
    <keyword type="class" name="std::numpunct" link="cpp/locale/numpunct"/>
    <keyword type="typedef" name="std::numpunct::char_type" link="cpp/locale/numpunct"/>
    <keyword type="typedef" name="std::numpunct::string_type" link="cpp/locale/numpunct"/>
    <keyword type="function" name="std::numpunct::numpunct" link="cpp/locale/numpunct/numpunct"/>
    <keyword type="function" name="std::numpunct::~numpunct" link="cpp/locale/numpunct/~numpunct"/>
    <keyword type="function" name="std::numpunct::decimal_point" link="cpp/locale/numpunct/decimal_point"/>
    <keyword type="function" name="std::numpunct::thousands_sep" link="cpp/locale/numpunct/thousands_sep"/>
    <keyword type="function" name="std::numpunct::grouping" link="cpp/locale/numpunct/grouping"/>
    <keyword type="function" name="std::numpunct::truename" link="cpp/locale/numpunct/truefalsename"/>
    <keyword type="function" name="std::numpunct::falsename" link="cpp/locale/numpunct/truefalsename"/>
    <keyword type="function" name="std::numpunct::do_decimal_point" link="cpp/locale/numpunct/decimal_point"/>
    <keyword type="function" name="std::numpunct::do_thousands_sep" link="cpp/locale/numpunct/thousands_sep"/>
    <keyword type="function" name="std::numpunct::do_grouping" link="cpp/locale/numpunct/grouping"/>
    <keyword type="function" name="std::numpunct::do_truename" link="cpp/locale/numpunct/truefalsename"/>
    <keyword type="function" name="std::numpunct::do_falsename" link="cpp/locale/numpunct/truefalsename"/>
    <keyword type="" name="std::numpunct::id" link="cpp/locale/numpunct"/>
    <keyword type="class" name="std::money_get" link="cpp/locale/money_get"/>
    <keyword type="enum" name="std::money_get::part" link="cpp/locale/money_base"/>
    <keyword type="macro" name="std::money_get::none" link="cpp/locale/money_base"/>
    <keyword type="macro" name="std::money_get::space" link="cpp/locale/money_base"/>
    <keyword type="macro" name="std::money_get::symbol" link="cpp/locale/money_base"/>
    <keyword type="macro" name="std::money_get::sign" link="cpp/locale/money_base"/>
    <keyword type="macro" name="std::money_get::value" link="cpp/locale/money_base"/>
    <keyword type="class" name="std::money_get::pattern" link="cpp/locale/money_base"/>
    <keyword type="typedef" name="std::money_get::char_type" link="cpp/locale/money_get"/>
    <keyword type="typedef" name="std::money_get::iter_type" link="cpp/locale/money_get"/>
    <keyword type="typedef" name="std::money_get::string_type" link="cpp/locale/money_get"/>
    <keyword type="function" name="std::money_get::money_get" link="cpp/locale/money_get/money_get"/>
    <keyword type="function" name="std::money_get::~money_get" link="cpp/locale/money_get/~money_get"/>
    <keyword type="function" name="std::money_get::get" link="cpp/locale/money_get/get"/>
    <keyword type="function" name="std::money_get::do_get" link="cpp/locale/money_get/get"/>
    <keyword type="" name="std::money_get::id" link="cpp/locale/money_get"/>
    <keyword type="class" name="std::money_put" link="cpp/locale/money_put"/>
    <keyword type="enum" name="std::money_put::part" link="cpp/locale/money_base"/>
    <keyword type="macro" name="std::money_put::none" link="cpp/locale/money_base"/>
    <keyword type="macro" name="std::money_put::space" link="cpp/locale/money_base"/>
    <keyword type="macro" name="std::money_put::symbol" link="cpp/locale/money_base"/>
    <keyword type="macro" name="std::money_put::sign" link="cpp/locale/money_base"/>
    <keyword type="macro" name="std::money_put::value" link="cpp/locale/money_base"/>
    <keyword type="class" name="std::money_put::pattern" link="cpp/locale/money_base"/>
    <keyword type="typedef" name="std::money_put::char_type" link="cpp/locale/money_put"/>
    <keyword type="typedef" name="std::money_put::iter_type" link="cpp/locale/money_put"/>
    <keyword type="typedef" name="std::money_put::string_type" link="cpp/locale/money_put"/>
    <keyword type="function" name="std::money_put::money_put" link="cpp/locale/money_put/money_put"/>
    <keyword type="function" name="std::money_put::~money_put" link="cpp/locale/money_put/~money_put"/>
    <keyword type="function" name="std::money_put::put" link="cpp/locale/money_put/put"/>
    <keyword type="function" name="std::money_put::do_put" link="cpp/locale/money_put/put"/>
    <keyword type="" name="std::money_put::id" link="cpp/locale/money_put"/>
    <keyword type="class" name="std::moneypunct" link="cpp/locale/moneypunct"/>
    <keyword type="typedef" name="std::moneypunct::char_type" link="cpp/locale/moneypunct"/>
    <keyword type="typedef" name="std::moneypunct::string_type" link="cpp/locale/moneypunct"/>
    <keyword type="enum" name="std::moneypunct::part" link="cpp/locale/money_base"/>
    <keyword type="macro" name="std::moneypunct::none" link="cpp/locale/money_base"/>
    <keyword type="macro" name="std::moneypunct::space" link="cpp/locale/money_base"/>
    <keyword type="macro" name="std::moneypunct::symbol" link="cpp/locale/money_base"/>
    <keyword type="macro" name="std::moneypunct::sign" link="cpp/locale/money_base"/>
    <keyword type="macro" name="std::moneypunct::value" link="cpp/locale/money_base"/>
    <keyword type="class" name="std::moneypunct::pattern" link="cpp/locale/money_base"/>
    <keyword type="function" name="std::moneypunct::moneypunct" link="cpp/locale/moneypunct/moneypunct"/>
    <keyword type="function" name="std::moneypunct::~moneypunct" link="cpp/locale/moneypunct/~moneypunct"/>
    <keyword type="function" name="std::moneypunct::decimal_point" link="cpp/locale/moneypunct/decimal_point"/>
    <keyword type="function" name="std::moneypunct::thousands_sep" link="cpp/locale/moneypunct/thousands_sep"/>
    <keyword type="function" name="std::moneypunct::grouping" link="cpp/locale/moneypunct/grouping"/>
    <keyword type="function" name="std::moneypunct::curr_symbol" link="cpp/locale/moneypunct/curr_symbol"/>
    <keyword type="function" name="std::moneypunct::positive_sign" link="cpp/locale/moneypunct/positive_sign"/>
    <keyword type="function" name="std::moneypunct::negative_sign" link="cpp/locale/moneypunct/positive_sign"/>
    <keyword type="function" name="std::moneypunct::frac_digits" link="cpp/locale/moneypunct/frac_digits"/>
    <keyword type="function" name="std::moneypunct::pos_format" link="cpp/locale/moneypunct/pos_format"/>
    <keyword type="function" name="std::moneypunct::neg_format" link="cpp/locale/moneypunct/pos_format"/>
    <keyword type="function" name="std::moneypunct::do_decimal_point" link="cpp/locale/moneypunct/decimal_point"/>
    <keyword type="function" name="std::moneypunct::do_thousands_sep" link="cpp/locale/moneypunct/thousands_sep"/>
    <keyword type="function" name="std::moneypunct::do_grouping" link="cpp/locale/moneypunct/grouping"/>
    <keyword type="function" name="std::moneypunct::do_curr_symbol" link="cpp/locale/moneypunct/curr_symbol"/>
    <keyword type="function" name="std::moneypunct::do_positive_sign" link="cpp/locale/moneypunct/positive_sign"/>
    <keyword type="function" name="std::moneypunct::do_negative_sign" link="cpp/locale/moneypunct/positive_sign"/>
    <keyword type="function" name="std::moneypunct::do_frac_digits" link="cpp/locale/moneypunct/frac_digits"/>
    <keyword type="function" name="std::moneypunct::do_pos_format" link="cpp/locale/moneypunct/pos_format"/>
    <keyword type="function" name="std::moneypunct::do_neg_format" link="cpp/locale/moneypunct/pos_format"/>
    <keyword type="macro" name="std::moneypunct::intl" link="cpp/locale/moneypunct"/>
    <keyword type="" name="std::moneypunct::id" link="cpp/locale/moneypunct"/>
    <keyword type="class" name="std::ctype_byname" link="cpp/locale/ctype_byname"/>
    <keyword type="function" name="std::ctype_byname::is" link="cpp/locale/ctype/is"/>
    <keyword type="function" name="std::ctype_byname::scan_is" link="cpp/locale/ctype/scan_is"/>
    <keyword type="function" name="std::ctype_byname::scan_not" link="cpp/locale/ctype/scan_not"/>
    <keyword type="function" name="std::ctype_byname::toupper" link="cpp/locale/ctype/toupper"/>
    <keyword type="function" name="std::ctype_byname::tolower" link="cpp/locale/ctype/tolower"/>
    <keyword type="function" name="std::ctype_byname::widen" link="cpp/locale/ctype/widen"/>
    <keyword type="function" name="std::ctype_byname::narrow" link="cpp/locale/ctype/narrow"/>
    <keyword type="function" name="std::ctype_byname::do_is" link="cpp/locale/ctype/is"/>
    <keyword type="function" name="std::ctype_byname::do_scan_is" link="cpp/locale/ctype/scan_is"/>
    <keyword type="function" name="std::ctype_byname::do_scan_not" link="cpp/locale/ctype/scan_not"/>
    <keyword type="function" name="std::ctype_byname::do_toupper" link="cpp/locale/ctype/toupper"/>
    <keyword type="function" name="std::ctype_byname::do_tolower" link="cpp/locale/ctype/tolower"/>
    <keyword type="function" name="std::ctype_byname::do_widen" link="cpp/locale/ctype/widen"/>
    <keyword type="function" name="std::ctype_byname::do_narrow" link="cpp/locale/ctype/narrow"/>
    <keyword type="" name="std::ctype_byname::id" link="cpp/locale/ctype"/>
    <keyword type="typedef" name="std::ctype_byname::mask" link="cpp/locale/ctype_base"/>
    <keyword type="macro" name="std::ctype_byname::space" link="cpp/locale/ctype_base"/>
    <keyword type="macro" name="std::ctype_byname::print" link="cpp/locale/ctype_base"/>
    <keyword type="macro" name="std::ctype_byname::cntrl" link="cpp/locale/ctype_base"/>
    <keyword type="macro" name="std::ctype_byname::upper" link="cpp/locale/ctype_base"/>
    <keyword type="macro" name="std::ctype_byname::lower" link="cpp/locale/ctype_base"/>
    <keyword type="macro" name="std::ctype_byname::alpha" link="cpp/locale/ctype_base"/>
    <keyword type="macro" name="std::ctype_byname::digit" link="cpp/locale/ctype_base"/>
    <keyword type="macro" name="std::ctype_byname::punct" link="cpp/locale/ctype_base"/>
    <keyword type="macro" name="std::ctype_byname::xdigit" link="cpp/locale/ctype_base"/>
    <keyword type="macro" name="std::ctype_byname::blank" link="cpp/locale/ctype_base"/>
    <keyword type="macro" name="std::ctype_byname::alnum" link="cpp/locale/ctype_base"/>
    <keyword type="macro" name="std::ctype_byname::graph" link="cpp/locale/ctype_base"/>
    <keyword type="function" name="std::ctype_byname::ctype_byname" link="cpp/locale/ctype_byname"/>
    <keyword type="function" name="std::ctype_byname::~ctype_byname" link="cpp/locale/ctype_byname"/>
    <keyword type="class" name="std::codecvt_byname" link="cpp/locale/codecvt_byname"/>
    <keyword type="typedef" name="std::codecvt_byname::intern_type" link="cpp/locale/codecvt"/>
    <keyword type="typedef" name="std::codecvt_byname::extern_type" link="cpp/locale/codecvt"/>
    <keyword type="typedef" name="std::codecvt_byname::state_type" link="cpp/locale/codecvt"/>
    <keyword type="function" name="std::codecvt_byname::out" link="cpp/locale/codecvt/out"/>
    <keyword type="function" name="std::codecvt_byname::in" link="cpp/locale/codecvt/in"/>
    <keyword type="function" name="std::codecvt_byname::unshift" link="cpp/locale/codecvt/unshift"/>
    <keyword type="function" name="std::codecvt_byname::encoding" link="cpp/locale/codecvt/encoding"/>
    <keyword type="function" name="std::codecvt_byname::always_noconv" link="cpp/locale/codecvt/always_noconv"/>
    <keyword type="function" name="std::codecvt_byname::length" link="cpp/locale/codecvt/length"/>
    <keyword type="function" name="std::codecvt_byname::max_length" link="cpp/locale/codecvt/max_length"/>
    <keyword type="function" name="std::codecvt_byname::do_out" link="cpp/locale/codecvt/out"/>
    <keyword type="function" name="std::codecvt_byname::do_in" link="cpp/locale/codecvt/in"/>
    <keyword type="function" name="std::codecvt_byname::do_unshift" link="cpp/locale/codecvt/unshift"/>
    <keyword type="function" name="std::codecvt_byname::do_encoding" link="cpp/locale/codecvt/encoding"/>
    <keyword type="function" name="std::codecvt_byname::do_always_noconv" link="cpp/locale/codecvt/always_noconv"/>
    <keyword type="function" name="std::codecvt_byname::do_length" link="cpp/locale/codecvt/length"/>
    <keyword type="function" name="std::codecvt_byname::do_max_length" link="cpp/locale/codecvt/max_length"/>
    <keyword type="" name="std::codecvt_byname::id" link="cpp/locale/codecvt"/>
    <keyword type="enum" name="std::codecvt_byname::result" link="cpp/locale/codecvt_base"/>
    <keyword type="macro" name="std::codecvt_byname::ok" link="cpp/locale/codecvt_base"/>
    <keyword type="macro" name="std::codecvt_byname::partial" link="cpp/locale/codecvt_base"/>
    <keyword type="macro" name="std::codecvt_byname::error" link="cpp/locale/codecvt_base"/>
    <keyword type="macro" name="std::codecvt_byname::noconv" link="cpp/locale/codecvt_base"/>
    <keyword type="function" name="std::codecvt_byname::codecvt_byname" link="cpp/locale/codecvt_byname"/>
    <keyword type="function" name="std::codecvt_byname::~codecvt_byname" link="cpp/locale/codecvt_byname"/>
    <keyword type="class" name="std::messages_byname" link="cpp/locale/messages_byname"/>
    <keyword type="typedef" name="std::messages_byname::char_type" link="cpp/locale/messages"/>
    <keyword type="typedef" name="std::messages_byname::string_type" link="cpp/locale/messages"/>
    <keyword type="function" name="std::messages_byname::open" link="cpp/locale/messages/open"/>
    <keyword type="function" name="std::messages_byname::get" link="cpp/locale/messages/get"/>
    <keyword type="function" name="std::messages_byname::close" link="cpp/locale/messages/close"/>
    <keyword type="function" name="std::messages_byname::do_open" link="cpp/locale/messages/open"/>
    <keyword type="function" name="std::messages_byname::do_get" link="cpp/locale/messages/get"/>
    <keyword type="function" name="std::messages_byname::do_close" link="cpp/locale/messages/close"/>
    <keyword type="" name="std::messages_byname::id" link="cpp/locale/messages"/>
    <keyword type="typedef" name="std::messages_byname::catalog" link="cpp/locale/messages_base"/>
    <keyword type="function" name="std::messages_byname::messages_byname" link="cpp/locale/messages_byname"/>
    <keyword type="function" name="std::messages_byname::~messages_byname" link="cpp/locale/messages_byname"/>
    <keyword type="class" name="std::collate_byname" link="cpp/locale/collate_byname"/>
    <keyword type="typedef" name="std::collate_byname::char_type" link="cpp/locale/collate"/>
    <keyword type="typedef" name="std::collate_byname::string_type" link="cpp/locale/collate"/>
    <keyword type="function" name="std::collate_byname::compare" link="cpp/locale/collate/compare"/>
    <keyword type="function" name="std::collate_byname::transform" link="cpp/locale/collate/transform"/>
    <keyword type="function" name="std::collate_byname::hash" link="cpp/locale/collate/hash"/>
    <keyword type="function" name="std::collate_byname::do_compare" link="cpp/locale/collate/compare"/>
    <keyword type="function" name="std::collate_byname::do_transform" link="cpp/locale/collate/transform"/>
    <keyword type="function" name="std::collate_byname::do_hash" link="cpp/locale/collate/hash"/>
    <keyword type="" name="std::collate_byname::id" link="cpp/locale/collate"/>
    <keyword type="function" name="std::collate_byname::collate_byname" link="cpp/locale/collate_byname"/>
    <keyword type="function" name="std::collate_byname::~collate_byname" link="cpp/locale/collate_byname"/>
    <keyword type="class" name="std::time_get_byname" link="cpp/locale/time_get_byname"/>
    <keyword type="typedef" name="std::time_get_byname::char_type" link="cpp/locale/time_get"/>
    <keyword type="typedef" name="std::time_get_byname::iter_type" link="cpp/locale/time_get"/>
    <keyword type="function" name="std::time_get_byname::date_order" link="cpp/locale/time_get/date_order"/>
    <keyword type="function" name="std::time_get_byname::get_time" link="cpp/locale/time_get/get_time"/>
    <keyword type="function" name="std::time_get_byname::get_date" link="cpp/locale/time_get/get_date"/>
    <keyword type="function" name="std::time_get_byname::get_weekday" link="cpp/locale/time_get/get_weekday"/>
    <keyword type="function" name="std::time_get_byname::get_monthname" link="cpp/locale/time_get/get_monthname"/>
    <keyword type="function" name="std::time_get_byname::get_year" link="cpp/locale/time_get/get_year"/>
    <keyword type="function" name="std::time_get_byname::get" link="cpp/locale/time_get/get"/>
    <keyword type="function" name="std::time_get_byname::do_date_order" link="cpp/locale/time_get/date_order"/>
    <keyword type="function" name="std::time_get_byname::do_get_time" link="cpp/locale/time_get/get_time"/>
    <keyword type="function" name="std::time_get_byname::do_get_date" link="cpp/locale/time_get/get_date"/>
    <keyword type="function" name="std::time_get_byname::do_get_weekday" link="cpp/locale/time_get/get_weekday"/>
    <keyword type="function" name="std::time_get_byname::do_get_monthname" link="cpp/locale/time_get/get_monthname"/>
    <keyword type="function" name="std::time_get_byname::do_get_year" link="cpp/locale/time_get/get_year"/>
    <keyword type="function" name="std::time_get_byname::do_get" link="cpp/locale/time_get/get"/>
    <keyword type="" name="std::time_get_byname::id" link="cpp/locale/time_get"/>
    <keyword type="enum" name="std::time_get_byname::dateorder" link="cpp/locale/time_base"/>
    <keyword type="macro" name="std::time_get_byname::no_order" link="cpp/locale/time_base"/>
    <keyword type="macro" name="std::time_get_byname::dmy" link="cpp/locale/time_base"/>
    <keyword type="macro" name="std::time_get_byname::mdy" link="cpp/locale/time_base"/>
    <keyword type="macro" name="std::time_get_byname::ymd" link="cpp/locale/time_base"/>
    <keyword type="macro" name="std::time_get_byname::ydm" link="cpp/locale/time_base"/>
    <keyword type="function" name="std::time_get_byname::time_get_byname" link="cpp/locale/time_get_byname"/>
    <keyword type="function" name="std::time_get_byname::~time_get_byname" link="cpp/locale/time_get_byname"/>
    <keyword type="class" name="std::time_put_byname" link="cpp/locale/time_put_byname"/>
    <keyword type="typedef" name="std::time_put_byname::char_type" link="cpp/locale/time_put"/>
    <keyword type="typedef" name="std::time_put_byname::iter_type" link="cpp/locale/time_put"/>
    <keyword type="function" name="std::time_put_byname::put" link="cpp/locale/time_put/put"/>
    <keyword type="function" name="std::time_put_byname::do_put" link="cpp/locale/time_put/put"/>
    <keyword type="" name="std::time_put_byname::id" link="cpp/locale/time_put"/>
    <keyword type="enum" name="std::time_put_byname::dateorder" link="cpp/locale/time_base"/>
    <keyword type="macro" name="std::time_put_byname::no_order" link="cpp/locale/time_base"/>
    <keyword type="macro" name="std::time_put_byname::dmy" link="cpp/locale/time_base"/>
    <keyword type="macro" name="std::time_put_byname::mdy" link="cpp/locale/time_base"/>
    <keyword type="macro" name="std::time_put_byname::ymd" link="cpp/locale/time_base"/>
    <keyword type="macro" name="std::time_put_byname::ydm" link="cpp/locale/time_base"/>
    <keyword type="function" name="std::time_put_byname::time_put_byname" link="cpp/locale/time_put_byname"/>
    <keyword type="function" name="std::time_put_byname::~time_put_byname" link="cpp/locale/time_put_byname"/>
    <keyword type="class" name="std::numpunct_byname" link="cpp/locale/numpunct_byname"/>
    <keyword type="typedef" name="std::numpunct_byname::char_type" link="cpp/locale/numpunct"/>
    <keyword type="typedef" name="std::numpunct_byname::string_type" link="cpp/locale/numpunct"/>
    <keyword type="function" name="std::numpunct_byname::decimal_point" link="cpp/locale/numpunct/decimal_point"/>
    <keyword type="function" name="std::numpunct_byname::thousands_sep" link="cpp/locale/numpunct/thousands_sep"/>
    <keyword type="function" name="std::numpunct_byname::grouping" link="cpp/locale/numpunct/grouping"/>
    <keyword type="function" name="std::numpunct_byname::truename" link="cpp/locale/numpunct/truefalsename"/>
    <keyword type="function" name="std::numpunct_byname::falsename" link="cpp/locale/numpunct/truefalsename"/>
    <keyword type="function" name="std::numpunct_byname::do_decimal_point" link="cpp/locale/numpunct/decimal_point"/>
    <keyword type="function" name="std::numpunct_byname::do_thousands_sep" link="cpp/locale/numpunct/thousands_sep"/>
    <keyword type="function" name="std::numpunct_byname::do_grouping" link="cpp/locale/numpunct/grouping"/>
    <keyword type="function" name="std::numpunct_byname::do_truename" link="cpp/locale/numpunct/truefalsename"/>
    <keyword type="function" name="std::numpunct_byname::do_falsename" link="cpp/locale/numpunct/truefalsename"/>
    <keyword type="" name="std::numpunct_byname::id" link="cpp/locale/numpunct"/>
    <keyword type="function" name="std::numpunct_byname::numpunct_byname" link="cpp/locale/numpunct_byname"/>
    <keyword type="function" name="std::numpunct_byname::~numpunct_byname" link="cpp/locale/numpunct_byname"/>
    <keyword type="class" name="std::moneypunct_byname" link="cpp/locale/moneypunct_byname"/>
    <keyword type="typedef" name="std::moneypunct_byname::char_type" link="cpp/locale/moneypunct"/>
    <keyword type="typedef" name="std::moneypunct_byname::string_type" link="cpp/locale/moneypunct"/>
    <keyword type="function" name="std::moneypunct_byname::decimal_point" link="cpp/locale/moneypunct/decimal_point"/>
    <keyword type="function" name="std::moneypunct_byname::thousands_sep" link="cpp/locale/moneypunct/thousands_sep"/>
    <keyword type="function" name="std::moneypunct_byname::grouping" link="cpp/locale/moneypunct/grouping"/>
    <keyword type="function" name="std::moneypunct_byname::curr_symbol" link="cpp/locale/moneypunct/curr_symbol"/>
    <keyword type="function" name="std::moneypunct_byname::positive_sign" link="cpp/locale/moneypunct/positive_sign"/>
    <keyword type="function" name="std::moneypunct_byname::negative_sign" link="cpp/locale/moneypunct/positive_sign"/>
    <keyword type="function" name="std::moneypunct_byname::frac_digits" link="cpp/locale/moneypunct/frac_digits"/>
    <keyword type="function" name="std::moneypunct_byname::pos_format" link="cpp/locale/moneypunct/pos_format"/>
    <keyword type="function" name="std::moneypunct_byname::neg_format" link="cpp/locale/moneypunct/pos_format"/>
    <keyword type="function" name="std::moneypunct_byname::do_decimal_point" link="cpp/locale/moneypunct/decimal_point"/>
    <keyword type="function" name="std::moneypunct_byname::do_thousands_sep" link="cpp/locale/moneypunct/thousands_sep"/>
    <keyword type="function" name="std::moneypunct_byname::do_grouping" link="cpp/locale/moneypunct/grouping"/>
    <keyword type="function" name="std::moneypunct_byname::do_curr_symbol" link="cpp/locale/moneypunct/curr_symbol"/>
    <keyword type="function" name="std::moneypunct_byname::do_positive_sign" link="cpp/locale/moneypunct/positive_sign"/>
    <keyword type="function" name="std::moneypunct_byname::do_negative_sign" link="cpp/locale/moneypunct/positive_sign"/>
    <keyword type="function" name="std::moneypunct_byname::do_frac_digits" link="cpp/locale/moneypunct/frac_digits"/>
    <keyword type="function" name="std::moneypunct_byname::do_pos_format" link="cpp/locale/moneypunct/pos_format"/>
    <keyword type="function" name="std::moneypunct_byname::do_neg_format" link="cpp/locale/moneypunct/pos_format"/>
    <keyword type="macro" name="std::moneypunct_byname::intl" link="cpp/locale/moneypunct"/>
    <keyword type="" name="std::moneypunct_byname::id" link="cpp/locale/moneypunct"/>
    <keyword type="enum" name="std::moneypunct_byname::part" link="cpp/locale/money_base"/>
    <keyword type="macro" name="std::moneypunct_byname::none" link="cpp/locale/money_base"/>
    <keyword type="macro" name="std::moneypunct_byname::space" link="cpp/locale/money_base"/>
    <keyword type="macro" name="std::moneypunct_byname::symbol" link="cpp/locale/money_base"/>
    <keyword type="macro" name="std::moneypunct_byname::sign" link="cpp/locale/money_base"/>
    <keyword type="macro" name="std::moneypunct_byname::value" link="cpp/locale/money_base"/>
    <keyword type="class" name="std::moneypunct_byname::pattern" link="cpp/locale/money_base"/>
    <keyword type="function" name="std::moneypunct_byname::moneypunct_byname" link="cpp/locale/moneypunct_byname"/>
    <keyword type="function" name="std::moneypunct_byname::~moneypunct_byname" link="cpp/locale/moneypunct_byname"/>
    <keyword type="class" name="std::codecvt_utf8" link="cpp/locale/codecvt_utf8"/>
    <keyword type="typedef" name="std::codecvt_utf8::intern_type" link="cpp/locale/codecvt"/>
    <keyword type="typedef" name="std::codecvt_utf8::extern_type" link="cpp/locale/codecvt"/>
    <keyword type="typedef" name="std::codecvt_utf8::state_type" link="cpp/locale/codecvt"/>
    <keyword type="function" name="std::codecvt_utf8::out" link="cpp/locale/codecvt/out"/>
    <keyword type="function" name="std::codecvt_utf8::in" link="cpp/locale/codecvt/in"/>
    <keyword type="function" name="std::codecvt_utf8::unshift" link="cpp/locale/codecvt/unshift"/>
    <keyword type="function" name="std::codecvt_utf8::encoding" link="cpp/locale/codecvt/encoding"/>
    <keyword type="function" name="std::codecvt_utf8::always_noconv" link="cpp/locale/codecvt/always_noconv"/>
    <keyword type="function" name="std::codecvt_utf8::length" link="cpp/locale/codecvt/length"/>
    <keyword type="function" name="std::codecvt_utf8::max_length" link="cpp/locale/codecvt/max_length"/>
    <keyword type="function" name="std::codecvt_utf8::do_out" link="cpp/locale/codecvt/out"/>
    <keyword type="function" name="std::codecvt_utf8::do_in" link="cpp/locale/codecvt/in"/>
    <keyword type="function" name="std::codecvt_utf8::do_unshift" link="cpp/locale/codecvt/unshift"/>
    <keyword type="function" name="std::codecvt_utf8::do_encoding" link="cpp/locale/codecvt/encoding"/>
    <keyword type="function" name="std::codecvt_utf8::do_always_noconv" link="cpp/locale/codecvt/always_noconv"/>
    <keyword type="function" name="std::codecvt_utf8::do_length" link="cpp/locale/codecvt/length"/>
    <keyword type="function" name="std::codecvt_utf8::do_max_length" link="cpp/locale/codecvt/max_length"/>
    <keyword type="" name="std::codecvt_utf8::id" link="cpp/locale/codecvt"/>
    <keyword type="enum" name="std::codecvt_utf8::result" link="cpp/locale/codecvt_base"/>
    <keyword type="macro" name="std::codecvt_utf8::ok" link="cpp/locale/codecvt_base"/>
    <keyword type="macro" name="std::codecvt_utf8::partial" link="cpp/locale/codecvt_base"/>
    <keyword type="macro" name="std::codecvt_utf8::error" link="cpp/locale/codecvt_base"/>
    <keyword type="macro" name="std::codecvt_utf8::noconv" link="cpp/locale/codecvt_base"/>
    <keyword type="class" name="std::codecvt_utf16" link="cpp/locale/codecvt_utf16"/>
    <keyword type="typedef" name="std::codecvt_utf16::intern_type" link="cpp/locale/codecvt"/>
    <keyword type="typedef" name="std::codecvt_utf16::extern_type" link="cpp/locale/codecvt"/>
    <keyword type="typedef" name="std::codecvt_utf16::state_type" link="cpp/locale/codecvt"/>
    <keyword type="function" name="std::codecvt_utf16::out" link="cpp/locale/codecvt/out"/>
    <keyword type="function" name="std::codecvt_utf16::in" link="cpp/locale/codecvt/in"/>
    <keyword type="function" name="std::codecvt_utf16::unshift" link="cpp/locale/codecvt/unshift"/>
    <keyword type="function" name="std::codecvt_utf16::encoding" link="cpp/locale/codecvt/encoding"/>
    <keyword type="function" name="std::codecvt_utf16::always_noconv" link="cpp/locale/codecvt/always_noconv"/>
    <keyword type="function" name="std::codecvt_utf16::length" link="cpp/locale/codecvt/length"/>
    <keyword type="function" name="std::codecvt_utf16::max_length" link="cpp/locale/codecvt/max_length"/>
    <keyword type="function" name="std::codecvt_utf16::do_out" link="cpp/locale/codecvt/out"/>
    <keyword type="function" name="std::codecvt_utf16::do_in" link="cpp/locale/codecvt/in"/>
    <keyword type="function" name="std::codecvt_utf16::do_unshift" link="cpp/locale/codecvt/unshift"/>
    <keyword type="function" name="std::codecvt_utf16::do_encoding" link="cpp/locale/codecvt/encoding"/>
    <keyword type="function" name="std::codecvt_utf16::do_always_noconv" link="cpp/locale/codecvt/always_noconv"/>
    <keyword type="function" name="std::codecvt_utf16::do_length" link="cpp/locale/codecvt/length"/>
    <keyword type="function" name="std::codecvt_utf16::do_max_length" link="cpp/locale/codecvt/max_length"/>
    <keyword type="" name="std::codecvt_utf16::id" link="cpp/locale/codecvt"/>
    <keyword type="enum" name="std::codecvt_utf16::result" link="cpp/locale/codecvt_base"/>
    <keyword type="macro" name="std::codecvt_utf16::ok" link="cpp/locale/codecvt_base"/>
    <keyword type="macro" name="std::codecvt_utf16::partial" link="cpp/locale/codecvt_base"/>
    <keyword type="macro" name="std::codecvt_utf16::error" link="cpp/locale/codecvt_base"/>
    <keyword type="macro" name="std::codecvt_utf16::noconv" link="cpp/locale/codecvt_base"/>
    <keyword type="class" name="std::codecvt_utf8_utf16" link="cpp/locale/codecvt_utf8_utf16"/>
    <keyword type="typedef" name="std::codecvt_utf8_utf16::intern_type" link="cpp/locale/codecvt"/>
    <keyword type="typedef" name="std::codecvt_utf8_utf16::extern_type" link="cpp/locale/codecvt"/>
    <keyword type="typedef" name="std::codecvt_utf8_utf16::state_type" link="cpp/locale/codecvt"/>
    <keyword type="function" name="std::codecvt_utf8_utf16::out" link="cpp/locale/codecvt/out"/>
    <keyword type="function" name="std::codecvt_utf8_utf16::in" link="cpp/locale/codecvt/in"/>
    <keyword type="function" name="std::codecvt_utf8_utf16::unshift" link="cpp/locale/codecvt/unshift"/>
    <keyword type="function" name="std::codecvt_utf8_utf16::encoding" link="cpp/locale/codecvt/encoding"/>
    <keyword type="function" name="std::codecvt_utf8_utf16::always_noconv" link="cpp/locale/codecvt/always_noconv"/>
    <keyword type="function" name="std::codecvt_utf8_utf16::length" link="cpp/locale/codecvt/length"/>
    <keyword type="function" name="std::codecvt_utf8_utf16::max_length" link="cpp/locale/codecvt/max_length"/>
    <keyword type="function" name="std::codecvt_utf8_utf16::do_out" link="cpp/locale/codecvt/out"/>
    <keyword type="function" name="std::codecvt_utf8_utf16::do_in" link="cpp/locale/codecvt/in"/>
    <keyword type="function" name="std::codecvt_utf8_utf16::do_unshift" link="cpp/locale/codecvt/unshift"/>
    <keyword type="function" name="std::codecvt_utf8_utf16::do_encoding" link="cpp/locale/codecvt/encoding"/>
    <keyword type="function" name="std::codecvt_utf8_utf16::do_always_noconv" link="cpp/locale/codecvt/always_noconv"/>
    <keyword type="function" name="std::codecvt_utf8_utf16::do_length" link="cpp/locale/codecvt/length"/>
    <keyword type="function" name="std::codecvt_utf8_utf16::do_max_length" link="cpp/locale/codecvt/max_length"/>
    <keyword type="" name="std::codecvt_utf8_utf16::id" link="cpp/locale/codecvt"/>
    <keyword type="enum" name="std::codecvt_utf8_utf16::result" link="cpp/locale/codecvt_base"/>
    <keyword type="macro" name="std::codecvt_utf8_utf16::ok" link="cpp/locale/codecvt_base"/>
    <keyword type="macro" name="std::codecvt_utf8_utf16::partial" link="cpp/locale/codecvt_base"/>
    <keyword type="macro" name="std::codecvt_utf8_utf16::error" link="cpp/locale/codecvt_base"/>
    <keyword type="macro" name="std::codecvt_utf8_utf16::noconv" link="cpp/locale/codecvt_base"/>
    <keyword type="enum" name="std::codecvt_mode" link="cpp/locale/codecvt_mode"/>
    <keyword type="macro" name="std::consume_header" link="cpp/locale/codecvt_mode"/>
    <keyword type="macro" name="std::generate_header" link="cpp/locale/codecvt_mode"/>
    <keyword type="macro" name="std::little_endian" link="cpp/locale/codecvt_mode"/>
    <keyword type="function" name="std::setlocale" link="cpp/locale/setlocale"/>
    <keyword type="function" name="std::localeconv" link="cpp/locale/localeconv"/>
    <keyword type="class" name="std::lconv" link="cpp/locale/lconv"/>
    <keyword type="macro" name="LC_ALL" link="cpp/locale/LC_categories"/>
    <keyword type="macro" name="LC_COLLATE" link="cpp/locale/LC_categories"/>
    <keyword type="macro" name="LC_CTYPE" link="cpp/locale/LC_categories"/>
    <keyword type="macro" name="LC_MONETARY" link="cpp/locale/LC_categories"/>
    <keyword type="macro" name="LC_NUMERIC" link="cpp/locale/LC_categories"/>
    <keyword type="macro" name="LC_TIME" link="cpp/locale/LC_categories"/>
    <keyword type="class" name="std::basic_regex" link="cpp/regex/basic_regex"/>
    <keyword type="function" name="std::basic_regex::basic_regex" link="cpp/regex/basic_regex/basic_regex"/>
    <keyword type="function" name="std::basic_regex::~basic_regex" link="cpp/regex/basic_regex/~basic_regex"/>
    <keyword type="function" name="std::basic_regex::operator=" link="cpp/regex/basic_regex/operator="/>
    <keyword type="function" name="std::basic_regex::assign" link="cpp/regex/basic_regex/assign"/>
    <keyword type="function" name="std::basic_regex::mark_count" link="cpp/regex/basic_regex/mark_count"/>
    <keyword type="function" name="std::basic_regex::flags" link="cpp/regex/basic_regex/flags"/>
    <keyword type="function" name="std::basic_regex::getloc" link="cpp/regex/basic_regex/getloc"/>
    <keyword type="function" name="std::basic_regex::imbue" link="cpp/regex/basic_regex/imbue"/>
    <keyword type="function" name="std::basic_regex::swap" link="cpp/regex/basic_regex/swap"/>
    <keyword type="function" name="std::swap(std::basic_regex)" link="cpp/regex/basic_regex/swap2"/>
    <keyword type="typedef" name="std::regex" link="cpp/regex/basic_regex"/>
    <keyword type="function" name="std::regex::regex" link="cpp/regex/basic_regex/basic_regex"/>
    <keyword type="function" name="std::regex::~regex" link="cpp/regex/basic_regex/~basic_regex"/>
    <keyword type="function" name="std::regex::operator=" link="cpp/regex/basic_regex/operator="/>
    <keyword type="function" name="std::regex::assign" link="cpp/regex/basic_regex/assign"/>
    <keyword type="function" name="std::regex::mark_count" link="cpp/regex/basic_regex/mark_count"/>
    <keyword type="function" name="std::regex::flags" link="cpp/regex/basic_regex/flags"/>
    <keyword type="function" name="std::regex::getloc" link="cpp/regex/basic_regex/getloc"/>
    <keyword type="function" name="std::regex::imbue" link="cpp/regex/basic_regex/imbue"/>
    <keyword type="function" name="std::regex::swap" link="cpp/regex/basic_regex/swap"/>
    <keyword type="function" name="std::swap(std::regex)" link="cpp/regex/basic_regex/swap2"/>
    <keyword type="typedef" name="std::wregex" link="cpp/regex/basic_regex"/>
    <keyword type="function" name="std::wregex::wregex" link="cpp/regex/basic_regex/basic_regex"/>
    <keyword type="function" name="std::wregex::~wregex" link="cpp/regex/basic_regex/~basic_regex"/>
    <keyword type="function" name="std::wregex::operator=" link="cpp/regex/basic_regex/operator="/>
    <keyword type="function" name="std::wregex::assign" link="cpp/regex/basic_regex/assign"/>
    <keyword type="function" name="std::wregex::mark_count" link="cpp/regex/basic_regex/mark_count"/>
    <keyword type="function" name="std::wregex::flags" link="cpp/regex/basic_regex/flags"/>
    <keyword type="function" name="std::wregex::getloc" link="cpp/regex/basic_regex/getloc"/>
    <keyword type="function" name="std::wregex::imbue" link="cpp/regex/basic_regex/imbue"/>
    <keyword type="function" name="std::wregex::swap" link="cpp/regex/basic_regex/swap"/>
    <keyword type="function" name="std::swap(std::wregex)" link="cpp/regex/basic_regex/swap2"/>
    <keyword type="class" name="std::sub_match" link="cpp/regex/sub_match"/>
    <keyword type="" name="std::sub_match::first" link="cpp/utility/pair"/>
    <keyword type="" name="std::sub_match::second" link="cpp/utility/pair"/>
    <keyword type="function" name="std::sub_match::swap" link="cpp/utility/pair/swap"/>
    <keyword type="" name="std::sub_match::matched" link="cpp/regex/sub_match/matched"/>
    <keyword type="function" name="std::sub_match::sub_match" link="cpp/regex/sub_match/sub_match"/>
    <keyword type="function" name="std::sub_match::length" link="cpp/regex/sub_match/length"/>
    <keyword type="function" name="std::sub_match::str" link="cpp/regex/sub_match/str"/>
    <keyword type="function" name="std::sub_match::operator string_type" link="cpp/regex/sub_match/str"/>
    <keyword type="function" name="std::sub_match::compare" link="cpp/regex/sub_match/compare"/>
    <keyword type="typedef" name="std::csub_match" link="cpp/regex/sub_match"/>
    <keyword type="" name="std::csub_match::first" link="cpp/utility/pair"/>
    <keyword type="" name="std::csub_match::second" link="cpp/utility/pair"/>
    <keyword type="function" name="std::csub_match::swap" link="cpp/utility/pair/swap"/>
    <keyword type="" name="std::csub_match::matched" link="cpp/regex/sub_match/matched"/>
    <keyword type="function" name="std::csub_match::csub_match" link="cpp/regex/sub_match/sub_match"/>
    <keyword type="function" name="std::csub_match::length" link="cpp/regex/sub_match/length"/>
    <keyword type="function" name="std::csub_match::str" link="cpp/regex/sub_match/str"/>
    <keyword type="function" name="std::csub_match::operator string_type" link="cpp/regex/sub_match/str"/>
    <keyword type="function" name="std::csub_match::compare" link="cpp/regex/sub_match/compare"/>
    <keyword type="typedef" name="std::wcsub_match" link="cpp/regex/sub_match"/>
    <keyword type="" name="std::wcsub_match::first" link="cpp/utility/pair"/>
    <keyword type="" name="std::wcsub_match::second" link="cpp/utility/pair"/>
    <keyword type="function" name="std::wcsub_match::swap" link="cpp/utility/pair/swap"/>
    <keyword type="" name="std::wcsub_match::matched" link="cpp/regex/sub_match/matched"/>
    <keyword type="function" name="std::wcsub_match::wcsub_match" link="cpp/regex/sub_match/sub_match"/>
    <keyword type="function" name="std::wcsub_match::length" link="cpp/regex/sub_match/length"/>
    <keyword type="function" name="std::wcsub_match::str" link="cpp/regex/sub_match/str"/>
    <keyword type="function" name="std::wcsub_match::operator string_type" link="cpp/regex/sub_match/str"/>
    <keyword type="function" name="std::wcsub_match::compare" link="cpp/regex/sub_match/compare"/>
    <keyword type="typedef" name="std::ssub_match" link="cpp/regex/sub_match"/>
    <keyword type="" name="std::ssub_match::first" link="cpp/utility/pair"/>
    <keyword type="" name="std::ssub_match::second" link="cpp/utility/pair"/>
    <keyword type="function" name="std::ssub_match::swap" link="cpp/utility/pair/swap"/>
    <keyword type="" name="std::ssub_match::matched" link="cpp/regex/sub_match/matched"/>
    <keyword type="function" name="std::ssub_match::ssub_match" link="cpp/regex/sub_match/sub_match"/>
    <keyword type="function" name="std::ssub_match::length" link="cpp/regex/sub_match/length"/>
    <keyword type="function" name="std::ssub_match::str" link="cpp/regex/sub_match/str"/>
    <keyword type="function" name="std::ssub_match::operator string_type" link="cpp/regex/sub_match/str"/>
    <keyword type="function" name="std::ssub_match::compare" link="cpp/regex/sub_match/compare"/>
    <keyword type="typedef" name="std::wssub_match" link="cpp/regex/sub_match"/>
    <keyword type="" name="std::wssub_match::first" link="cpp/utility/pair"/>
    <keyword type="" name="std::wssub_match::second" link="cpp/utility/pair"/>
    <keyword type="function" name="std::wssub_match::swap" link="cpp/utility/pair/swap"/>
    <keyword type="" name="std::wssub_match::matched" link="cpp/regex/sub_match/matched"/>
    <keyword type="function" name="std::wssub_match::wssub_match" link="cpp/regex/sub_match/sub_match"/>
    <keyword type="function" name="std::wssub_match::length" link="cpp/regex/sub_match/length"/>
    <keyword type="function" name="std::wssub_match::str" link="cpp/regex/sub_match/str"/>
    <keyword type="function" name="std::wssub_match::operator string_type" link="cpp/regex/sub_match/str"/>
    <keyword type="function" name="std::wssub_match::compare" link="cpp/regex/sub_match/compare"/>
    <keyword type="class" name="std::match_results" link="cpp/regex/match_results"/>
    <keyword type="function" name="std::match_results::match_results" link="cpp/regex/match_results/match_results"/>
    <keyword type="function" name="std::match_results::~match_results" link="cpp/regex/match_results/~match_results"/>
    <keyword type="function" name="std::match_results::get_allocator" link="cpp/regex/match_results/get_allocator"/>
    <keyword type="function" name="std::match_results::ready" link="cpp/regex/match_results/ready"/>
    <keyword type="function" name="std::match_results::empty" link="cpp/regex/match_results/empty"/>
    <keyword type="function" name="std::match_results::size" link="cpp/regex/match_results/size"/>
    <keyword type="function" name="std::match_results::max_size" link="cpp/regex/match_results/max_size"/>
    <keyword type="function" name="std::match_results::length" link="cpp/regex/match_results/length"/>
    <keyword type="function" name="std::match_results::position" link="cpp/regex/match_results/position"/>
    <keyword type="function" name="std::match_results::str" link="cpp/regex/match_results/str"/>
    <keyword type="function" name="std::match_results::operator[]" link="cpp/regex/match_results/operator_at"/>
    <keyword type="function" name="std::match_results::prefix" link="cpp/regex/match_results/prefix"/>
    <keyword type="function" name="std::match_results::suffix" link="cpp/regex/match_results/suffix"/>
    <keyword type="function" name="std::match_results::begin" link="cpp/regex/match_results/begin"/>
    <keyword type="function" name="std::match_results::cbegin" link="cpp/regex/match_results/begin"/>
    <keyword type="function" name="std::match_results::end" link="cpp/regex/match_results/end"/>
    <keyword type="function" name="std::match_results::cend" link="cpp/regex/match_results/end"/>
    <keyword type="function" name="std::match_results::format" link="cpp/regex/match_results/format"/>
    <keyword type="function" name="std::match_results::swap" link="cpp/regex/match_results/swap"/>
    <keyword type="typedef" name="std::cmatch" link="cpp/regex/match_results"/>
    <keyword type="function" name="std::cmatch::cmatch" link="cpp/regex/match_results/match_results"/>
    <keyword type="function" name="std::cmatch::~cmatch" link="cpp/regex/match_results/~match_results"/>
    <keyword type="function" name="std::cmatch::get_allocator" link="cpp/regex/match_results/get_allocator"/>
    <keyword type="function" name="std::cmatch::ready" link="cpp/regex/match_results/ready"/>
    <keyword type="function" name="std::cmatch::empty" link="cpp/regex/match_results/empty"/>
    <keyword type="function" name="std::cmatch::size" link="cpp/regex/match_results/size"/>
    <keyword type="function" name="std::cmatch::max_size" link="cpp/regex/match_results/max_size"/>
    <keyword type="function" name="std::cmatch::length" link="cpp/regex/match_results/length"/>
    <keyword type="function" name="std::cmatch::position" link="cpp/regex/match_results/position"/>
    <keyword type="function" name="std::cmatch::str" link="cpp/regex/match_results/str"/>
    <keyword type="function" name="std::cmatch::operator[]" link="cpp/regex/match_results/operator_at"/>
    <keyword type="function" name="std::cmatch::prefix" link="cpp/regex/match_results/prefix"/>
    <keyword type="function" name="std::cmatch::suffix" link="cpp/regex/match_results/suffix"/>
    <keyword type="function" name="std::cmatch::begin" link="cpp/regex/match_results/begin"/>
    <keyword type="function" name="std::cmatch::cbegin" link="cpp/regex/match_results/begin"/>
    <keyword type="function" name="std::cmatch::end" link="cpp/regex/match_results/end"/>
    <keyword type="function" name="std::cmatch::cend" link="cpp/regex/match_results/end"/>
    <keyword type="function" name="std::cmatch::format" link="cpp/regex/match_results/format"/>
    <keyword type="function" name="std::cmatch::swap" link="cpp/regex/match_results/swap"/>
    <keyword type="typedef" name="std::wcmatch" link="cpp/regex/match_results"/>
    <keyword type="function" name="std::wcmatch::wcmatch" link="cpp/regex/match_results/match_results"/>
    <keyword type="function" name="std::wcmatch::~wcmatch" link="cpp/regex/match_results/~match_results"/>
    <keyword type="function" name="std::wcmatch::get_allocator" link="cpp/regex/match_results/get_allocator"/>
    <keyword type="function" name="std::wcmatch::ready" link="cpp/regex/match_results/ready"/>
    <keyword type="function" name="std::wcmatch::empty" link="cpp/regex/match_results/empty"/>
    <keyword type="function" name="std::wcmatch::size" link="cpp/regex/match_results/size"/>
    <keyword type="function" name="std::wcmatch::max_size" link="cpp/regex/match_results/max_size"/>
    <keyword type="function" name="std::wcmatch::length" link="cpp/regex/match_results/length"/>
    <keyword type="function" name="std::wcmatch::position" link="cpp/regex/match_results/position"/>
    <keyword type="function" name="std::wcmatch::str" link="cpp/regex/match_results/str"/>
    <keyword type="function" name="std::wcmatch::operator[]" link="cpp/regex/match_results/operator_at"/>
    <keyword type="function" name="std::wcmatch::prefix" link="cpp/regex/match_results/prefix"/>
    <keyword type="function" name="std::wcmatch::suffix" link="cpp/regex/match_results/suffix"/>
    <keyword type="function" name="std::wcmatch::begin" link="cpp/regex/match_results/begin"/>
    <keyword type="function" name="std::wcmatch::cbegin" link="cpp/regex/match_results/begin"/>
    <keyword type="function" name="std::wcmatch::end" link="cpp/regex/match_results/end"/>
    <keyword type="function" name="std::wcmatch::cend" link="cpp/regex/match_results/end"/>
    <keyword type="function" name="std::wcmatch::format" link="cpp/regex/match_results/format"/>
    <keyword type="function" name="std::wcmatch::swap" link="cpp/regex/match_results/swap"/>
    <keyword type="typedef" name="std::smatch" link="cpp/regex/match_results"/>
    <keyword type="function" name="std::smatch::smatch" link="cpp/regex/match_results/match_results"/>
    <keyword type="function" name="std::smatch::~smatch" link="cpp/regex/match_results/~match_results"/>
    <keyword type="function" name="std::smatch::get_allocator" link="cpp/regex/match_results/get_allocator"/>
    <keyword type="function" name="std::smatch::ready" link="cpp/regex/match_results/ready"/>
    <keyword type="function" name="std::smatch::empty" link="cpp/regex/match_results/empty"/>
    <keyword type="function" name="std::smatch::size" link="cpp/regex/match_results/size"/>
    <keyword type="function" name="std::smatch::max_size" link="cpp/regex/match_results/max_size"/>
    <keyword type="function" name="std::smatch::length" link="cpp/regex/match_results/length"/>
    <keyword type="function" name="std::smatch::position" link="cpp/regex/match_results/position"/>
    <keyword type="function" name="std::smatch::str" link="cpp/regex/match_results/str"/>
    <keyword type="function" name="std::smatch::operator[]" link="cpp/regex/match_results/operator_at"/>
    <keyword type="function" name="std::smatch::prefix" link="cpp/regex/match_results/prefix"/>
    <keyword type="function" name="std::smatch::suffix" link="cpp/regex/match_results/suffix"/>
    <keyword type="function" name="std::smatch::begin" link="cpp/regex/match_results/begin"/>
    <keyword type="function" name="std::smatch::cbegin" link="cpp/regex/match_results/begin"/>
    <keyword type="function" name="std::smatch::end" link="cpp/regex/match_results/end"/>
    <keyword type="function" name="std::smatch::cend" link="cpp/regex/match_results/end"/>
    <keyword type="function" name="std::smatch::format" link="cpp/regex/match_results/format"/>
    <keyword type="function" name="std::smatch::swap" link="cpp/regex/match_results/swap"/>
    <keyword type="typedef" name="std::wsmatch" link="cpp/regex/match_results"/>
    <keyword type="function" name="std::wsmatch::wsmatch" link="cpp/regex/match_results/match_results"/>
    <keyword type="function" name="std::wsmatch::~wsmatch" link="cpp/regex/match_results/~match_results"/>
    <keyword type="function" name="std::wsmatch::get_allocator" link="cpp/regex/match_results/get_allocator"/>
    <keyword type="function" name="std::wsmatch::ready" link="cpp/regex/match_results/ready"/>
    <keyword type="function" name="std::wsmatch::empty" link="cpp/regex/match_results/empty"/>
    <keyword type="function" name="std::wsmatch::size" link="cpp/regex/match_results/size"/>
    <keyword type="function" name="std::wsmatch::max_size" link="cpp/regex/match_results/max_size"/>
    <keyword type="function" name="std::wsmatch::length" link="cpp/regex/match_results/length"/>
    <keyword type="function" name="std::wsmatch::position" link="cpp/regex/match_results/position"/>
    <keyword type="function" name="std::wsmatch::str" link="cpp/regex/match_results/str"/>
    <keyword type="function" name="std::wsmatch::operator[]" link="cpp/regex/match_results/operator_at"/>
    <keyword type="function" name="std::wsmatch::prefix" link="cpp/regex/match_results/prefix"/>
    <keyword type="function" name="std::wsmatch::suffix" link="cpp/regex/match_results/suffix"/>
    <keyword type="function" name="std::wsmatch::begin" link="cpp/regex/match_results/begin"/>
    <keyword type="function" name="std::wsmatch::cbegin" link="cpp/regex/match_results/begin"/>
    <keyword type="function" name="std::wsmatch::end" link="cpp/regex/match_results/end"/>
    <keyword type="function" name="std::wsmatch::cend" link="cpp/regex/match_results/end"/>
    <keyword type="function" name="std::wsmatch::format" link="cpp/regex/match_results/format"/>
    <keyword type="function" name="std::wsmatch::swap" link="cpp/regex/match_results/swap"/>
    <keyword type="function" name="std::regex_match" link="cpp/regex/regex_match"/>
    <keyword type="function" name="std::regex_search" link="cpp/regex/regex_search"/>
    <keyword type="function" name="std::regex_replace" link="cpp/regex/regex_replace"/>
    <keyword type="class" name="std::regex_iterator" link="cpp/regex/regex_iterator"/>
    <keyword type="function" name="std::regex_iterator::regex_iterator" link="cpp/regex/regex_iterator/regex_iterator"/>
    <keyword type="function" name="std::regex_iterator::operator=" link="cpp/regex/regex_iterator/operator="/>
    <keyword type="function" name="std::regex_iterator::operator==" link="cpp/regex/regex_iterator/operator_cmp"/>
    <keyword type="function" name="std::regex_iterator::operator!=" link="cpp/regex/regex_iterator/operator_cmp"/>
    <keyword type="function" name="std::regex_iterator::operator*" link="cpp/regex/regex_iterator/operator*"/>
    <keyword type="function" name="std::regex_iterator::operator-&gt;" link="cpp/regex/regex_iterator/operator*"/>
    <keyword type="function" name="std::regex_iterator::operator++" link="cpp/regex/regex_iterator/operator_arith"/>
    <keyword type="function" name="std::regex_iterator::operator++(int)" link="cpp/regex/regex_iterator/operator_arith"/>
    <keyword type="typedef" name="std::cregex_iterator" link="cpp/regex/regex_iterator"/>
    <keyword type="function" name="std::cregex_iterator::cregex_iterator" link="cpp/regex/regex_iterator/regex_iterator"/>
    <keyword type="function" name="std::cregex_iterator::operator=" link="cpp/regex/regex_iterator/operator="/>
    <keyword type="function" name="std::cregex_iterator::operator==" link="cpp/regex/regex_iterator/operator_cmp"/>
    <keyword type="function" name="std::cregex_iterator::operator!=" link="cpp/regex/regex_iterator/operator_cmp"/>
    <keyword type="function" name="std::cregex_iterator::operator*" link="cpp/regex/regex_iterator/operator*"/>
    <keyword type="function" name="std::cregex_iterator::operator-&gt;" link="cpp/regex/regex_iterator/operator*"/>
    <keyword type="function" name="std::cregex_iterator::operator++" link="cpp/regex/regex_iterator/operator_arith"/>
    <keyword type="function" name="std::cregex_iterator::operator++(int)" link="cpp/regex/regex_iterator/operator_arith"/>
    <keyword type="typedef" name="std::wcregex_iterator" link="cpp/regex/regex_iterator"/>
    <keyword type="function" name="std::wcregex_iterator::wcregex_iterator" link="cpp/regex/regex_iterator/regex_iterator"/>
    <keyword type="function" name="std::wcregex_iterator::operator=" link="cpp/regex/regex_iterator/operator="/>
    <keyword type="function" name="std::wcregex_iterator::operator==" link="cpp/regex/regex_iterator/operator_cmp"/>
    <keyword type="function" name="std::wcregex_iterator::operator!=" link="cpp/regex/regex_iterator/operator_cmp"/>
    <keyword type="function" name="std::wcregex_iterator::operator*" link="cpp/regex/regex_iterator/operator*"/>
    <keyword type="function" name="std::wcregex_iterator::operator-&gt;" link="cpp/regex/regex_iterator/operator*"/>
    <keyword type="function" name="std::wcregex_iterator::operator++" link="cpp/regex/regex_iterator/operator_arith"/>
    <keyword type="function" name="std::wcregex_iterator::operator++(int)" link="cpp/regex/regex_iterator/operator_arith"/>
    <keyword type="typedef" name="std::sregex_iterator" link="cpp/regex/regex_iterator"/>
    <keyword type="function" name="std::sregex_iterator::sregex_iterator" link="cpp/regex/regex_iterator/regex_iterator"/>
    <keyword type="function" name="std::sregex_iterator::operator=" link="cpp/regex/regex_iterator/operator="/>
    <keyword type="function" name="std::sregex_iterator::operator==" link="cpp/regex/regex_iterator/operator_cmp"/>
    <keyword type="function" name="std::sregex_iterator::operator!=" link="cpp/regex/regex_iterator/operator_cmp"/>
    <keyword type="function" name="std::sregex_iterator::operator*" link="cpp/regex/regex_iterator/operator*"/>
    <keyword type="function" name="std::sregex_iterator::operator-&gt;" link="cpp/regex/regex_iterator/operator*"/>
    <keyword type="function" name="std::sregex_iterator::operator++" link="cpp/regex/regex_iterator/operator_arith"/>
    <keyword type="function" name="std::sregex_iterator::operator++(int)" link="cpp/regex/regex_iterator/operator_arith"/>
    <keyword type="typedef" name="std::wsregex_iterator" link="cpp/regex/regex_iterator"/>
    <keyword type="function" name="std::wsregex_iterator::wsregex_iterator" link="cpp/regex/regex_iterator/regex_iterator"/>
    <keyword type="function" name="std::wsregex_iterator::operator=" link="cpp/regex/regex_iterator/operator="/>
    <keyword type="function" name="std::wsregex_iterator::operator==" link="cpp/regex/regex_iterator/operator_cmp"/>
    <keyword type="function" name="std::wsregex_iterator::operator!=" link="cpp/regex/regex_iterator/operator_cmp"/>
    <keyword type="function" name="std::wsregex_iterator::operator*" link="cpp/regex/regex_iterator/operator*"/>
    <keyword type="function" name="std::wsregex_iterator::operator-&gt;" link="cpp/regex/regex_iterator/operator*"/>
    <keyword type="function" name="std::wsregex_iterator::operator++" link="cpp/regex/regex_iterator/operator_arith"/>
    <keyword type="function" name="std::wsregex_iterator::operator++(int)" link="cpp/regex/regex_iterator/operator_arith"/>
    <keyword type="class" name="std::regex_token_iterator" link="cpp/regex/regex_token_iterator"/>
    <keyword type="function" name="std::regex_token_iterator::regex_token_iterator" link="cpp/regex/regex_token_iterator/regex_token_iterator"/>
    <keyword type="function" name="std::regex_token_iterator::operator=" link="cpp/regex/regex_token_iterator/operator="/>
    <keyword type="function" name="std::regex_token_iterator::operator==" link="cpp/regex/regex_token_iterator/operator_cmp"/>
    <keyword type="function" name="std::regex_token_iterator::operator!=" link="cpp/regex/regex_token_iterator/operator_cmp"/>
    <keyword type="function" name="std::regex_token_iterator::operator*" link="cpp/regex/regex_token_iterator/operator*"/>
    <keyword type="function" name="std::regex_token_iterator::operator-&gt;" link="cpp/regex/regex_token_iterator/operator*"/>
    <keyword type="function" name="std::regex_token_iterator::operator++" link="cpp/regex/regex_token_iterator/operator_arith"/>
    <keyword type="function" name="std::regex_token_iterator::operator++(int)" link="cpp/regex/regex_token_iterator/operator_arith"/>
    <keyword type="typedef" name="std::cregex_token_iterator" link="cpp/regex/regex_token_iterator"/>
    <keyword type="function" name="std::cregex_token_iterator::cregex_token_iterator" link="cpp/regex/regex_token_iterator/regex_token_iterator"/>
    <keyword type="function" name="std::cregex_token_iterator::operator=" link="cpp/regex/regex_token_iterator/operator="/>
    <keyword type="function" name="std::cregex_token_iterator::operator==" link="cpp/regex/regex_token_iterator/operator_cmp"/>
    <keyword type="function" name="std::cregex_token_iterator::operator!=" link="cpp/regex/regex_token_iterator/operator_cmp"/>
    <keyword type="function" name="std::cregex_token_iterator::operator*" link="cpp/regex/regex_token_iterator/operator*"/>
    <keyword type="function" name="std::cregex_token_iterator::operator-&gt;" link="cpp/regex/regex_token_iterator/operator*"/>
    <keyword type="function" name="std::cregex_token_iterator::operator++" link="cpp/regex/regex_token_iterator/operator_arith"/>
    <keyword type="function" name="std::cregex_token_iterator::operator++(int)" link="cpp/regex/regex_token_iterator/operator_arith"/>
    <keyword type="typedef" name="std::wcregex_token_iterator" link="cpp/regex/regex_token_iterator"/>
    <keyword type="function" name="std::wcregex_token_iterator::wcregex_token_iterator" link="cpp/regex/regex_token_iterator/regex_token_iterator"/>
    <keyword type="function" name="std::wcregex_token_iterator::operator=" link="cpp/regex/regex_token_iterator/operator="/>
    <keyword type="function" name="std::wcregex_token_iterator::operator==" link="cpp/regex/regex_token_iterator/operator_cmp"/>
    <keyword type="function" name="std::wcregex_token_iterator::operator!=" link="cpp/regex/regex_token_iterator/operator_cmp"/>
    <keyword type="function" name="std::wcregex_token_iterator::operator*" link="cpp/regex/regex_token_iterator/operator*"/>
    <keyword type="function" name="std::wcregex_token_iterator::operator-&gt;" link="cpp/regex/regex_token_iterator/operator*"/>
    <keyword type="function" name="std::wcregex_token_iterator::operator++" link="cpp/regex/regex_token_iterator/operator_arith"/>
    <keyword type="function" name="std::wcregex_token_iterator::operator++(int)" link="cpp/regex/regex_token_iterator/operator_arith"/>
    <keyword type="typedef" name="std::sregex_token_iterator" link="cpp/regex/regex_token_iterator"/>
    <keyword type="function" name="std::sregex_token_iterator::sregex_token_iterator" link="cpp/regex/regex_token_iterator/regex_token_iterator"/>
    <keyword type="function" name="std::sregex_token_iterator::operator=" link="cpp/regex/regex_token_iterator/operator="/>
    <keyword type="function" name="std::sregex_token_iterator::operator==" link="cpp/regex/regex_token_iterator/operator_cmp"/>
    <keyword type="function" name="std::sregex_token_iterator::operator!=" link="cpp/regex/regex_token_iterator/operator_cmp"/>
    <keyword type="function" name="std::sregex_token_iterator::operator*" link="cpp/regex/regex_token_iterator/operator*"/>
    <keyword type="function" name="std::sregex_token_iterator::operator-&gt;" link="cpp/regex/regex_token_iterator/operator*"/>
    <keyword type="function" name="std::sregex_token_iterator::operator++" link="cpp/regex/regex_token_iterator/operator_arith"/>
    <keyword type="function" name="std::sregex_token_iterator::operator++(int)" link="cpp/regex/regex_token_iterator/operator_arith"/>
    <keyword type="typedef" name="std::wsregex_token_iterator" link="cpp/regex/regex_token_iterator"/>
    <keyword type="function" name="std::wsregex_token_iterator::wsregex_token_iterator" link="cpp/regex/regex_token_iterator/regex_token_iterator"/>
    <keyword type="function" name="std::wsregex_token_iterator::operator=" link="cpp/regex/regex_token_iterator/operator="/>
    <keyword type="function" name="std::wsregex_token_iterator::operator==" link="cpp/regex/regex_token_iterator/operator_cmp"/>
    <keyword type="function" name="std::wsregex_token_iterator::operator!=" link="cpp/regex/regex_token_iterator/operator_cmp"/>
    <keyword type="function" name="std::wsregex_token_iterator::operator*" link="cpp/regex/regex_token_iterator/operator*"/>
    <keyword type="function" name="std::wsregex_token_iterator::operator-&gt;" link="cpp/regex/regex_token_iterator/operator*"/>
    <keyword type="function" name="std::wsregex_token_iterator::operator++" link="cpp/regex/regex_token_iterator/operator_arith"/>
    <keyword type="function" name="std::wsregex_token_iterator::operator++(int)" link="cpp/regex/regex_token_iterator/operator_arith"/>
    <keyword type="class" name="std::regex_error" link="cpp/regex/regex_error"/>
    <keyword type="function" name="std::regex_error::what" link="cpp/error/exception/what"/>
    <keyword type="function" name="std::regex_error::regex_error" link="cpp/regex/regex_error/regex_error"/>
    <keyword type="function" name="std::regex_error::code" link="cpp/regex/regex_error/code"/>
    <keyword type="class" name="std::regex_traits" link="cpp/regex/regex_traits"/>
    <keyword type="function" name="std::regex_traits::regex_traits" link="cpp/regex/regex_traits/regex_traits"/>
    <keyword type="function" name="std::regex_traits::length" link="cpp/regex/regex_traits/length"/>
    <keyword type="function" name="std::regex_traits::translate" link="cpp/regex/regex_traits/translate"/>
    <keyword type="function" name="std::regex_traits::translate_nocase" link="cpp/regex/regex_traits/translate_nocase"/>
    <keyword type="function" name="std::regex_traits::transform" link="cpp/regex/regex_traits/transform"/>
    <keyword type="function" name="std::regex_traits::transform_primary" link="cpp/regex/regex_traits/transform_primary"/>
    <keyword type="function" name="std::regex_traits::lookup_collatename" link="cpp/regex/regex_traits/lookup_collatename"/>
    <keyword type="function" name="std::regex_traits::lookup_classname" link="cpp/regex/regex_traits/lookup_classname"/>
    <keyword type="function" name="std::regex_traits::isctype" link="cpp/regex/regex_traits/isctype"/>
    <keyword type="function" name="std::regex_traits::value" link="cpp/regex/regex_traits/value"/>
    <keyword type="function" name="std::regex_traits::imbue" link="cpp/regex/regex_traits/imbue"/>
    <keyword type="function" name="std::regex_traits::getloc" link="cpp/regex/regex_traits/getloc"/>
    <keyword type="enum" name="std::regex_constants::syntax_option_type" link="cpp/regex/syntax_option_type"/>
    <keyword type="macro" name="std::regex_constants::icase" link="cpp/regex/syntax_option_type"/>
    <keyword type="macro" name="std::regex_constants::nosubs" link="cpp/regex/syntax_option_type"/>
    <keyword type="macro" name="std::regex_constants::optimize" link="cpp/regex/syntax_option_type"/>
    <keyword type="macro" name="std::regex_constants::collate" link="cpp/regex/syntax_option_type"/>
    <keyword type="macro" name="std::regex_constants::ECMAScript" link="cpp/regex/syntax_option_type"/>
    <keyword type="macro" name="std::regex_constants::basic" link="cpp/regex/syntax_option_type"/>
    <keyword type="macro" name="std::regex_constants::extended" link="cpp/regex/syntax_option_type"/>
    <keyword type="macro" name="std::regex_constants::awk" link="cpp/regex/syntax_option_type"/>
    <keyword type="macro" name="std::regex_constants::grep" link="cpp/regex/syntax_option_type"/>
    <keyword type="macro" name="std::regex_constants::egrep" link="cpp/regex/syntax_option_type"/>
    <keyword type="macro" name="std::regex_constants::multiline" link="cpp/regex/syntax_option_type"/>
    <keyword type="enum" name="std::regex_constants::match_flag_type" link="cpp/regex/match_flag_type"/>
    <keyword type="macro" name="std::regex_constants::match_default" link="cpp/regex/match_flag_type"/>
    <keyword type="macro" name="std::regex_constants::match_not_bol" link="cpp/regex/match_flag_type"/>
    <keyword type="macro" name="std::regex_constants::match_not_eol" link="cpp/regex/match_flag_type"/>
    <keyword type="macro" name="std::regex_constants::match_not_bow" link="cpp/regex/match_flag_type"/>
    <keyword type="macro" name="std::regex_constants::match_not_eow" link="cpp/regex/match_flag_type"/>
    <keyword type="macro" name="std::regex_constants::match_any" link="cpp/regex/match_flag_type"/>
    <keyword type="macro" name="std::regex_constants::match_not_null" link="cpp/regex/match_flag_type"/>
    <keyword type="macro" name="std::regex_constants::match_continuous" link="cpp/regex/match_flag_type"/>
    <keyword type="macro" name="std::regex_constants::match_prev_avail" link="cpp/regex/match_flag_type"/>
    <keyword type="macro" name="std::regex_constants::format_default" link="cpp/regex/match_flag_type"/>
    <keyword type="macro" name="std::regex_constants::format_sed" link="cpp/regex/match_flag_type"/>
    <keyword type="macro" name="std::regex_constants::format_no_copy" link="cpp/regex/match_flag_type"/>
    <keyword type="macro" name="std::regex_constants::format_first_only" link="cpp/regex/match_flag_type"/>
    <keyword type="enum" name="std::regex_constants::error_type" link="cpp/regex/error_type"/>
    <keyword type="macro" name="std::regex_constants::error_collate" link="cpp/regex/error_type"/>
    <keyword type="macro" name="std::regex_constants::error_ctype" link="cpp/regex/error_type"/>
    <keyword type="macro" name="std::regex_constants::error_escape" link="cpp/regex/error_type"/>
    <keyword type="macro" name="std::regex_constants::error_backref" link="cpp/regex/error_type"/>
    <keyword type="macro" name="std::regex_constants::error_brack" link="cpp/regex/error_type"/>
    <keyword type="macro" name="std::regex_constants::error_paren" link="cpp/regex/error_type"/>
    <keyword type="macro" name="std::regex_constants::error_brace" link="cpp/regex/error_type"/>
    <keyword type="macro" name="std::regex_constants::error_badbrace" link="cpp/regex/error_type"/>
    <keyword type="macro" name="std::regex_constants::error_range" link="cpp/regex/error_type"/>
    <keyword type="macro" name="std::regex_constants::error_space" link="cpp/regex/error_type"/>
    <keyword type="macro" name="std::regex_constants::error_badrepeat" link="cpp/regex/error_type"/>
    <keyword type="macro" name="std::regex_constants::error_complexity" link="cpp/regex/error_type"/>
    <keyword type="macro" name="std::regex_constants::error_stack" link="cpp/regex/error_type"/>
    <keyword type="class" name="std::atomic" link="cpp/atomic/atomic"/>
    <keyword type="function" name="std::atomic::atomic" link="cpp/atomic/atomic/atomic"/>
    <keyword type="function" name="std::atomic::operator=" link="cpp/atomic/atomic/operator="/>
    <keyword type="function" name="std::atomic::is_lock_free" link="cpp/atomic/atomic/is_lock_free"/>
    <keyword type="function" name="std::atomic::store" link="cpp/atomic/atomic/store"/>
    <keyword type="function" name="std::atomic::load" link="cpp/atomic/atomic/load"/>
    <keyword type="function" name="std::atomic::operator T" link="cpp/atomic/atomic/operator_T"/>
    <keyword type="function" name="std::atomic::exchange" link="cpp/atomic/atomic/exchange"/>
    <keyword type="function" name="std::atomic::compare_exchange_strong" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic::compare_exchange_weak" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic::wait" link="cpp/atomic/atomic/wait"/>
    <keyword type="function" name="std::atomic::notify_one" link="cpp/atomic/atomic/notify_one"/>
    <keyword type="function" name="std::atomic::notify_all" link="cpp/atomic/atomic/notify_all"/>
    <keyword type="macro" name="std::atomic::is_always_lock_free" link="cpp/atomic/atomic/is_always_lock_free"/>
    <keyword type="function" name="std::atomic::fetch_add" link="cpp/atomic/atomic/fetch_add"/>
    <keyword type="function" name="std::atomic::fetch_sub" link="cpp/atomic/atomic/fetch_sub"/>
    <keyword type="function" name="std::atomic::fetch_and" link="cpp/atomic/atomic/fetch_and"/>
    <keyword type="function" name="std::atomic::fetch_or" link="cpp/atomic/atomic/fetch_or"/>
    <keyword type="function" name="std::atomic::fetch_xor" link="cpp/atomic/atomic/fetch_xor"/>
    <keyword type="function" name="std::atomic::operator++" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic::operator++(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic::operator--" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic::operator--(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic::operator+=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic::operator-=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic::operator&amp;=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic::operator|=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic::operator^=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="class" name="std::atomic_ref" link="cpp/atomic/atomic_ref"/>
    <keyword type="function" name="std::atomic_ref::atomic_ref" link="cpp/atomic/atomic_ref/atomic_ref"/>
    <keyword type="function" name="std::atomic_ref::operator=" link="cpp/atomic/atomic_ref/operator="/>
    <keyword type="function" name="std::atomic_ref::is_lock_free" link="cpp/atomic/atomic_ref/is_lock_free"/>
    <keyword type="function" name="std::atomic_ref::store" link="cpp/atomic/atomic_ref/store"/>
    <keyword type="function" name="std::atomic_ref::load" link="cpp/atomic/atomic_ref/load"/>
    <keyword type="function" name="std::atomic_ref::operator T" link="cpp/atomic/atomic_ref/operator_T"/>
    <keyword type="function" name="std::atomic_ref::exchange" link="cpp/atomic/atomic_ref/exchange"/>
    <keyword type="function" name="std::atomic_ref::compare_exchange_strong" link="cpp/atomic/atomic_ref/compare_exchange"/>
    <keyword type="function" name="std::atomic_ref::compare_exchange_weak" link="cpp/atomic/atomic_ref/compare_exchange"/>
    <keyword type="function" name="std::atomic_ref::wait" link="cpp/atomic/atomic_ref/wait"/>
    <keyword type="function" name="std::atomic_ref::notify_one" link="cpp/atomic/atomic_ref/notify_one"/>
    <keyword type="function" name="std::atomic_ref::notify_all" link="cpp/atomic/atomic_ref/notify_all"/>
    <keyword type="macro" name="std::atomic_ref::is_always_lock_free" link="cpp/atomic/atomic_ref/is_always_lock_free"/>
    <keyword type="macro" name="std::atomic_ref::required_alignment" link="cpp/atomic/atomic_ref/required_alignment"/>
    <keyword type="function" name="std::atomic_ref::fetch_add" link="cpp/atomic/atomic_ref/fetch_add"/>
    <keyword type="function" name="std::atomic_ref::fetch_sub" link="cpp/atomic/atomic_ref/fetch_sub"/>
    <keyword type="function" name="std::atomic_ref::fetch_and" link="cpp/atomic/atomic_ref/fetch_and"/>
    <keyword type="function" name="std::atomic_ref::fetch_or" link="cpp/atomic/atomic_ref/fetch_or"/>
    <keyword type="function" name="std::atomic_ref::fetch_xor" link="cpp/atomic/atomic_ref/fetch_xor"/>
    <keyword type="function" name="std::atomic_ref::operator++" link="cpp/atomic/atomic_ref/operator_arith"/>
    <keyword type="function" name="std::atomic_ref::operator++(int)" link="cpp/atomic/atomic_ref/operator_arith"/>
    <keyword type="function" name="std::atomic_ref::operator--" link="cpp/atomic/atomic_ref/operator_arith"/>
    <keyword type="function" name="std::atomic_ref::operator--(int)" link="cpp/atomic/atomic_ref/operator_arith"/>
    <keyword type="function" name="std::atomic_ref::operator+=" link="cpp/atomic/atomic_ref/operator_arith2"/>
    <keyword type="function" name="std::atomic_ref::operator-=" link="cpp/atomic/atomic_ref/operator_arith2"/>
    <keyword type="function" name="std::atomic_ref::operator&amp;=" link="cpp/atomic/atomic_ref/operator_arith2"/>
    <keyword type="function" name="std::atomic_ref::operator|=" link="cpp/atomic/atomic_ref/operator_arith2"/>
    <keyword type="function" name="std::atomic_ref::operator^=" link="cpp/atomic/atomic_ref/operator_arith2"/>
    <keyword type="function" name="std::atomic_is_lock_free" link="cpp/atomic/atomic_is_lock_free"/>
    <keyword type="function" name="std::atomic_store" link="cpp/atomic/atomic_store"/>
    <keyword type="function" name="std::atomic_store_explicit" link="cpp/atomic/atomic_store"/>
    <keyword type="function" name="std::atomic_load" link="cpp/atomic/atomic_load"/>
    <keyword type="function" name="std::atomic_load_explicit" link="cpp/atomic/atomic_load"/>
    <keyword type="function" name="std::atomic_exchange" link="cpp/atomic/atomic_exchange"/>
    <keyword type="function" name="std::atomic_exchange_explicit" link="cpp/atomic/atomic_exchange"/>
    <keyword type="function" name="std::atomic_compare_exchange_weak" link="cpp/atomic/atomic_compare_exchange"/>
    <keyword type="function" name="std::atomic_compare_exchange_weak_explicit" link="cpp/atomic/atomic_compare_exchange"/>
    <keyword type="function" name="std::atomic_compare_exchange_strong" link="cpp/atomic/atomic_compare_exchange"/>
    <keyword type="function" name="std::atomic_compare_exchange_strong_explicit" link="cpp/atomic/atomic_compare_exchange"/>
    <keyword type="function" name="std::atomic_fetch_add" link="cpp/atomic/atomic_fetch_add"/>
    <keyword type="function" name="std::atomic_fetch_add_explicit" link="cpp/atomic/atomic_fetch_add"/>
    <keyword type="function" name="std::atomic_fetch_sub" link="cpp/atomic/atomic_fetch_sub"/>
    <keyword type="function" name="std::atomic_fetch_sub_explicit" link="cpp/atomic/atomic_fetch_sub"/>
    <keyword type="function" name="std::atomic_fetch_and" link="cpp/atomic/atomic_fetch_and"/>
    <keyword type="function" name="std::atomic_fetch_and_explicit" link="cpp/atomic/atomic_fetch_and"/>
    <keyword type="function" name="std::atomic_fetch_or" link="cpp/atomic/atomic_fetch_or"/>
    <keyword type="function" name="std::atomic_fetch_or_explicit" link="cpp/atomic/atomic_fetch_or"/>
    <keyword type="function" name="std::atomic_fetch_xor" link="cpp/atomic/atomic_fetch_xor"/>
    <keyword type="function" name="std::atomic_fetch_xor_explicit" link="cpp/atomic/atomic_fetch_xor"/>
    <keyword type="function" name="std::atomic_wait" link="cpp/atomic/atomic_wait"/>
    <keyword type="function" name="std::atomic_wait_explicit" link="cpp/atomic/atomic_wait"/>
    <keyword type="function" name="std::atomic_notify_one" link="cpp/atomic/atomic_notify_one"/>
    <keyword type="function" name="std::atomic_notify_all" link="cpp/atomic/atomic_notify_all"/>
    <keyword type="class" name="std::atomic_flag" link="cpp/atomic/atomic_flag"/>
    <keyword type="function" name="std::atomic_flag::atomic_flag" link="cpp/atomic/atomic_flag/atomic_flag"/>
    <keyword type="function" name="std::atomic_flag::operator=" link="cpp/atomic/atomic_flag/operator="/>
    <keyword type="function" name="std::atomic_flag::clear" link="cpp/atomic/atomic_flag/clear"/>
    <keyword type="function" name="std::atomic_flag::test_and_set" link="cpp/atomic/atomic_flag/test_and_set"/>
    <keyword type="function" name="std::atomic_flag::test" link="cpp/atomic/atomic_flag/test"/>
    <keyword type="function" name="std::atomic_flag::wait" link="cpp/atomic/atomic_flag/wait"/>
    <keyword type="function" name="std::atomic_flag::notify_one" link="cpp/atomic/atomic_flag/notify_one"/>
    <keyword type="function" name="std::atomic_flag::notify_all" link="cpp/atomic/atomic_flag/notify_all"/>
    <keyword type="function" name="std::atomic_flag_test_and_set" link="cpp/atomic/atomic_flag_test_and_set"/>
    <keyword type="function" name="std::atomic_flag_test_and_set_explicit" link="cpp/atomic/atomic_flag_test_and_set"/>
    <keyword type="function" name="std::atomic_flag_clear" link="cpp/atomic/atomic_flag_clear"/>
    <keyword type="function" name="std::atomic_flag_clear_explicit" link="cpp/atomic/atomic_flag_clear"/>
    <keyword type="function" name="std::atomic_flag_test" link="cpp/atomic/atomic_flag_test"/>
    <keyword type="function" name="std::atomic_flag_test_explicit" link="cpp/atomic/atomic_flag_test"/>
    <keyword type="function" name="std::atomic_flag_wait" link="cpp/atomic/atomic_flag_wait"/>
    <keyword type="function" name="std::atomic_flag_wait_explicit" link="cpp/atomic/atomic_flag_wait"/>
    <keyword type="function" name="std::atomic_flag_notify_one" link="cpp/atomic/atomic_flag_notify_one"/>
    <keyword type="function" name="std::atomic_flag_notify_all" link="cpp/atomic/atomic_flag_notify_all"/>
    <keyword type="function" name="std::atomic_init" link="cpp/atomic/atomic_init"/>
    <keyword type="function" name="ATOMIC_VAR_INIT" link="cpp/atomic/ATOMIC_VAR_INIT"/>
    <keyword type="enum" name="ATOMIC_FLAG_INIT" link="cpp/atomic/ATOMIC_FLAG_INIT"/>
    <keyword type="enum" name="std::memory_order" link="cpp/atomic/memory_order"/>
    <keyword type="macro" name="std::memory_order::relaxed" link="cpp/atomic/memory_order"/>
    <keyword type="macro" name="std::memory_order::consume" link="cpp/atomic/memory_order"/>
    <keyword type="macro" name="std::memory_order::acquire" link="cpp/atomic/memory_order"/>
    <keyword type="macro" name="std::memory_order::release" link="cpp/atomic/memory_order"/>
    <keyword type="macro" name="std::memory_order::acq_rel" link="cpp/atomic/memory_order"/>
    <keyword type="macro" name="std::memory_order::seq_cst" link="cpp/atomic/memory_order"/>
    <keyword type="macro" name="std::memory_order_relaxed" link="cpp/atomic/memory_order"/>
    <keyword type="macro" name="std::memory_order_consume" link="cpp/atomic/memory_order"/>
    <keyword type="macro" name="std::memory_order_acquire" link="cpp/atomic/memory_order"/>
    <keyword type="macro" name="std::memory_order_release" link="cpp/atomic/memory_order"/>
    <keyword type="macro" name="std::memory_order_acq_rel" link="cpp/atomic/memory_order"/>
    <keyword type="macro" name="std::memory_order_seq_cst" link="cpp/atomic/memory_order"/>
    <keyword type="function" name="std::kill_dependency" link="cpp/atomic/kill_dependency"/>
    <keyword type="function" name="std::atomic_thread_fence" link="cpp/atomic/atomic_thread_fence"/>
    <keyword type="function" name="std::atomic_signal_fence" link="cpp/atomic/atomic_signal_fence"/>
    <keyword type="typedef" name="std::atomic_bool" link="cpp/atomic/atomic"/>
    <keyword type="function" name="std::atomic_bool::atomic_bool" link="cpp/atomic/atomic/atomic"/>
    <keyword type="function" name="std::atomic_bool::operator=" link="cpp/atomic/atomic/operator="/>
    <keyword type="function" name="std::atomic_bool::is_lock_free" link="cpp/atomic/atomic/is_lock_free"/>
    <keyword type="function" name="std::atomic_bool::store" link="cpp/atomic/atomic/store"/>
    <keyword type="function" name="std::atomic_bool::load" link="cpp/atomic/atomic/load"/>
    <keyword type="function" name="std::atomic_bool::operator T" link="cpp/atomic/atomic/operator_T"/>
    <keyword type="function" name="std::atomic_bool::exchange" link="cpp/atomic/atomic/exchange"/>
    <keyword type="function" name="std::atomic_bool::compare_exchange_strong" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic_bool::compare_exchange_weak" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic_bool::wait" link="cpp/atomic/atomic/wait"/>
    <keyword type="function" name="std::atomic_bool::notify_one" link="cpp/atomic/atomic/notify_one"/>
    <keyword type="function" name="std::atomic_bool::notify_all" link="cpp/atomic/atomic/notify_all"/>
    <keyword type="macro" name="std::atomic_bool::is_always_lock_free" link="cpp/atomic/atomic/is_always_lock_free"/>
    <keyword type="function" name="std::atomic_bool::fetch_add" link="cpp/atomic/atomic/fetch_add"/>
    <keyword type="function" name="std::atomic_bool::fetch_sub" link="cpp/atomic/atomic/fetch_sub"/>
    <keyword type="function" name="std::atomic_bool::fetch_and" link="cpp/atomic/atomic/fetch_and"/>
    <keyword type="function" name="std::atomic_bool::fetch_or" link="cpp/atomic/atomic/fetch_or"/>
    <keyword type="function" name="std::atomic_bool::fetch_xor" link="cpp/atomic/atomic/fetch_xor"/>
    <keyword type="function" name="std::atomic_bool::operator++" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_bool::operator++(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_bool::operator--" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_bool::operator--(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_bool::operator+=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_bool::operator-=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_bool::operator&amp;=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_bool::operator|=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_bool::operator^=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="typedef" name="std::atomic_char" link="cpp/atomic/atomic"/>
    <keyword type="function" name="std::atomic_char::atomic_char" link="cpp/atomic/atomic/atomic"/>
    <keyword type="function" name="std::atomic_char::operator=" link="cpp/atomic/atomic/operator="/>
    <keyword type="function" name="std::atomic_char::is_lock_free" link="cpp/atomic/atomic/is_lock_free"/>
    <keyword type="function" name="std::atomic_char::store" link="cpp/atomic/atomic/store"/>
    <keyword type="function" name="std::atomic_char::load" link="cpp/atomic/atomic/load"/>
    <keyword type="function" name="std::atomic_char::operator T" link="cpp/atomic/atomic/operator_T"/>
    <keyword type="function" name="std::atomic_char::exchange" link="cpp/atomic/atomic/exchange"/>
    <keyword type="function" name="std::atomic_char::compare_exchange_strong" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic_char::compare_exchange_weak" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic_char::wait" link="cpp/atomic/atomic/wait"/>
    <keyword type="function" name="std::atomic_char::notify_one" link="cpp/atomic/atomic/notify_one"/>
    <keyword type="function" name="std::atomic_char::notify_all" link="cpp/atomic/atomic/notify_all"/>
    <keyword type="macro" name="std::atomic_char::is_always_lock_free" link="cpp/atomic/atomic/is_always_lock_free"/>
    <keyword type="function" name="std::atomic_char::fetch_add" link="cpp/atomic/atomic/fetch_add"/>
    <keyword type="function" name="std::atomic_char::fetch_sub" link="cpp/atomic/atomic/fetch_sub"/>
    <keyword type="function" name="std::atomic_char::fetch_and" link="cpp/atomic/atomic/fetch_and"/>
    <keyword type="function" name="std::atomic_char::fetch_or" link="cpp/atomic/atomic/fetch_or"/>
    <keyword type="function" name="std::atomic_char::fetch_xor" link="cpp/atomic/atomic/fetch_xor"/>
    <keyword type="function" name="std::atomic_char::operator++" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_char::operator++(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_char::operator--" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_char::operator--(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_char::operator+=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_char::operator-=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_char::operator&amp;=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_char::operator|=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_char::operator^=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="typedef" name="std::atomic_schar" link="cpp/atomic/atomic"/>
    <keyword type="function" name="std::atomic_schar::atomic_schar" link="cpp/atomic/atomic/atomic"/>
    <keyword type="function" name="std::atomic_schar::operator=" link="cpp/atomic/atomic/operator="/>
    <keyword type="function" name="std::atomic_schar::is_lock_free" link="cpp/atomic/atomic/is_lock_free"/>
    <keyword type="function" name="std::atomic_schar::store" link="cpp/atomic/atomic/store"/>
    <keyword type="function" name="std::atomic_schar::load" link="cpp/atomic/atomic/load"/>
    <keyword type="function" name="std::atomic_schar::operator T" link="cpp/atomic/atomic/operator_T"/>
    <keyword type="function" name="std::atomic_schar::exchange" link="cpp/atomic/atomic/exchange"/>
    <keyword type="function" name="std::atomic_schar::compare_exchange_strong" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic_schar::compare_exchange_weak" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic_schar::wait" link="cpp/atomic/atomic/wait"/>
    <keyword type="function" name="std::atomic_schar::notify_one" link="cpp/atomic/atomic/notify_one"/>
    <keyword type="function" name="std::atomic_schar::notify_all" link="cpp/atomic/atomic/notify_all"/>
    <keyword type="macro" name="std::atomic_schar::is_always_lock_free" link="cpp/atomic/atomic/is_always_lock_free"/>
    <keyword type="function" name="std::atomic_schar::fetch_add" link="cpp/atomic/atomic/fetch_add"/>
    <keyword type="function" name="std::atomic_schar::fetch_sub" link="cpp/atomic/atomic/fetch_sub"/>
    <keyword type="function" name="std::atomic_schar::fetch_and" link="cpp/atomic/atomic/fetch_and"/>
    <keyword type="function" name="std::atomic_schar::fetch_or" link="cpp/atomic/atomic/fetch_or"/>
    <keyword type="function" name="std::atomic_schar::fetch_xor" link="cpp/atomic/atomic/fetch_xor"/>
    <keyword type="function" name="std::atomic_schar::operator++" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_schar::operator++(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_schar::operator--" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_schar::operator--(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_schar::operator+=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_schar::operator-=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_schar::operator&amp;=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_schar::operator|=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_schar::operator^=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="typedef" name="std::atomic_uchar" link="cpp/atomic/atomic"/>
    <keyword type="function" name="std::atomic_uchar::atomic_uchar" link="cpp/atomic/atomic/atomic"/>
    <keyword type="function" name="std::atomic_uchar::operator=" link="cpp/atomic/atomic/operator="/>
    <keyword type="function" name="std::atomic_uchar::is_lock_free" link="cpp/atomic/atomic/is_lock_free"/>
    <keyword type="function" name="std::atomic_uchar::store" link="cpp/atomic/atomic/store"/>
    <keyword type="function" name="std::atomic_uchar::load" link="cpp/atomic/atomic/load"/>
    <keyword type="function" name="std::atomic_uchar::operator T" link="cpp/atomic/atomic/operator_T"/>
    <keyword type="function" name="std::atomic_uchar::exchange" link="cpp/atomic/atomic/exchange"/>
    <keyword type="function" name="std::atomic_uchar::compare_exchange_strong" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic_uchar::compare_exchange_weak" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic_uchar::wait" link="cpp/atomic/atomic/wait"/>
    <keyword type="function" name="std::atomic_uchar::notify_one" link="cpp/atomic/atomic/notify_one"/>
    <keyword type="function" name="std::atomic_uchar::notify_all" link="cpp/atomic/atomic/notify_all"/>
    <keyword type="macro" name="std::atomic_uchar::is_always_lock_free" link="cpp/atomic/atomic/is_always_lock_free"/>
    <keyword type="function" name="std::atomic_uchar::fetch_add" link="cpp/atomic/atomic/fetch_add"/>
    <keyword type="function" name="std::atomic_uchar::fetch_sub" link="cpp/atomic/atomic/fetch_sub"/>
    <keyword type="function" name="std::atomic_uchar::fetch_and" link="cpp/atomic/atomic/fetch_and"/>
    <keyword type="function" name="std::atomic_uchar::fetch_or" link="cpp/atomic/atomic/fetch_or"/>
    <keyword type="function" name="std::atomic_uchar::fetch_xor" link="cpp/atomic/atomic/fetch_xor"/>
    <keyword type="function" name="std::atomic_uchar::operator++" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_uchar::operator++(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_uchar::operator--" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_uchar::operator--(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_uchar::operator+=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_uchar::operator-=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_uchar::operator&amp;=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_uchar::operator|=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_uchar::operator^=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="typedef" name="std::atomic_short" link="cpp/atomic/atomic"/>
    <keyword type="function" name="std::atomic_short::atomic_short" link="cpp/atomic/atomic/atomic"/>
    <keyword type="function" name="std::atomic_short::operator=" link="cpp/atomic/atomic/operator="/>
    <keyword type="function" name="std::atomic_short::is_lock_free" link="cpp/atomic/atomic/is_lock_free"/>
    <keyword type="function" name="std::atomic_short::store" link="cpp/atomic/atomic/store"/>
    <keyword type="function" name="std::atomic_short::load" link="cpp/atomic/atomic/load"/>
    <keyword type="function" name="std::atomic_short::operator T" link="cpp/atomic/atomic/operator_T"/>
    <keyword type="function" name="std::atomic_short::exchange" link="cpp/atomic/atomic/exchange"/>
    <keyword type="function" name="std::atomic_short::compare_exchange_strong" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic_short::compare_exchange_weak" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic_short::wait" link="cpp/atomic/atomic/wait"/>
    <keyword type="function" name="std::atomic_short::notify_one" link="cpp/atomic/atomic/notify_one"/>
    <keyword type="function" name="std::atomic_short::notify_all" link="cpp/atomic/atomic/notify_all"/>
    <keyword type="macro" name="std::atomic_short::is_always_lock_free" link="cpp/atomic/atomic/is_always_lock_free"/>
    <keyword type="function" name="std::atomic_short::fetch_add" link="cpp/atomic/atomic/fetch_add"/>
    <keyword type="function" name="std::atomic_short::fetch_sub" link="cpp/atomic/atomic/fetch_sub"/>
    <keyword type="function" name="std::atomic_short::fetch_and" link="cpp/atomic/atomic/fetch_and"/>
    <keyword type="function" name="std::atomic_short::fetch_or" link="cpp/atomic/atomic/fetch_or"/>
    <keyword type="function" name="std::atomic_short::fetch_xor" link="cpp/atomic/atomic/fetch_xor"/>
    <keyword type="function" name="std::atomic_short::operator++" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_short::operator++(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_short::operator--" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_short::operator--(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_short::operator+=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_short::operator-=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_short::operator&amp;=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_short::operator|=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_short::operator^=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="typedef" name="std::atomic_ushort" link="cpp/atomic/atomic"/>
    <keyword type="function" name="std::atomic_ushort::atomic_ushort" link="cpp/atomic/atomic/atomic"/>
    <keyword type="function" name="std::atomic_ushort::operator=" link="cpp/atomic/atomic/operator="/>
    <keyword type="function" name="std::atomic_ushort::is_lock_free" link="cpp/atomic/atomic/is_lock_free"/>
    <keyword type="function" name="std::atomic_ushort::store" link="cpp/atomic/atomic/store"/>
    <keyword type="function" name="std::atomic_ushort::load" link="cpp/atomic/atomic/load"/>
    <keyword type="function" name="std::atomic_ushort::operator T" link="cpp/atomic/atomic/operator_T"/>
    <keyword type="function" name="std::atomic_ushort::exchange" link="cpp/atomic/atomic/exchange"/>
    <keyword type="function" name="std::atomic_ushort::compare_exchange_strong" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic_ushort::compare_exchange_weak" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic_ushort::wait" link="cpp/atomic/atomic/wait"/>
    <keyword type="function" name="std::atomic_ushort::notify_one" link="cpp/atomic/atomic/notify_one"/>
    <keyword type="function" name="std::atomic_ushort::notify_all" link="cpp/atomic/atomic/notify_all"/>
    <keyword type="macro" name="std::atomic_ushort::is_always_lock_free" link="cpp/atomic/atomic/is_always_lock_free"/>
    <keyword type="function" name="std::atomic_ushort::fetch_add" link="cpp/atomic/atomic/fetch_add"/>
    <keyword type="function" name="std::atomic_ushort::fetch_sub" link="cpp/atomic/atomic/fetch_sub"/>
    <keyword type="function" name="std::atomic_ushort::fetch_and" link="cpp/atomic/atomic/fetch_and"/>
    <keyword type="function" name="std::atomic_ushort::fetch_or" link="cpp/atomic/atomic/fetch_or"/>
    <keyword type="function" name="std::atomic_ushort::fetch_xor" link="cpp/atomic/atomic/fetch_xor"/>
    <keyword type="function" name="std::atomic_ushort::operator++" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_ushort::operator++(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_ushort::operator--" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_ushort::operator--(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_ushort::operator+=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_ushort::operator-=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_ushort::operator&amp;=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_ushort::operator|=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_ushort::operator^=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="typedef" name="std::atomic_int" link="cpp/atomic/atomic"/>
    <keyword type="function" name="std::atomic_int::atomic_int" link="cpp/atomic/atomic/atomic"/>
    <keyword type="function" name="std::atomic_int::operator=" link="cpp/atomic/atomic/operator="/>
    <keyword type="function" name="std::atomic_int::is_lock_free" link="cpp/atomic/atomic/is_lock_free"/>
    <keyword type="function" name="std::atomic_int::store" link="cpp/atomic/atomic/store"/>
    <keyword type="function" name="std::atomic_int::load" link="cpp/atomic/atomic/load"/>
    <keyword type="function" name="std::atomic_int::operator T" link="cpp/atomic/atomic/operator_T"/>
    <keyword type="function" name="std::atomic_int::exchange" link="cpp/atomic/atomic/exchange"/>
    <keyword type="function" name="std::atomic_int::compare_exchange_strong" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic_int::compare_exchange_weak" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic_int::wait" link="cpp/atomic/atomic/wait"/>
    <keyword type="function" name="std::atomic_int::notify_one" link="cpp/atomic/atomic/notify_one"/>
    <keyword type="function" name="std::atomic_int::notify_all" link="cpp/atomic/atomic/notify_all"/>
    <keyword type="macro" name="std::atomic_int::is_always_lock_free" link="cpp/atomic/atomic/is_always_lock_free"/>
    <keyword type="function" name="std::atomic_int::fetch_add" link="cpp/atomic/atomic/fetch_add"/>
    <keyword type="function" name="std::atomic_int::fetch_sub" link="cpp/atomic/atomic/fetch_sub"/>
    <keyword type="function" name="std::atomic_int::fetch_and" link="cpp/atomic/atomic/fetch_and"/>
    <keyword type="function" name="std::atomic_int::fetch_or" link="cpp/atomic/atomic/fetch_or"/>
    <keyword type="function" name="std::atomic_int::fetch_xor" link="cpp/atomic/atomic/fetch_xor"/>
    <keyword type="function" name="std::atomic_int::operator++" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_int::operator++(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_int::operator--" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_int::operator--(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_int::operator+=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_int::operator-=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_int::operator&amp;=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_int::operator|=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_int::operator^=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="typedef" name="std::atomic_uint" link="cpp/atomic/atomic"/>
    <keyword type="function" name="std::atomic_uint::atomic_uint" link="cpp/atomic/atomic/atomic"/>
    <keyword type="function" name="std::atomic_uint::operator=" link="cpp/atomic/atomic/operator="/>
    <keyword type="function" name="std::atomic_uint::is_lock_free" link="cpp/atomic/atomic/is_lock_free"/>
    <keyword type="function" name="std::atomic_uint::store" link="cpp/atomic/atomic/store"/>
    <keyword type="function" name="std::atomic_uint::load" link="cpp/atomic/atomic/load"/>
    <keyword type="function" name="std::atomic_uint::operator T" link="cpp/atomic/atomic/operator_T"/>
    <keyword type="function" name="std::atomic_uint::exchange" link="cpp/atomic/atomic/exchange"/>
    <keyword type="function" name="std::atomic_uint::compare_exchange_strong" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic_uint::compare_exchange_weak" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic_uint::wait" link="cpp/atomic/atomic/wait"/>
    <keyword type="function" name="std::atomic_uint::notify_one" link="cpp/atomic/atomic/notify_one"/>
    <keyword type="function" name="std::atomic_uint::notify_all" link="cpp/atomic/atomic/notify_all"/>
    <keyword type="macro" name="std::atomic_uint::is_always_lock_free" link="cpp/atomic/atomic/is_always_lock_free"/>
    <keyword type="function" name="std::atomic_uint::fetch_add" link="cpp/atomic/atomic/fetch_add"/>
    <keyword type="function" name="std::atomic_uint::fetch_sub" link="cpp/atomic/atomic/fetch_sub"/>
    <keyword type="function" name="std::atomic_uint::fetch_and" link="cpp/atomic/atomic/fetch_and"/>
    <keyword type="function" name="std::atomic_uint::fetch_or" link="cpp/atomic/atomic/fetch_or"/>
    <keyword type="function" name="std::atomic_uint::fetch_xor" link="cpp/atomic/atomic/fetch_xor"/>
    <keyword type="function" name="std::atomic_uint::operator++" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_uint::operator++(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_uint::operator--" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_uint::operator--(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_uint::operator+=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_uint::operator-=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_uint::operator&amp;=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_uint::operator|=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_uint::operator^=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="typedef" name="std::atomic_long" link="cpp/atomic/atomic"/>
    <keyword type="function" name="std::atomic_long::atomic_long" link="cpp/atomic/atomic/atomic"/>
    <keyword type="function" name="std::atomic_long::operator=" link="cpp/atomic/atomic/operator="/>
    <keyword type="function" name="std::atomic_long::is_lock_free" link="cpp/atomic/atomic/is_lock_free"/>
    <keyword type="function" name="std::atomic_long::store" link="cpp/atomic/atomic/store"/>
    <keyword type="function" name="std::atomic_long::load" link="cpp/atomic/atomic/load"/>
    <keyword type="function" name="std::atomic_long::operator T" link="cpp/atomic/atomic/operator_T"/>
    <keyword type="function" name="std::atomic_long::exchange" link="cpp/atomic/atomic/exchange"/>
    <keyword type="function" name="std::atomic_long::compare_exchange_strong" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic_long::compare_exchange_weak" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic_long::wait" link="cpp/atomic/atomic/wait"/>
    <keyword type="function" name="std::atomic_long::notify_one" link="cpp/atomic/atomic/notify_one"/>
    <keyword type="function" name="std::atomic_long::notify_all" link="cpp/atomic/atomic/notify_all"/>
    <keyword type="macro" name="std::atomic_long::is_always_lock_free" link="cpp/atomic/atomic/is_always_lock_free"/>
    <keyword type="function" name="std::atomic_long::fetch_add" link="cpp/atomic/atomic/fetch_add"/>
    <keyword type="function" name="std::atomic_long::fetch_sub" link="cpp/atomic/atomic/fetch_sub"/>
    <keyword type="function" name="std::atomic_long::fetch_and" link="cpp/atomic/atomic/fetch_and"/>
    <keyword type="function" name="std::atomic_long::fetch_or" link="cpp/atomic/atomic/fetch_or"/>
    <keyword type="function" name="std::atomic_long::fetch_xor" link="cpp/atomic/atomic/fetch_xor"/>
    <keyword type="function" name="std::atomic_long::operator++" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_long::operator++(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_long::operator--" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_long::operator--(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_long::operator+=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_long::operator-=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_long::operator&amp;=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_long::operator|=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_long::operator^=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="typedef" name="std::atomic_ulong" link="cpp/atomic/atomic"/>
    <keyword type="function" name="std::atomic_ulong::atomic_ulong" link="cpp/atomic/atomic/atomic"/>
    <keyword type="function" name="std::atomic_ulong::operator=" link="cpp/atomic/atomic/operator="/>
    <keyword type="function" name="std::atomic_ulong::is_lock_free" link="cpp/atomic/atomic/is_lock_free"/>
    <keyword type="function" name="std::atomic_ulong::store" link="cpp/atomic/atomic/store"/>
    <keyword type="function" name="std::atomic_ulong::load" link="cpp/atomic/atomic/load"/>
    <keyword type="function" name="std::atomic_ulong::operator T" link="cpp/atomic/atomic/operator_T"/>
    <keyword type="function" name="std::atomic_ulong::exchange" link="cpp/atomic/atomic/exchange"/>
    <keyword type="function" name="std::atomic_ulong::compare_exchange_strong" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic_ulong::compare_exchange_weak" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic_ulong::wait" link="cpp/atomic/atomic/wait"/>
    <keyword type="function" name="std::atomic_ulong::notify_one" link="cpp/atomic/atomic/notify_one"/>
    <keyword type="function" name="std::atomic_ulong::notify_all" link="cpp/atomic/atomic/notify_all"/>
    <keyword type="macro" name="std::atomic_ulong::is_always_lock_free" link="cpp/atomic/atomic/is_always_lock_free"/>
    <keyword type="function" name="std::atomic_ulong::fetch_add" link="cpp/atomic/atomic/fetch_add"/>
    <keyword type="function" name="std::atomic_ulong::fetch_sub" link="cpp/atomic/atomic/fetch_sub"/>
    <keyword type="function" name="std::atomic_ulong::fetch_and" link="cpp/atomic/atomic/fetch_and"/>
    <keyword type="function" name="std::atomic_ulong::fetch_or" link="cpp/atomic/atomic/fetch_or"/>
    <keyword type="function" name="std::atomic_ulong::fetch_xor" link="cpp/atomic/atomic/fetch_xor"/>
    <keyword type="function" name="std::atomic_ulong::operator++" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_ulong::operator++(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_ulong::operator--" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_ulong::operator--(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_ulong::operator+=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_ulong::operator-=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_ulong::operator&amp;=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_ulong::operator|=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_ulong::operator^=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="typedef" name="std::atomic_llong" link="cpp/atomic/atomic"/>
    <keyword type="function" name="std::atomic_llong::atomic_llong" link="cpp/atomic/atomic/atomic"/>
    <keyword type="function" name="std::atomic_llong::operator=" link="cpp/atomic/atomic/operator="/>
    <keyword type="function" name="std::atomic_llong::is_lock_free" link="cpp/atomic/atomic/is_lock_free"/>
    <keyword type="function" name="std::atomic_llong::store" link="cpp/atomic/atomic/store"/>
    <keyword type="function" name="std::atomic_llong::load" link="cpp/atomic/atomic/load"/>
    <keyword type="function" name="std::atomic_llong::operator T" link="cpp/atomic/atomic/operator_T"/>
    <keyword type="function" name="std::atomic_llong::exchange" link="cpp/atomic/atomic/exchange"/>
    <keyword type="function" name="std::atomic_llong::compare_exchange_strong" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic_llong::compare_exchange_weak" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic_llong::wait" link="cpp/atomic/atomic/wait"/>
    <keyword type="function" name="std::atomic_llong::notify_one" link="cpp/atomic/atomic/notify_one"/>
    <keyword type="function" name="std::atomic_llong::notify_all" link="cpp/atomic/atomic/notify_all"/>
    <keyword type="macro" name="std::atomic_llong::is_always_lock_free" link="cpp/atomic/atomic/is_always_lock_free"/>
    <keyword type="function" name="std::atomic_llong::fetch_add" link="cpp/atomic/atomic/fetch_add"/>
    <keyword type="function" name="std::atomic_llong::fetch_sub" link="cpp/atomic/atomic/fetch_sub"/>
    <keyword type="function" name="std::atomic_llong::fetch_and" link="cpp/atomic/atomic/fetch_and"/>
    <keyword type="function" name="std::atomic_llong::fetch_or" link="cpp/atomic/atomic/fetch_or"/>
    <keyword type="function" name="std::atomic_llong::fetch_xor" link="cpp/atomic/atomic/fetch_xor"/>
    <keyword type="function" name="std::atomic_llong::operator++" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_llong::operator++(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_llong::operator--" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_llong::operator--(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_llong::operator+=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_llong::operator-=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_llong::operator&amp;=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_llong::operator|=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_llong::operator^=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="typedef" name="std::atomic_ullong" link="cpp/atomic/atomic"/>
    <keyword type="function" name="std::atomic_ullong::atomic_ullong" link="cpp/atomic/atomic/atomic"/>
    <keyword type="function" name="std::atomic_ullong::operator=" link="cpp/atomic/atomic/operator="/>
    <keyword type="function" name="std::atomic_ullong::is_lock_free" link="cpp/atomic/atomic/is_lock_free"/>
    <keyword type="function" name="std::atomic_ullong::store" link="cpp/atomic/atomic/store"/>
    <keyword type="function" name="std::atomic_ullong::load" link="cpp/atomic/atomic/load"/>
    <keyword type="function" name="std::atomic_ullong::operator T" link="cpp/atomic/atomic/operator_T"/>
    <keyword type="function" name="std::atomic_ullong::exchange" link="cpp/atomic/atomic/exchange"/>
    <keyword type="function" name="std::atomic_ullong::compare_exchange_strong" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic_ullong::compare_exchange_weak" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic_ullong::wait" link="cpp/atomic/atomic/wait"/>
    <keyword type="function" name="std::atomic_ullong::notify_one" link="cpp/atomic/atomic/notify_one"/>
    <keyword type="function" name="std::atomic_ullong::notify_all" link="cpp/atomic/atomic/notify_all"/>
    <keyword type="macro" name="std::atomic_ullong::is_always_lock_free" link="cpp/atomic/atomic/is_always_lock_free"/>
    <keyword type="function" name="std::atomic_ullong::fetch_add" link="cpp/atomic/atomic/fetch_add"/>
    <keyword type="function" name="std::atomic_ullong::fetch_sub" link="cpp/atomic/atomic/fetch_sub"/>
    <keyword type="function" name="std::atomic_ullong::fetch_and" link="cpp/atomic/atomic/fetch_and"/>
    <keyword type="function" name="std::atomic_ullong::fetch_or" link="cpp/atomic/atomic/fetch_or"/>
    <keyword type="function" name="std::atomic_ullong::fetch_xor" link="cpp/atomic/atomic/fetch_xor"/>
    <keyword type="function" name="std::atomic_ullong::operator++" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_ullong::operator++(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_ullong::operator--" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_ullong::operator--(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_ullong::operator+=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_ullong::operator-=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_ullong::operator&amp;=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_ullong::operator|=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_ullong::operator^=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="typedef" name="std::atomic_char8_t" link="cpp/atomic/atomic"/>
    <keyword type="function" name="std::atomic_char8_t::atomic_char8_t" link="cpp/atomic/atomic/atomic"/>
    <keyword type="function" name="std::atomic_char8_t::operator=" link="cpp/atomic/atomic/operator="/>
    <keyword type="function" name="std::atomic_char8_t::is_lock_free" link="cpp/atomic/atomic/is_lock_free"/>
    <keyword type="function" name="std::atomic_char8_t::store" link="cpp/atomic/atomic/store"/>
    <keyword type="function" name="std::atomic_char8_t::load" link="cpp/atomic/atomic/load"/>
    <keyword type="function" name="std::atomic_char8_t::operator T" link="cpp/atomic/atomic/operator_T"/>
    <keyword type="function" name="std::atomic_char8_t::exchange" link="cpp/atomic/atomic/exchange"/>
    <keyword type="function" name="std::atomic_char8_t::compare_exchange_strong" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic_char8_t::compare_exchange_weak" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic_char8_t::wait" link="cpp/atomic/atomic/wait"/>
    <keyword type="function" name="std::atomic_char8_t::notify_one" link="cpp/atomic/atomic/notify_one"/>
    <keyword type="function" name="std::atomic_char8_t::notify_all" link="cpp/atomic/atomic/notify_all"/>
    <keyword type="macro" name="std::atomic_char8_t::is_always_lock_free" link="cpp/atomic/atomic/is_always_lock_free"/>
    <keyword type="function" name="std::atomic_char8_t::fetch_add" link="cpp/atomic/atomic/fetch_add"/>
    <keyword type="function" name="std::atomic_char8_t::fetch_sub" link="cpp/atomic/atomic/fetch_sub"/>
    <keyword type="function" name="std::atomic_char8_t::fetch_and" link="cpp/atomic/atomic/fetch_and"/>
    <keyword type="function" name="std::atomic_char8_t::fetch_or" link="cpp/atomic/atomic/fetch_or"/>
    <keyword type="function" name="std::atomic_char8_t::fetch_xor" link="cpp/atomic/atomic/fetch_xor"/>
    <keyword type="function" name="std::atomic_char8_t::operator++" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_char8_t::operator++(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_char8_t::operator--" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_char8_t::operator--(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_char8_t::operator+=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_char8_t::operator-=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_char8_t::operator&amp;=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_char8_t::operator|=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_char8_t::operator^=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="typedef" name="std::atomic_char16_t" link="cpp/atomic/atomic"/>
    <keyword type="function" name="std::atomic_char16_t::atomic_char16_t" link="cpp/atomic/atomic/atomic"/>
    <keyword type="function" name="std::atomic_char16_t::operator=" link="cpp/atomic/atomic/operator="/>
    <keyword type="function" name="std::atomic_char16_t::is_lock_free" link="cpp/atomic/atomic/is_lock_free"/>
    <keyword type="function" name="std::atomic_char16_t::store" link="cpp/atomic/atomic/store"/>
    <keyword type="function" name="std::atomic_char16_t::load" link="cpp/atomic/atomic/load"/>
    <keyword type="function" name="std::atomic_char16_t::operator T" link="cpp/atomic/atomic/operator_T"/>
    <keyword type="function" name="std::atomic_char16_t::exchange" link="cpp/atomic/atomic/exchange"/>
    <keyword type="function" name="std::atomic_char16_t::compare_exchange_strong" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic_char16_t::compare_exchange_weak" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic_char16_t::wait" link="cpp/atomic/atomic/wait"/>
    <keyword type="function" name="std::atomic_char16_t::notify_one" link="cpp/atomic/atomic/notify_one"/>
    <keyword type="function" name="std::atomic_char16_t::notify_all" link="cpp/atomic/atomic/notify_all"/>
    <keyword type="macro" name="std::atomic_char16_t::is_always_lock_free" link="cpp/atomic/atomic/is_always_lock_free"/>
    <keyword type="function" name="std::atomic_char16_t::fetch_add" link="cpp/atomic/atomic/fetch_add"/>
    <keyword type="function" name="std::atomic_char16_t::fetch_sub" link="cpp/atomic/atomic/fetch_sub"/>
    <keyword type="function" name="std::atomic_char16_t::fetch_and" link="cpp/atomic/atomic/fetch_and"/>
    <keyword type="function" name="std::atomic_char16_t::fetch_or" link="cpp/atomic/atomic/fetch_or"/>
    <keyword type="function" name="std::atomic_char16_t::fetch_xor" link="cpp/atomic/atomic/fetch_xor"/>
    <keyword type="function" name="std::atomic_char16_t::operator++" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_char16_t::operator++(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_char16_t::operator--" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_char16_t::operator--(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_char16_t::operator+=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_char16_t::operator-=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_char16_t::operator&amp;=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_char16_t::operator|=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_char16_t::operator^=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="typedef" name="std::atomic_char32_t" link="cpp/atomic/atomic"/>
    <keyword type="function" name="std::atomic_char32_t::atomic_char32_t" link="cpp/atomic/atomic/atomic"/>
    <keyword type="function" name="std::atomic_char32_t::operator=" link="cpp/atomic/atomic/operator="/>
    <keyword type="function" name="std::atomic_char32_t::is_lock_free" link="cpp/atomic/atomic/is_lock_free"/>
    <keyword type="function" name="std::atomic_char32_t::store" link="cpp/atomic/atomic/store"/>
    <keyword type="function" name="std::atomic_char32_t::load" link="cpp/atomic/atomic/load"/>
    <keyword type="function" name="std::atomic_char32_t::operator T" link="cpp/atomic/atomic/operator_T"/>
    <keyword type="function" name="std::atomic_char32_t::exchange" link="cpp/atomic/atomic/exchange"/>
    <keyword type="function" name="std::atomic_char32_t::compare_exchange_strong" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic_char32_t::compare_exchange_weak" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic_char32_t::wait" link="cpp/atomic/atomic/wait"/>
    <keyword type="function" name="std::atomic_char32_t::notify_one" link="cpp/atomic/atomic/notify_one"/>
    <keyword type="function" name="std::atomic_char32_t::notify_all" link="cpp/atomic/atomic/notify_all"/>
    <keyword type="macro" name="std::atomic_char32_t::is_always_lock_free" link="cpp/atomic/atomic/is_always_lock_free"/>
    <keyword type="function" name="std::atomic_char32_t::fetch_add" link="cpp/atomic/atomic/fetch_add"/>
    <keyword type="function" name="std::atomic_char32_t::fetch_sub" link="cpp/atomic/atomic/fetch_sub"/>
    <keyword type="function" name="std::atomic_char32_t::fetch_and" link="cpp/atomic/atomic/fetch_and"/>
    <keyword type="function" name="std::atomic_char32_t::fetch_or" link="cpp/atomic/atomic/fetch_or"/>
    <keyword type="function" name="std::atomic_char32_t::fetch_xor" link="cpp/atomic/atomic/fetch_xor"/>
    <keyword type="function" name="std::atomic_char32_t::operator++" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_char32_t::operator++(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_char32_t::operator--" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_char32_t::operator--(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_char32_t::operator+=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_char32_t::operator-=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_char32_t::operator&amp;=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_char32_t::operator|=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_char32_t::operator^=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="typedef" name="std::atomic_wchar_t" link="cpp/atomic/atomic"/>
    <keyword type="function" name="std::atomic_wchar_t::atomic_wchar_t" link="cpp/atomic/atomic/atomic"/>
    <keyword type="function" name="std::atomic_wchar_t::operator=" link="cpp/atomic/atomic/operator="/>
    <keyword type="function" name="std::atomic_wchar_t::is_lock_free" link="cpp/atomic/atomic/is_lock_free"/>
    <keyword type="function" name="std::atomic_wchar_t::store" link="cpp/atomic/atomic/store"/>
    <keyword type="function" name="std::atomic_wchar_t::load" link="cpp/atomic/atomic/load"/>
    <keyword type="function" name="std::atomic_wchar_t::operator T" link="cpp/atomic/atomic/operator_T"/>
    <keyword type="function" name="std::atomic_wchar_t::exchange" link="cpp/atomic/atomic/exchange"/>
    <keyword type="function" name="std::atomic_wchar_t::compare_exchange_strong" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic_wchar_t::compare_exchange_weak" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic_wchar_t::wait" link="cpp/atomic/atomic/wait"/>
    <keyword type="function" name="std::atomic_wchar_t::notify_one" link="cpp/atomic/atomic/notify_one"/>
    <keyword type="function" name="std::atomic_wchar_t::notify_all" link="cpp/atomic/atomic/notify_all"/>
    <keyword type="macro" name="std::atomic_wchar_t::is_always_lock_free" link="cpp/atomic/atomic/is_always_lock_free"/>
    <keyword type="function" name="std::atomic_wchar_t::fetch_add" link="cpp/atomic/atomic/fetch_add"/>
    <keyword type="function" name="std::atomic_wchar_t::fetch_sub" link="cpp/atomic/atomic/fetch_sub"/>
    <keyword type="function" name="std::atomic_wchar_t::fetch_and" link="cpp/atomic/atomic/fetch_and"/>
    <keyword type="function" name="std::atomic_wchar_t::fetch_or" link="cpp/atomic/atomic/fetch_or"/>
    <keyword type="function" name="std::atomic_wchar_t::fetch_xor" link="cpp/atomic/atomic/fetch_xor"/>
    <keyword type="function" name="std::atomic_wchar_t::operator++" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_wchar_t::operator++(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_wchar_t::operator--" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_wchar_t::operator--(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_wchar_t::operator+=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_wchar_t::operator-=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_wchar_t::operator&amp;=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_wchar_t::operator|=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_wchar_t::operator^=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="typedef" name="std::atomic_int8_t" link="cpp/atomic/atomic"/>
    <keyword type="function" name="std::atomic_int8_t::atomic_int8_t" link="cpp/atomic/atomic/atomic"/>
    <keyword type="function" name="std::atomic_int8_t::operator=" link="cpp/atomic/atomic/operator="/>
    <keyword type="function" name="std::atomic_int8_t::is_lock_free" link="cpp/atomic/atomic/is_lock_free"/>
    <keyword type="function" name="std::atomic_int8_t::store" link="cpp/atomic/atomic/store"/>
    <keyword type="function" name="std::atomic_int8_t::load" link="cpp/atomic/atomic/load"/>
    <keyword type="function" name="std::atomic_int8_t::operator T" link="cpp/atomic/atomic/operator_T"/>
    <keyword type="function" name="std::atomic_int8_t::exchange" link="cpp/atomic/atomic/exchange"/>
    <keyword type="function" name="std::atomic_int8_t::compare_exchange_strong" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic_int8_t::compare_exchange_weak" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic_int8_t::wait" link="cpp/atomic/atomic/wait"/>
    <keyword type="function" name="std::atomic_int8_t::notify_one" link="cpp/atomic/atomic/notify_one"/>
    <keyword type="function" name="std::atomic_int8_t::notify_all" link="cpp/atomic/atomic/notify_all"/>
    <keyword type="macro" name="std::atomic_int8_t::is_always_lock_free" link="cpp/atomic/atomic/is_always_lock_free"/>
    <keyword type="function" name="std::atomic_int8_t::fetch_add" link="cpp/atomic/atomic/fetch_add"/>
    <keyword type="function" name="std::atomic_int8_t::fetch_sub" link="cpp/atomic/atomic/fetch_sub"/>
    <keyword type="function" name="std::atomic_int8_t::fetch_and" link="cpp/atomic/atomic/fetch_and"/>
    <keyword type="function" name="std::atomic_int8_t::fetch_or" link="cpp/atomic/atomic/fetch_or"/>
    <keyword type="function" name="std::atomic_int8_t::fetch_xor" link="cpp/atomic/atomic/fetch_xor"/>
    <keyword type="function" name="std::atomic_int8_t::operator++" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_int8_t::operator++(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_int8_t::operator--" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_int8_t::operator--(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_int8_t::operator+=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_int8_t::operator-=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_int8_t::operator&amp;=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_int8_t::operator|=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_int8_t::operator^=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="typedef" name="std::atomic_uint8_t" link="cpp/atomic/atomic"/>
    <keyword type="function" name="std::atomic_uint8_t::atomic_uint8_t" link="cpp/atomic/atomic/atomic"/>
    <keyword type="function" name="std::atomic_uint8_t::operator=" link="cpp/atomic/atomic/operator="/>
    <keyword type="function" name="std::atomic_uint8_t::is_lock_free" link="cpp/atomic/atomic/is_lock_free"/>
    <keyword type="function" name="std::atomic_uint8_t::store" link="cpp/atomic/atomic/store"/>
    <keyword type="function" name="std::atomic_uint8_t::load" link="cpp/atomic/atomic/load"/>
    <keyword type="function" name="std::atomic_uint8_t::operator T" link="cpp/atomic/atomic/operator_T"/>
    <keyword type="function" name="std::atomic_uint8_t::exchange" link="cpp/atomic/atomic/exchange"/>
    <keyword type="function" name="std::atomic_uint8_t::compare_exchange_strong" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic_uint8_t::compare_exchange_weak" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic_uint8_t::wait" link="cpp/atomic/atomic/wait"/>
    <keyword type="function" name="std::atomic_uint8_t::notify_one" link="cpp/atomic/atomic/notify_one"/>
    <keyword type="function" name="std::atomic_uint8_t::notify_all" link="cpp/atomic/atomic/notify_all"/>
    <keyword type="macro" name="std::atomic_uint8_t::is_always_lock_free" link="cpp/atomic/atomic/is_always_lock_free"/>
    <keyword type="function" name="std::atomic_uint8_t::fetch_add" link="cpp/atomic/atomic/fetch_add"/>
    <keyword type="function" name="std::atomic_uint8_t::fetch_sub" link="cpp/atomic/atomic/fetch_sub"/>
    <keyword type="function" name="std::atomic_uint8_t::fetch_and" link="cpp/atomic/atomic/fetch_and"/>
    <keyword type="function" name="std::atomic_uint8_t::fetch_or" link="cpp/atomic/atomic/fetch_or"/>
    <keyword type="function" name="std::atomic_uint8_t::fetch_xor" link="cpp/atomic/atomic/fetch_xor"/>
    <keyword type="function" name="std::atomic_uint8_t::operator++" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_uint8_t::operator++(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_uint8_t::operator--" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_uint8_t::operator--(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_uint8_t::operator+=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_uint8_t::operator-=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_uint8_t::operator&amp;=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_uint8_t::operator|=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_uint8_t::operator^=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="typedef" name="std::atomic_int16_t" link="cpp/atomic/atomic"/>
    <keyword type="function" name="std::atomic_int16_t::atomic_int16_t" link="cpp/atomic/atomic/atomic"/>
    <keyword type="function" name="std::atomic_int16_t::operator=" link="cpp/atomic/atomic/operator="/>
    <keyword type="function" name="std::atomic_int16_t::is_lock_free" link="cpp/atomic/atomic/is_lock_free"/>
    <keyword type="function" name="std::atomic_int16_t::store" link="cpp/atomic/atomic/store"/>
    <keyword type="function" name="std::atomic_int16_t::load" link="cpp/atomic/atomic/load"/>
    <keyword type="function" name="std::atomic_int16_t::operator T" link="cpp/atomic/atomic/operator_T"/>
    <keyword type="function" name="std::atomic_int16_t::exchange" link="cpp/atomic/atomic/exchange"/>
    <keyword type="function" name="std::atomic_int16_t::compare_exchange_strong" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic_int16_t::compare_exchange_weak" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic_int16_t::wait" link="cpp/atomic/atomic/wait"/>
    <keyword type="function" name="std::atomic_int16_t::notify_one" link="cpp/atomic/atomic/notify_one"/>
    <keyword type="function" name="std::atomic_int16_t::notify_all" link="cpp/atomic/atomic/notify_all"/>
    <keyword type="macro" name="std::atomic_int16_t::is_always_lock_free" link="cpp/atomic/atomic/is_always_lock_free"/>
    <keyword type="function" name="std::atomic_int16_t::fetch_add" link="cpp/atomic/atomic/fetch_add"/>
    <keyword type="function" name="std::atomic_int16_t::fetch_sub" link="cpp/atomic/atomic/fetch_sub"/>
    <keyword type="function" name="std::atomic_int16_t::fetch_and" link="cpp/atomic/atomic/fetch_and"/>
    <keyword type="function" name="std::atomic_int16_t::fetch_or" link="cpp/atomic/atomic/fetch_or"/>
    <keyword type="function" name="std::atomic_int16_t::fetch_xor" link="cpp/atomic/atomic/fetch_xor"/>
    <keyword type="function" name="std::atomic_int16_t::operator++" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_int16_t::operator++(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_int16_t::operator--" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_int16_t::operator--(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_int16_t::operator+=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_int16_t::operator-=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_int16_t::operator&amp;=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_int16_t::operator|=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_int16_t::operator^=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="typedef" name="std::atomic_uint16_t" link="cpp/atomic/atomic"/>
    <keyword type="function" name="std::atomic_uint16_t::atomic_uint16_t" link="cpp/atomic/atomic/atomic"/>
    <keyword type="function" name="std::atomic_uint16_t::operator=" link="cpp/atomic/atomic/operator="/>
    <keyword type="function" name="std::atomic_uint16_t::is_lock_free" link="cpp/atomic/atomic/is_lock_free"/>
    <keyword type="function" name="std::atomic_uint16_t::store" link="cpp/atomic/atomic/store"/>
    <keyword type="function" name="std::atomic_uint16_t::load" link="cpp/atomic/atomic/load"/>
    <keyword type="function" name="std::atomic_uint16_t::operator T" link="cpp/atomic/atomic/operator_T"/>
    <keyword type="function" name="std::atomic_uint16_t::exchange" link="cpp/atomic/atomic/exchange"/>
    <keyword type="function" name="std::atomic_uint16_t::compare_exchange_strong" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic_uint16_t::compare_exchange_weak" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic_uint16_t::wait" link="cpp/atomic/atomic/wait"/>
    <keyword type="function" name="std::atomic_uint16_t::notify_one" link="cpp/atomic/atomic/notify_one"/>
    <keyword type="function" name="std::atomic_uint16_t::notify_all" link="cpp/atomic/atomic/notify_all"/>
    <keyword type="macro" name="std::atomic_uint16_t::is_always_lock_free" link="cpp/atomic/atomic/is_always_lock_free"/>
    <keyword type="function" name="std::atomic_uint16_t::fetch_add" link="cpp/atomic/atomic/fetch_add"/>
    <keyword type="function" name="std::atomic_uint16_t::fetch_sub" link="cpp/atomic/atomic/fetch_sub"/>
    <keyword type="function" name="std::atomic_uint16_t::fetch_and" link="cpp/atomic/atomic/fetch_and"/>
    <keyword type="function" name="std::atomic_uint16_t::fetch_or" link="cpp/atomic/atomic/fetch_or"/>
    <keyword type="function" name="std::atomic_uint16_t::fetch_xor" link="cpp/atomic/atomic/fetch_xor"/>
    <keyword type="function" name="std::atomic_uint16_t::operator++" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_uint16_t::operator++(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_uint16_t::operator--" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_uint16_t::operator--(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_uint16_t::operator+=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_uint16_t::operator-=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_uint16_t::operator&amp;=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_uint16_t::operator|=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_uint16_t::operator^=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="typedef" name="std::atomic_int32_t" link="cpp/atomic/atomic"/>
    <keyword type="function" name="std::atomic_int32_t::atomic_int32_t" link="cpp/atomic/atomic/atomic"/>
    <keyword type="function" name="std::atomic_int32_t::operator=" link="cpp/atomic/atomic/operator="/>
    <keyword type="function" name="std::atomic_int32_t::is_lock_free" link="cpp/atomic/atomic/is_lock_free"/>
    <keyword type="function" name="std::atomic_int32_t::store" link="cpp/atomic/atomic/store"/>
    <keyword type="function" name="std::atomic_int32_t::load" link="cpp/atomic/atomic/load"/>
    <keyword type="function" name="std::atomic_int32_t::operator T" link="cpp/atomic/atomic/operator_T"/>
    <keyword type="function" name="std::atomic_int32_t::exchange" link="cpp/atomic/atomic/exchange"/>
    <keyword type="function" name="std::atomic_int32_t::compare_exchange_strong" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic_int32_t::compare_exchange_weak" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic_int32_t::wait" link="cpp/atomic/atomic/wait"/>
    <keyword type="function" name="std::atomic_int32_t::notify_one" link="cpp/atomic/atomic/notify_one"/>
    <keyword type="function" name="std::atomic_int32_t::notify_all" link="cpp/atomic/atomic/notify_all"/>
    <keyword type="macro" name="std::atomic_int32_t::is_always_lock_free" link="cpp/atomic/atomic/is_always_lock_free"/>
    <keyword type="function" name="std::atomic_int32_t::fetch_add" link="cpp/atomic/atomic/fetch_add"/>
    <keyword type="function" name="std::atomic_int32_t::fetch_sub" link="cpp/atomic/atomic/fetch_sub"/>
    <keyword type="function" name="std::atomic_int32_t::fetch_and" link="cpp/atomic/atomic/fetch_and"/>
    <keyword type="function" name="std::atomic_int32_t::fetch_or" link="cpp/atomic/atomic/fetch_or"/>
    <keyword type="function" name="std::atomic_int32_t::fetch_xor" link="cpp/atomic/atomic/fetch_xor"/>
    <keyword type="function" name="std::atomic_int32_t::operator++" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_int32_t::operator++(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_int32_t::operator--" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_int32_t::operator--(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_int32_t::operator+=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_int32_t::operator-=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_int32_t::operator&amp;=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_int32_t::operator|=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_int32_t::operator^=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="typedef" name="std::atomic_uint32_t" link="cpp/atomic/atomic"/>
    <keyword type="function" name="std::atomic_uint32_t::atomic_uint32_t" link="cpp/atomic/atomic/atomic"/>
    <keyword type="function" name="std::atomic_uint32_t::operator=" link="cpp/atomic/atomic/operator="/>
    <keyword type="function" name="std::atomic_uint32_t::is_lock_free" link="cpp/atomic/atomic/is_lock_free"/>
    <keyword type="function" name="std::atomic_uint32_t::store" link="cpp/atomic/atomic/store"/>
    <keyword type="function" name="std::atomic_uint32_t::load" link="cpp/atomic/atomic/load"/>
    <keyword type="function" name="std::atomic_uint32_t::operator T" link="cpp/atomic/atomic/operator_T"/>
    <keyword type="function" name="std::atomic_uint32_t::exchange" link="cpp/atomic/atomic/exchange"/>
    <keyword type="function" name="std::atomic_uint32_t::compare_exchange_strong" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic_uint32_t::compare_exchange_weak" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic_uint32_t::wait" link="cpp/atomic/atomic/wait"/>
    <keyword type="function" name="std::atomic_uint32_t::notify_one" link="cpp/atomic/atomic/notify_one"/>
    <keyword type="function" name="std::atomic_uint32_t::notify_all" link="cpp/atomic/atomic/notify_all"/>
    <keyword type="macro" name="std::atomic_uint32_t::is_always_lock_free" link="cpp/atomic/atomic/is_always_lock_free"/>
    <keyword type="function" name="std::atomic_uint32_t::fetch_add" link="cpp/atomic/atomic/fetch_add"/>
    <keyword type="function" name="std::atomic_uint32_t::fetch_sub" link="cpp/atomic/atomic/fetch_sub"/>
    <keyword type="function" name="std::atomic_uint32_t::fetch_and" link="cpp/atomic/atomic/fetch_and"/>
    <keyword type="function" name="std::atomic_uint32_t::fetch_or" link="cpp/atomic/atomic/fetch_or"/>
    <keyword type="function" name="std::atomic_uint32_t::fetch_xor" link="cpp/atomic/atomic/fetch_xor"/>
    <keyword type="function" name="std::atomic_uint32_t::operator++" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_uint32_t::operator++(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_uint32_t::operator--" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_uint32_t::operator--(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_uint32_t::operator+=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_uint32_t::operator-=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_uint32_t::operator&amp;=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_uint32_t::operator|=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_uint32_t::operator^=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="typedef" name="std::atomic_int64_t" link="cpp/atomic/atomic"/>
    <keyword type="function" name="std::atomic_int64_t::atomic_int64_t" link="cpp/atomic/atomic/atomic"/>
    <keyword type="function" name="std::atomic_int64_t::operator=" link="cpp/atomic/atomic/operator="/>
    <keyword type="function" name="std::atomic_int64_t::is_lock_free" link="cpp/atomic/atomic/is_lock_free"/>
    <keyword type="function" name="std::atomic_int64_t::store" link="cpp/atomic/atomic/store"/>
    <keyword type="function" name="std::atomic_int64_t::load" link="cpp/atomic/atomic/load"/>
    <keyword type="function" name="std::atomic_int64_t::operator T" link="cpp/atomic/atomic/operator_T"/>
    <keyword type="function" name="std::atomic_int64_t::exchange" link="cpp/atomic/atomic/exchange"/>
    <keyword type="function" name="std::atomic_int64_t::compare_exchange_strong" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic_int64_t::compare_exchange_weak" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic_int64_t::wait" link="cpp/atomic/atomic/wait"/>
    <keyword type="function" name="std::atomic_int64_t::notify_one" link="cpp/atomic/atomic/notify_one"/>
    <keyword type="function" name="std::atomic_int64_t::notify_all" link="cpp/atomic/atomic/notify_all"/>
    <keyword type="macro" name="std::atomic_int64_t::is_always_lock_free" link="cpp/atomic/atomic/is_always_lock_free"/>
    <keyword type="function" name="std::atomic_int64_t::fetch_add" link="cpp/atomic/atomic/fetch_add"/>
    <keyword type="function" name="std::atomic_int64_t::fetch_sub" link="cpp/atomic/atomic/fetch_sub"/>
    <keyword type="function" name="std::atomic_int64_t::fetch_and" link="cpp/atomic/atomic/fetch_and"/>
    <keyword type="function" name="std::atomic_int64_t::fetch_or" link="cpp/atomic/atomic/fetch_or"/>
    <keyword type="function" name="std::atomic_int64_t::fetch_xor" link="cpp/atomic/atomic/fetch_xor"/>
    <keyword type="function" name="std::atomic_int64_t::operator++" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_int64_t::operator++(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_int64_t::operator--" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_int64_t::operator--(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_int64_t::operator+=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_int64_t::operator-=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_int64_t::operator&amp;=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_int64_t::operator|=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_int64_t::operator^=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="typedef" name="std::atomic_uint64_t" link="cpp/atomic/atomic"/>
    <keyword type="function" name="std::atomic_uint64_t::atomic_uint64_t" link="cpp/atomic/atomic/atomic"/>
    <keyword type="function" name="std::atomic_uint64_t::operator=" link="cpp/atomic/atomic/operator="/>
    <keyword type="function" name="std::atomic_uint64_t::is_lock_free" link="cpp/atomic/atomic/is_lock_free"/>
    <keyword type="function" name="std::atomic_uint64_t::store" link="cpp/atomic/atomic/store"/>
    <keyword type="function" name="std::atomic_uint64_t::load" link="cpp/atomic/atomic/load"/>
    <keyword type="function" name="std::atomic_uint64_t::operator T" link="cpp/atomic/atomic/operator_T"/>
    <keyword type="function" name="std::atomic_uint64_t::exchange" link="cpp/atomic/atomic/exchange"/>
    <keyword type="function" name="std::atomic_uint64_t::compare_exchange_strong" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic_uint64_t::compare_exchange_weak" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic_uint64_t::wait" link="cpp/atomic/atomic/wait"/>
    <keyword type="function" name="std::atomic_uint64_t::notify_one" link="cpp/atomic/atomic/notify_one"/>
    <keyword type="function" name="std::atomic_uint64_t::notify_all" link="cpp/atomic/atomic/notify_all"/>
    <keyword type="macro" name="std::atomic_uint64_t::is_always_lock_free" link="cpp/atomic/atomic/is_always_lock_free"/>
    <keyword type="function" name="std::atomic_uint64_t::fetch_add" link="cpp/atomic/atomic/fetch_add"/>
    <keyword type="function" name="std::atomic_uint64_t::fetch_sub" link="cpp/atomic/atomic/fetch_sub"/>
    <keyword type="function" name="std::atomic_uint64_t::fetch_and" link="cpp/atomic/atomic/fetch_and"/>
    <keyword type="function" name="std::atomic_uint64_t::fetch_or" link="cpp/atomic/atomic/fetch_or"/>
    <keyword type="function" name="std::atomic_uint64_t::fetch_xor" link="cpp/atomic/atomic/fetch_xor"/>
    <keyword type="function" name="std::atomic_uint64_t::operator++" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_uint64_t::operator++(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_uint64_t::operator--" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_uint64_t::operator--(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_uint64_t::operator+=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_uint64_t::operator-=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_uint64_t::operator&amp;=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_uint64_t::operator|=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_uint64_t::operator^=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="typedef" name="std::atomic_int_least8_t" link="cpp/atomic/atomic"/>
    <keyword type="function" name="std::atomic_int_least8_t::atomic_int_least8_t" link="cpp/atomic/atomic/atomic"/>
    <keyword type="function" name="std::atomic_int_least8_t::operator=" link="cpp/atomic/atomic/operator="/>
    <keyword type="function" name="std::atomic_int_least8_t::is_lock_free" link="cpp/atomic/atomic/is_lock_free"/>
    <keyword type="function" name="std::atomic_int_least8_t::store" link="cpp/atomic/atomic/store"/>
    <keyword type="function" name="std::atomic_int_least8_t::load" link="cpp/atomic/atomic/load"/>
    <keyword type="function" name="std::atomic_int_least8_t::operator T" link="cpp/atomic/atomic/operator_T"/>
    <keyword type="function" name="std::atomic_int_least8_t::exchange" link="cpp/atomic/atomic/exchange"/>
    <keyword type="function" name="std::atomic_int_least8_t::compare_exchange_strong" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic_int_least8_t::compare_exchange_weak" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic_int_least8_t::wait" link="cpp/atomic/atomic/wait"/>
    <keyword type="function" name="std::atomic_int_least8_t::notify_one" link="cpp/atomic/atomic/notify_one"/>
    <keyword type="function" name="std::atomic_int_least8_t::notify_all" link="cpp/atomic/atomic/notify_all"/>
    <keyword type="macro" name="std::atomic_int_least8_t::is_always_lock_free" link="cpp/atomic/atomic/is_always_lock_free"/>
    <keyword type="function" name="std::atomic_int_least8_t::fetch_add" link="cpp/atomic/atomic/fetch_add"/>
    <keyword type="function" name="std::atomic_int_least8_t::fetch_sub" link="cpp/atomic/atomic/fetch_sub"/>
    <keyword type="function" name="std::atomic_int_least8_t::fetch_and" link="cpp/atomic/atomic/fetch_and"/>
    <keyword type="function" name="std::atomic_int_least8_t::fetch_or" link="cpp/atomic/atomic/fetch_or"/>
    <keyword type="function" name="std::atomic_int_least8_t::fetch_xor" link="cpp/atomic/atomic/fetch_xor"/>
    <keyword type="function" name="std::atomic_int_least8_t::operator++" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_int_least8_t::operator++(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_int_least8_t::operator--" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_int_least8_t::operator--(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_int_least8_t::operator+=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_int_least8_t::operator-=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_int_least8_t::operator&amp;=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_int_least8_t::operator|=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_int_least8_t::operator^=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="typedef" name="std::atomic_uint_least8_t" link="cpp/atomic/atomic"/>
    <keyword type="function" name="std::atomic_uint_least8_t::atomic_uint_least8_t" link="cpp/atomic/atomic/atomic"/>
    <keyword type="function" name="std::atomic_uint_least8_t::operator=" link="cpp/atomic/atomic/operator="/>
    <keyword type="function" name="std::atomic_uint_least8_t::is_lock_free" link="cpp/atomic/atomic/is_lock_free"/>
    <keyword type="function" name="std::atomic_uint_least8_t::store" link="cpp/atomic/atomic/store"/>
    <keyword type="function" name="std::atomic_uint_least8_t::load" link="cpp/atomic/atomic/load"/>
    <keyword type="function" name="std::atomic_uint_least8_t::operator T" link="cpp/atomic/atomic/operator_T"/>
    <keyword type="function" name="std::atomic_uint_least8_t::exchange" link="cpp/atomic/atomic/exchange"/>
    <keyword type="function" name="std::atomic_uint_least8_t::compare_exchange_strong" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic_uint_least8_t::compare_exchange_weak" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic_uint_least8_t::wait" link="cpp/atomic/atomic/wait"/>
    <keyword type="function" name="std::atomic_uint_least8_t::notify_one" link="cpp/atomic/atomic/notify_one"/>
    <keyword type="function" name="std::atomic_uint_least8_t::notify_all" link="cpp/atomic/atomic/notify_all"/>
    <keyword type="macro" name="std::atomic_uint_least8_t::is_always_lock_free" link="cpp/atomic/atomic/is_always_lock_free"/>
    <keyword type="function" name="std::atomic_uint_least8_t::fetch_add" link="cpp/atomic/atomic/fetch_add"/>
    <keyword type="function" name="std::atomic_uint_least8_t::fetch_sub" link="cpp/atomic/atomic/fetch_sub"/>
    <keyword type="function" name="std::atomic_uint_least8_t::fetch_and" link="cpp/atomic/atomic/fetch_and"/>
    <keyword type="function" name="std::atomic_uint_least8_t::fetch_or" link="cpp/atomic/atomic/fetch_or"/>
    <keyword type="function" name="std::atomic_uint_least8_t::fetch_xor" link="cpp/atomic/atomic/fetch_xor"/>
    <keyword type="function" name="std::atomic_uint_least8_t::operator++" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_uint_least8_t::operator++(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_uint_least8_t::operator--" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_uint_least8_t::operator--(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_uint_least8_t::operator+=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_uint_least8_t::operator-=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_uint_least8_t::operator&amp;=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_uint_least8_t::operator|=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_uint_least8_t::operator^=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="typedef" name="std::atomic_int_least16_t" link="cpp/atomic/atomic"/>
    <keyword type="function" name="std::atomic_int_least16_t::atomic_int_least16_t" link="cpp/atomic/atomic/atomic"/>
    <keyword type="function" name="std::atomic_int_least16_t::operator=" link="cpp/atomic/atomic/operator="/>
    <keyword type="function" name="std::atomic_int_least16_t::is_lock_free" link="cpp/atomic/atomic/is_lock_free"/>
    <keyword type="function" name="std::atomic_int_least16_t::store" link="cpp/atomic/atomic/store"/>
    <keyword type="function" name="std::atomic_int_least16_t::load" link="cpp/atomic/atomic/load"/>
    <keyword type="function" name="std::atomic_int_least16_t::operator T" link="cpp/atomic/atomic/operator_T"/>
    <keyword type="function" name="std::atomic_int_least16_t::exchange" link="cpp/atomic/atomic/exchange"/>
    <keyword type="function" name="std::atomic_int_least16_t::compare_exchange_strong" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic_int_least16_t::compare_exchange_weak" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic_int_least16_t::wait" link="cpp/atomic/atomic/wait"/>
    <keyword type="function" name="std::atomic_int_least16_t::notify_one" link="cpp/atomic/atomic/notify_one"/>
    <keyword type="function" name="std::atomic_int_least16_t::notify_all" link="cpp/atomic/atomic/notify_all"/>
    <keyword type="macro" name="std::atomic_int_least16_t::is_always_lock_free" link="cpp/atomic/atomic/is_always_lock_free"/>
    <keyword type="function" name="std::atomic_int_least16_t::fetch_add" link="cpp/atomic/atomic/fetch_add"/>
    <keyword type="function" name="std::atomic_int_least16_t::fetch_sub" link="cpp/atomic/atomic/fetch_sub"/>
    <keyword type="function" name="std::atomic_int_least16_t::fetch_and" link="cpp/atomic/atomic/fetch_and"/>
    <keyword type="function" name="std::atomic_int_least16_t::fetch_or" link="cpp/atomic/atomic/fetch_or"/>
    <keyword type="function" name="std::atomic_int_least16_t::fetch_xor" link="cpp/atomic/atomic/fetch_xor"/>
    <keyword type="function" name="std::atomic_int_least16_t::operator++" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_int_least16_t::operator++(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_int_least16_t::operator--" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_int_least16_t::operator--(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_int_least16_t::operator+=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_int_least16_t::operator-=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_int_least16_t::operator&amp;=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_int_least16_t::operator|=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_int_least16_t::operator^=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="typedef" name="std::atomic_uint_least16_t" link="cpp/atomic/atomic"/>
    <keyword type="function" name="std::atomic_uint_least16_t::atomic_uint_least16_t" link="cpp/atomic/atomic/atomic"/>
    <keyword type="function" name="std::atomic_uint_least16_t::operator=" link="cpp/atomic/atomic/operator="/>
    <keyword type="function" name="std::atomic_uint_least16_t::is_lock_free" link="cpp/atomic/atomic/is_lock_free"/>
    <keyword type="function" name="std::atomic_uint_least16_t::store" link="cpp/atomic/atomic/store"/>
    <keyword type="function" name="std::atomic_uint_least16_t::load" link="cpp/atomic/atomic/load"/>
    <keyword type="function" name="std::atomic_uint_least16_t::operator T" link="cpp/atomic/atomic/operator_T"/>
    <keyword type="function" name="std::atomic_uint_least16_t::exchange" link="cpp/atomic/atomic/exchange"/>
    <keyword type="function" name="std::atomic_uint_least16_t::compare_exchange_strong" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic_uint_least16_t::compare_exchange_weak" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic_uint_least16_t::wait" link="cpp/atomic/atomic/wait"/>
    <keyword type="function" name="std::atomic_uint_least16_t::notify_one" link="cpp/atomic/atomic/notify_one"/>
    <keyword type="function" name="std::atomic_uint_least16_t::notify_all" link="cpp/atomic/atomic/notify_all"/>
    <keyword type="macro" name="std::atomic_uint_least16_t::is_always_lock_free" link="cpp/atomic/atomic/is_always_lock_free"/>
    <keyword type="function" name="std::atomic_uint_least16_t::fetch_add" link="cpp/atomic/atomic/fetch_add"/>
    <keyword type="function" name="std::atomic_uint_least16_t::fetch_sub" link="cpp/atomic/atomic/fetch_sub"/>
    <keyword type="function" name="std::atomic_uint_least16_t::fetch_and" link="cpp/atomic/atomic/fetch_and"/>
    <keyword type="function" name="std::atomic_uint_least16_t::fetch_or" link="cpp/atomic/atomic/fetch_or"/>
    <keyword type="function" name="std::atomic_uint_least16_t::fetch_xor" link="cpp/atomic/atomic/fetch_xor"/>
    <keyword type="function" name="std::atomic_uint_least16_t::operator++" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_uint_least16_t::operator++(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_uint_least16_t::operator--" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_uint_least16_t::operator--(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_uint_least16_t::operator+=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_uint_least16_t::operator-=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_uint_least16_t::operator&amp;=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_uint_least16_t::operator|=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_uint_least16_t::operator^=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="typedef" name="std::atomic_int_least32_t" link="cpp/atomic/atomic"/>
    <keyword type="function" name="std::atomic_int_least32_t::atomic_int_least32_t" link="cpp/atomic/atomic/atomic"/>
    <keyword type="function" name="std::atomic_int_least32_t::operator=" link="cpp/atomic/atomic/operator="/>
    <keyword type="function" name="std::atomic_int_least32_t::is_lock_free" link="cpp/atomic/atomic/is_lock_free"/>
    <keyword type="function" name="std::atomic_int_least32_t::store" link="cpp/atomic/atomic/store"/>
    <keyword type="function" name="std::atomic_int_least32_t::load" link="cpp/atomic/atomic/load"/>
    <keyword type="function" name="std::atomic_int_least32_t::operator T" link="cpp/atomic/atomic/operator_T"/>
    <keyword type="function" name="std::atomic_int_least32_t::exchange" link="cpp/atomic/atomic/exchange"/>
    <keyword type="function" name="std::atomic_int_least32_t::compare_exchange_strong" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic_int_least32_t::compare_exchange_weak" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic_int_least32_t::wait" link="cpp/atomic/atomic/wait"/>
    <keyword type="function" name="std::atomic_int_least32_t::notify_one" link="cpp/atomic/atomic/notify_one"/>
    <keyword type="function" name="std::atomic_int_least32_t::notify_all" link="cpp/atomic/atomic/notify_all"/>
    <keyword type="macro" name="std::atomic_int_least32_t::is_always_lock_free" link="cpp/atomic/atomic/is_always_lock_free"/>
    <keyword type="function" name="std::atomic_int_least32_t::fetch_add" link="cpp/atomic/atomic/fetch_add"/>
    <keyword type="function" name="std::atomic_int_least32_t::fetch_sub" link="cpp/atomic/atomic/fetch_sub"/>
    <keyword type="function" name="std::atomic_int_least32_t::fetch_and" link="cpp/atomic/atomic/fetch_and"/>
    <keyword type="function" name="std::atomic_int_least32_t::fetch_or" link="cpp/atomic/atomic/fetch_or"/>
    <keyword type="function" name="std::atomic_int_least32_t::fetch_xor" link="cpp/atomic/atomic/fetch_xor"/>
    <keyword type="function" name="std::atomic_int_least32_t::operator++" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_int_least32_t::operator++(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_int_least32_t::operator--" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_int_least32_t::operator--(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_int_least32_t::operator+=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_int_least32_t::operator-=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_int_least32_t::operator&amp;=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_int_least32_t::operator|=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_int_least32_t::operator^=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="typedef" name="std::atomic_uint_least32_t" link="cpp/atomic/atomic"/>
    <keyword type="function" name="std::atomic_uint_least32_t::atomic_uint_least32_t" link="cpp/atomic/atomic/atomic"/>
    <keyword type="function" name="std::atomic_uint_least32_t::operator=" link="cpp/atomic/atomic/operator="/>
    <keyword type="function" name="std::atomic_uint_least32_t::is_lock_free" link="cpp/atomic/atomic/is_lock_free"/>
    <keyword type="function" name="std::atomic_uint_least32_t::store" link="cpp/atomic/atomic/store"/>
    <keyword type="function" name="std::atomic_uint_least32_t::load" link="cpp/atomic/atomic/load"/>
    <keyword type="function" name="std::atomic_uint_least32_t::operator T" link="cpp/atomic/atomic/operator_T"/>
    <keyword type="function" name="std::atomic_uint_least32_t::exchange" link="cpp/atomic/atomic/exchange"/>
    <keyword type="function" name="std::atomic_uint_least32_t::compare_exchange_strong" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic_uint_least32_t::compare_exchange_weak" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic_uint_least32_t::wait" link="cpp/atomic/atomic/wait"/>
    <keyword type="function" name="std::atomic_uint_least32_t::notify_one" link="cpp/atomic/atomic/notify_one"/>
    <keyword type="function" name="std::atomic_uint_least32_t::notify_all" link="cpp/atomic/atomic/notify_all"/>
    <keyword type="macro" name="std::atomic_uint_least32_t::is_always_lock_free" link="cpp/atomic/atomic/is_always_lock_free"/>
    <keyword type="function" name="std::atomic_uint_least32_t::fetch_add" link="cpp/atomic/atomic/fetch_add"/>
    <keyword type="function" name="std::atomic_uint_least32_t::fetch_sub" link="cpp/atomic/atomic/fetch_sub"/>
    <keyword type="function" name="std::atomic_uint_least32_t::fetch_and" link="cpp/atomic/atomic/fetch_and"/>
    <keyword type="function" name="std::atomic_uint_least32_t::fetch_or" link="cpp/atomic/atomic/fetch_or"/>
    <keyword type="function" name="std::atomic_uint_least32_t::fetch_xor" link="cpp/atomic/atomic/fetch_xor"/>
    <keyword type="function" name="std::atomic_uint_least32_t::operator++" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_uint_least32_t::operator++(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_uint_least32_t::operator--" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_uint_least32_t::operator--(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_uint_least32_t::operator+=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_uint_least32_t::operator-=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_uint_least32_t::operator&amp;=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_uint_least32_t::operator|=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_uint_least32_t::operator^=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="typedef" name="std::atomic_int_least64_t" link="cpp/atomic/atomic"/>
    <keyword type="function" name="std::atomic_int_least64_t::atomic_int_least64_t" link="cpp/atomic/atomic/atomic"/>
    <keyword type="function" name="std::atomic_int_least64_t::operator=" link="cpp/atomic/atomic/operator="/>
    <keyword type="function" name="std::atomic_int_least64_t::is_lock_free" link="cpp/atomic/atomic/is_lock_free"/>
    <keyword type="function" name="std::atomic_int_least64_t::store" link="cpp/atomic/atomic/store"/>
    <keyword type="function" name="std::atomic_int_least64_t::load" link="cpp/atomic/atomic/load"/>
    <keyword type="function" name="std::atomic_int_least64_t::operator T" link="cpp/atomic/atomic/operator_T"/>
    <keyword type="function" name="std::atomic_int_least64_t::exchange" link="cpp/atomic/atomic/exchange"/>
    <keyword type="function" name="std::atomic_int_least64_t::compare_exchange_strong" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic_int_least64_t::compare_exchange_weak" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic_int_least64_t::wait" link="cpp/atomic/atomic/wait"/>
    <keyword type="function" name="std::atomic_int_least64_t::notify_one" link="cpp/atomic/atomic/notify_one"/>
    <keyword type="function" name="std::atomic_int_least64_t::notify_all" link="cpp/atomic/atomic/notify_all"/>
    <keyword type="macro" name="std::atomic_int_least64_t::is_always_lock_free" link="cpp/atomic/atomic/is_always_lock_free"/>
    <keyword type="function" name="std::atomic_int_least64_t::fetch_add" link="cpp/atomic/atomic/fetch_add"/>
    <keyword type="function" name="std::atomic_int_least64_t::fetch_sub" link="cpp/atomic/atomic/fetch_sub"/>
    <keyword type="function" name="std::atomic_int_least64_t::fetch_and" link="cpp/atomic/atomic/fetch_and"/>
    <keyword type="function" name="std::atomic_int_least64_t::fetch_or" link="cpp/atomic/atomic/fetch_or"/>
    <keyword type="function" name="std::atomic_int_least64_t::fetch_xor" link="cpp/atomic/atomic/fetch_xor"/>
    <keyword type="function" name="std::atomic_int_least64_t::operator++" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_int_least64_t::operator++(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_int_least64_t::operator--" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_int_least64_t::operator--(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_int_least64_t::operator+=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_int_least64_t::operator-=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_int_least64_t::operator&amp;=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_int_least64_t::operator|=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_int_least64_t::operator^=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="typedef" name="std::atomic_uint_least64_t" link="cpp/atomic/atomic"/>
    <keyword type="function" name="std::atomic_uint_least64_t::atomic_uint_least64_t" link="cpp/atomic/atomic/atomic"/>
    <keyword type="function" name="std::atomic_uint_least64_t::operator=" link="cpp/atomic/atomic/operator="/>
    <keyword type="function" name="std::atomic_uint_least64_t::is_lock_free" link="cpp/atomic/atomic/is_lock_free"/>
    <keyword type="function" name="std::atomic_uint_least64_t::store" link="cpp/atomic/atomic/store"/>
    <keyword type="function" name="std::atomic_uint_least64_t::load" link="cpp/atomic/atomic/load"/>
    <keyword type="function" name="std::atomic_uint_least64_t::operator T" link="cpp/atomic/atomic/operator_T"/>
    <keyword type="function" name="std::atomic_uint_least64_t::exchange" link="cpp/atomic/atomic/exchange"/>
    <keyword type="function" name="std::atomic_uint_least64_t::compare_exchange_strong" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic_uint_least64_t::compare_exchange_weak" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic_uint_least64_t::wait" link="cpp/atomic/atomic/wait"/>
    <keyword type="function" name="std::atomic_uint_least64_t::notify_one" link="cpp/atomic/atomic/notify_one"/>
    <keyword type="function" name="std::atomic_uint_least64_t::notify_all" link="cpp/atomic/atomic/notify_all"/>
    <keyword type="macro" name="std::atomic_uint_least64_t::is_always_lock_free" link="cpp/atomic/atomic/is_always_lock_free"/>
    <keyword type="function" name="std::atomic_uint_least64_t::fetch_add" link="cpp/atomic/atomic/fetch_add"/>
    <keyword type="function" name="std::atomic_uint_least64_t::fetch_sub" link="cpp/atomic/atomic/fetch_sub"/>
    <keyword type="function" name="std::atomic_uint_least64_t::fetch_and" link="cpp/atomic/atomic/fetch_and"/>
    <keyword type="function" name="std::atomic_uint_least64_t::fetch_or" link="cpp/atomic/atomic/fetch_or"/>
    <keyword type="function" name="std::atomic_uint_least64_t::fetch_xor" link="cpp/atomic/atomic/fetch_xor"/>
    <keyword type="function" name="std::atomic_uint_least64_t::operator++" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_uint_least64_t::operator++(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_uint_least64_t::operator--" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_uint_least64_t::operator--(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_uint_least64_t::operator+=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_uint_least64_t::operator-=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_uint_least64_t::operator&amp;=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_uint_least64_t::operator|=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_uint_least64_t::operator^=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="typedef" name="std::atomic_int_fast8_t" link="cpp/atomic/atomic"/>
    <keyword type="function" name="std::atomic_int_fast8_t::atomic_int_fast8_t" link="cpp/atomic/atomic/atomic"/>
    <keyword type="function" name="std::atomic_int_fast8_t::operator=" link="cpp/atomic/atomic/operator="/>
    <keyword type="function" name="std::atomic_int_fast8_t::is_lock_free" link="cpp/atomic/atomic/is_lock_free"/>
    <keyword type="function" name="std::atomic_int_fast8_t::store" link="cpp/atomic/atomic/store"/>
    <keyword type="function" name="std::atomic_int_fast8_t::load" link="cpp/atomic/atomic/load"/>
    <keyword type="function" name="std::atomic_int_fast8_t::operator T" link="cpp/atomic/atomic/operator_T"/>
    <keyword type="function" name="std::atomic_int_fast8_t::exchange" link="cpp/atomic/atomic/exchange"/>
    <keyword type="function" name="std::atomic_int_fast8_t::compare_exchange_strong" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic_int_fast8_t::compare_exchange_weak" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic_int_fast8_t::wait" link="cpp/atomic/atomic/wait"/>
    <keyword type="function" name="std::atomic_int_fast8_t::notify_one" link="cpp/atomic/atomic/notify_one"/>
    <keyword type="function" name="std::atomic_int_fast8_t::notify_all" link="cpp/atomic/atomic/notify_all"/>
    <keyword type="macro" name="std::atomic_int_fast8_t::is_always_lock_free" link="cpp/atomic/atomic/is_always_lock_free"/>
    <keyword type="function" name="std::atomic_int_fast8_t::fetch_add" link="cpp/atomic/atomic/fetch_add"/>
    <keyword type="function" name="std::atomic_int_fast8_t::fetch_sub" link="cpp/atomic/atomic/fetch_sub"/>
    <keyword type="function" name="std::atomic_int_fast8_t::fetch_and" link="cpp/atomic/atomic/fetch_and"/>
    <keyword type="function" name="std::atomic_int_fast8_t::fetch_or" link="cpp/atomic/atomic/fetch_or"/>
    <keyword type="function" name="std::atomic_int_fast8_t::fetch_xor" link="cpp/atomic/atomic/fetch_xor"/>
    <keyword type="function" name="std::atomic_int_fast8_t::operator++" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_int_fast8_t::operator++(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_int_fast8_t::operator--" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_int_fast8_t::operator--(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_int_fast8_t::operator+=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_int_fast8_t::operator-=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_int_fast8_t::operator&amp;=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_int_fast8_t::operator|=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_int_fast8_t::operator^=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="typedef" name="std::atomic_uint_fast8_t" link="cpp/atomic/atomic"/>
    <keyword type="function" name="std::atomic_uint_fast8_t::atomic_uint_fast8_t" link="cpp/atomic/atomic/atomic"/>
    <keyword type="function" name="std::atomic_uint_fast8_t::operator=" link="cpp/atomic/atomic/operator="/>
    <keyword type="function" name="std::atomic_uint_fast8_t::is_lock_free" link="cpp/atomic/atomic/is_lock_free"/>
    <keyword type="function" name="std::atomic_uint_fast8_t::store" link="cpp/atomic/atomic/store"/>
    <keyword type="function" name="std::atomic_uint_fast8_t::load" link="cpp/atomic/atomic/load"/>
    <keyword type="function" name="std::atomic_uint_fast8_t::operator T" link="cpp/atomic/atomic/operator_T"/>
    <keyword type="function" name="std::atomic_uint_fast8_t::exchange" link="cpp/atomic/atomic/exchange"/>
    <keyword type="function" name="std::atomic_uint_fast8_t::compare_exchange_strong" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic_uint_fast8_t::compare_exchange_weak" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic_uint_fast8_t::wait" link="cpp/atomic/atomic/wait"/>
    <keyword type="function" name="std::atomic_uint_fast8_t::notify_one" link="cpp/atomic/atomic/notify_one"/>
    <keyword type="function" name="std::atomic_uint_fast8_t::notify_all" link="cpp/atomic/atomic/notify_all"/>
    <keyword type="macro" name="std::atomic_uint_fast8_t::is_always_lock_free" link="cpp/atomic/atomic/is_always_lock_free"/>
    <keyword type="function" name="std::atomic_uint_fast8_t::fetch_add" link="cpp/atomic/atomic/fetch_add"/>
    <keyword type="function" name="std::atomic_uint_fast8_t::fetch_sub" link="cpp/atomic/atomic/fetch_sub"/>
    <keyword type="function" name="std::atomic_uint_fast8_t::fetch_and" link="cpp/atomic/atomic/fetch_and"/>
    <keyword type="function" name="std::atomic_uint_fast8_t::fetch_or" link="cpp/atomic/atomic/fetch_or"/>
    <keyword type="function" name="std::atomic_uint_fast8_t::fetch_xor" link="cpp/atomic/atomic/fetch_xor"/>
    <keyword type="function" name="std::atomic_uint_fast8_t::operator++" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_uint_fast8_t::operator++(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_uint_fast8_t::operator--" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_uint_fast8_t::operator--(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_uint_fast8_t::operator+=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_uint_fast8_t::operator-=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_uint_fast8_t::operator&amp;=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_uint_fast8_t::operator|=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_uint_fast8_t::operator^=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="typedef" name="std::atomic_int_fast16_t" link="cpp/atomic/atomic"/>
    <keyword type="function" name="std::atomic_int_fast16_t::atomic_int_fast16_t" link="cpp/atomic/atomic/atomic"/>
    <keyword type="function" name="std::atomic_int_fast16_t::operator=" link="cpp/atomic/atomic/operator="/>
    <keyword type="function" name="std::atomic_int_fast16_t::is_lock_free" link="cpp/atomic/atomic/is_lock_free"/>
    <keyword type="function" name="std::atomic_int_fast16_t::store" link="cpp/atomic/atomic/store"/>
    <keyword type="function" name="std::atomic_int_fast16_t::load" link="cpp/atomic/atomic/load"/>
    <keyword type="function" name="std::atomic_int_fast16_t::operator T" link="cpp/atomic/atomic/operator_T"/>
    <keyword type="function" name="std::atomic_int_fast16_t::exchange" link="cpp/atomic/atomic/exchange"/>
    <keyword type="function" name="std::atomic_int_fast16_t::compare_exchange_strong" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic_int_fast16_t::compare_exchange_weak" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic_int_fast16_t::wait" link="cpp/atomic/atomic/wait"/>
    <keyword type="function" name="std::atomic_int_fast16_t::notify_one" link="cpp/atomic/atomic/notify_one"/>
    <keyword type="function" name="std::atomic_int_fast16_t::notify_all" link="cpp/atomic/atomic/notify_all"/>
    <keyword type="macro" name="std::atomic_int_fast16_t::is_always_lock_free" link="cpp/atomic/atomic/is_always_lock_free"/>
    <keyword type="function" name="std::atomic_int_fast16_t::fetch_add" link="cpp/atomic/atomic/fetch_add"/>
    <keyword type="function" name="std::atomic_int_fast16_t::fetch_sub" link="cpp/atomic/atomic/fetch_sub"/>
    <keyword type="function" name="std::atomic_int_fast16_t::fetch_and" link="cpp/atomic/atomic/fetch_and"/>
    <keyword type="function" name="std::atomic_int_fast16_t::fetch_or" link="cpp/atomic/atomic/fetch_or"/>
    <keyword type="function" name="std::atomic_int_fast16_t::fetch_xor" link="cpp/atomic/atomic/fetch_xor"/>
    <keyword type="function" name="std::atomic_int_fast16_t::operator++" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_int_fast16_t::operator++(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_int_fast16_t::operator--" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_int_fast16_t::operator--(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_int_fast16_t::operator+=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_int_fast16_t::operator-=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_int_fast16_t::operator&amp;=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_int_fast16_t::operator|=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_int_fast16_t::operator^=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="typedef" name="std::atomic_uint_fast16_t" link="cpp/atomic/atomic"/>
    <keyword type="function" name="std::atomic_uint_fast16_t::atomic_uint_fast16_t" link="cpp/atomic/atomic/atomic"/>
    <keyword type="function" name="std::atomic_uint_fast16_t::operator=" link="cpp/atomic/atomic/operator="/>
    <keyword type="function" name="std::atomic_uint_fast16_t::is_lock_free" link="cpp/atomic/atomic/is_lock_free"/>
    <keyword type="function" name="std::atomic_uint_fast16_t::store" link="cpp/atomic/atomic/store"/>
    <keyword type="function" name="std::atomic_uint_fast16_t::load" link="cpp/atomic/atomic/load"/>
    <keyword type="function" name="std::atomic_uint_fast16_t::operator T" link="cpp/atomic/atomic/operator_T"/>
    <keyword type="function" name="std::atomic_uint_fast16_t::exchange" link="cpp/atomic/atomic/exchange"/>
    <keyword type="function" name="std::atomic_uint_fast16_t::compare_exchange_strong" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic_uint_fast16_t::compare_exchange_weak" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic_uint_fast16_t::wait" link="cpp/atomic/atomic/wait"/>
    <keyword type="function" name="std::atomic_uint_fast16_t::notify_one" link="cpp/atomic/atomic/notify_one"/>
    <keyword type="function" name="std::atomic_uint_fast16_t::notify_all" link="cpp/atomic/atomic/notify_all"/>
    <keyword type="macro" name="std::atomic_uint_fast16_t::is_always_lock_free" link="cpp/atomic/atomic/is_always_lock_free"/>
    <keyword type="function" name="std::atomic_uint_fast16_t::fetch_add" link="cpp/atomic/atomic/fetch_add"/>
    <keyword type="function" name="std::atomic_uint_fast16_t::fetch_sub" link="cpp/atomic/atomic/fetch_sub"/>
    <keyword type="function" name="std::atomic_uint_fast16_t::fetch_and" link="cpp/atomic/atomic/fetch_and"/>
    <keyword type="function" name="std::atomic_uint_fast16_t::fetch_or" link="cpp/atomic/atomic/fetch_or"/>
    <keyword type="function" name="std::atomic_uint_fast16_t::fetch_xor" link="cpp/atomic/atomic/fetch_xor"/>
    <keyword type="function" name="std::atomic_uint_fast16_t::operator++" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_uint_fast16_t::operator++(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_uint_fast16_t::operator--" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_uint_fast16_t::operator--(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_uint_fast16_t::operator+=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_uint_fast16_t::operator-=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_uint_fast16_t::operator&amp;=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_uint_fast16_t::operator|=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_uint_fast16_t::operator^=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="typedef" name="std::atomic_int_fast32_t" link="cpp/atomic/atomic"/>
    <keyword type="function" name="std::atomic_int_fast32_t::atomic_int_fast32_t" link="cpp/atomic/atomic/atomic"/>
    <keyword type="function" name="std::atomic_int_fast32_t::operator=" link="cpp/atomic/atomic/operator="/>
    <keyword type="function" name="std::atomic_int_fast32_t::is_lock_free" link="cpp/atomic/atomic/is_lock_free"/>
    <keyword type="function" name="std::atomic_int_fast32_t::store" link="cpp/atomic/atomic/store"/>
    <keyword type="function" name="std::atomic_int_fast32_t::load" link="cpp/atomic/atomic/load"/>
    <keyword type="function" name="std::atomic_int_fast32_t::operator T" link="cpp/atomic/atomic/operator_T"/>
    <keyword type="function" name="std::atomic_int_fast32_t::exchange" link="cpp/atomic/atomic/exchange"/>
    <keyword type="function" name="std::atomic_int_fast32_t::compare_exchange_strong" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic_int_fast32_t::compare_exchange_weak" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic_int_fast32_t::wait" link="cpp/atomic/atomic/wait"/>
    <keyword type="function" name="std::atomic_int_fast32_t::notify_one" link="cpp/atomic/atomic/notify_one"/>
    <keyword type="function" name="std::atomic_int_fast32_t::notify_all" link="cpp/atomic/atomic/notify_all"/>
    <keyword type="macro" name="std::atomic_int_fast32_t::is_always_lock_free" link="cpp/atomic/atomic/is_always_lock_free"/>
    <keyword type="function" name="std::atomic_int_fast32_t::fetch_add" link="cpp/atomic/atomic/fetch_add"/>
    <keyword type="function" name="std::atomic_int_fast32_t::fetch_sub" link="cpp/atomic/atomic/fetch_sub"/>
    <keyword type="function" name="std::atomic_int_fast32_t::fetch_and" link="cpp/atomic/atomic/fetch_and"/>
    <keyword type="function" name="std::atomic_int_fast32_t::fetch_or" link="cpp/atomic/atomic/fetch_or"/>
    <keyword type="function" name="std::atomic_int_fast32_t::fetch_xor" link="cpp/atomic/atomic/fetch_xor"/>
    <keyword type="function" name="std::atomic_int_fast32_t::operator++" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_int_fast32_t::operator++(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_int_fast32_t::operator--" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_int_fast32_t::operator--(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_int_fast32_t::operator+=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_int_fast32_t::operator-=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_int_fast32_t::operator&amp;=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_int_fast32_t::operator|=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_int_fast32_t::operator^=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="typedef" name="std::atomic_uint_fast32_t" link="cpp/atomic/atomic"/>
    <keyword type="function" name="std::atomic_uint_fast32_t::atomic_uint_fast32_t" link="cpp/atomic/atomic/atomic"/>
    <keyword type="function" name="std::atomic_uint_fast32_t::operator=" link="cpp/atomic/atomic/operator="/>
    <keyword type="function" name="std::atomic_uint_fast32_t::is_lock_free" link="cpp/atomic/atomic/is_lock_free"/>
    <keyword type="function" name="std::atomic_uint_fast32_t::store" link="cpp/atomic/atomic/store"/>
    <keyword type="function" name="std::atomic_uint_fast32_t::load" link="cpp/atomic/atomic/load"/>
    <keyword type="function" name="std::atomic_uint_fast32_t::operator T" link="cpp/atomic/atomic/operator_T"/>
    <keyword type="function" name="std::atomic_uint_fast32_t::exchange" link="cpp/atomic/atomic/exchange"/>
    <keyword type="function" name="std::atomic_uint_fast32_t::compare_exchange_strong" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic_uint_fast32_t::compare_exchange_weak" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic_uint_fast32_t::wait" link="cpp/atomic/atomic/wait"/>
    <keyword type="function" name="std::atomic_uint_fast32_t::notify_one" link="cpp/atomic/atomic/notify_one"/>
    <keyword type="function" name="std::atomic_uint_fast32_t::notify_all" link="cpp/atomic/atomic/notify_all"/>
    <keyword type="macro" name="std::atomic_uint_fast32_t::is_always_lock_free" link="cpp/atomic/atomic/is_always_lock_free"/>
    <keyword type="function" name="std::atomic_uint_fast32_t::fetch_add" link="cpp/atomic/atomic/fetch_add"/>
    <keyword type="function" name="std::atomic_uint_fast32_t::fetch_sub" link="cpp/atomic/atomic/fetch_sub"/>
    <keyword type="function" name="std::atomic_uint_fast32_t::fetch_and" link="cpp/atomic/atomic/fetch_and"/>
    <keyword type="function" name="std::atomic_uint_fast32_t::fetch_or" link="cpp/atomic/atomic/fetch_or"/>
    <keyword type="function" name="std::atomic_uint_fast32_t::fetch_xor" link="cpp/atomic/atomic/fetch_xor"/>
    <keyword type="function" name="std::atomic_uint_fast32_t::operator++" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_uint_fast32_t::operator++(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_uint_fast32_t::operator--" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_uint_fast32_t::operator--(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_uint_fast32_t::operator+=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_uint_fast32_t::operator-=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_uint_fast32_t::operator&amp;=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_uint_fast32_t::operator|=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_uint_fast32_t::operator^=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="typedef" name="std::atomic_int_fast64_t" link="cpp/atomic/atomic"/>
    <keyword type="function" name="std::atomic_int_fast64_t::atomic_int_fast64_t" link="cpp/atomic/atomic/atomic"/>
    <keyword type="function" name="std::atomic_int_fast64_t::operator=" link="cpp/atomic/atomic/operator="/>
    <keyword type="function" name="std::atomic_int_fast64_t::is_lock_free" link="cpp/atomic/atomic/is_lock_free"/>
    <keyword type="function" name="std::atomic_int_fast64_t::store" link="cpp/atomic/atomic/store"/>
    <keyword type="function" name="std::atomic_int_fast64_t::load" link="cpp/atomic/atomic/load"/>
    <keyword type="function" name="std::atomic_int_fast64_t::operator T" link="cpp/atomic/atomic/operator_T"/>
    <keyword type="function" name="std::atomic_int_fast64_t::exchange" link="cpp/atomic/atomic/exchange"/>
    <keyword type="function" name="std::atomic_int_fast64_t::compare_exchange_strong" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic_int_fast64_t::compare_exchange_weak" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic_int_fast64_t::wait" link="cpp/atomic/atomic/wait"/>
    <keyword type="function" name="std::atomic_int_fast64_t::notify_one" link="cpp/atomic/atomic/notify_one"/>
    <keyword type="function" name="std::atomic_int_fast64_t::notify_all" link="cpp/atomic/atomic/notify_all"/>
    <keyword type="macro" name="std::atomic_int_fast64_t::is_always_lock_free" link="cpp/atomic/atomic/is_always_lock_free"/>
    <keyword type="function" name="std::atomic_int_fast64_t::fetch_add" link="cpp/atomic/atomic/fetch_add"/>
    <keyword type="function" name="std::atomic_int_fast64_t::fetch_sub" link="cpp/atomic/atomic/fetch_sub"/>
    <keyword type="function" name="std::atomic_int_fast64_t::fetch_and" link="cpp/atomic/atomic/fetch_and"/>
    <keyword type="function" name="std::atomic_int_fast64_t::fetch_or" link="cpp/atomic/atomic/fetch_or"/>
    <keyword type="function" name="std::atomic_int_fast64_t::fetch_xor" link="cpp/atomic/atomic/fetch_xor"/>
    <keyword type="function" name="std::atomic_int_fast64_t::operator++" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_int_fast64_t::operator++(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_int_fast64_t::operator--" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_int_fast64_t::operator--(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_int_fast64_t::operator+=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_int_fast64_t::operator-=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_int_fast64_t::operator&amp;=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_int_fast64_t::operator|=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_int_fast64_t::operator^=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="typedef" name="std::atomic_uint_fast64_t" link="cpp/atomic/atomic"/>
    <keyword type="function" name="std::atomic_uint_fast64_t::atomic_uint_fast64_t" link="cpp/atomic/atomic/atomic"/>
    <keyword type="function" name="std::atomic_uint_fast64_t::operator=" link="cpp/atomic/atomic/operator="/>
    <keyword type="function" name="std::atomic_uint_fast64_t::is_lock_free" link="cpp/atomic/atomic/is_lock_free"/>
    <keyword type="function" name="std::atomic_uint_fast64_t::store" link="cpp/atomic/atomic/store"/>
    <keyword type="function" name="std::atomic_uint_fast64_t::load" link="cpp/atomic/atomic/load"/>
    <keyword type="function" name="std::atomic_uint_fast64_t::operator T" link="cpp/atomic/atomic/operator_T"/>
    <keyword type="function" name="std::atomic_uint_fast64_t::exchange" link="cpp/atomic/atomic/exchange"/>
    <keyword type="function" name="std::atomic_uint_fast64_t::compare_exchange_strong" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic_uint_fast64_t::compare_exchange_weak" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic_uint_fast64_t::wait" link="cpp/atomic/atomic/wait"/>
    <keyword type="function" name="std::atomic_uint_fast64_t::notify_one" link="cpp/atomic/atomic/notify_one"/>
    <keyword type="function" name="std::atomic_uint_fast64_t::notify_all" link="cpp/atomic/atomic/notify_all"/>
    <keyword type="macro" name="std::atomic_uint_fast64_t::is_always_lock_free" link="cpp/atomic/atomic/is_always_lock_free"/>
    <keyword type="function" name="std::atomic_uint_fast64_t::fetch_add" link="cpp/atomic/atomic/fetch_add"/>
    <keyword type="function" name="std::atomic_uint_fast64_t::fetch_sub" link="cpp/atomic/atomic/fetch_sub"/>
    <keyword type="function" name="std::atomic_uint_fast64_t::fetch_and" link="cpp/atomic/atomic/fetch_and"/>
    <keyword type="function" name="std::atomic_uint_fast64_t::fetch_or" link="cpp/atomic/atomic/fetch_or"/>
    <keyword type="function" name="std::atomic_uint_fast64_t::fetch_xor" link="cpp/atomic/atomic/fetch_xor"/>
    <keyword type="function" name="std::atomic_uint_fast64_t::operator++" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_uint_fast64_t::operator++(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_uint_fast64_t::operator--" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_uint_fast64_t::operator--(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_uint_fast64_t::operator+=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_uint_fast64_t::operator-=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_uint_fast64_t::operator&amp;=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_uint_fast64_t::operator|=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_uint_fast64_t::operator^=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="typedef" name="std::atomic_intptr_t" link="cpp/atomic/atomic"/>
    <keyword type="function" name="std::atomic_intptr_t::atomic_intptr_t" link="cpp/atomic/atomic/atomic"/>
    <keyword type="function" name="std::atomic_intptr_t::operator=" link="cpp/atomic/atomic/operator="/>
    <keyword type="function" name="std::atomic_intptr_t::is_lock_free" link="cpp/atomic/atomic/is_lock_free"/>
    <keyword type="function" name="std::atomic_intptr_t::store" link="cpp/atomic/atomic/store"/>
    <keyword type="function" name="std::atomic_intptr_t::load" link="cpp/atomic/atomic/load"/>
    <keyword type="function" name="std::atomic_intptr_t::operator T" link="cpp/atomic/atomic/operator_T"/>
    <keyword type="function" name="std::atomic_intptr_t::exchange" link="cpp/atomic/atomic/exchange"/>
    <keyword type="function" name="std::atomic_intptr_t::compare_exchange_strong" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic_intptr_t::compare_exchange_weak" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic_intptr_t::wait" link="cpp/atomic/atomic/wait"/>
    <keyword type="function" name="std::atomic_intptr_t::notify_one" link="cpp/atomic/atomic/notify_one"/>
    <keyword type="function" name="std::atomic_intptr_t::notify_all" link="cpp/atomic/atomic/notify_all"/>
    <keyword type="macro" name="std::atomic_intptr_t::is_always_lock_free" link="cpp/atomic/atomic/is_always_lock_free"/>
    <keyword type="function" name="std::atomic_intptr_t::fetch_add" link="cpp/atomic/atomic/fetch_add"/>
    <keyword type="function" name="std::atomic_intptr_t::fetch_sub" link="cpp/atomic/atomic/fetch_sub"/>
    <keyword type="function" name="std::atomic_intptr_t::fetch_and" link="cpp/atomic/atomic/fetch_and"/>
    <keyword type="function" name="std::atomic_intptr_t::fetch_or" link="cpp/atomic/atomic/fetch_or"/>
    <keyword type="function" name="std::atomic_intptr_t::fetch_xor" link="cpp/atomic/atomic/fetch_xor"/>
    <keyword type="function" name="std::atomic_intptr_t::operator++" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_intptr_t::operator++(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_intptr_t::operator--" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_intptr_t::operator--(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_intptr_t::operator+=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_intptr_t::operator-=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_intptr_t::operator&amp;=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_intptr_t::operator|=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_intptr_t::operator^=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="typedef" name="std::atomic_uintptr_t" link="cpp/atomic/atomic"/>
    <keyword type="function" name="std::atomic_uintptr_t::atomic_uintptr_t" link="cpp/atomic/atomic/atomic"/>
    <keyword type="function" name="std::atomic_uintptr_t::operator=" link="cpp/atomic/atomic/operator="/>
    <keyword type="function" name="std::atomic_uintptr_t::is_lock_free" link="cpp/atomic/atomic/is_lock_free"/>
    <keyword type="function" name="std::atomic_uintptr_t::store" link="cpp/atomic/atomic/store"/>
    <keyword type="function" name="std::atomic_uintptr_t::load" link="cpp/atomic/atomic/load"/>
    <keyword type="function" name="std::atomic_uintptr_t::operator T" link="cpp/atomic/atomic/operator_T"/>
    <keyword type="function" name="std::atomic_uintptr_t::exchange" link="cpp/atomic/atomic/exchange"/>
    <keyword type="function" name="std::atomic_uintptr_t::compare_exchange_strong" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic_uintptr_t::compare_exchange_weak" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic_uintptr_t::wait" link="cpp/atomic/atomic/wait"/>
    <keyword type="function" name="std::atomic_uintptr_t::notify_one" link="cpp/atomic/atomic/notify_one"/>
    <keyword type="function" name="std::atomic_uintptr_t::notify_all" link="cpp/atomic/atomic/notify_all"/>
    <keyword type="macro" name="std::atomic_uintptr_t::is_always_lock_free" link="cpp/atomic/atomic/is_always_lock_free"/>
    <keyword type="function" name="std::atomic_uintptr_t::fetch_add" link="cpp/atomic/atomic/fetch_add"/>
    <keyword type="function" name="std::atomic_uintptr_t::fetch_sub" link="cpp/atomic/atomic/fetch_sub"/>
    <keyword type="function" name="std::atomic_uintptr_t::fetch_and" link="cpp/atomic/atomic/fetch_and"/>
    <keyword type="function" name="std::atomic_uintptr_t::fetch_or" link="cpp/atomic/atomic/fetch_or"/>
    <keyword type="function" name="std::atomic_uintptr_t::fetch_xor" link="cpp/atomic/atomic/fetch_xor"/>
    <keyword type="function" name="std::atomic_uintptr_t::operator++" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_uintptr_t::operator++(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_uintptr_t::operator--" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_uintptr_t::operator--(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_uintptr_t::operator+=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_uintptr_t::operator-=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_uintptr_t::operator&amp;=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_uintptr_t::operator|=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_uintptr_t::operator^=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="typedef" name="std::atomic_size_t" link="cpp/atomic/atomic"/>
    <keyword type="function" name="std::atomic_size_t::atomic_size_t" link="cpp/atomic/atomic/atomic"/>
    <keyword type="function" name="std::atomic_size_t::operator=" link="cpp/atomic/atomic/operator="/>
    <keyword type="function" name="std::atomic_size_t::is_lock_free" link="cpp/atomic/atomic/is_lock_free"/>
    <keyword type="function" name="std::atomic_size_t::store" link="cpp/atomic/atomic/store"/>
    <keyword type="function" name="std::atomic_size_t::load" link="cpp/atomic/atomic/load"/>
    <keyword type="function" name="std::atomic_size_t::operator T" link="cpp/atomic/atomic/operator_T"/>
    <keyword type="function" name="std::atomic_size_t::exchange" link="cpp/atomic/atomic/exchange"/>
    <keyword type="function" name="std::atomic_size_t::compare_exchange_strong" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic_size_t::compare_exchange_weak" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic_size_t::wait" link="cpp/atomic/atomic/wait"/>
    <keyword type="function" name="std::atomic_size_t::notify_one" link="cpp/atomic/atomic/notify_one"/>
    <keyword type="function" name="std::atomic_size_t::notify_all" link="cpp/atomic/atomic/notify_all"/>
    <keyword type="macro" name="std::atomic_size_t::is_always_lock_free" link="cpp/atomic/atomic/is_always_lock_free"/>
    <keyword type="function" name="std::atomic_size_t::fetch_add" link="cpp/atomic/atomic/fetch_add"/>
    <keyword type="function" name="std::atomic_size_t::fetch_sub" link="cpp/atomic/atomic/fetch_sub"/>
    <keyword type="function" name="std::atomic_size_t::fetch_and" link="cpp/atomic/atomic/fetch_and"/>
    <keyword type="function" name="std::atomic_size_t::fetch_or" link="cpp/atomic/atomic/fetch_or"/>
    <keyword type="function" name="std::atomic_size_t::fetch_xor" link="cpp/atomic/atomic/fetch_xor"/>
    <keyword type="function" name="std::atomic_size_t::operator++" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_size_t::operator++(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_size_t::operator--" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_size_t::operator--(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_size_t::operator+=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_size_t::operator-=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_size_t::operator&amp;=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_size_t::operator|=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_size_t::operator^=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="typedef" name="std::atomic_ptrdiff_t" link="cpp/atomic/atomic"/>
    <keyword type="function" name="std::atomic_ptrdiff_t::atomic_ptrdiff_t" link="cpp/atomic/atomic/atomic"/>
    <keyword type="function" name="std::atomic_ptrdiff_t::operator=" link="cpp/atomic/atomic/operator="/>
    <keyword type="function" name="std::atomic_ptrdiff_t::is_lock_free" link="cpp/atomic/atomic/is_lock_free"/>
    <keyword type="function" name="std::atomic_ptrdiff_t::store" link="cpp/atomic/atomic/store"/>
    <keyword type="function" name="std::atomic_ptrdiff_t::load" link="cpp/atomic/atomic/load"/>
    <keyword type="function" name="std::atomic_ptrdiff_t::operator T" link="cpp/atomic/atomic/operator_T"/>
    <keyword type="function" name="std::atomic_ptrdiff_t::exchange" link="cpp/atomic/atomic/exchange"/>
    <keyword type="function" name="std::atomic_ptrdiff_t::compare_exchange_strong" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic_ptrdiff_t::compare_exchange_weak" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic_ptrdiff_t::wait" link="cpp/atomic/atomic/wait"/>
    <keyword type="function" name="std::atomic_ptrdiff_t::notify_one" link="cpp/atomic/atomic/notify_one"/>
    <keyword type="function" name="std::atomic_ptrdiff_t::notify_all" link="cpp/atomic/atomic/notify_all"/>
    <keyword type="macro" name="std::atomic_ptrdiff_t::is_always_lock_free" link="cpp/atomic/atomic/is_always_lock_free"/>
    <keyword type="function" name="std::atomic_ptrdiff_t::fetch_add" link="cpp/atomic/atomic/fetch_add"/>
    <keyword type="function" name="std::atomic_ptrdiff_t::fetch_sub" link="cpp/atomic/atomic/fetch_sub"/>
    <keyword type="function" name="std::atomic_ptrdiff_t::fetch_and" link="cpp/atomic/atomic/fetch_and"/>
    <keyword type="function" name="std::atomic_ptrdiff_t::fetch_or" link="cpp/atomic/atomic/fetch_or"/>
    <keyword type="function" name="std::atomic_ptrdiff_t::fetch_xor" link="cpp/atomic/atomic/fetch_xor"/>
    <keyword type="function" name="std::atomic_ptrdiff_t::operator++" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_ptrdiff_t::operator++(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_ptrdiff_t::operator--" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_ptrdiff_t::operator--(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_ptrdiff_t::operator+=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_ptrdiff_t::operator-=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_ptrdiff_t::operator&amp;=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_ptrdiff_t::operator|=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_ptrdiff_t::operator^=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="typedef" name="std::atomic_intmax_t" link="cpp/atomic/atomic"/>
    <keyword type="function" name="std::atomic_intmax_t::atomic_intmax_t" link="cpp/atomic/atomic/atomic"/>
    <keyword type="function" name="std::atomic_intmax_t::operator=" link="cpp/atomic/atomic/operator="/>
    <keyword type="function" name="std::atomic_intmax_t::is_lock_free" link="cpp/atomic/atomic/is_lock_free"/>
    <keyword type="function" name="std::atomic_intmax_t::store" link="cpp/atomic/atomic/store"/>
    <keyword type="function" name="std::atomic_intmax_t::load" link="cpp/atomic/atomic/load"/>
    <keyword type="function" name="std::atomic_intmax_t::operator T" link="cpp/atomic/atomic/operator_T"/>
    <keyword type="function" name="std::atomic_intmax_t::exchange" link="cpp/atomic/atomic/exchange"/>
    <keyword type="function" name="std::atomic_intmax_t::compare_exchange_strong" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic_intmax_t::compare_exchange_weak" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic_intmax_t::wait" link="cpp/atomic/atomic/wait"/>
    <keyword type="function" name="std::atomic_intmax_t::notify_one" link="cpp/atomic/atomic/notify_one"/>
    <keyword type="function" name="std::atomic_intmax_t::notify_all" link="cpp/atomic/atomic/notify_all"/>
    <keyword type="macro" name="std::atomic_intmax_t::is_always_lock_free" link="cpp/atomic/atomic/is_always_lock_free"/>
    <keyword type="function" name="std::atomic_intmax_t::fetch_add" link="cpp/atomic/atomic/fetch_add"/>
    <keyword type="function" name="std::atomic_intmax_t::fetch_sub" link="cpp/atomic/atomic/fetch_sub"/>
    <keyword type="function" name="std::atomic_intmax_t::fetch_and" link="cpp/atomic/atomic/fetch_and"/>
    <keyword type="function" name="std::atomic_intmax_t::fetch_or" link="cpp/atomic/atomic/fetch_or"/>
    <keyword type="function" name="std::atomic_intmax_t::fetch_xor" link="cpp/atomic/atomic/fetch_xor"/>
    <keyword type="function" name="std::atomic_intmax_t::operator++" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_intmax_t::operator++(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_intmax_t::operator--" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_intmax_t::operator--(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_intmax_t::operator+=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_intmax_t::operator-=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_intmax_t::operator&amp;=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_intmax_t::operator|=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_intmax_t::operator^=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="typedef" name="std::atomic_uintmax_t" link="cpp/atomic/atomic"/>
    <keyword type="function" name="std::atomic_uintmax_t::atomic_uintmax_t" link="cpp/atomic/atomic/atomic"/>
    <keyword type="function" name="std::atomic_uintmax_t::operator=" link="cpp/atomic/atomic/operator="/>
    <keyword type="function" name="std::atomic_uintmax_t::is_lock_free" link="cpp/atomic/atomic/is_lock_free"/>
    <keyword type="function" name="std::atomic_uintmax_t::store" link="cpp/atomic/atomic/store"/>
    <keyword type="function" name="std::atomic_uintmax_t::load" link="cpp/atomic/atomic/load"/>
    <keyword type="function" name="std::atomic_uintmax_t::operator T" link="cpp/atomic/atomic/operator_T"/>
    <keyword type="function" name="std::atomic_uintmax_t::exchange" link="cpp/atomic/atomic/exchange"/>
    <keyword type="function" name="std::atomic_uintmax_t::compare_exchange_strong" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic_uintmax_t::compare_exchange_weak" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic_uintmax_t::wait" link="cpp/atomic/atomic/wait"/>
    <keyword type="function" name="std::atomic_uintmax_t::notify_one" link="cpp/atomic/atomic/notify_one"/>
    <keyword type="function" name="std::atomic_uintmax_t::notify_all" link="cpp/atomic/atomic/notify_all"/>
    <keyword type="macro" name="std::atomic_uintmax_t::is_always_lock_free" link="cpp/atomic/atomic/is_always_lock_free"/>
    <keyword type="function" name="std::atomic_uintmax_t::fetch_add" link="cpp/atomic/atomic/fetch_add"/>
    <keyword type="function" name="std::atomic_uintmax_t::fetch_sub" link="cpp/atomic/atomic/fetch_sub"/>
    <keyword type="function" name="std::atomic_uintmax_t::fetch_and" link="cpp/atomic/atomic/fetch_and"/>
    <keyword type="function" name="std::atomic_uintmax_t::fetch_or" link="cpp/atomic/atomic/fetch_or"/>
    <keyword type="function" name="std::atomic_uintmax_t::fetch_xor" link="cpp/atomic/atomic/fetch_xor"/>
    <keyword type="function" name="std::atomic_uintmax_t::operator++" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_uintmax_t::operator++(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_uintmax_t::operator--" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_uintmax_t::operator--(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_uintmax_t::operator+=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_uintmax_t::operator-=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_uintmax_t::operator&amp;=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_uintmax_t::operator|=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_uintmax_t::operator^=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="typedef" name="std::atomic_signed_lock_free" link="cpp/atomic/atomic"/>
    <keyword type="function" name="std::atomic_signed_lock_free::atomic_signed_lock_free" link="cpp/atomic/atomic/atomic"/>
    <keyword type="function" name="std::atomic_signed_lock_free::operator=" link="cpp/atomic/atomic/operator="/>
    <keyword type="function" name="std::atomic_signed_lock_free::is_lock_free" link="cpp/atomic/atomic/is_lock_free"/>
    <keyword type="function" name="std::atomic_signed_lock_free::store" link="cpp/atomic/atomic/store"/>
    <keyword type="function" name="std::atomic_signed_lock_free::load" link="cpp/atomic/atomic/load"/>
    <keyword type="function" name="std::atomic_signed_lock_free::operator T" link="cpp/atomic/atomic/operator_T"/>
    <keyword type="function" name="std::atomic_signed_lock_free::exchange" link="cpp/atomic/atomic/exchange"/>
    <keyword type="function" name="std::atomic_signed_lock_free::compare_exchange_strong" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic_signed_lock_free::compare_exchange_weak" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic_signed_lock_free::wait" link="cpp/atomic/atomic/wait"/>
    <keyword type="function" name="std::atomic_signed_lock_free::notify_one" link="cpp/atomic/atomic/notify_one"/>
    <keyword type="function" name="std::atomic_signed_lock_free::notify_all" link="cpp/atomic/atomic/notify_all"/>
    <keyword type="macro" name="std::atomic_signed_lock_free::is_always_lock_free" link="cpp/atomic/atomic/is_always_lock_free"/>
    <keyword type="function" name="std::atomic_signed_lock_free::fetch_add" link="cpp/atomic/atomic/fetch_add"/>
    <keyword type="function" name="std::atomic_signed_lock_free::fetch_sub" link="cpp/atomic/atomic/fetch_sub"/>
    <keyword type="function" name="std::atomic_signed_lock_free::fetch_and" link="cpp/atomic/atomic/fetch_and"/>
    <keyword type="function" name="std::atomic_signed_lock_free::fetch_or" link="cpp/atomic/atomic/fetch_or"/>
    <keyword type="function" name="std::atomic_signed_lock_free::fetch_xor" link="cpp/atomic/atomic/fetch_xor"/>
    <keyword type="function" name="std::atomic_signed_lock_free::operator++" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_signed_lock_free::operator++(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_signed_lock_free::operator--" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_signed_lock_free::operator--(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_signed_lock_free::operator+=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_signed_lock_free::operator-=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_signed_lock_free::operator&amp;=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_signed_lock_free::operator|=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_signed_lock_free::operator^=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="typedef" name="std::atomic_unsigned_lock_free" link="cpp/atomic/atomic"/>
    <keyword type="function" name="std::atomic_unsigned_lock_free::atomic_unsigned_lock_free" link="cpp/atomic/atomic/atomic"/>
    <keyword type="function" name="std::atomic_unsigned_lock_free::operator=" link="cpp/atomic/atomic/operator="/>
    <keyword type="function" name="std::atomic_unsigned_lock_free::is_lock_free" link="cpp/atomic/atomic/is_lock_free"/>
    <keyword type="function" name="std::atomic_unsigned_lock_free::store" link="cpp/atomic/atomic/store"/>
    <keyword type="function" name="std::atomic_unsigned_lock_free::load" link="cpp/atomic/atomic/load"/>
    <keyword type="function" name="std::atomic_unsigned_lock_free::operator T" link="cpp/atomic/atomic/operator_T"/>
    <keyword type="function" name="std::atomic_unsigned_lock_free::exchange" link="cpp/atomic/atomic/exchange"/>
    <keyword type="function" name="std::atomic_unsigned_lock_free::compare_exchange_strong" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic_unsigned_lock_free::compare_exchange_weak" link="cpp/atomic/atomic/compare_exchange"/>
    <keyword type="function" name="std::atomic_unsigned_lock_free::wait" link="cpp/atomic/atomic/wait"/>
    <keyword type="function" name="std::atomic_unsigned_lock_free::notify_one" link="cpp/atomic/atomic/notify_one"/>
    <keyword type="function" name="std::atomic_unsigned_lock_free::notify_all" link="cpp/atomic/atomic/notify_all"/>
    <keyword type="macro" name="std::atomic_unsigned_lock_free::is_always_lock_free" link="cpp/atomic/atomic/is_always_lock_free"/>
    <keyword type="function" name="std::atomic_unsigned_lock_free::fetch_add" link="cpp/atomic/atomic/fetch_add"/>
    <keyword type="function" name="std::atomic_unsigned_lock_free::fetch_sub" link="cpp/atomic/atomic/fetch_sub"/>
    <keyword type="function" name="std::atomic_unsigned_lock_free::fetch_and" link="cpp/atomic/atomic/fetch_and"/>
    <keyword type="function" name="std::atomic_unsigned_lock_free::fetch_or" link="cpp/atomic/atomic/fetch_or"/>
    <keyword type="function" name="std::atomic_unsigned_lock_free::fetch_xor" link="cpp/atomic/atomic/fetch_xor"/>
    <keyword type="function" name="std::atomic_unsigned_lock_free::operator++" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_unsigned_lock_free::operator++(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_unsigned_lock_free::operator--" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_unsigned_lock_free::operator--(int)" link="cpp/atomic/atomic/operator_arith"/>
    <keyword type="function" name="std::atomic_unsigned_lock_free::operator+=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_unsigned_lock_free::operator-=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_unsigned_lock_free::operator&amp;=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_unsigned_lock_free::operator|=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="function" name="std::atomic_unsigned_lock_free::operator^=" link="cpp/atomic/atomic/operator_arith2"/>
    <keyword type="class" name="std::thread" link="cpp/thread/thread"/>
    <keyword type="function" name="std::thread::thread" link="cpp/thread/thread/thread"/>
    <keyword type="function" name="std::thread::~thread" link="cpp/thread/thread/~thread"/>
    <keyword type="function" name="std::thread::operator=" link="cpp/thread/thread/operator="/>
    <keyword type="function" name="std::thread::joinable" link="cpp/thread/thread/joinable"/>
    <keyword type="function" name="std::thread::get_id" link="cpp/thread/thread/get_id"/>
    <keyword type="function" name="std::thread::native_handle" link="cpp/thread/thread/native_handle"/>
    <keyword type="function" name="std::thread::hardware_concurrency" link="cpp/thread/thread/hardware_concurrency"/>
    <keyword type="function" name="std::thread::join" link="cpp/thread/thread/join"/>
    <keyword type="function" name="std::thread::detach" link="cpp/thread/thread/detach"/>
    <keyword type="function" name="std::thread::swap" link="cpp/thread/thread/swap"/>
    <keyword type="function" name="std::swap(std::thread)" link="cpp/thread/thread/swap2"/>
    <keyword type="class" name="std::thread::id" link="cpp/thread/thread/id"/>
    <keyword type="function" name="std::thread::id::id" link="cpp/thread/thread/id/id"/>
    <keyword type="function" name="std::thread::id::operator==" link="cpp/thread/thread/id/operator_cmp"/>
    <keyword type="function" name="std::thread::id::operator!=" link="cpp/thread/thread/id/operator_cmp"/>
    <keyword type="function" name="std::thread::id::operator&lt;" link="cpp/thread/thread/id/operator_cmp"/>
    <keyword type="function" name="std::thread::id::operator&lt;=" link="cpp/thread/thread/id/operator_cmp"/>
    <keyword type="function" name="std::thread::id::operator&gt;" link="cpp/thread/thread/id/operator_cmp"/>
    <keyword type="function" name="std::thread::id::operator&gt;=" link="cpp/thread/thread/id/operator_cmp"/>
    <keyword type="function" name="std::thread::id::operator&lt;&lt;" link="cpp/thread/thread/id/operator_ltlt"/>
    <keyword type="class" name="std::hash&lt;std::thread::id&gt;" link="cpp/thread/thread/id/hash"/>
    <keyword type="class" name="std::jthread" link="cpp/thread/jthread"/>
    <keyword type="function" name="std::jthread::jthread" link="cpp/thread/jthread/jthread"/>
    <keyword type="function" name="std::jthread::~jthread" link="cpp/thread/jthread/~jthread"/>
    <keyword type="function" name="std::jthread::operator=" link="cpp/thread/jthread/operator="/>
    <keyword type="function" name="std::jthread::joinable" link="cpp/thread/jthread/joinable"/>
    <keyword type="function" name="std::jthread::get_id" link="cpp/thread/jthread/get_id"/>
    <keyword type="function" name="std::jthread::native_handle" link="cpp/thread/jthread/native_handle"/>
    <keyword type="function" name="std::jthread::hardware_concurrency" link="cpp/thread/jthread/hardware_concurrency"/>
    <keyword type="function" name="std::jthread::join" link="cpp/thread/jthread/join"/>
    <keyword type="function" name="std::jthread::detach" link="cpp/thread/jthread/detach"/>
    <keyword type="function" name="std::jthread::swap" link="cpp/thread/jthread/swap"/>
    <keyword type="function" name="std::jthread::get_stop_source" link="cpp/thread/jthread/get_stop_source"/>
    <keyword type="function" name="std::jthread::get_stop_token" link="cpp/thread/jthread/get_stop_token"/>
    <keyword type="function" name="std::jthread::request_stop" link="cpp/thread/jthread/request_stop"/>
    <keyword type="function" name="swap(std::jthread)" link="cpp/thread/jthread/swap2"/>
    <keyword type="function" name="std::this_thread::get_id" link="cpp/thread/get_id"/>
    <keyword type="function" name="std::this_thread::sleep_for" link="cpp/thread/sleep_for"/>
    <keyword type="function" name="std::this_thread::sleep_until" link="cpp/thread/sleep_until"/>
    <keyword type="function" name="std::this_thread::yield" link="cpp/thread/yield"/>
    <keyword type="class" name="std::stop_token" link="cpp/thread/stop_token"/>
    <keyword type="function" name="std::stop_token::stop_token" link="cpp/thread/stop_token/stop_token"/>
    <keyword type="function" name="std::stop_token::~stop_token" link="cpp/thread/stop_token/~stop_token"/>
    <keyword type="function" name="std::stop_token::operator=" link="cpp/thread/stop_token/operator="/>
    <keyword type="function" name="std::stop_token::swap" link="cpp/thread/stop_token/swap"/>
    <keyword type="function" name="std::stop_token::stop_requested" link="cpp/thread/stop_token/stop_requested"/>
    <keyword type="function" name="std::stop_token::stop_possible" link="cpp/thread/stop_token/stop_possible"/>
    <keyword type="function" name="operator==(std::stop_token)" link="cpp/thread/stop_token/operator_cmp"/>
    <keyword type="function" name="swap(std::stop_token)" link="cpp/thread/stop_token/swap2"/>
    <keyword type="class" name="std::stop_source" link="cpp/thread/stop_source"/>
    <keyword type="function" name="std::stop_source::stop_source" link="cpp/thread/stop_source/stop_source"/>
    <keyword type="function" name="std::stop_source::~stop_source" link="cpp/thread/stop_source/~stop_source"/>
    <keyword type="function" name="std::stop_source::operator=" link="cpp/thread/stop_source/operator="/>
    <keyword type="function" name="std::stop_source::request_stop" link="cpp/thread/stop_source/request_stop"/>
    <keyword type="function" name="std::stop_source::swap" link="cpp/thread/stop_source/swap"/>
    <keyword type="function" name="std::stop_source::get_token" link="cpp/thread/stop_source/get_token"/>
    <keyword type="function" name="std::stop_source::stop_requested" link="cpp/thread/stop_source/stop_requested"/>
    <keyword type="function" name="std::stop_source::stop_possible" link="cpp/thread/stop_source/stop_possible"/>
    <keyword type="function" name="operator==(std::stop_source)" link="cpp/thread/stop_source/operator_cmp"/>
    <keyword type="function" name="swap(std::stop_source)" link="cpp/thread/stop_source/swap2"/>
    <keyword type="class" name="std::nostopstate_t" link="cpp/thread/stop_source/nostopstate_t"/>
    <keyword type="macro" name="std::nostopstate" link="cpp/thread/stop_source/nostopstate"/>
    <keyword type="class" name="std::stop_callback" link="cpp/thread/stop_callback"/>
    <keyword type="typedef" name="std::stop_callback::callback_type" link="cpp/thread/stop_callback"/>
    <keyword type="function" name="std::stop_callback::stop_callback" link="cpp/thread/stop_callback/stop_callback"/>
    <keyword type="function" name="std::stop_callback::~stop_callback" link="cpp/thread/stop_callback/~stop_callback"/>
    <keyword type="macro" name="std::hardware_constructive_interference_size" link="cpp/thread/hardware_destructive_interference_size"/>
    <keyword type="macro" name="std::hardware_destructive_interference_size" link="cpp/thread/hardware_destructive_interference_size"/>
    <keyword type="class" name="std::mutex" link="cpp/thread/mutex"/>
    <keyword type="function" name="std::mutex::mutex" link="cpp/thread/mutex/mutex"/>
    <keyword type="function" name="std::mutex::~mutex" link="cpp/thread/mutex/~mutex"/>
    <keyword type="function" name="std::mutex::lock" link="cpp/thread/mutex/lock"/>
    <keyword type="function" name="std::mutex::try_lock" link="cpp/thread/mutex/try_lock"/>
    <keyword type="function" name="std::mutex::unlock" link="cpp/thread/mutex/unlock"/>
    <keyword type="function" name="std::mutex::native_handle" link="cpp/thread/mutex/native_handle"/>
    <keyword type="class" name="std::recursive_mutex" link="cpp/thread/recursive_mutex"/>
    <keyword type="function" name="std::recursive_mutex::recursive_mutex" link="cpp/thread/recursive_mutex/recursive_mutex"/>
    <keyword type="function" name="std::recursive_mutex::~recursive_mutex" link="cpp/thread/recursive_mutex/~recursive_mutex"/>
    <keyword type="function" name="std::recursive_mutex::lock" link="cpp/thread/recursive_mutex/lock"/>
    <keyword type="function" name="std::recursive_mutex::try_lock" link="cpp/thread/recursive_mutex/try_lock"/>
    <keyword type="function" name="std::recursive_mutex::unlock" link="cpp/thread/recursive_mutex/unlock"/>
    <keyword type="function" name="std::recursive_mutex::native_handle" link="cpp/thread/recursive_mutex/native_handle"/>
    <keyword type="class" name="std::timed_mutex" link="cpp/thread/timed_mutex"/>
    <keyword type="function" name="std::timed_mutex::timed_mutex" link="cpp/thread/timed_mutex/timed_mutex"/>
    <keyword type="function" name="std::timed_mutex::~timed_mutex" link="cpp/thread/timed_mutex/~timed_mutex"/>
    <keyword type="function" name="std::timed_mutex::lock" link="cpp/thread/timed_mutex/lock"/>
    <keyword type="function" name="std::timed_mutex::try_lock" link="cpp/thread/timed_mutex/try_lock"/>
    <keyword type="function" name="std::timed_mutex::try_lock_for" link="cpp/thread/timed_mutex/try_lock_for"/>
    <keyword type="function" name="std::timed_mutex::try_lock_until" link="cpp/thread/timed_mutex/try_lock_until"/>
    <keyword type="function" name="std::timed_mutex::unlock" link="cpp/thread/timed_mutex/unlock"/>
    <keyword type="function" name="std::timed_mutex::native_handle" link="cpp/thread/timed_mutex/native_handle"/>
    <keyword type="class" name="std::recursive_timed_mutex" link="cpp/thread/recursive_timed_mutex"/>
    <keyword type="function" name="std::recursive_timed_mutex::recursive_timed_mutex" link="cpp/thread/recursive_timed_mutex/recursive_timed_mutex"/>
    <keyword type="function" name="std::recursive_timed_mutex::~recursive_timed_mutex" link="cpp/thread/recursive_timed_mutex/~recursive_timed_mutex"/>
    <keyword type="function" name="std::recursive_timed_mutex::lock" link="cpp/thread/recursive_timed_mutex/lock"/>
    <keyword type="function" name="std::recursive_timed_mutex::try_lock" link="cpp/thread/recursive_timed_mutex/try_lock"/>
    <keyword type="function" name="std::recursive_timed_mutex::try_lock_for" link="cpp/thread/recursive_timed_mutex/try_lock_for"/>
    <keyword type="function" name="std::recursive_timed_mutex::try_lock_until" link="cpp/thread/recursive_timed_mutex/try_lock_until"/>
    <keyword type="function" name="std::recursive_timed_mutex::unlock" link="cpp/thread/recursive_timed_mutex/unlock"/>
    <keyword type="function" name="std::recursive_timed_mutex::native_handle" link="cpp/thread/recursive_timed_mutex/native_handle"/>
    <keyword type="class" name="std::shared_timed_mutex" link="cpp/thread/shared_timed_mutex"/>
    <keyword type="function" name="std::shared_timed_mutex::shared_timed_mutex" link="cpp/thread/shared_timed_mutex/shared_timed_mutex"/>
    <keyword type="function" name="std::shared_timed_mutex::~shared_timed_mutex" link="cpp/thread/shared_timed_mutex/~shared_timed_mutex"/>
    <keyword type="function" name="std::shared_timed_mutex::lock" link="cpp/thread/shared_timed_mutex/lock"/>
    <keyword type="function" name="std::shared_timed_mutex::try_lock" link="cpp/thread/shared_timed_mutex/try_lock"/>
    <keyword type="function" name="std::shared_timed_mutex::try_lock_for" link="cpp/thread/shared_timed_mutex/try_lock_for"/>
    <keyword type="function" name="std::shared_timed_mutex::try_lock_until" link="cpp/thread/shared_timed_mutex/try_lock_until"/>
    <keyword type="function" name="std::shared_timed_mutex::unlock" link="cpp/thread/shared_timed_mutex/unlock"/>
    <keyword type="function" name="std::shared_timed_mutex::lock_shared" link="cpp/thread/shared_timed_mutex/lock_shared"/>
    <keyword type="function" name="std::shared_timed_mutex::try_lock_shared" link="cpp/thread/shared_timed_mutex/try_lock_shared"/>
    <keyword type="function" name="std::shared_timed_mutex::try_lock_shared_for" link="cpp/thread/shared_timed_mutex/try_lock_shared_for"/>
    <keyword type="function" name="std::shared_timed_mutex::try_lock_shared_until" link="cpp/thread/shared_timed_mutex/try_lock_shared_until"/>
    <keyword type="function" name="std::shared_timed_mutex::unlock_shared" link="cpp/thread/shared_timed_mutex/unlock_shared"/>
    <keyword type="class" name="std::shared_mutex" link="cpp/thread/shared_mutex"/>
    <keyword type="function" name="std::shared_mutex::shared_mutex" link="cpp/thread/shared_mutex/shared_mutex"/>
    <keyword type="function" name="std::shared_mutex::~shared_mutex" link="cpp/thread/shared_mutex/~shared_mutex"/>
    <keyword type="function" name="std::shared_mutex::lock" link="cpp/thread/shared_mutex/lock"/>
    <keyword type="function" name="std::shared_mutex::try_lock" link="cpp/thread/shared_mutex/try_lock"/>
    <keyword type="function" name="std::shared_mutex::unlock" link="cpp/thread/shared_mutex/unlock"/>
    <keyword type="function" name="std::shared_mutex::lock_shared" link="cpp/thread/shared_mutex/lock_shared"/>
    <keyword type="function" name="std::shared_mutex::try_lock_shared" link="cpp/thread/shared_mutex/try_lock_shared"/>
    <keyword type="function" name="std::shared_mutex::unlock_shared" link="cpp/thread/shared_mutex/unlock_shared"/>
    <keyword type="function" name="std::shared_mutex::native_handle" link="cpp/thread/shared_mutex/native_handle"/>
    <keyword type="class" name="std::defer_lock_t" link="cpp/thread/lock_tag_t"/>
    <keyword type="class" name="std::try_to_lock_t" link="cpp/thread/lock_tag_t"/>
    <keyword type="class" name="std::adopt_lock_t" link="cpp/thread/lock_tag_t"/>
    <keyword type="macro" name="std::defer_lock" link="cpp/thread/lock_tag"/>
    <keyword type="macro" name="std::try_to_lock" link="cpp/thread/lock_tag"/>
    <keyword type="macro" name="std::adopt_lock" link="cpp/thread/lock_tag"/>
    <keyword type="class" name="std::lock_guard" link="cpp/thread/lock_guard"/>
    <keyword type="function" name="std::lock_guard::lock_guard" link="cpp/thread/lock_guard/lock_guard"/>
    <keyword type="function" name="std::lock_guard::~lock_guard" link="cpp/thread/lock_guard/~lock_guard"/>
    <keyword type="class" name="std::scoped_lock" link="cpp/thread/scoped_lock"/>
    <keyword type="function" name="std::scoped_lock::scoped_lock" link="cpp/thread/scoped_lock/scoped_lock"/>
    <keyword type="function" name="std::scoped_lock::~scoped_lock" link="cpp/thread/scoped_lock/~scoped_lock"/>
    <keyword type="class" name="std::unique_lock" link="cpp/thread/unique_lock"/>
    <keyword type="function" name="std::unique_lock::unique_lock" link="cpp/thread/unique_lock/unique_lock"/>
    <keyword type="function" name="std::unique_lock::~unique_lock" link="cpp/thread/unique_lock/~unique_lock"/>
    <keyword type="function" name="std::unique_lock::operator=" link="cpp/thread/unique_lock/operator="/>
    <keyword type="function" name="std::unique_lock::lock" link="cpp/thread/unique_lock/lock"/>
    <keyword type="function" name="std::unique_lock::try_lock" link="cpp/thread/unique_lock/try_lock"/>
    <keyword type="function" name="std::unique_lock::try_lock_for" link="cpp/thread/unique_lock/try_lock_for"/>
    <keyword type="function" name="std::unique_lock::try_lock_until" link="cpp/thread/unique_lock/try_lock_until"/>
    <keyword type="function" name="std::unique_lock::unlock" link="cpp/thread/unique_lock/unlock"/>
    <keyword type="function" name="std::unique_lock::swap" link="cpp/thread/unique_lock/swap"/>
    <keyword type="function" name="std::unique_lock::release" link="cpp/thread/unique_lock/release"/>
    <keyword type="function" name="std::unique_lock::mutex" link="cpp/thread/unique_lock/mutex"/>
    <keyword type="function" name="std::unique_lock::owns_lock" link="cpp/thread/unique_lock/owns_lock"/>
    <keyword type="function" name="std::unique_lock::operator bool" link="cpp/thread/unique_lock/operator_bool"/>
    <keyword type="function" name="std::swap(std::unique_lock)" link="cpp/thread/unique_lock/swap2"/>
    <keyword type="class" name="std::shared_lock" link="cpp/thread/shared_lock"/>
    <keyword type="function" name="std::shared_lock::shared_lock" link="cpp/thread/shared_lock/shared_lock"/>
    <keyword type="function" name="std::shared_lock::~shared_lock" link="cpp/thread/shared_lock/~shared_lock"/>
    <keyword type="function" name="std::shared_lock::operator=" link="cpp/thread/shared_lock/operator="/>
    <keyword type="function" name="std::shared_lock::lock" link="cpp/thread/shared_lock/lock"/>
    <keyword type="function" name="std::shared_lock::try_lock" link="cpp/thread/shared_lock/try_lock"/>
    <keyword type="function" name="std::shared_lock::try_lock_for" link="cpp/thread/shared_lock/try_lock_for"/>
    <keyword type="function" name="std::shared_lock::try_lock_until" link="cpp/thread/shared_lock/try_lock_until"/>
    <keyword type="function" name="std::shared_lock::unlock" link="cpp/thread/shared_lock/unlock"/>
    <keyword type="function" name="std::shared_lock::swap" link="cpp/thread/shared_lock/swap"/>
    <keyword type="function" name="std::shared_lock::release" link="cpp/thread/shared_lock/release"/>
    <keyword type="function" name="std::shared_lock::mutex" link="cpp/thread/shared_lock/mutex"/>
    <keyword type="function" name="std::shared_lock::owns_lock" link="cpp/thread/shared_lock/owns_lock"/>
    <keyword type="function" name="std::shared_lock::operator bool" link="cpp/thread/shared_lock/operator_bool"/>
    <keyword type="function" name="std::swap(std::shared_lock)" link="cpp/thread/shared_lock/swap2"/>
    <keyword type="function" name="std::lock" link="cpp/thread/lock"/>
    <keyword type="function" name="std::try_lock" link="cpp/thread/try_lock"/>
    <keyword type="class" name="std::condition_variable" link="cpp/thread/condition_variable"/>
    <keyword type="function" name="std::condition_variable::condition_variable" link="cpp/thread/condition_variable/condition_variable"/>
    <keyword type="function" name="std::condition_variable::~condition_variable" link="cpp/thread/condition_variable/~condition_variable"/>
    <keyword type="function" name="std::condition_variable::notify_one" link="cpp/thread/condition_variable/notify_one"/>
    <keyword type="function" name="std::condition_variable::notify_all" link="cpp/thread/condition_variable/notify_all"/>
    <keyword type="function" name="std::condition_variable::wait" link="cpp/thread/condition_variable/wait"/>
    <keyword type="function" name="std::condition_variable::wait_for" link="cpp/thread/condition_variable/wait_for"/>
    <keyword type="function" name="std::condition_variable::wait_until" link="cpp/thread/condition_variable/wait_until"/>
    <keyword type="function" name="std::condition_variable::native_handle" link="cpp/thread/condition_variable/native_handle"/>
    <keyword type="class" name="std::condition_variable_any" link="cpp/thread/condition_variable_any"/>
    <keyword type="function" name="std::condition_variable_any::condition_variable_any" link="cpp/thread/condition_variable_any/condition_variable_any"/>
    <keyword type="function" name="std::condition_variable_any::~condition_variable_any" link="cpp/thread/condition_variable_any/~condition_variable_any"/>
    <keyword type="function" name="std::condition_variable_any::notify_one" link="cpp/thread/condition_variable_any/notify_one"/>
    <keyword type="function" name="std::condition_variable_any::notify_all" link="cpp/thread/condition_variable_any/notify_all"/>
    <keyword type="function" name="std::condition_variable_any::wait" link="cpp/thread/condition_variable_any/wait"/>
    <keyword type="function" name="std::condition_variable_any::wait_for" link="cpp/thread/condition_variable_any/wait_for"/>
    <keyword type="function" name="std::condition_variable_any::wait_until" link="cpp/thread/condition_variable_any/wait_until"/>
    <keyword type="function" name="std::notify_all_at_thread_exit" link="cpp/thread/notify_all_at_thread_exit"/>
    <keyword type="class" name="std::once_flag" link="cpp/thread/once_flag"/>
    <keyword type="function" name="std::once_flag::once_flag" link="cpp/thread/once_flag"/>
    <keyword type="function" name="std::call_once" link="cpp/thread/call_once"/>
    <keyword type="enum" name="std::cv_status" link="cpp/thread/cv_status"/>
    <keyword type="macro" name="std::cv_status::no_timeout" link="cpp/thread/cv_status"/>
    <keyword type="macro" name="std::cv_status::timeout" link="cpp/thread/cv_status"/>
    <keyword type="class" name="std::counting_semaphore" link="cpp/thread/counting_semaphore"/>
    <keyword type="function" name="std::counting_semaphore::counting_semaphore" link="cpp/thread/counting_semaphore/counting_semaphore"/>
    <keyword type="function" name="std::counting_semaphore::~counting_semaphore" link="cpp/thread/counting_semaphore/~counting_semaphore"/>
    <keyword type="function" name="std::counting_semaphore::release" link="cpp/thread/counting_semaphore/release"/>
    <keyword type="function" name="std::counting_semaphore::acquire" link="cpp/thread/counting_semaphore/acquire"/>
    <keyword type="function" name="std::counting_semaphore::try_acquire" link="cpp/thread/counting_semaphore/try_acquire"/>
    <keyword type="function" name="std::counting_semaphore::try_acquire_for" link="cpp/thread/counting_semaphore/try_acquire_for"/>
    <keyword type="function" name="std::counting_semaphore::try_acquire_until" link="cpp/thread/counting_semaphore/try_acquire_until"/>
    <keyword type="macro" name="std::counting_semaphore::max" link="cpp/thread/counting_semaphore/max"/>
    <keyword type="typedef" name="std::binary_semaphore" link="cpp/thread/counting_semaphore"/>
    <keyword type="function" name="std::binary_semaphore::binary_semaphore" link="cpp/thread/counting_semaphore/counting_semaphore"/>
    <keyword type="function" name="std::binary_semaphore::~binary_semaphore" link="cpp/thread/counting_semaphore/~counting_semaphore"/>
    <keyword type="function" name="std::binary_semaphore::release" link="cpp/thread/counting_semaphore/release"/>
    <keyword type="function" name="std::binary_semaphore::acquire" link="cpp/thread/counting_semaphore/acquire"/>
    <keyword type="function" name="std::binary_semaphore::try_acquire" link="cpp/thread/counting_semaphore/try_acquire"/>
    <keyword type="function" name="std::binary_semaphore::try_acquire_for" link="cpp/thread/counting_semaphore/try_acquire_for"/>
    <keyword type="function" name="std::binary_semaphore::try_acquire_until" link="cpp/thread/counting_semaphore/try_acquire_until"/>
    <keyword type="macro" name="std::binary_semaphore::max" link="cpp/thread/counting_semaphore/max"/>
    <keyword type="class" name="std::latch" link="cpp/thread/latch"/>
    <keyword type="function" name="std::latch::latch" link="cpp/thread/latch/latch"/>
    <keyword type="function" name="std::latch::~latch" link="cpp/thread/latch/~latch"/>
    <keyword type="function" name="std::latch::count_down" link="cpp/thread/latch/count_down"/>
    <keyword type="function" name="std::latch::try_wait" link="cpp/thread/latch/try_wait"/>
    <keyword type="function" name="std::latch::wait" link="cpp/thread/latch/wait"/>
    <keyword type="function" name="std::latch::arrive_and_wait" link="cpp/thread/latch/arrive_and_wait"/>
    <keyword type="macro" name="std::latch::max" link="cpp/thread/latch/max"/>
    <keyword type="class" name="std::barrier" link="cpp/thread/barrier"/>
    <keyword type="typedef" name="std::barrier::arrival_token" link="cpp/thread/barrier"/>
    <keyword type="function" name="std::barrier::barrier" link="cpp/thread/barrier/barrier"/>
    <keyword type="function" name="std::barrier::~barrier" link="cpp/thread/barrier/~barrier"/>
    <keyword type="function" name="std::barrier::arrive" link="cpp/thread/barrier/arrive"/>
    <keyword type="function" name="std::barrier::wait" link="cpp/thread/barrier/wait"/>
    <keyword type="function" name="std::barrier::arrive_and_wait" link="cpp/thread/barrier/arrive_and_wait"/>
    <keyword type="function" name="std::barrier::arrive_and_drop" link="cpp/thread/barrier/arrive_and_drop"/>
    <keyword type="macro" name="std::barrier::max" link="cpp/thread/barrier/max"/>
    <keyword type="class" name="std::promise" link="cpp/thread/promise"/>
    <keyword type="function" name="std::promise::promise" link="cpp/thread/promise/promise"/>
    <keyword type="function" name="std::promise::~promise" link="cpp/thread/promise/~promise"/>
    <keyword type="function" name="std::promise::operator=" link="cpp/thread/promise/operator="/>
    <keyword type="function" name="std::promise::swap" link="cpp/thread/promise/swap"/>
    <keyword type="function" name="std::promise::get_future" link="cpp/thread/promise/get_future"/>
    <keyword type="function" name="std::promise::set_value" link="cpp/thread/promise/set_value"/>
    <keyword type="function" name="std::promise::set_value_at_thread_exit" link="cpp/thread/promise/set_value_at_thread_exit"/>
    <keyword type="function" name="std::promise::set_exception" link="cpp/thread/promise/set_exception"/>
    <keyword type="function" name="std::promise::set_exception_at_thread_exit" link="cpp/thread/promise/set_exception_at_thread_exit"/>
    <keyword type="function" name="std::swap(std::promise)" link="cpp/thread/promise/swap2"/>
    <keyword type="class" name="std::uses_allocator&lt;std::promise&gt;" link="cpp/thread/promise/uses_allocator"/>
    <keyword type="class" name="std::future" link="cpp/thread/future"/>
    <keyword type="function" name="std::future::future" link="cpp/thread/future/future"/>
    <keyword type="function" name="std::future::~future" link="cpp/thread/future/~future"/>
    <keyword type="function" name="std::future::operator=" link="cpp/thread/future/operator="/>
    <keyword type="function" name="std::future::share" link="cpp/thread/future/share"/>
    <keyword type="function" name="std::future::get" link="cpp/thread/future/get"/>
    <keyword type="function" name="std::future::valid" link="cpp/thread/future/valid"/>
    <keyword type="function" name="std::future::wait" link="cpp/thread/future/wait"/>
    <keyword type="function" name="std::future::wait_for" link="cpp/thread/future/wait_for"/>
    <keyword type="function" name="std::future::wait_until" link="cpp/thread/future/wait_until"/>
    <keyword type="class" name="std::shared_future" link="cpp/thread/shared_future"/>
    <keyword type="function" name="std::shared_future::shared_future" link="cpp/thread/shared_future/shared_future"/>
    <keyword type="function" name="std::shared_future::~shared_future" link="cpp/thread/shared_future/~shared_future"/>
    <keyword type="function" name="std::shared_future::operator=" link="cpp/thread/shared_future/operator="/>
    <keyword type="function" name="std::shared_future::get" link="cpp/thread/shared_future/get"/>
    <keyword type="function" name="std::shared_future::valid" link="cpp/thread/shared_future/valid"/>
    <keyword type="function" name="std::shared_future::wait" link="cpp/thread/shared_future/wait"/>
    <keyword type="function" name="std::shared_future::wait_for" link="cpp/thread/shared_future/wait_for"/>
    <keyword type="function" name="std::shared_future::wait_until" link="cpp/thread/shared_future/wait_until"/>
    <keyword type="class" name="std::packaged_task" link="cpp/thread/packaged_task"/>
    <keyword type="function" name="std::packaged_task::packaged_task" link="cpp/thread/packaged_task/packaged_task"/>
    <keyword type="function" name="std::packaged_task::~packaged_task" link="cpp/thread/packaged_task/~packaged_task"/>
    <keyword type="function" name="std::packaged_task::operator=" link="cpp/thread/packaged_task/operator="/>
    <keyword type="function" name="std::packaged_task::valid" link="cpp/thread/packaged_task/valid"/>
    <keyword type="function" name="std::packaged_task::swap" link="cpp/thread/packaged_task/swap"/>
    <keyword type="function" name="std::packaged_task::get_future" link="cpp/thread/packaged_task/get_future"/>
    <keyword type="function" name="std::packaged_task::operator()" link="cpp/thread/packaged_task/operator()"/>
    <keyword type="function" name="std::packaged_task::make_ready_at_thread_exit" link="cpp/thread/packaged_task/make_ready_at_thread_exit"/>
    <keyword type="function" name="std::packaged_task::reset" link="cpp/thread/packaged_task/reset"/>
    <keyword type="function" name="std::swap(std::packaged_task)" link="cpp/thread/packaged_task/swap2"/>
    <keyword type="class" name="std::uses_allocator&lt;std::packaged_task&gt;" link="cpp/thread/packaged_task/uses_allocator"/>
    <keyword type="function" name="std::async" link="cpp/thread/async"/>
    <keyword type="enum" name="std::launch" link="cpp/thread/launch"/>
    <keyword type="macro" name="std::launch::async" link="cpp/thread/launch"/>
    <keyword type="macro" name="std::launch::deferred" link="cpp/thread/launch"/>
    <keyword type="enum" name="std::future_status" link="cpp/thread/future_status"/>
    <keyword type="macro" name="std::future_status::ready" link="cpp/thread/future_status"/>
    <keyword type="macro" name="std::future_status::timeout" link="cpp/thread/future_status"/>
    <keyword type="macro" name="std::future_status::deferred" link="cpp/thread/future_status"/>
    <keyword type="class" name="std::future_error" link="cpp/thread/future_error"/>
    <keyword type="function" name="std::future_error::what" link="cpp/error/exception/what"/>
    <keyword type="function" name="std::future_error::future_error" link="cpp/thread/future_error/future_error"/>
    <keyword type="function" name="std::future_error::operator=" link="cpp/thread/future_error/operator="/>
    <keyword type="function" name="std::future_error::code" link="cpp/thread/future_error/code"/>
    <keyword type="function" name="std::future_error::what" link="cpp/thread/future_error/what"/>
    <keyword type="function" name="std::future_category" link="cpp/thread/future_category"/>
    <keyword type="class" name="std::future_errc" link="cpp/thread/future_errc"/>
    <keyword type="macro" name="std::future_errc::broken_promise" link="cpp/thread/future_errc"/>
    <keyword type="macro" name="std::future_errc::future_already_retrieved" link="cpp/thread/future_errc"/>
    <keyword type="macro" name="std::future_errc::promise_already_satisfied" link="cpp/thread/future_errc"/>
    <keyword type="macro" name="std::future_errc::no_state" link="cpp/thread/future_errc"/>
    <keyword type="class" name="std::is_error_code_enum&lt;std::future_errc&gt;" link="cpp/thread/future_errc/is_error_code_enum"/>
    <keyword type="function" name="std::make_error_code(std::future_errc)" link="cpp/thread/future_errc/make_error_code"/>
    <keyword type="function" name="std::make_error_condition(std::future_errc)" link="cpp/thread/future_errc/make_error_condition"/>
    <keyword type="class" name="std::filesystem::path" link="cpp/filesystem/path"/>
    <keyword type="function" name="std::filesystem::path::path" link="cpp/filesystem/path/path"/>
    <keyword type="function" name="std::filesystem::path::~path" link="cpp/filesystem/path/~path"/>
    <keyword type="function" name="std::filesystem::path::operator=" link="cpp/filesystem/path/operator="/>
    <keyword type="function" name="std::filesystem::path::assign" link="cpp/filesystem/path/assign"/>
    <keyword type="enum" name="std::filesystem::path::format" link="cpp/filesystem/path/format"/>
    <keyword type="macro" name="std::filesystem::path::preferred_separator" link="cpp/filesystem/path"/>
    <keyword type="function" name="std::filesystem::path::append" link="cpp/filesystem/path/append"/>
    <keyword type="function" name="std::filesystem::path::operator/=" link="cpp/filesystem/path/append"/>
    <keyword type="function" name="std::filesystem::path::concat" link="cpp/filesystem/path/concat"/>
    <keyword type="function" name="std::filesystem::path::operator+=" link="cpp/filesystem/path/concat"/>
    <keyword type="function" name="std::filesystem::path::clear" link="cpp/filesystem/path/clear"/>
    <keyword type="function" name="std::filesystem::path::make_preferred" link="cpp/filesystem/path/make_preferred"/>
    <keyword type="function" name="std::filesystem::path::remove_filename" link="cpp/filesystem/path/remove_filename"/>
    <keyword type="function" name="std::filesystem::path::replace_filename" link="cpp/filesystem/path/replace_filename"/>
    <keyword type="function" name="std::filesystem::path::replace_extension" link="cpp/filesystem/path/replace_extension"/>
    <keyword type="function" name="std::filesystem::path::swap" link="cpp/filesystem/path/swap"/>
    <keyword type="function" name="std::filesystem::path::c_str" link="cpp/filesystem/path/native"/>
    <keyword type="function" name="std::filesystem::path::native" link="cpp/filesystem/path/native"/>
    <keyword type="function" name="std::filesystem::path::operator string_type" link="cpp/filesystem/path/native"/>
    <keyword type="function" name="std::filesystem::path::string" link="cpp/filesystem/path/string"/>
    <keyword type="function" name="std::filesystem::path::wstring" link="cpp/filesystem/path/string"/>
    <keyword type="function" name="std::filesystem::path::u8string" link="cpp/filesystem/path/string"/>
    <keyword type="function" name="std::filesystem::path::u16string" link="cpp/filesystem/path/string"/>
    <keyword type="function" name="std::filesystem::path::u32string" link="cpp/filesystem/path/string"/>
    <keyword type="function" name="std::filesystem::path::generic_string" link="cpp/filesystem/path/generic_string"/>
    <keyword type="function" name="std::filesystem::path::generic_wstring" link="cpp/filesystem/path/generic_string"/>
    <keyword type="function" name="std::filesystem::path::generic_u8string" link="cpp/filesystem/path/generic_string"/>
    <keyword type="function" name="std::filesystem::path::generic_u16string" link="cpp/filesystem/path/generic_string"/>
    <keyword type="function" name="std::filesystem::path::generic_u32string" link="cpp/filesystem/path/generic_string"/>
    <keyword type="function" name="std::filesystem::path::compare" link="cpp/filesystem/path/compare"/>
    <keyword type="function" name="std::filesystem::path::lexically_normal" link="cpp/filesystem/path/lexically_normal"/>
    <keyword type="function" name="std::filesystem::path::lexically_proximate" link="cpp/filesystem/path/lexically_normal"/>
    <keyword type="function" name="std::filesystem::path::lexically_relative" link="cpp/filesystem/path/lexically_normal"/>
    <keyword type="function" name="std::filesystem::path::root_name" link="cpp/filesystem/path/root_name"/>
    <keyword type="function" name="std::filesystem::path::root_directory" link="cpp/filesystem/path/root_directory"/>
    <keyword type="function" name="std::filesystem::path::root_path" link="cpp/filesystem/path/root_path"/>
    <keyword type="function" name="std::filesystem::path::relative_path" link="cpp/filesystem/path/relative_path"/>
    <keyword type="function" name="std::filesystem::path::parent_path" link="cpp/filesystem/path/parent_path"/>
    <keyword type="function" name="std::filesystem::path::filename" link="cpp/filesystem/path/filename"/>
    <keyword type="function" name="std::filesystem::path::stem" link="cpp/filesystem/path/stem"/>
    <keyword type="function" name="std::filesystem::path::extension" link="cpp/filesystem/path/extension"/>
    <keyword type="function" name="std::filesystem::path::empty" link="cpp/filesystem/path/empty"/>
    <keyword type="function" name="std::filesystem::path::has_root_path" link="cpp/filesystem/path/has_path"/>
    <keyword type="function" name="std::filesystem::path::has_root_name" link="cpp/filesystem/path/has_path"/>
    <keyword type="function" name="std::filesystem::path::has_root_directory" link="cpp/filesystem/path/has_path"/>
    <keyword type="function" name="std::filesystem::path::has_relative_path" link="cpp/filesystem/path/has_path"/>
    <keyword type="function" name="std::filesystem::path::has_parent_path" link="cpp/filesystem/path/has_path"/>
    <keyword type="function" name="std::filesystem::path::has_filename" link="cpp/filesystem/path/has_path"/>
    <keyword type="function" name="std::filesystem::path::has_stem" link="cpp/filesystem/path/has_path"/>
    <keyword type="function" name="std::filesystem::path::has_extension" link="cpp/filesystem/path/has_path"/>
    <keyword type="function" name="std::filesystem::path::is_absolute" link="cpp/filesystem/path/is_absrel"/>
    <keyword type="function" name="std::filesystem::path::is_relative" link="cpp/filesystem/path/is_absrel"/>
    <keyword type="function" name="std::filesystem::path::begin" link="cpp/filesystem/path/begin"/>
    <keyword type="function" name="std::filesystem::path::end" link="cpp/filesystem/path/begin"/>
    <keyword type="function" name="std::swap(std::filesystem::path)" link="cpp/filesystem/path/swap2"/>
    <keyword type="function" name="operator==(std::filesystem::path)" link="cpp/filesystem/path/operator_cmp"/>
    <keyword type="function" name="operator!=(std::filesystem::path)" link="cpp/filesystem/path/operator_cmp"/>
    <keyword type="function" name="operator&lt;(std::filesystem::path)" link="cpp/filesystem/path/operator_cmp"/>
    <keyword type="function" name="operator&lt;=(std::filesystem::path)" link="cpp/filesystem/path/operator_cmp"/>
    <keyword type="function" name="operator&gt;(std::filesystem::path)" link="cpp/filesystem/path/operator_cmp"/>
    <keyword type="function" name="operator&gt;=(std::filesystem::path)" link="cpp/filesystem/path/operator_cmp"/>
    <keyword type="function" name="operator/(std::filesystem::path)" link="cpp/filesystem/path/operator_slash"/>
    <keyword type="function" name="operator&lt;&lt;(std::filesystem::path)" link="cpp/filesystem/path/operator_ltltgtgt"/>
    <keyword type="function" name="operator&gt;&gt;(std::filesystem::path)" link="cpp/filesystem/path/operator_ltltgtgt"/>
    <keyword type="function" name="std::filesystem::hash_value(std::filesystem::path)" link="cpp/filesystem/path/hash_value"/>
    <keyword type="function" name="std::filesystem::u8path" link="cpp/filesystem/path/u8path"/>
    <keyword type="class" name="std::filesystem::filesystem_error" link="cpp/filesystem/filesystem_error"/>
    <keyword type="function" name="std::filesystem::filesystem_error::filesystem_error" link="cpp/filesystem/filesystem_error/filesystem_error"/>
    <keyword type="function" name="std::filesystem::filesystem_error::operator=" link="cpp/filesystem/filesystem_error/operator="/>
    <keyword type="function" name="std::filesystem::filesystem_error::path1" link="cpp/filesystem/filesystem_error/path"/>
    <keyword type="function" name="std::filesystem::filesystem_error::path2" link="cpp/filesystem/filesystem_error/path"/>
    <keyword type="function" name="std::filesystem::filesystem_error::what" link="cpp/filesystem/filesystem_error/what"/>
    <keyword type="class" name="std::filesystem::directory_entry" link="cpp/filesystem/directory_entry"/>
    <keyword type="function" name="std::filesystem::directory_entry::directory_entry" link="cpp/filesystem/directory_entry/directory_entry"/>
    <keyword type="function" name="std::filesystem::directory_entry::operator=" link="cpp/filesystem/directory_entry/operator="/>
    <keyword type="function" name="std::filesystem::directory_entry::assign" link="cpp/filesystem/directory_entry/assign"/>
    <keyword type="function" name="std::filesystem::directory_entry::replace_filename" link="cpp/filesystem/directory_entry/replace_filename"/>
    <keyword type="function" name="std::filesystem::directory_entry::refresh" link="cpp/filesystem/directory_entry/refresh"/>
    <keyword type="function" name="std::filesystem::directory_entry::path" link="cpp/filesystem/directory_entry/path"/>
    <keyword type="function" name="std::filesystem::directory_entry::operator const path&amp;" link="cpp/filesystem/directory_entry/path"/>
    <keyword type="function" name="std::filesystem::directory_entry::exists" link="cpp/filesystem/directory_entry/exists"/>
    <keyword type="function" name="std::filesystem::directory_entry::is_block_file" link="cpp/filesystem/directory_entry/is_block_file"/>
    <keyword type="function" name="std::filesystem::directory_entry::is_character_file" link="cpp/filesystem/directory_entry/is_character_file"/>
    <keyword type="function" name="std::filesystem::directory_entry::is_directory" link="cpp/filesystem/directory_entry/is_directory"/>
    <keyword type="function" name="std::filesystem::directory_entry::is_fifo" link="cpp/filesystem/directory_entry/is_fifo"/>
    <keyword type="function" name="std::filesystem::directory_entry::is_other" link="cpp/filesystem/directory_entry/is_other"/>
    <keyword type="function" name="std::filesystem::directory_entry::is_regular_file" link="cpp/filesystem/directory_entry/is_regular_file"/>
    <keyword type="function" name="std::filesystem::directory_entry::is_socket" link="cpp/filesystem/directory_entry/is_socket"/>
    <keyword type="function" name="std::filesystem::directory_entry::is_symlink" link="cpp/filesystem/directory_entry/is_symlink"/>
    <keyword type="function" name="std::filesystem::directory_entry::file_size" link="cpp/filesystem/directory_entry/file_size"/>
    <keyword type="function" name="std::filesystem::directory_entry::hard_link_count" link="cpp/filesystem/directory_entry/hard_link_count"/>
    <keyword type="function" name="std::filesystem::directory_entry::last_write_time" link="cpp/filesystem/directory_entry/last_write_time"/>
    <keyword type="function" name="std::filesystem::directory_entry::status" link="cpp/filesystem/directory_entry/status"/>
    <keyword type="function" name="std::filesystem::directory_entry::symlink_status" link="cpp/filesystem/directory_entry/status"/>
    <keyword type="function" name="std::filesystem::directory_entry::operator==" link="cpp/filesystem/directory_entry/operator_cmp"/>
    <keyword type="function" name="std::filesystem::directory_entry::operator!=" link="cpp/filesystem/directory_entry/operator_cmp"/>
    <keyword type="function" name="std::filesystem::directory_entry::operator&lt;" link="cpp/filesystem/directory_entry/operator_cmp"/>
    <keyword type="function" name="std::filesystem::directory_entry::operator&lt;=" link="cpp/filesystem/directory_entry/operator_cmp"/>
    <keyword type="function" name="std::filesystem::directory_entry::operator&gt;" link="cpp/filesystem/directory_entry/operator_cmp"/>
    <keyword type="function" name="std::filesystem::directory_entry::operator&gt;=" link="cpp/filesystem/directory_entry/operator_cmp"/>
    <keyword type="function" name="std::filesystem::directory_entry::operator&lt;=&gt;" link="cpp/filesystem/directory_entry/operator_cmp"/>
    <keyword type="function" name="operator&lt;&lt;(std::filesystem::directory_entry)" link="cpp/filesystem/directory_entry/operator_ltlt"/>
    <keyword type="class" name="std::filesystem::directory_iterator" link="cpp/filesystem/directory_iterator"/>
    <keyword type="function" name="std::filesystem::directory_iterator::directory_iterator" link="cpp/filesystem/directory_iterator/directory_iterator"/>
    <keyword type="function" name="std::filesystem::directory_iterator::operator=" link="cpp/filesystem/directory_iterator/operator="/>
    <keyword type="function" name="std::filesystem::directory_iterator::operator*" link="cpp/filesystem/directory_iterator/operator*"/>
    <keyword type="function" name="std::filesystem::directory_iterator::operator-&gt;" link="cpp/filesystem/directory_iterator/operator*"/>
    <keyword type="function" name="std::filesystem::directory_iterator::increment" link="cpp/filesystem/directory_iterator/increment"/>
    <keyword type="function" name="std::filesystem::directory_iterator::operator++" link="cpp/filesystem/directory_iterator/increment"/>
    <keyword type="function" name="operator==(std::filesystem::directory_iterator)" link="cpp/filesystem/directory_iterator"/>
    <keyword type="function" name="operator!=(std::filesystem::directory_iterator)" link="cpp/filesystem/directory_iterator"/>
    <keyword type="function" name="std::filesystem::begin(std::filesystem::directory_iterator)" link="cpp/filesystem/directory_iterator/begin"/>
    <keyword type="function" name="std::filesystem::end(std::filesystem::directory_iterator)" link="cpp/filesystem/directory_iterator/begin"/>
    <keyword type="class" name="std::filesystem::recursive_directory_iterator" link="cpp/filesystem/recursive_directory_iterator"/>
    <keyword type="function" name="std::filesystem::recursive_directory_iterator::recursive_directory_iterator" link="cpp/filesystem/recursive_directory_iterator/recursive_directory_iterator"/>
    <keyword type="function" name="std::filesystem::recursive_directory_iterator::operator*" link="cpp/filesystem/recursive_directory_iterator/operator*"/>
    <keyword type="function" name="std::filesystem::recursive_directory_iterator::operator-&gt;" link="cpp/filesystem/recursive_directory_iterator/operator*"/>
    <keyword type="function" name="std::filesystem::recursive_directory_iterator::options" link="cpp/filesystem/recursive_directory_iterator/options"/>
    <keyword type="function" name="std::filesystem::recursive_directory_iterator::depth" link="cpp/filesystem/recursive_directory_iterator/depth"/>
    <keyword type="function" name="std::filesystem::recursive_directory_iterator::recursion_pending" link="cpp/filesystem/recursive_directory_iterator/recursion_pending"/>
    <keyword type="function" name="std::filesystem::recursive_directory_iterator::operator=" link="cpp/filesystem/recursive_directory_iterator/operator="/>
    <keyword type="function" name="std::filesystem::recursive_directory_iterator::increment" link="cpp/filesystem/recursive_directory_iterator/increment"/>
    <keyword type="function" name="std::filesystem::recursive_directory_iterator::operator++" link="cpp/filesystem/recursive_directory_iterator/increment"/>
    <keyword type="function" name="std::filesystem::recursive_directory_iterator::pop" link="cpp/filesystem/recursive_directory_iterator/pop"/>
    <keyword type="function" name="std::filesystem::recursive_directory_iterator::disable_recursion_pending" link="cpp/filesystem/recursive_directory_iterator/disable_recursion_pending"/>
    <keyword type="function" name="operator==(std::filesystem::recursive_directory_iterator)" link="cpp/filesystem/recursive_directory_iterator"/>
    <keyword type="function" name="operator!=(std::filesystem::recursive_directory_iterator)" link="cpp/filesystem/recursive_directory_iterator"/>
    <keyword type="function" name="std::filesystem::begin(std::filesystem::recursive_directory_iterator)" link="cpp/filesystem/recursive_directory_iterator/begin"/>
    <keyword type="function" name="std::filesystem::end(std::filesystem::recursive_directory_iterator)" link="cpp/filesystem/recursive_directory_iterator/begin"/>
    <keyword type="class" name="std::filesystem::file_status" link="cpp/filesystem/file_status"/>
    <keyword type="function" name="std::filesystem::file_status::file_status" link="cpp/filesystem/file_status/file_status"/>
    <keyword type="function" name="std::filesystem::file_status::~file_status" link="cpp/filesystem/file_status"/>
    <keyword type="function" name="std::filesystem::file_status::operator=" link="cpp/filesystem/file_status/operator="/>
    <keyword type="function" name="std::filesystem::file_status::type" link="cpp/filesystem/file_status/type"/>
    <keyword type="function" name="std::filesystem::file_status::permissions" link="cpp/filesystem/file_status/permissions"/>
    <keyword type="function" name="operator==(std::filesystem::file_status)" link="cpp/filesystem/file_status/operator=="/>
    <keyword type="class" name="std::filesystem::space_info" link="cpp/filesystem/space_info"/>
    <keyword type="" name="std::filesystem::space_info::capacity" link="cpp/filesystem/space_info"/>
    <keyword type="" name="std::filesystem::space_info::free" link="cpp/filesystem/space_info"/>
    <keyword type="" name="std::filesystem::space_info::available" link="cpp/filesystem/space_info"/>
    <keyword type="class" name="std::filesystem::file_type" link="cpp/filesystem/file_type"/>
    <keyword type="macro" name="std::filesystem::file_type::none" link="cpp/filesystem/file_type"/>
    <keyword type="macro" name="std::filesystem::file_type::not_found" link="cpp/filesystem/file_type"/>
    <keyword type="macro" name="std::filesystem::file_type::regular" link="cpp/filesystem/file_type"/>
    <keyword type="macro" name="std::filesystem::file_type::directory" link="cpp/filesystem/file_type"/>
    <keyword type="macro" name="std::filesystem::file_type::symlink" link="cpp/filesystem/file_type"/>
    <keyword type="macro" name="std::filesystem::file_type::block" link="cpp/filesystem/file_type"/>
    <keyword type="macro" name="std::filesystem::file_type::character" link="cpp/filesystem/file_type"/>
    <keyword type="macro" name="std::filesystem::file_type::fifo" link="cpp/filesystem/file_type"/>
    <keyword type="macro" name="std::filesystem::file_type::socket" link="cpp/filesystem/file_type"/>
    <keyword type="macro" name="std::filesystem::file_type::unknown" link="cpp/filesystem/file_type"/>
    <keyword type="class" name="std::filesystem::perms" link="cpp/filesystem/perms"/>
    <keyword type="macro" name="std::filesystem::perms::none" link="cpp/filesystem/perms"/>
    <keyword type="macro" name="std::filesystem::perms::owner_read" link="cpp/filesystem/perms"/>
    <keyword type="macro" name="std::filesystem::perms::owner_write" link="cpp/filesystem/perms"/>
    <keyword type="macro" name="std::filesystem::perms::owner_exec" link="cpp/filesystem/perms"/>
    <keyword type="macro" name="std::filesystem::perms::owner_all" link="cpp/filesystem/perms"/>
    <keyword type="macro" name="std::filesystem::perms::group_read" link="cpp/filesystem/perms"/>
    <keyword type="macro" name="std::filesystem::perms::group_write" link="cpp/filesystem/perms"/>
    <keyword type="macro" name="std::filesystem::perms::group_exec" link="cpp/filesystem/perms"/>
    <keyword type="macro" name="std::filesystem::perms::group_all" link="cpp/filesystem/perms"/>
    <keyword type="macro" name="std::filesystem::perms::others_read" link="cpp/filesystem/perms"/>
    <keyword type="macro" name="std::filesystem::perms::others_write" link="cpp/filesystem/perms"/>
    <keyword type="macro" name="std::filesystem::perms::others_exec" link="cpp/filesystem/perms"/>
    <keyword type="macro" name="std::filesystem::perms::others_all" link="cpp/filesystem/perms"/>
    <keyword type="macro" name="std::filesystem::perms::all" link="cpp/filesystem/perms"/>
    <keyword type="macro" name="std::filesystem::perms::set_uid" link="cpp/filesystem/perms"/>
    <keyword type="macro" name="std::filesystem::perms::set_gid" link="cpp/filesystem/perms"/>
    <keyword type="macro" name="std::filesystem::perms::sticky_bit" link="cpp/filesystem/perms"/>
    <keyword type="macro" name="std::filesystem::perms::mask" link="cpp/filesystem/perms"/>
    <keyword type="macro" name="std::filesystem::perms::unknown" link="cpp/filesystem/perms"/>
    <keyword type="macro" name="std::filesystem::perms::add_perms" link="cpp/filesystem/perms"/>
    <keyword type="macro" name="std::filesystem::perms::remove_perms" link="cpp/filesystem/perms"/>
    <keyword type="macro" name="std::filesystem::perms::resolve_symlinks" link="cpp/filesystem/perms"/>
    <keyword type="class" name="std::filesystem::perm_options" link="cpp/filesystem/perm_options"/>
    <keyword type="macro" name="std::filesystem::perm_options::replace" link="cpp/filesystem/perm_options"/>
    <keyword type="macro" name="std::filesystem::perm_options::add" link="cpp/filesystem/perm_options"/>
    <keyword type="macro" name="std::filesystem::perm_options::remove" link="cpp/filesystem/perm_options"/>
    <keyword type="macro" name="std::filesystem::perm_options::nofollow" link="cpp/filesystem/perm_options"/>
    <keyword type="function" name="operator|=(std::filesystem::perm_options)" link="cpp/filesystem/perm_options"/>
    <keyword type="function" name="operator&amp;=(std::filesystem::perm_options)" link="cpp/filesystem/perm_options"/>
    <keyword type="function" name="operator^=(std::filesystem::perm_options)" link="cpp/filesystem/perm_options"/>
    <keyword type="function" name="operator|(std::filesystem::perm_options)" link="cpp/filesystem/perm_options"/>
    <keyword type="function" name="operator&amp;(std::filesystem::perm_options)" link="cpp/filesystem/perm_options"/>
    <keyword type="function" name="operator^(std::filesystem::perm_options)" link="cpp/filesystem/perm_options"/>
    <keyword type="function" name="operator~(std::filesystem::perm_options)" link="cpp/filesystem/perm_options"/>
    <keyword type="class" name="std::filesystem::copy_options" link="cpp/filesystem/copy_options"/>
    <keyword type="macro" name="std::filesystem::copy_options::none" link="cpp/filesystem/copy_options"/>
    <keyword type="macro" name="std::filesystem::copy_options::skip_existing" link="cpp/filesystem/copy_options"/>
    <keyword type="macro" name="std::filesystem::copy_options::overwrite_existing" link="cpp/filesystem/copy_options"/>
    <keyword type="macro" name="std::filesystem::copy_options::update_existing" link="cpp/filesystem/copy_options"/>
    <keyword type="macro" name="std::filesystem::copy_options::recursive" link="cpp/filesystem/copy_options"/>
    <keyword type="macro" name="std::filesystem::copy_options::copy_symlinks" link="cpp/filesystem/copy_options"/>
    <keyword type="macro" name="std::filesystem::copy_options::skip_symlinks" link="cpp/filesystem/copy_options"/>
    <keyword type="macro" name="std::filesystem::copy_options::directories_only" link="cpp/filesystem/copy_options"/>
    <keyword type="macro" name="std::filesystem::copy_options::create_symlinks" link="cpp/filesystem/copy_options"/>
    <keyword type="macro" name="std::filesystem::copy_options::create_hard_links" link="cpp/filesystem/copy_options"/>
    <keyword type="function" name="operator|=(std::filesystem::copy_options)" link="cpp/filesystem/copy_options"/>
    <keyword type="function" name="operator&amp;=(std::filesystem::copy_options)" link="cpp/filesystem/copy_options"/>
    <keyword type="function" name="operator^=(std::filesystem::copy_options)" link="cpp/filesystem/copy_options"/>
    <keyword type="function" name="operator|(std::filesystem::copy_options)" link="cpp/filesystem/copy_options"/>
    <keyword type="function" name="operator&amp;(std::filesystem::copy_options)" link="cpp/filesystem/copy_options"/>
    <keyword type="function" name="operator^(std::filesystem::copy_options)" link="cpp/filesystem/copy_options"/>
    <keyword type="function" name="operator~(std::filesystem::copy_options)" link="cpp/filesystem/copy_options"/>
    <keyword type="class" name="std::filesystem::directory_options" link="cpp/filesystem/directory_options"/>
    <keyword type="macro" name="std::filesystem::directory_options::none" link="cpp/filesystem/directory_options"/>
    <keyword type="macro" name="std::filesystem::directory_options::follow_directory_symlink" link="cpp/filesystem/directory_options"/>
    <keyword type="macro" name="std::filesystem::directory_options::overwrite_existing" link="cpp/filesystem/directory_options"/>
    <keyword type="macro" name="std::filesystem::directory_options::skip_permission_denied" link="cpp/filesystem/directory_options"/>
    <keyword type="function" name="operator|=(std::filesystem::directory_options)" link="cpp/filesystem/directory_options"/>
    <keyword type="function" name="operator&amp;=(std::filesystem::directory_options)" link="cpp/filesystem/directory_options"/>
    <keyword type="function" name="operator^=(std::filesystem::directory_options)" link="cpp/filesystem/directory_options"/>
    <keyword type="function" name="operator|(std::filesystem::directory_options)" link="cpp/filesystem/directory_options"/>
    <keyword type="function" name="operator&amp;(std::filesystem::directory_options)" link="cpp/filesystem/directory_options"/>
    <keyword type="function" name="operator^(std::filesystem::directory_options)" link="cpp/filesystem/directory_options"/>
    <keyword type="function" name="operator~(std::filesystem::directory_options)" link="cpp/filesystem/directory_options"/>
    <keyword type="typedef" name="std::filesystem::file_time_type" link="cpp/filesystem/file_time_type"/>
    <keyword type="function" name="std::filesystem::absolute" link="cpp/filesystem/absolute"/>
    <keyword type="function" name="std::filesystem::canonical" link="cpp/filesystem/canonical"/>
    <keyword type="function" name="std::filesystem::weakly_canonical" link="cpp/filesystem/canonical"/>
    <keyword type="function" name="std::filesystem::relative" link="cpp/filesystem/relative"/>
    <keyword type="function" name="std::filesystem::proximate" link="cpp/filesystem/relative"/>
    <keyword type="function" name="std::filesystem::copy" link="cpp/filesystem/copy"/>
    <keyword type="function" name="std::filesystem::copy_file" link="cpp/filesystem/copy_file"/>
    <keyword type="function" name="std::filesystem::copy_symlink" link="cpp/filesystem/copy_symlink"/>
    <keyword type="function" name="std::filesystem::create_directory" link="cpp/filesystem/create_directory"/>
    <keyword type="function" name="std::filesystem::create_directories" link="cpp/filesystem/create_directory"/>
    <keyword type="function" name="std::filesystem::create_hard_link" link="cpp/filesystem/create_hard_link"/>
    <keyword type="function" name="std::filesystem::create_symlink" link="cpp/filesystem/create_symlink"/>
    <keyword type="function" name="std::filesystem::create_directory_symlink" link="cpp/filesystem/create_symlink"/>
    <keyword type="function" name="std::filesystem::current_path" link="cpp/filesystem/current_path"/>
    <keyword type="function" name="std::filesystem::exists" link="cpp/filesystem/exists"/>
    <keyword type="function" name="std::filesystem::equivalent" link="cpp/filesystem/equivalent"/>
    <keyword type="function" name="std::filesystem::file_size" link="cpp/filesystem/file_size"/>
    <keyword type="function" name="std::filesystem::hard_link_count" link="cpp/filesystem/hard_link_count"/>
    <keyword type="function" name="std::filesystem::last_write_time" link="cpp/filesystem/last_write_time"/>
    <keyword type="function" name="std::filesystem::permissions" link="cpp/filesystem/permissions"/>
    <keyword type="function" name="std::filesystem::read_symlink" link="cpp/filesystem/read_symlink"/>
    <keyword type="function" name="std::filesystem::remove" link="cpp/filesystem/remove"/>
    <keyword type="function" name="std::filesystem::remove_all" link="cpp/filesystem/remove"/>
    <keyword type="function" name="std::filesystem::rename" link="cpp/filesystem/rename"/>
    <keyword type="function" name="std::filesystem::resize_file" link="cpp/filesystem/resize_file"/>
    <keyword type="function" name="std::filesystem::space" link="cpp/filesystem/space"/>
    <keyword type="function" name="std::filesystem::status" link="cpp/filesystem/status"/>
    <keyword type="function" name="std::filesystem::symlink_status" link="cpp/filesystem/status"/>
    <keyword type="function" name="std::filesystem::temp_directory_path" link="cpp/filesystem/temp_directory_path"/>
    <keyword type="function" name="std::filesystem::is_block_file" link="cpp/filesystem/is_block_file"/>
    <keyword type="function" name="std::filesystem::is_character_file" link="cpp/filesystem/is_character_file"/>
    <keyword type="function" name="std::filesystem::is_directory" link="cpp/filesystem/is_directory"/>
    <keyword type="function" name="std::filesystem::is_empty" link="cpp/filesystem/is_empty"/>
    <keyword type="function" name="std::filesystem::is_fifo" link="cpp/filesystem/is_fifo"/>
    <keyword type="function" name="std::filesystem::is_other" link="cpp/filesystem/is_other"/>
    <keyword type="function" name="std::filesystem::is_regular_file" link="cpp/filesystem/is_regular_file"/>
    <keyword type="function" name="std::filesystem::is_socket" link="cpp/filesystem/is_socket"/>
    <keyword type="function" name="std::filesystem::is_symlink" link="cpp/filesystem/is_symlink"/>
    <keyword type="function" name="std::filesystem::status_known" link="cpp/filesystem/status_known"/>
    <keyword type="class" name="std::experimental::optional" link="cpp/experimental/optional"/>
    <keyword type="function" name="std::experimental::optional::optional" link="cpp/experimental/optional/optional"/>
    <keyword type="function" name="std::experimental::optional::~optional" link="cpp/experimental/optional/~optional"/>
    <keyword type="function" name="std::experimental::optional::operator=" link="cpp/experimental/optional/operator="/>
    <keyword type="function" name="std::experimental::optional::operator*" link="cpp/experimental/optional/operator*"/>
    <keyword type="function" name="std::experimental::optional::operator-&gt;" link="cpp/experimental/optional/operator*"/>
    <keyword type="function" name="std::experimental::optional::operator bool" link="cpp/experimental/optional/operator_bool"/>
    <keyword type="function" name="std::experimental::optional::value" link="cpp/experimental/optional/value"/>
    <keyword type="function" name="std::experimental::optional::value_or" link="cpp/experimental/optional/value_or"/>
    <keyword type="function" name="std::experimental::optional::swap" link="cpp/experimental/optional/swap"/>
    <keyword type="function" name="std::experimental::optional::emplace" link="cpp/experimental/optional/emplace"/>
    <keyword type="function" name="operator==(std::experimental::optional)" link="cpp/experimental/optional/operator_cmp"/>
    <keyword type="function" name="operator&lt;(std::experimental::optional)" link="cpp/experimental/optional/operator_cmp"/>
    <keyword type="function" name="std::swap(std::experimental::optional)" link="cpp/experimental/optional/swap2"/>
    <keyword type="class" name="std::hash&lt;std::experimental::optional&gt;" link="cpp/experimental/optional/hash"/>
    <keyword type="function" name="std::experimental::make_optional" link="cpp/experimental/optional/make_optional"/>
    <keyword type="class" name="std::experimental::nullopt_t" link="cpp/experimental/optional/nullopt_t"/>
    <keyword type="macro" name="std::experimental::nullopt" link="cpp/experimental/optional/nullopt"/>
    <keyword type="class" name="std::experimental::in_place_t" link="cpp/experimental/optional/in_place_t"/>
    <keyword type="macro" name="std::experimental::in_place" link="cpp/experimental/optional/in_place"/>
    <keyword type="class" name="std::experimental::bad_optional_access" link="cpp/experimental/optional/bad_optional_access"/>
    <keyword type="function" name="std::experimental::bad_optional_access::what" link="cpp/error/exception/what"/>
    <keyword type="function" name="std::experimental::bad_optional_access::bad_optional_access" link="cpp/experimental/optional/bad_optional_access"/>
    <keyword type="class" name="std::experimental::any" link="cpp/experimental/any"/>
    <keyword type="function" name="std::experimental::any::any" link="cpp/experimental/any/any"/>
    <keyword type="function" name="std::experimental::any::~any" link="cpp/experimental/any/~any"/>
    <keyword type="function" name="std::experimental::any::operator=" link="cpp/experimental/any/operator="/>
    <keyword type="function" name="std::experimental::any::clear" link="cpp/experimental/any/clear"/>
    <keyword type="function" name="std::experimental::any::empty" link="cpp/experimental/any/empty"/>
    <keyword type="function" name="std::experimental::any::swap" link="cpp/experimental/any/swap"/>
    <keyword type="function" name="std::experimental::any::type" link="cpp/experimental/any/type"/>
    <keyword type="function" name="std::swap(std::experimental::any)" link="cpp/experimental/any/swap2"/>
    <keyword type="function" name="std::experimental::any_cast" link="cpp/experimental/any/any_cast"/>
    <keyword type="class" name="std::experimental::bad_any_cast" link="cpp/experimental/any/bad_any_cast"/>
    <keyword type="class" name="std::experimental::pmr::memory_resource" link="cpp/experimental/memory_resource"/>
    <keyword type="function" name="std::experimental::pmr::memory_resource::memory_resource" link="cpp/experimental/memory_resource/memory_resource"/>
    <keyword type="function" name="std::experimental::pmr::memory_resource::allocate" link="cpp/experimental/memory_resource/allocate"/>
    <keyword type="function" name="std::experimental::pmr::memory_resource::deallocate" link="cpp/experimental/memory_resource/deallocate"/>
    <keyword type="function" name="std::experimental::pmr::memory_resource::is_equal" link="cpp/experimental/memory_resource/is_equal"/>
    <keyword type="function" name="std::experimental::pmr::memory_resource::do_allocate" link="cpp/experimental/memory_resource/do_allocate"/>
    <keyword type="function" name="std::experimental::pmr::memory_resource::do_deallocate" link="cpp/experimental/memory_resource/do_deallocate"/>
    <keyword type="function" name="std::experimental::pmr::memory_resource::do_is_equal" link="cpp/experimental/memory_resource/do_is_equal"/>
    <keyword type="function" name="operator==(std::experimental::pmr::memory_resource)" link="cpp/experimental/memory_resource/operator_eq"/>
    <keyword type="function" name="operator!=(std::experimental::pmr::memory_resource)" link="cpp/experimental/memory_resource/operator_eq"/>
    <keyword type="class" name="std::experimental::pmr::monotonic_buffer_resource" link="cpp/experimental/monotonic_buffer_resource"/>
    <keyword type="function" name="std::experimental::pmr::monotonic_buffer_resource::monotonic_buffer_resource" link="cpp/experimental/monotonic_buffer_resource/monotonic_buffer_resource"/>
    <keyword type="function" name="std::experimental::pmr::monotonic_buffer_resource::~monotonic_buffer_resource" link="cpp/experimental/monotonic_buffer_resource/~monotonic_buffer_resource"/>
    <keyword type="function" name="std::experimental::pmr::monotonic_buffer_resource::release" link="cpp/experimental/monotonic_buffer_resource/release"/>
    <keyword type="function" name="std::experimental::pmr::monotonic_buffer_resource::upstream_resource" link="cpp/experimental/monotonic_buffer_resource/upstream_resource"/>
    <keyword type="function" name="std::experimental::pmr::monotonic_buffer_resource::do_allocate" link="cpp/experimental/monotonic_buffer_resource/do_allocate"/>
    <keyword type="function" name="std::experimental::pmr::monotonic_buffer_resource::do_deallocate" link="cpp/experimental/monotonic_buffer_resource/do_deallocate"/>
    <keyword type="function" name="std::experimental::pmr::monotonic_buffer_resource::do_is_equal" link="cpp/experimental/monotonic_buffer_resource/do_is_equal"/>
    <keyword type="class" name="std::experimental::pmr::pool_options" link="cpp/experimental/pool_options"/>
    <keyword type="class" name="std::experimental::pmr::synchronized_pool_resource" link="cpp/experimental/synchronized_pool_resource"/>
    <keyword type="function" name="std::experimental::pmr::synchronized_pool_resource::synchronized_pool_resource" link="cpp/experimental/synchronized_pool_resource/synchronized_pool_resource"/>
    <keyword type="function" name="std::experimental::pmr::synchronized_pool_resource::~synchronized_pool_resource" link="cpp/experimental/synchronized_pool_resource/~synchronized_pool_resource"/>
    <keyword type="function" name="std::experimental::pmr::synchronized_pool_resource::release" link="cpp/experimental/synchronized_pool_resource/release"/>
    <keyword type="function" name="std::experimental::pmr::synchronized_pool_resource::upstream_resource" link="cpp/experimental/synchronized_pool_resource/upstream_resource"/>
    <keyword type="function" name="std::experimental::pmr::synchronized_pool_resource::options" link="cpp/experimental/synchronized_pool_resource/options"/>
    <keyword type="function" name="std::experimental::pmr::synchronized_pool_resource::do_allocate" link="cpp/experimental/synchronized_pool_resource/do_allocate"/>
    <keyword type="function" name="std::experimental::pmr::synchronized_pool_resource::do_deallocate" link="cpp/experimental/synchronized_pool_resource/do_deallocate"/>
    <keyword type="function" name="std::experimental::pmr::synchronized_pool_resource::do_is_equal" link="cpp/experimental/synchronized_pool_resource/do_is_equal"/>
    <keyword type="class" name="std::experimental::pmr::unsynchronized_pool_resource" link="cpp/experimental/unsynchronized_pool_resource"/>
    <keyword type="function" name="std::experimental::pmr::unsynchronized_pool_resource::unsynchronized_pool_resource" link="cpp/experimental/unsynchronized_pool_resource/unsynchronized_pool_resource"/>
    <keyword type="function" name="std::experimental::pmr::unsynchronized_pool_resource::~unsynchronized_pool_resource" link="cpp/experimental/unsynchronized_pool_resource/~unsynchronized_pool_resource"/>
    <keyword type="function" name="std::experimental::pmr::unsynchronized_pool_resource::release" link="cpp/experimental/unsynchronized_pool_resource/release"/>
    <keyword type="function" name="std::experimental::pmr::unsynchronized_pool_resource::upstream_resource" link="cpp/experimental/unsynchronized_pool_resource/upstream_resource"/>
    <keyword type="function" name="std::experimental::pmr::unsynchronized_pool_resource::options" link="cpp/experimental/unsynchronized_pool_resource/options"/>
    <keyword type="function" name="std::experimental::pmr::unsynchronized_pool_resource::do_allocate" link="cpp/experimental/unsynchronized_pool_resource/do_allocate"/>
    <keyword type="function" name="std::experimental::pmr::unsynchronized_pool_resource::do_deallocate" link="cpp/experimental/unsynchronized_pool_resource/do_deallocate"/>
    <keyword type="function" name="std::experimental::pmr::unsynchronized_pool_resource::do_is_equal" link="cpp/experimental/unsynchronized_pool_resource/do_is_equal"/>
    <keyword type="class" name="std::experimental::pmr::polymorphic_allocator" link="cpp/experimental/polymorphic_allocator"/>
    <keyword type="function" name="std::experimental::pmr::polymorphic_allocator::polymorphic_allocator" link="cpp/experimental/polymorphic_allocator/polymorphic_allocator"/>
    <keyword type="function" name="std::experimental::pmr::polymorphic_allocator::operator=" link="cpp/experimental/polymorphic_allocator/operator="/>
    <keyword type="function" name="std::experimental::pmr::polymorphic_allocator::allocate" link="cpp/experimental/polymorphic_allocator/allocate"/>
    <keyword type="function" name="std::experimental::pmr::polymorphic_allocator::deallocate" link="cpp/experimental/polymorphic_allocator/deallocate"/>
    <keyword type="function" name="std::experimental::pmr::polymorphic_allocator::construct" link="cpp/experimental/polymorphic_allocator/construct"/>
    <keyword type="function" name="std::experimental::pmr::polymorphic_allocator::destroy" link="cpp/experimental/polymorphic_allocator/destroy"/>
    <keyword type="function" name="std::experimental::pmr::polymorphic_allocator::select_on_container_copy_construction" link="cpp/experimental/polymorphic_allocator/select_on_container_copy_construction"/>
    <keyword type="function" name="std::experimental::pmr::polymorphic_allocator::resource" link="cpp/experimental/polymorphic_allocator/resource"/>
    <keyword type="function" name="operator==(std::experimental::pmr::polymorphic_allocator)" link="cpp/experimental/polymorphic_allocator/operator_eq"/>
    <keyword type="function" name="operator!=(std::experimental::pmr::polymorphic_allocator)" link="cpp/experimental/polymorphic_allocator/operator_eq"/>
    <keyword type="class" name="std::experimental::pmr::resource_adaptor" link="cpp/experimental/resource_adaptor"/>
    <keyword type="function" name="std::experimental::pmr::new_delete_resource" link="cpp/experimental/new_delete_resource"/>
    <keyword type="function" name="std::experimental::pmr::null_memory_resource" link="cpp/experimental/null_memory_resource"/>
    <keyword type="function" name="std::experimental::pmr::get_default_resource" link="cpp/experimental/get_default_resource"/>
    <keyword type="function" name="std::experimental::pmr::set_default_resource" link="cpp/experimental/set_default_resource"/>
    <keyword type="class" name="std::experimental::function" link="cpp/experimental/function"/>
    <keyword type="class" name="std::experimental::promise (Library Fundamentals TS)" link="cpp/experimental/lib_extensions/promise"/>
    <keyword type="class" name="std::experimental::packaged_task (Library Fundamentals TS)" link="cpp/experimental/lib_extensions/packaged_task"/>
    <keyword type="function" name="std::experimental::sample" link="cpp/experimental/sample"/>
    <keyword type="function" name="std::experimental::search" link="cpp/experimental/search"/>
    <keyword type="class" name="std::experimental::default_searcher" link="cpp/experimental/default_searcher"/>
    <keyword type="function" name="std::experimental::make_default_searcher" link="cpp/experimental/default_searcher"/>
    <keyword type="class" name="std::experimental::boyer_moore_horspool_searcher" link="cpp/experimental/boyer_moore_horspool_searcher"/>
    <keyword type="function" name="std::experimental::make_boyer_moore_horspool_searcher" link="cpp/experimental/boyer_moore_horspool_searcher"/>
    <keyword type="class" name="std::experimental::boyer_moore_searcher" link="cpp/experimental/boyer_moore_searcher"/>
    <keyword type="function" name="std::experimental::make_boyer_moore_searcher" link="cpp/experimental/boyer_moore_searcher"/>
    <keyword type="function" name="std::experimental::apply" link="cpp/experimental/apply"/>
    <keyword type="class" name="std::experimental::erased_type" link="cpp/experimental/erased_type"/>
    <keyword type="class" name="std::experimental::invocation_type" link="cpp/experimental/invocation_type"/>
    <keyword type="class" name="std::experimental::raw_invocation_type" link="cpp/experimental/invocation_type"/>
    <keyword type="class" name="std::experimental::basic_string_view" link="cpp/experimental/basic_string_view"/>
    <keyword type="function" name="std::experimental::basic_string_view::basic_string_view" link="cpp/experimental/basic_string_view/basic_string_view"/>
    <keyword type="function" name="std::experimental::basic_string_view::operator=" link="cpp/experimental/basic_string_view/operator="/>
    <keyword type="function" name="std::experimental::basic_string_view::begin" link="cpp/experimental/basic_string_view/begin"/>
    <keyword type="function" name="std::experimental::basic_string_view::cbegin" link="cpp/experimental/basic_string_view/begin"/>
    <keyword type="function" name="std::experimental::basic_string_view::rbegin" link="cpp/experimental/basic_string_view/rbegin"/>
    <keyword type="function" name="std::experimental::basic_string_view::crbegin" link="cpp/experimental/basic_string_view/rbegin"/>
    <keyword type="function" name="std::experimental::basic_string_view::end" link="cpp/experimental/basic_string_view/end"/>
    <keyword type="function" name="std::experimental::basic_string_view::cend" link="cpp/experimental/basic_string_view/end"/>
    <keyword type="function" name="std::experimental::basic_string_view::rend" link="cpp/experimental/basic_string_view/rend"/>
    <keyword type="function" name="std::experimental::basic_string_view::crend" link="cpp/experimental/basic_string_view/rend"/>
    <keyword type="function" name="std::experimental::basic_string_view::operator[]" link="cpp/experimental/basic_string_view/operator_at"/>
    <keyword type="function" name="std::experimental::basic_string_view::at" link="cpp/experimental/basic_string_view/at"/>
    <keyword type="function" name="std::experimental::basic_string_view::front" link="cpp/experimental/basic_string_view/front"/>
    <keyword type="function" name="std::experimental::basic_string_view::back" link="cpp/experimental/basic_string_view/back"/>
    <keyword type="function" name="std::experimental::basic_string_view::data" link="cpp/experimental/basic_string_view/data"/>
    <keyword type="function" name="std::experimental::basic_string_view::size" link="cpp/experimental/basic_string_view/size"/>
    <keyword type="function" name="std::experimental::basic_string_view::length" link="cpp/experimental/basic_string_view/size"/>
    <keyword type="function" name="std::experimental::basic_string_view::max_size" link="cpp/experimental/basic_string_view/max_size"/>
    <keyword type="function" name="std::experimental::basic_string_view::empty" link="cpp/experimental/basic_string_view/empty"/>
    <keyword type="function" name="std::experimental::basic_string_view::remove_prefix" link="cpp/experimental/basic_string_view/remove_prefix"/>
    <keyword type="function" name="std::experimental::basic_string_view::remove_suffix" link="cpp/experimental/basic_string_view/remove_suffix"/>
    <keyword type="function" name="std::experimental::basic_string_view::swap" link="cpp/experimental/basic_string_view/swap"/>
    <keyword type="function" name="std::experimental::basic_string_view::to_string" link="cpp/experimental/basic_string_view/to_string"/>
    <keyword type="function" name="std::experimental::basic_string_view::operator basic_string" link="cpp/experimental/basic_string_view/to_string"/>
    <keyword type="function" name="std::experimental::basic_string_view::copy" link="cpp/experimental/basic_string_view/copy"/>
    <keyword type="function" name="std::experimental::basic_string_view::substr" link="cpp/experimental/basic_string_view/substr"/>
    <keyword type="function" name="std::experimental::basic_string_view::compare" link="cpp/experimental/basic_string_view/compare"/>
    <keyword type="function" name="std::experimental::basic_string_view::find" link="cpp/experimental/basic_string_view/find"/>
    <keyword type="function" name="std::experimental::basic_string_view::rfind" link="cpp/experimental/basic_string_view/rfind"/>
    <keyword type="function" name="std::experimental::basic_string_view::find_first_of" link="cpp/experimental/basic_string_view/find_first_of"/>
    <keyword type="function" name="std::experimental::basic_string_view::find_last_of" link="cpp/experimental/basic_string_view/find_last_of"/>
    <keyword type="function" name="std::experimental::basic_string_view::find_first_not_of" link="cpp/experimental/basic_string_view/find_first_not_of"/>
    <keyword type="function" name="std::experimental::basic_string_view::find_last_not_of" link="cpp/experimental/basic_string_view/find_last_not_of"/>
    <keyword type="macro" name="std::experimental::basic_string_view::npos" link="cpp/experimental/basic_string_view/npos"/>
    <keyword type="function" name="operator==(std::experimental::basic_string_view)" link="cpp/experimental/basic_string_view/operator_cmp"/>
    <keyword type="function" name="operator!=(std::experimental::basic_string_view)" link="cpp/experimental/basic_string_view/operator_cmp"/>
    <keyword type="function" name="operator&lt;(std::experimental::basic_string_view)" link="cpp/experimental/basic_string_view/operator_cmp"/>
    <keyword type="function" name="operator&lt;=(std::experimental::basic_string_view)" link="cpp/experimental/basic_string_view/operator_cmp"/>
    <keyword type="function" name="operator&gt;(std::experimental::basic_string_view)" link="cpp/experimental/basic_string_view/operator_cmp"/>
    <keyword type="function" name="operator&gt;=(std::experimental::basic_string_view)" link="cpp/experimental/basic_string_view/operator_cmp"/>
    <keyword type="function" name="operator&lt;&lt;(std::experimental::basic_string_view)" link="cpp/experimental/basic_string_view/operator_ltlt"/>
    <keyword type="class" name="std::hash&lt;std::experimental::basic_string_view&gt;" link="cpp/experimental/basic_string_view/hash"/>
    <keyword type="typedef" name="std::experimental::string_view" link="cpp/experimental/basic_string_view"/>
    <keyword type="function" name="std::experimental::string_view::string_view" link="cpp/experimental/basic_string_view/basic_string_view"/>
    <keyword type="function" name="std::experimental::string_view::operator=" link="cpp/experimental/basic_string_view/operator="/>
    <keyword type="function" name="std::experimental::string_view::begin" link="cpp/experimental/basic_string_view/begin"/>
    <keyword type="function" name="std::experimental::string_view::cbegin" link="cpp/experimental/basic_string_view/begin"/>
    <keyword type="function" name="std::experimental::string_view::rbegin" link="cpp/experimental/basic_string_view/rbegin"/>
    <keyword type="function" name="std::experimental::string_view::crbegin" link="cpp/experimental/basic_string_view/rbegin"/>
    <keyword type="function" name="std::experimental::string_view::end" link="cpp/experimental/basic_string_view/end"/>
    <keyword type="function" name="std::experimental::string_view::cend" link="cpp/experimental/basic_string_view/end"/>
    <keyword type="function" name="std::experimental::string_view::rend" link="cpp/experimental/basic_string_view/rend"/>
    <keyword type="function" name="std::experimental::string_view::crend" link="cpp/experimental/basic_string_view/rend"/>
    <keyword type="function" name="std::experimental::string_view::operator[]" link="cpp/experimental/basic_string_view/operator_at"/>
    <keyword type="function" name="std::experimental::string_view::at" link="cpp/experimental/basic_string_view/at"/>
    <keyword type="function" name="std::experimental::string_view::front" link="cpp/experimental/basic_string_view/front"/>
    <keyword type="function" name="std::experimental::string_view::back" link="cpp/experimental/basic_string_view/back"/>
    <keyword type="function" name="std::experimental::string_view::data" link="cpp/experimental/basic_string_view/data"/>
    <keyword type="function" name="std::experimental::string_view::size" link="cpp/experimental/basic_string_view/size"/>
    <keyword type="function" name="std::experimental::string_view::length" link="cpp/experimental/basic_string_view/size"/>
    <keyword type="function" name="std::experimental::string_view::max_size" link="cpp/experimental/basic_string_view/max_size"/>
    <keyword type="function" name="std::experimental::string_view::empty" link="cpp/experimental/basic_string_view/empty"/>
    <keyword type="function" name="std::experimental::string_view::remove_prefix" link="cpp/experimental/basic_string_view/remove_prefix"/>
    <keyword type="function" name="std::experimental::string_view::remove_suffix" link="cpp/experimental/basic_string_view/remove_suffix"/>
    <keyword type="function" name="std::experimental::string_view::swap" link="cpp/experimental/basic_string_view/swap"/>
    <keyword type="function" name="std::experimental::string_view::to_string" link="cpp/experimental/basic_string_view/to_string"/>
    <keyword type="function" name="std::experimental::string_view::operator basic_string" link="cpp/experimental/basic_string_view/to_string"/>
    <keyword type="function" name="std::experimental::string_view::copy" link="cpp/experimental/basic_string_view/copy"/>
    <keyword type="function" name="std::experimental::string_view::substr" link="cpp/experimental/basic_string_view/substr"/>
    <keyword type="function" name="std::experimental::string_view::compare" link="cpp/experimental/basic_string_view/compare"/>
    <keyword type="function" name="std::experimental::string_view::find" link="cpp/experimental/basic_string_view/find"/>
    <keyword type="function" name="std::experimental::string_view::rfind" link="cpp/experimental/basic_string_view/rfind"/>
    <keyword type="function" name="std::experimental::string_view::find_first_of" link="cpp/experimental/basic_string_view/find_first_of"/>
    <keyword type="function" name="std::experimental::string_view::find_last_of" link="cpp/experimental/basic_string_view/find_last_of"/>
    <keyword type="function" name="std::experimental::string_view::find_first_not_of" link="cpp/experimental/basic_string_view/find_first_not_of"/>
    <keyword type="function" name="std::experimental::string_view::find_last_not_of" link="cpp/experimental/basic_string_view/find_last_not_of"/>
    <keyword type="macro" name="std::experimental::string_view::npos" link="cpp/experimental/basic_string_view/npos"/>
    <keyword type="function" name="operator==(std::experimental::string_view)" link="cpp/experimental/basic_string_view/operator_cmp"/>
    <keyword type="function" name="operator!=(std::experimental::string_view)" link="cpp/experimental/basic_string_view/operator_cmp"/>
    <keyword type="function" name="operator&lt;(std::experimental::string_view)" link="cpp/experimental/basic_string_view/operator_cmp"/>
    <keyword type="function" name="operator&lt;=(std::experimental::string_view)" link="cpp/experimental/basic_string_view/operator_cmp"/>
    <keyword type="function" name="operator&gt;(std::experimental::string_view)" link="cpp/experimental/basic_string_view/operator_cmp"/>
    <keyword type="function" name="operator&gt;=(std::experimental::string_view)" link="cpp/experimental/basic_string_view/operator_cmp"/>
    <keyword type="function" name="operator&lt;&lt;(std::experimental::string_view)" link="cpp/experimental/basic_string_view/operator_ltlt"/>
    <keyword type="class" name="std::hash&lt;std::experimental::string_view&gt;" link="cpp/experimental/basic_string_view/hash"/>
    <keyword type="typedef" name="std::experimental::wstring_view" link="cpp/experimental/basic_string_view"/>
    <keyword type="function" name="std::experimental::wstring_view::wstring_view" link="cpp/experimental/basic_string_view/basic_string_view"/>
    <keyword type="function" name="std::experimental::wstring_view::operator=" link="cpp/experimental/basic_string_view/operator="/>
    <keyword type="function" name="std::experimental::wstring_view::begin" link="cpp/experimental/basic_string_view/begin"/>
    <keyword type="function" name="std::experimental::wstring_view::cbegin" link="cpp/experimental/basic_string_view/begin"/>
    <keyword type="function" name="std::experimental::wstring_view::rbegin" link="cpp/experimental/basic_string_view/rbegin"/>
    <keyword type="function" name="std::experimental::wstring_view::crbegin" link="cpp/experimental/basic_string_view/rbegin"/>
    <keyword type="function" name="std::experimental::wstring_view::end" link="cpp/experimental/basic_string_view/end"/>
    <keyword type="function" name="std::experimental::wstring_view::cend" link="cpp/experimental/basic_string_view/end"/>
    <keyword type="function" name="std::experimental::wstring_view::rend" link="cpp/experimental/basic_string_view/rend"/>
    <keyword type="function" name="std::experimental::wstring_view::crend" link="cpp/experimental/basic_string_view/rend"/>
    <keyword type="function" name="std::experimental::wstring_view::operator[]" link="cpp/experimental/basic_string_view/operator_at"/>
    <keyword type="function" name="std::experimental::wstring_view::at" link="cpp/experimental/basic_string_view/at"/>
    <keyword type="function" name="std::experimental::wstring_view::front" link="cpp/experimental/basic_string_view/front"/>
    <keyword type="function" name="std::experimental::wstring_view::back" link="cpp/experimental/basic_string_view/back"/>
    <keyword type="function" name="std::experimental::wstring_view::data" link="cpp/experimental/basic_string_view/data"/>
    <keyword type="function" name="std::experimental::wstring_view::size" link="cpp/experimental/basic_string_view/size"/>
    <keyword type="function" name="std::experimental::wstring_view::length" link="cpp/experimental/basic_string_view/size"/>
    <keyword type="function" name="std::experimental::wstring_view::max_size" link="cpp/experimental/basic_string_view/max_size"/>
    <keyword type="function" name="std::experimental::wstring_view::empty" link="cpp/experimental/basic_string_view/empty"/>
    <keyword type="function" name="std::experimental::wstring_view::remove_prefix" link="cpp/experimental/basic_string_view/remove_prefix"/>
    <keyword type="function" name="std::experimental::wstring_view::remove_suffix" link="cpp/experimental/basic_string_view/remove_suffix"/>
    <keyword type="function" name="std::experimental::wstring_view::swap" link="cpp/experimental/basic_string_view/swap"/>
    <keyword type="function" name="std::experimental::wstring_view::to_string" link="cpp/experimental/basic_string_view/to_string"/>
    <keyword type="function" name="std::experimental::wstring_view::operator basic_string" link="cpp/experimental/basic_string_view/to_string"/>
    <keyword type="function" name="std::experimental::wstring_view::copy" link="cpp/experimental/basic_string_view/copy"/>
    <keyword type="function" name="std::experimental::wstring_view::substr" link="cpp/experimental/basic_string_view/substr"/>
    <keyword type="function" name="std::experimental::wstring_view::compare" link="cpp/experimental/basic_string_view/compare"/>
    <keyword type="function" name="std::experimental::wstring_view::find" link="cpp/experimental/basic_string_view/find"/>
    <keyword type="function" name="std::experimental::wstring_view::rfind" link="cpp/experimental/basic_string_view/rfind"/>
    <keyword type="function" name="std::experimental::wstring_view::find_first_of" link="cpp/experimental/basic_string_view/find_first_of"/>
    <keyword type="function" name="std::experimental::wstring_view::find_last_of" link="cpp/experimental/basic_string_view/find_last_of"/>
    <keyword type="function" name="std::experimental::wstring_view::find_first_not_of" link="cpp/experimental/basic_string_view/find_first_not_of"/>
    <keyword type="function" name="std::experimental::wstring_view::find_last_not_of" link="cpp/experimental/basic_string_view/find_last_not_of"/>
    <keyword type="macro" name="std::experimental::wstring_view::npos" link="cpp/experimental/basic_string_view/npos"/>
    <keyword type="function" name="operator==(std::experimental::wstring_view)" link="cpp/experimental/basic_string_view/operator_cmp"/>
    <keyword type="function" name="operator!=(std::experimental::wstring_view)" link="cpp/experimental/basic_string_view/operator_cmp"/>
    <keyword type="function" name="operator&lt;(std::experimental::wstring_view)" link="cpp/experimental/basic_string_view/operator_cmp"/>
    <keyword type="function" name="operator&lt;=(std::experimental::wstring_view)" link="cpp/experimental/basic_string_view/operator_cmp"/>
    <keyword type="function" name="operator&gt;(std::experimental::wstring_view)" link="cpp/experimental/basic_string_view/operator_cmp"/>
    <keyword type="function" name="operator&gt;=(std::experimental::wstring_view)" link="cpp/experimental/basic_string_view/operator_cmp"/>
    <keyword type="function" name="operator&lt;&lt;(std::experimental::wstring_view)" link="cpp/experimental/basic_string_view/operator_ltlt"/>
    <keyword type="class" name="std::hash&lt;std::experimental::wstring_view&gt;" link="cpp/experimental/basic_string_view/hash"/>
    <keyword type="typedef" name="std::experimental::u16string_view" link="cpp/experimental/basic_string_view"/>
    <keyword type="function" name="std::experimental::u16string_view::u16string_view" link="cpp/experimental/basic_string_view/basic_string_view"/>
    <keyword type="function" name="std::experimental::u16string_view::operator=" link="cpp/experimental/basic_string_view/operator="/>
    <keyword type="function" name="std::experimental::u16string_view::begin" link="cpp/experimental/basic_string_view/begin"/>
    <keyword type="function" name="std::experimental::u16string_view::cbegin" link="cpp/experimental/basic_string_view/begin"/>
    <keyword type="function" name="std::experimental::u16string_view::rbegin" link="cpp/experimental/basic_string_view/rbegin"/>
    <keyword type="function" name="std::experimental::u16string_view::crbegin" link="cpp/experimental/basic_string_view/rbegin"/>
    <keyword type="function" name="std::experimental::u16string_view::end" link="cpp/experimental/basic_string_view/end"/>
    <keyword type="function" name="std::experimental::u16string_view::cend" link="cpp/experimental/basic_string_view/end"/>
    <keyword type="function" name="std::experimental::u16string_view::rend" link="cpp/experimental/basic_string_view/rend"/>
    <keyword type="function" name="std::experimental::u16string_view::crend" link="cpp/experimental/basic_string_view/rend"/>
    <keyword type="function" name="std::experimental::u16string_view::operator[]" link="cpp/experimental/basic_string_view/operator_at"/>
    <keyword type="function" name="std::experimental::u16string_view::at" link="cpp/experimental/basic_string_view/at"/>
    <keyword type="function" name="std::experimental::u16string_view::front" link="cpp/experimental/basic_string_view/front"/>
    <keyword type="function" name="std::experimental::u16string_view::back" link="cpp/experimental/basic_string_view/back"/>
    <keyword type="function" name="std::experimental::u16string_view::data" link="cpp/experimental/basic_string_view/data"/>
    <keyword type="function" name="std::experimental::u16string_view::size" link="cpp/experimental/basic_string_view/size"/>
    <keyword type="function" name="std::experimental::u16string_view::length" link="cpp/experimental/basic_string_view/size"/>
    <keyword type="function" name="std::experimental::u16string_view::max_size" link="cpp/experimental/basic_string_view/max_size"/>
    <keyword type="function" name="std::experimental::u16string_view::empty" link="cpp/experimental/basic_string_view/empty"/>
    <keyword type="function" name="std::experimental::u16string_view::remove_prefix" link="cpp/experimental/basic_string_view/remove_prefix"/>
    <keyword type="function" name="std::experimental::u16string_view::remove_suffix" link="cpp/experimental/basic_string_view/remove_suffix"/>
    <keyword type="function" name="std::experimental::u16string_view::swap" link="cpp/experimental/basic_string_view/swap"/>
    <keyword type="function" name="std::experimental::u16string_view::to_string" link="cpp/experimental/basic_string_view/to_string"/>
    <keyword type="function" name="std::experimental::u16string_view::operator basic_string" link="cpp/experimental/basic_string_view/to_string"/>
    <keyword type="function" name="std::experimental::u16string_view::copy" link="cpp/experimental/basic_string_view/copy"/>
    <keyword type="function" name="std::experimental::u16string_view::substr" link="cpp/experimental/basic_string_view/substr"/>
    <keyword type="function" name="std::experimental::u16string_view::compare" link="cpp/experimental/basic_string_view/compare"/>
    <keyword type="function" name="std::experimental::u16string_view::find" link="cpp/experimental/basic_string_view/find"/>
    <keyword type="function" name="std::experimental::u16string_view::rfind" link="cpp/experimental/basic_string_view/rfind"/>
    <keyword type="function" name="std::experimental::u16string_view::find_first_of" link="cpp/experimental/basic_string_view/find_first_of"/>
    <keyword type="function" name="std::experimental::u16string_view::find_last_of" link="cpp/experimental/basic_string_view/find_last_of"/>
    <keyword type="function" name="std::experimental::u16string_view::find_first_not_of" link="cpp/experimental/basic_string_view/find_first_not_of"/>
    <keyword type="function" name="std::experimental::u16string_view::find_last_not_of" link="cpp/experimental/basic_string_view/find_last_not_of"/>
    <keyword type="macro" name="std::experimental::u16string_view::npos" link="cpp/experimental/basic_string_view/npos"/>
    <keyword type="function" name="operator==(std::experimental::u16string_view)" link="cpp/experimental/basic_string_view/operator_cmp"/>
    <keyword type="function" name="operator!=(std::experimental::u16string_view)" link="cpp/experimental/basic_string_view/operator_cmp"/>
    <keyword type="function" name="operator&lt;(std::experimental::u16string_view)" link="cpp/experimental/basic_string_view/operator_cmp"/>
    <keyword type="function" name="operator&lt;=(std::experimental::u16string_view)" link="cpp/experimental/basic_string_view/operator_cmp"/>
    <keyword type="function" name="operator&gt;(std::experimental::u16string_view)" link="cpp/experimental/basic_string_view/operator_cmp"/>
    <keyword type="function" name="operator&gt;=(std::experimental::u16string_view)" link="cpp/experimental/basic_string_view/operator_cmp"/>
    <keyword type="function" name="operator&lt;&lt;(std::experimental::u16string_view)" link="cpp/experimental/basic_string_view/operator_ltlt"/>
    <keyword type="class" name="std::hash&lt;std::experimental::u16string_view&gt;" link="cpp/experimental/basic_string_view/hash"/>
    <keyword type="typedef" name="std::experimental::u32string_view" link="cpp/experimental/basic_string_view"/>
    <keyword type="function" name="std::experimental::u32string_view::u32string_view" link="cpp/experimental/basic_string_view/basic_string_view"/>
    <keyword type="function" name="std::experimental::u32string_view::operator=" link="cpp/experimental/basic_string_view/operator="/>
    <keyword type="function" name="std::experimental::u32string_view::begin" link="cpp/experimental/basic_string_view/begin"/>
    <keyword type="function" name="std::experimental::u32string_view::cbegin" link="cpp/experimental/basic_string_view/begin"/>
    <keyword type="function" name="std::experimental::u32string_view::rbegin" link="cpp/experimental/basic_string_view/rbegin"/>
    <keyword type="function" name="std::experimental::u32string_view::crbegin" link="cpp/experimental/basic_string_view/rbegin"/>
    <keyword type="function" name="std::experimental::u32string_view::end" link="cpp/experimental/basic_string_view/end"/>
    <keyword type="function" name="std::experimental::u32string_view::cend" link="cpp/experimental/basic_string_view/end"/>
    <keyword type="function" name="std::experimental::u32string_view::rend" link="cpp/experimental/basic_string_view/rend"/>
    <keyword type="function" name="std::experimental::u32string_view::crend" link="cpp/experimental/basic_string_view/rend"/>
    <keyword type="function" name="std::experimental::u32string_view::operator[]" link="cpp/experimental/basic_string_view/operator_at"/>
    <keyword type="function" name="std::experimental::u32string_view::at" link="cpp/experimental/basic_string_view/at"/>
    <keyword type="function" name="std::experimental::u32string_view::front" link="cpp/experimental/basic_string_view/front"/>
    <keyword type="function" name="std::experimental::u32string_view::back" link="cpp/experimental/basic_string_view/back"/>
    <keyword type="function" name="std::experimental::u32string_view::data" link="cpp/experimental/basic_string_view/data"/>
    <keyword type="function" name="std::experimental::u32string_view::size" link="cpp/experimental/basic_string_view/size"/>
    <keyword type="function" name="std::experimental::u32string_view::length" link="cpp/experimental/basic_string_view/size"/>
    <keyword type="function" name="std::experimental::u32string_view::max_size" link="cpp/experimental/basic_string_view/max_size"/>
    <keyword type="function" name="std::experimental::u32string_view::empty" link="cpp/experimental/basic_string_view/empty"/>
    <keyword type="function" name="std::experimental::u32string_view::remove_prefix" link="cpp/experimental/basic_string_view/remove_prefix"/>
    <keyword type="function" name="std::experimental::u32string_view::remove_suffix" link="cpp/experimental/basic_string_view/remove_suffix"/>
    <keyword type="function" name="std::experimental::u32string_view::swap" link="cpp/experimental/basic_string_view/swap"/>
    <keyword type="function" name="std::experimental::u32string_view::to_string" link="cpp/experimental/basic_string_view/to_string"/>
    <keyword type="function" name="std::experimental::u32string_view::operator basic_string" link="cpp/experimental/basic_string_view/to_string"/>
    <keyword type="function" name="std::experimental::u32string_view::copy" link="cpp/experimental/basic_string_view/copy"/>
    <keyword type="function" name="std::experimental::u32string_view::substr" link="cpp/experimental/basic_string_view/substr"/>
    <keyword type="function" name="std::experimental::u32string_view::compare" link="cpp/experimental/basic_string_view/compare"/>
    <keyword type="function" name="std::experimental::u32string_view::find" link="cpp/experimental/basic_string_view/find"/>
    <keyword type="function" name="std::experimental::u32string_view::rfind" link="cpp/experimental/basic_string_view/rfind"/>
    <keyword type="function" name="std::experimental::u32string_view::find_first_of" link="cpp/experimental/basic_string_view/find_first_of"/>
    <keyword type="function" name="std::experimental::u32string_view::find_last_of" link="cpp/experimental/basic_string_view/find_last_of"/>
    <keyword type="function" name="std::experimental::u32string_view::find_first_not_of" link="cpp/experimental/basic_string_view/find_first_not_of"/>
    <keyword type="function" name="std::experimental::u32string_view::find_last_not_of" link="cpp/experimental/basic_string_view/find_last_not_of"/>
    <keyword type="macro" name="std::experimental::u32string_view::npos" link="cpp/experimental/basic_string_view/npos"/>
    <keyword type="function" name="operator==(std::experimental::u32string_view)" link="cpp/experimental/basic_string_view/operator_cmp"/>
    <keyword type="function" name="operator!=(std::experimental::u32string_view)" link="cpp/experimental/basic_string_view/operator_cmp"/>
    <keyword type="function" name="operator&lt;(std::experimental::u32string_view)" link="cpp/experimental/basic_string_view/operator_cmp"/>
    <keyword type="function" name="operator&lt;=(std::experimental::u32string_view)" link="cpp/experimental/basic_string_view/operator_cmp"/>
    <keyword type="function" name="operator&gt;(std::experimental::u32string_view)" link="cpp/experimental/basic_string_view/operator_cmp"/>
    <keyword type="function" name="operator&gt;=(std::experimental::u32string_view)" link="cpp/experimental/basic_string_view/operator_cmp"/>
    <keyword type="function" name="operator&lt;&lt;(std::experimental::u32string_view)" link="cpp/experimental/basic_string_view/operator_ltlt"/>
    <keyword type="class" name="std::hash&lt;std::experimental::u32string_view&gt;" link="cpp/experimental/basic_string_view/hash"/>
    <keyword type="" name="std::experimental::is_void_v" link="cpp/experimental/type_trait_variable_templates"/>
    <keyword type="" name="std::experimental::is_null_pointer_v" link="cpp/experimental/type_trait_variable_templates"/>
    <keyword type="" name="std::experimental::is_integral_v" link="cpp/experimental/type_trait_variable_templates"/>
    <keyword type="" name="std::experimental::is_floating_point_v" link="cpp/experimental/type_trait_variable_templates"/>
    <keyword type="" name="std::experimental::is_array_v" link="cpp/experimental/type_trait_variable_templates"/>
    <keyword type="" name="std::experimental::is_pointer_v" link="cpp/experimental/type_trait_variable_templates"/>
    <keyword type="" name="std::experimental::is_lvalue_reference_v" link="cpp/experimental/type_trait_variable_templates"/>
    <keyword type="" name="std::experimental::is_rvalue_reference_v" link="cpp/experimental/type_trait_variable_templates"/>
    <keyword type="" name="std::experimental::is_member_object_pointer_v" link="cpp/experimental/type_trait_variable_templates"/>
    <keyword type="" name="std::experimental::is_member_function_pointer_v" link="cpp/experimental/type_trait_variable_templates"/>
    <keyword type="" name="std::experimental::is_enum_v" link="cpp/experimental/type_trait_variable_templates"/>
    <keyword type="" name="std::experimental::is_union_v" link="cpp/experimental/type_trait_variable_templates"/>
    <keyword type="" name="std::experimental::is_class_v" link="cpp/experimental/type_trait_variable_templates"/>
    <keyword type="" name="std::experimental::is_function_v" link="cpp/experimental/type_trait_variable_templates"/>
    <keyword type="" name="std::experimental::is_reference_v" link="cpp/experimental/type_trait_variable_templates"/>
    <keyword type="" name="std::experimental::is_arithmetic_v" link="cpp/experimental/type_trait_variable_templates"/>
    <keyword type="" name="std::experimental::is_fundamental_v" link="cpp/experimental/type_trait_variable_templates"/>
    <keyword type="" name="std::experimental::is_object_v" link="cpp/experimental/type_trait_variable_templates"/>
    <keyword type="" name="std::experimental::is_scalar_v" link="cpp/experimental/type_trait_variable_templates"/>
    <keyword type="" name="std::experimental::is_compound_v" link="cpp/experimental/type_trait_variable_templates"/>
    <keyword type="" name="std::experimental::is_member_pointer_v" link="cpp/experimental/type_trait_variable_templates"/>
    <keyword type="" name="std::experimental::is_const_v" link="cpp/experimental/type_trait_variable_templates"/>
    <keyword type="" name="std::experimental::is_volatile_v" link="cpp/experimental/type_trait_variable_templates"/>
    <keyword type="" name="std::experimental::is_trivial_v" link="cpp/experimental/type_trait_variable_templates"/>
    <keyword type="" name="std::experimental::is_trivially_copyable_v" link="cpp/experimental/type_trait_variable_templates"/>
    <keyword type="" name="std::experimental::is_standard_layout_v" link="cpp/experimental/type_trait_variable_templates"/>
    <keyword type="" name="std::experimental::is_pod_v" link="cpp/experimental/type_trait_variable_templates"/>
    <keyword type="" name="std::experimental::is_literal_type_v" link="cpp/experimental/type_trait_variable_templates"/>
    <keyword type="" name="std::experimental::is_empty_v" link="cpp/experimental/type_trait_variable_templates"/>
    <keyword type="" name="std::experimental::is_polymorphic_v" link="cpp/experimental/type_trait_variable_templates"/>
    <keyword type="" name="std::experimental::is_abstract_v" link="cpp/experimental/type_trait_variable_templates"/>
    <keyword type="" name="std::experimental::is_final_v" link="cpp/experimental/type_trait_variable_templates"/>
    <keyword type="" name="std::experimental::is_signed_v" link="cpp/experimental/type_trait_variable_templates"/>
    <keyword type="" name="std::experimental::is_unsigned_v" link="cpp/experimental/type_trait_variable_templates"/>
    <keyword type="" name="std::experimental::is_constructible_v" link="cpp/experimental/type_trait_variable_templates"/>
    <keyword type="" name="std::experimental::is_trivially_constructible_v" link="cpp/experimental/type_trait_variable_templates"/>
    <keyword type="" name="std::experimental::is_nothrow_constructible_v" link="cpp/experimental/type_trait_variable_templates"/>
    <keyword type="" name="std::experimental::is_default_constructible_v" link="cpp/experimental/type_trait_variable_templates"/>
    <keyword type="" name="std::experimental::is_trivially_default_constructible_v" link="cpp/experimental/type_trait_variable_templates"/>
    <keyword type="" name="std::experimental::is_nothrow_default_constructible_v" link="cpp/experimental/type_trait_variable_templates"/>
    <keyword type="" name="std::experimental::is_copy_constructible_v" link="cpp/experimental/type_trait_variable_templates"/>
    <keyword type="" name="std::experimental::is_trivially_copy_constructible_v" link="cpp/experimental/type_trait_variable_templates"/>
    <keyword type="" name="std::experimental::is_nothrow_copy_constructible_v" link="cpp/experimental/type_trait_variable_templates"/>
    <keyword type="" name="std::experimental::is_move_constructible_v" link="cpp/experimental/type_trait_variable_templates"/>
    <keyword type="" name="std::experimental::is_trivially_move_constructible_v" link="cpp/experimental/type_trait_variable_templates"/>
    <keyword type="" name="std::experimental::is_nothrow_move_constructible_v" link="cpp/experimental/type_trait_variable_templates"/>
    <keyword type="" name="std::experimental::is_assignable_v" link="cpp/experimental/type_trait_variable_templates"/>
    <keyword type="" name="std::experimental::is_trivially_assignable_v" link="cpp/experimental/type_trait_variable_templates"/>
    <keyword type="" name="std::experimental::is_nothrow_assignable_v" link="cpp/experimental/type_trait_variable_templates"/>
    <keyword type="" name="std::experimental::is_copy_assignable_v" link="cpp/experimental/type_trait_variable_templates"/>
    <keyword type="" name="std::experimental::is_trivially_copy_assignable_v" link="cpp/experimental/type_trait_variable_templates"/>
    <keyword type="" name="std::experimental::is_nothrow_copy_assignable_v" link="cpp/experimental/type_trait_variable_templates"/>
    <keyword type="" name="std::experimental::is_move_assignable_v" link="cpp/experimental/type_trait_variable_templates"/>
    <keyword type="" name="std::experimental::is_trivially_move_assignable_v" link="cpp/experimental/type_trait_variable_templates"/>
    <keyword type="" name="std::experimental::is_nothrow_move_assignable_v" link="cpp/experimental/type_trait_variable_templates"/>
    <keyword type="" name="std::experimental::is_destructible_v" link="cpp/experimental/type_trait_variable_templates"/>
    <keyword type="" name="std::experimental::is_trivially_destructible_v" link="cpp/experimental/type_trait_variable_templates"/>
    <keyword type="" name="std::experimental::is_nothrow_destructible_v" link="cpp/experimental/type_trait_variable_templates"/>
    <keyword type="" name="std::experimental::has_virtual_destructor_v" link="cpp/experimental/type_trait_variable_templates"/>
    <keyword type="" name="std::experimental::alignment_of_v" link="cpp/experimental/type_trait_variable_templates"/>
    <keyword type="" name="std::experimental::rank_v" link="cpp/experimental/type_trait_variable_templates"/>
    <keyword type="" name="std::experimental::extent_v" link="cpp/experimental/type_trait_variable_templates"/>
    <keyword type="" name="std::experimental::is_same_v" link="cpp/experimental/type_trait_variable_templates"/>
    <keyword type="" name="std::experimental::is_base_of_v" link="cpp/experimental/type_trait_variable_templates"/>
    <keyword type="" name="std::experimental::is_convertible_v" link="cpp/experimental/type_trait_variable_templates"/>
    <keyword type="" name="std::experimental::ratio_equal_v" link="cpp/experimental/type_trait_variable_templates"/>
    <keyword type="" name="std::experimental::ratio_not_equal_v" link="cpp/experimental/type_trait_variable_templates"/>
    <keyword type="" name="std::experimental::ratio_less_v" link="cpp/experimental/type_trait_variable_templates"/>
    <keyword type="" name="std::experimental::ratio_less_equal_v" link="cpp/experimental/type_trait_variable_templates"/>
    <keyword type="" name="std::experimental::ratio_greater_v" link="cpp/experimental/type_trait_variable_templates"/>
    <keyword type="" name="std::experimental::ratio_greater_equal_v" link="cpp/experimental/type_trait_variable_templates"/>
    <keyword type="" name="std::experimental::tuple_size_v" link="cpp/experimental/type_trait_variable_templates"/>
    <keyword type="" name="std::experimental::treat_as_floating_point_v" link="cpp/experimental/type_trait_variable_templates"/>
    <keyword type="" name="std::experimental::is_error_code_enum_v" link="cpp/experimental/type_trait_variable_templates"/>
    <keyword type="" name="std::experimental::is_error_condition_enum_v" link="cpp/experimental/type_trait_variable_templates"/>
    <keyword type="" name="std::experimental::is_bind_expression_v" link="cpp/experimental/type_trait_variable_templates"/>
    <keyword type="" name="std::experimental::is_placeholder_v" link="cpp/experimental/type_trait_variable_templates"/>
    <keyword type="" name="std::experimental::uses_allocator_v" link="cpp/experimental/type_trait_variable_templates"/>
    <keyword type="class" name="std::experimental::is_detected" link="cpp/experimental/is_detected"/>
    <keyword type="" name="std::experimental::is_detected_v" link="cpp/experimental/is_detected"/>
    <keyword type="class" name="std::experimental::detected_or" link="cpp/experimental/is_detected"/>
    <keyword type="typedef" name="std::experimental::detected_or_t" link="cpp/experimental/is_detected"/>
    <keyword type="class" name="std::experimental::is_detected_exact" link="cpp/experimental/is_detected"/>
    <keyword type="" name="std::experimental::is_detected_exact_v" link="cpp/experimental/is_detected"/>
    <keyword type="class" name="std::experimental::is_detected_convertible" link="cpp/experimental/is_detected"/>
    <keyword type="" name="std::experimental::is_detected_convertible_v" link="cpp/experimental/is_detected"/>
    <keyword type="class" name="std::experimental::nonesuch" link="cpp/experimental/nonesuch"/>
    <keyword type="class" name="std::experimental::propagate_const" link="cpp/experimental/propagate_const"/>
    <keyword type="function" name="std::experimental::propagate_const::propagate_const" link="cpp/experimental/propagate_const/propagate_const"/>
    <keyword type="function" name="std::experimental::propagate_const::operator=" link="cpp/experimental/propagate_const/operator="/>
    <keyword type="function" name="std::experimental::propagate_const::swap" link="cpp/experimental/propagate_const/swap"/>
    <keyword type="function" name="std::experimental::propagate_const::get" link="cpp/experimental/propagate_const/get"/>
    <keyword type="function" name="std::experimental::propagate_const::operator bool" link="cpp/experimental/propagate_const/operator_bool"/>
    <keyword type="function" name="std::experimental::propagate_const::operator*" link="cpp/experimental/propagate_const/operator*"/>
    <keyword type="function" name="std::experimental::propagate_const::operator-&gt;" link="cpp/experimental/propagate_const/operator*"/>
    <keyword type="function" name="std::experimental::propagate_const::operator element_type*" link="cpp/experimental/propagate_const/operator_element_type*"/>
    <keyword type="function" name="std::experimental::propagate_const::operator const element_type*" link="cpp/experimental/propagate_const/operator_element_type*"/>
    <keyword type="function" name="operator==(std::experimental::propagate_const)" link="cpp/experimental/propagate_const/operator_cmp"/>
    <keyword type="function" name="operator!=(std::experimental::propagate_const)" link="cpp/experimental/propagate_const/operator_cmp"/>
    <keyword type="function" name="operator&lt;(std::experimental::propagate_const)" link="cpp/experimental/propagate_const/operator_cmp"/>
    <keyword type="function" name="operator&lt;=(std::experimental::propagate_const)" link="cpp/experimental/propagate_const/operator_cmp"/>
    <keyword type="function" name="operator&gt;(std::experimental::propagate_const)" link="cpp/experimental/propagate_const/operator_cmp"/>
    <keyword type="function" name="operator&gt;=(std::experimental::propagate_const)" link="cpp/experimental/propagate_const/operator_cmp"/>
    <keyword type="function" name="swap(std::experimental::propagate_const)" link="cpp/experimental/propagate_const/swap2"/>
    <keyword type="class" name="std::hash&lt;std::experimental::propagate_const&gt;" link="cpp/experimental/propagate_const/hash"/>
    <keyword type="class" name="std::equal_to&lt;std::experimental::propagate_const&gt;" link="cpp/experimental/propagate_const/cmp_func"/>
    <keyword type="class" name="std::not_equal_to&lt;std::experimental::propagate_const&gt;" link="cpp/experimental/propagate_const/cmp_func"/>
    <keyword type="class" name="std::less&lt;std::experimental::propagate_const&gt;" link="cpp/experimental/propagate_const/cmp_func"/>
    <keyword type="class" name="std::greater&lt;std::experimental::propagate_const&gt;" link="cpp/experimental/propagate_const/cmp_func"/>
    <keyword type="class" name="std::less_equal&lt;std::experimental::propagate_const&gt;" link="cpp/experimental/propagate_const/cmp_func"/>
    <keyword type="class" name="std::greater_equal&lt;std::experimental::propagate_const&gt;" link="cpp/experimental/propagate_const/cmp_func"/>
    <keyword type="function" name="std::experimental::get_underlying" link="cpp/experimental/propagate_const/get_underlying"/>
    <keyword type="function" name="std::experimental::not_fn" link="cpp/experimental/not_fn"/>
    <keyword type="class" name="std::experimental::observer_ptr" link="cpp/experimental/observer_ptr"/>
    <keyword type="function" name="std::experimental::observer_ptr::observer_ptr" link="cpp/experimental/observer_ptr/observer_ptr"/>
    <keyword type="function" name="std::experimental::observer_ptr::release" link="cpp/experimental/observer_ptr/release"/>
    <keyword type="function" name="std::experimental::observer_ptr::reset" link="cpp/experimental/observer_ptr/reset"/>
    <keyword type="function" name="std::experimental::observer_ptr::swap" link="cpp/experimental/observer_ptr/swap"/>
    <keyword type="function" name="std::experimental::observer_ptr::get" link="cpp/experimental/observer_ptr/get"/>
    <keyword type="function" name="std::experimental::observer_ptr::operator bool" link="cpp/experimental/observer_ptr/operator_bool"/>
    <keyword type="function" name="std::experimental::observer_ptr::operator*" link="cpp/experimental/observer_ptr/operator*"/>
    <keyword type="function" name="std::experimental::observer_ptr::operator-&gt;" link="cpp/experimental/observer_ptr/operator*"/>
    <keyword type="function" name="std::experimental::observer_ptr::operator element_type*" link="cpp/experimental/observer_ptr/operator_pointer"/>
    <keyword type="function" name="operator==(std::experimental::observer_ptr)" link="cpp/experimental/observer_ptr/operator_cmp"/>
    <keyword type="function" name="operator!=(std::experimental::observer_ptr)" link="cpp/experimental/observer_ptr/operator_cmp"/>
    <keyword type="function" name="operator&lt;(std::experimental::observer_ptr)" link="cpp/experimental/observer_ptr/operator_cmp"/>
    <keyword type="function" name="operator&lt;=(std::experimental::observer_ptr)" link="cpp/experimental/observer_ptr/operator_cmp"/>
    <keyword type="function" name="operator&gt;(std::experimental::observer_ptr)" link="cpp/experimental/observer_ptr/operator_cmp"/>
    <keyword type="function" name="operator&gt;=(std::experimental::observer_ptr)" link="cpp/experimental/observer_ptr/operator_cmp"/>
    <keyword type="function" name="swap(std::experimental::observer_ptr)" link="cpp/experimental/observer_ptr/swap2"/>
    <keyword type="class" name="std::hash&lt;std::experimental::observer_ptr&gt;" link="cpp/experimental/observer_ptr/hash"/>
    <keyword type="function" name="std::experimental::make_observer" link="cpp/experimental/observer_ptr/make_observer"/>
    <keyword type="function" name="std::experimental::make_array" link="cpp/experimental/make_array"/>
    <keyword type="function" name="std::experimental::to_array" link="cpp/experimental/to_array"/>
    <keyword type="class" name="std::experimental::ostream_joiner" link="cpp/experimental/ostream_joiner"/>
    <keyword type="function" name="std::experimental::ostream_joiner::ostream_joiner" link="cpp/experimental/ostream_joiner/ostream_joiner"/>
    <keyword type="function" name="std::experimental::ostream_joiner::operator=" link="cpp/experimental/ostream_joiner/operator="/>
    <keyword type="function" name="std::experimental::ostream_joiner::operator*" link="cpp/experimental/ostream_joiner/operator*"/>
    <keyword type="function" name="std::experimental::ostream_joiner::operator++" link="cpp/experimental/ostream_joiner/operator_arith"/>
    <keyword type="function" name="std::experimental::ostream_joiner::operator++(int)" link="cpp/experimental/ostream_joiner/operator_arith"/>
    <keyword type="function" name="std::experimental::make_ostream_joiner" link="cpp/experimental/ostream_joiner/make_ostream_joiner"/>
    <keyword type="function" name="std::experimental::gcd" link="cpp/experimental/gcd"/>
    <keyword type="function" name="std::experimental::lcm" link="cpp/experimental/lcm"/>
    <keyword type="class" name="std::experimental::source_location" link="cpp/experimental/source_location"/>
    <keyword type="function" name="std::experimental::source_location::source_location" link="cpp/experimental/source_location/source_location"/>
    <keyword type="function" name="std::experimental::source_location::current" link="cpp/experimental/source_location/current"/>
    <keyword type="function" name="std::experimental::source_location::line" link="cpp/experimental/source_location/line"/>
    <keyword type="function" name="std::experimental::source_location::column" link="cpp/experimental/source_location/column"/>
    <keyword type="function" name="std::experimental::source_location::file_name" link="cpp/experimental/source_location/file_name"/>
    <keyword type="function" name="std::experimental::source_location::function_name" link="cpp/experimental/source_location/function_name"/>
    <keyword type="function" name="std::experimental::randint" link="cpp/experimental/randint"/>
    <keyword type="function" name="std::experimental::reseed" link="cpp/experimental/reseed"/>
    <keyword type="function" name="std::experimental::shuffle" link="cpp/experimental/shuffle"/>
    <keyword type="typedef" name="std::experimental::void_t" link="cpp/experimental/void_t"/>
    <keyword type="class" name="std::experimental::conjunction" link="cpp/experimental/conjunction"/>
    <keyword type="macro" name="std::experimental::conjunction_v" link="cpp/experimental/conjunction"/>
    <keyword type="class" name="std::experimental::disjunction" link="cpp/experimental/disjunction"/>
    <keyword type="macro" name="std::experimental::disjunction_v" link="cpp/experimental/disjunction"/>
    <keyword type="class" name="std::experimental::negation" link="cpp/experimental/negation"/>
    <keyword type="macro" name="std::experimental::negation_v" link="cpp/experimental/negation"/>
    <keyword type="function" name="std::experimental::erase(std::basic_string)" link="cpp/experimental/basic_string/erase"/>
    <keyword type="function" name="std::experimental::erase_if(std::basic_string)" link="cpp/experimental/basic_string/erase_if"/>
    <keyword type="function" name="std::experimental::erase(std::deque)" link="cpp/experimental/deque/erase"/>
    <keyword type="function" name="std::experimental::erase_if(std::deque)" link="cpp/experimental/deque/erase_if"/>
    <keyword type="function" name="std::experimental::erase(std::vector)" link="cpp/experimental/vector/erase"/>
    <keyword type="function" name="std::experimental::erase_if(std::vector)" link="cpp/experimental/vector/erase_if"/>
    <keyword type="function" name="std::experimental::erase(std::forward_list)" link="cpp/experimental/forward_list/erase"/>
    <keyword type="function" name="std::experimental::erase_if(std::forward_list)" link="cpp/experimental/forward_list/erase_if"/>
    <keyword type="function" name="std::experimental::erase(std::list)" link="cpp/experimental/list/erase"/>
    <keyword type="function" name="std::experimental::erase_if(std::list)" link="cpp/experimental/list/erase_if"/>
    <keyword type="function" name="std::experimental::erase_if(std::map)" link="cpp/experimental/map/erase_if"/>
    <keyword type="function" name="std::experimental::erase_if(std::multimap)" link="cpp/experimental/multimap/erase_if"/>
    <keyword type="function" name="std::experimental::erase_if(std::set)" link="cpp/experimental/set/erase_if"/>
    <keyword type="function" name="std::experimental::erase_if(std::multiset)" link="cpp/experimental/multiset/erase_if"/>
    <keyword type="function" name="std::experimental::erase_if(std::unordered_map)" link="cpp/experimental/unordered_map/erase_if"/>
    <keyword type="function" name="std::experimental::erase_if(std::unordered_multimap)" link="cpp/experimental/unordered_multimap/erase_if"/>
    <keyword type="function" name="std::experimental::erase_if(std::unordered_set)" link="cpp/experimental/unordered_set/erase_if"/>
    <keyword type="function" name="std::experimental::erase_if(std::unordered_multiset)" link="cpp/experimental/unordered_multiset/erase_if"/>
    <keyword type="class" name="std::experimental::filesystem::path" link="cpp/experimental/fs/path"/>
    <keyword type="function" name="std::experimental::filesystem::path::path" link="cpp/experimental/fs/path/path"/>
    <keyword type="function" name="std::experimental::filesystem::path::~path" link="cpp/experimental/fs/path/~path"/>
    <keyword type="function" name="std::experimental::filesystem::path::operator=" link="cpp/experimental/fs/path/operator="/>
    <keyword type="function" name="std::experimental::filesystem::path::assign" link="cpp/experimental/fs/path/assign"/>
    <keyword type="function" name="std::experimental::filesystem::path::append" link="cpp/experimental/fs/path/append"/>
    <keyword type="function" name="std::experimental::filesystem::path::operator/=" link="cpp/experimental/fs/path/append"/>
    <keyword type="function" name="std::experimental::filesystem::path::concat" link="cpp/experimental/fs/path/concat"/>
    <keyword type="function" name="std::experimental::filesystem::path::operator+=" link="cpp/experimental/fs/path/concat"/>
    <keyword type="function" name="std::experimental::filesystem::path::clear" link="cpp/experimental/fs/path/clear"/>
    <keyword type="function" name="std::experimental::filesystem::path::make_preferred" link="cpp/experimental/fs/path/make_preferred"/>
    <keyword type="function" name="std::experimental::filesystem::path::remove_filename" link="cpp/experimental/fs/path/remove_filename"/>
    <keyword type="function" name="std::experimental::filesystem::path::replace_filename" link="cpp/experimental/fs/path/replace_filename"/>
    <keyword type="function" name="std::experimental::filesystem::path::replace_extension" link="cpp/experimental/fs/path/replace_extension"/>
    <keyword type="function" name="std::experimental::filesystem::path::swap" link="cpp/experimental/fs/path/swap"/>
    <keyword type="function" name="std::experimental::filesystem::path::c_str" link="cpp/experimental/fs/path/native"/>
    <keyword type="function" name="std::experimental::filesystem::path::native" link="cpp/experimental/fs/path/native"/>
    <keyword type="function" name="std::experimental::filesystem::path::operator string_type" link="cpp/experimental/fs/path/native"/>
    <keyword type="function" name="std::experimental::filesystem::path::string" link="cpp/experimental/fs/path/string"/>
    <keyword type="function" name="std::experimental::filesystem::path::wstring" link="cpp/experimental/fs/path/string"/>
    <keyword type="function" name="std::experimental::filesystem::path::u8string" link="cpp/experimental/fs/path/string"/>
    <keyword type="function" name="std::experimental::filesystem::path::u16string" link="cpp/experimental/fs/path/string"/>
    <keyword type="function" name="std::experimental::filesystem::path::u32string" link="cpp/experimental/fs/path/string"/>
    <keyword type="function" name="std::experimental::filesystem::path::generic_string" link="cpp/experimental/fs/path/generic_string"/>
    <keyword type="function" name="std::experimental::filesystem::path::generic_wstring" link="cpp/experimental/fs/path/generic_string"/>
    <keyword type="function" name="std::experimental::filesystem::path::generic_u8string" link="cpp/experimental/fs/path/generic_string"/>
    <keyword type="function" name="std::experimental::filesystem::path::generic_u16string" link="cpp/experimental/fs/path/generic_string"/>
    <keyword type="function" name="std::experimental::filesystem::path::generic_u32string" link="cpp/experimental/fs/path/generic_string"/>
    <keyword type="function" name="std::experimental::filesystem::path::compare" link="cpp/experimental/fs/path/compare"/>
    <keyword type="function" name="std::experimental::filesystem::path::root_name" link="cpp/experimental/fs/path/root_name"/>
    <keyword type="function" name="std::experimental::filesystem::path::root_directory" link="cpp/experimental/fs/path/root_directory"/>
    <keyword type="function" name="std::experimental::filesystem::path::root_path" link="cpp/experimental/fs/path/root_path"/>
    <keyword type="function" name="std::experimental::filesystem::path::relative_path" link="cpp/experimental/fs/path/relative_path"/>
    <keyword type="function" name="std::experimental::filesystem::path::parent_path" link="cpp/experimental/fs/path/parent_path"/>
    <keyword type="function" name="std::experimental::filesystem::path::filename" link="cpp/experimental/fs/path/filename"/>
    <keyword type="function" name="std::experimental::filesystem::path::stem" link="cpp/experimental/fs/path/stem"/>
    <keyword type="function" name="std::experimental::filesystem::path::extension" link="cpp/experimental/fs/path/extension"/>
    <keyword type="function" name="std::experimental::filesystem::path::empty" link="cpp/experimental/fs/path/empty"/>
    <keyword type="function" name="std::experimental::filesystem::path::has_root_path" link="cpp/experimental/fs/path/has_path"/>
    <keyword type="function" name="std::experimental::filesystem::path::has_root_name" link="cpp/experimental/fs/path/has_path"/>
    <keyword type="function" name="std::experimental::filesystem::path::has_root_directory" link="cpp/experimental/fs/path/has_path"/>
    <keyword type="function" name="std::experimental::filesystem::path::has_relative_path" link="cpp/experimental/fs/path/has_path"/>
    <keyword type="function" name="std::experimental::filesystem::path::has_parent_path" link="cpp/experimental/fs/path/has_path"/>
    <keyword type="function" name="std::experimental::filesystem::path::has_filename" link="cpp/experimental/fs/path/has_path"/>
    <keyword type="function" name="std::experimental::filesystem::path::has_stem" link="cpp/experimental/fs/path/has_path"/>
    <keyword type="function" name="std::experimental::filesystem::path::has_extension" link="cpp/experimental/fs/path/has_path"/>
    <keyword type="function" name="std::experimental::filesystem::path::is_absolute" link="cpp/experimental/fs/path/is_absrel"/>
    <keyword type="function" name="std::experimental::filesystem::path::is_relative" link="cpp/experimental/fs/path/is_absrel"/>
    <keyword type="function" name="std::experimental::filesystem::path::begin" link="cpp/experimental/fs/path/begin"/>
    <keyword type="function" name="std::experimental::filesystem::path::end" link="cpp/experimental/fs/path/begin"/>
    <keyword type="function" name="swap(std::experimental::filesystem::path)" link="cpp/experimental/fs/path/swap2"/>
    <keyword type="function" name="operator==(std::experimental::filesystem::path)" link="cpp/experimental/fs/path/operator_cmp"/>
    <keyword type="function" name="operator!=(std::experimental::filesystem::path)" link="cpp/experimental/fs/path/operator_cmp"/>
    <keyword type="function" name="operator&lt;(std::experimental::filesystem::path)" link="cpp/experimental/fs/path/operator_cmp"/>
    <keyword type="function" name="operator&lt;=(std::experimental::filesystem::path)" link="cpp/experimental/fs/path/operator_cmp"/>
    <keyword type="function" name="operator&gt;(std::experimental::filesystem::path)" link="cpp/experimental/fs/path/operator_cmp"/>
    <keyword type="function" name="operator&gt;=(std::experimental::filesystem::path)" link="cpp/experimental/fs/path/operator_cmp"/>
    <keyword type="function" name="operator/(std::experimental::filesystem::path)" link="cpp/experimental/fs/path/operator_slash"/>
    <keyword type="function" name="operator&lt;&lt;(std::experimental::filesystem::path)" link="cpp/experimental/fs/path/operator_ltltgtgt"/>
    <keyword type="function" name="operator&gt;&gt;(std::experimental::filesystem::path)" link="cpp/experimental/fs/path/operator_ltltgtgt"/>
    <keyword type="function" name="u8path(std::experimental::filesystem::path)" link="cpp/experimental/fs/path/u8path"/>
    <keyword type="class" name="std::experimental::filesystem::filesystem_error" link="cpp/experimental/fs/filesystem_error"/>
    <keyword type="function" name="std::experimental::filesystem::filesystem_error::filesystem_error" link="cpp/experimental/fs/filesystem_error/filesystem_error"/>
    <keyword type="function" name="std::experimental::filesystem::filesystem_error::operator=" link="cpp/experimental/fs/filesystem_error/operator="/>
    <keyword type="function" name="std::experimental::filesystem::filesystem_error::path1" link="cpp/experimental/fs/filesystem_error/path"/>
    <keyword type="function" name="std::experimental::filesystem::filesystem_error::path2" link="cpp/experimental/fs/filesystem_error/path"/>
    <keyword type="function" name="std::experimental::filesystem::filesystem_error::what" link="cpp/experimental/fs/filesystem_error/what"/>
    <keyword type="class" name="std::experimental::filesystem::directory_entry" link="cpp/experimental/fs/directory_entry"/>
    <keyword type="function" name="std::experimental::filesystem::directory_entry::directory_entry" link="cpp/experimental/fs/directory_entry/directory_entry"/>
    <keyword type="function" name="std::experimental::filesystem::directory_entry::operator=" link="cpp/experimental/fs/directory_entry/operator="/>
    <keyword type="function" name="std::experimental::filesystem::directory_entry::assign" link="cpp/experimental/fs/directory_entry/assign"/>
    <keyword type="function" name="std::experimental::filesystem::directory_entry::replace_filename" link="cpp/experimental/fs/directory_entry/replace_filename"/>
    <keyword type="function" name="std::experimental::filesystem::directory_entry::path" link="cpp/experimental/fs/directory_entry/path"/>
    <keyword type="function" name="std::experimental::filesystem::directory_entry::status" link="cpp/experimental/fs/directory_entry/status"/>
    <keyword type="function" name="std::experimental::filesystem::directory_entry::symlink_status" link="cpp/experimental/fs/directory_entry/status"/>
    <keyword type="function" name="operator==(std::experimental::filesystem::directory_entry)" link="cpp/experimental/fs/directory_entry/operator_cmp"/>
    <keyword type="function" name="operator!=(std::experimental::filesystem::directory_entry)" link="cpp/experimental/fs/directory_entry/operator_cmp"/>
    <keyword type="function" name="operator&lt;(std::experimental::filesystem::directory_entry)" link="cpp/experimental/fs/directory_entry/operator_cmp"/>
    <keyword type="function" name="operator&lt;=(std::experimental::filesystem::directory_entry)" link="cpp/experimental/fs/directory_entry/operator_cmp"/>
    <keyword type="function" name="operator&gt;(std::experimental::filesystem::directory_entry)" link="cpp/experimental/fs/directory_entry/operator_cmp"/>
    <keyword type="function" name="operator&gt;=(std::experimental::filesystem::directory_entry)" link="cpp/experimental/fs/directory_entry/operator_cmp"/>
    <keyword type="class" name="std::experimental::filesystem::directory_iterator" link="cpp/experimental/fs/directory_iterator"/>
    <keyword type="function" name="std::experimental::filesystem::directory_iterator::directory_iterator" link="cpp/experimental/fs/directory_iterator/directory_iterator"/>
    <keyword type="function" name="std::experimental::filesystem::directory_iterator::operator=" link="cpp/experimental/fs/directory_iterator/operator="/>
    <keyword type="function" name="std::experimental::filesystem::directory_iterator::operator*" link="cpp/experimental/fs/directory_iterator/operator*"/>
    <keyword type="function" name="std::experimental::filesystem::directory_iterator::operator-&gt;" link="cpp/experimental/fs/directory_iterator/operator*"/>
    <keyword type="function" name="std::experimental::filesystem::directory_iterator::increment" link="cpp/experimental/fs/directory_iterator/increment"/>
    <keyword type="function" name="std::experimental::filesystem::directory_iterator::operator++" link="cpp/experimental/fs/directory_iterator/increment"/>
    <keyword type="function" name="std::experimental::filesystem::begin(std::experimental::filesystem::directory_iterator)" link="cpp/experimental/fs/directory_iterator/begin"/>
    <keyword type="function" name="std::experimental::filesystem::end(std::experimental::filesystem::directory_iterator)" link="cpp/experimental/fs/directory_iterator/begin"/>
    <keyword type="class" name="std::experimental::filesystem::recursive_directory_iterator" link="cpp/experimental/fs/recursive_directory_iterator"/>
    <keyword type="function" name="std::experimental::filesystem::recursive_directory_iterator::recursive_directory_iterator" link="cpp/experimental/fs/recursive_directory_iterator/recursive_directory_iterator"/>
    <keyword type="function" name="std::experimental::filesystem::recursive_directory_iterator::operator*" link="cpp/experimental/fs/recursive_directory_iterator/operator*"/>
    <keyword type="function" name="std::experimental::filesystem::recursive_directory_iterator::operator-&gt;" link="cpp/experimental/fs/recursive_directory_iterator/operator*"/>
    <keyword type="function" name="std::experimental::filesystem::recursive_directory_iterator::options" link="cpp/experimental/fs/recursive_directory_iterator/options"/>
    <keyword type="function" name="std::experimental::filesystem::recursive_directory_iterator::depth" link="cpp/experimental/fs/recursive_directory_iterator/depth"/>
    <keyword type="function" name="std::experimental::filesystem::recursive_directory_iterator::recursion_pending" link="cpp/experimental/fs/recursive_directory_iterator/recursion_pending"/>
    <keyword type="function" name="std::experimental::filesystem::recursive_directory_iterator::operator=" link="cpp/experimental/fs/recursive_directory_iterator/operator="/>
    <keyword type="function" name="std::experimental::filesystem::recursive_directory_iterator::increment" link="cpp/experimental/fs/recursive_directory_iterator/increment"/>
    <keyword type="function" name="std::experimental::filesystem::recursive_directory_iterator::operator++" link="cpp/experimental/fs/recursive_directory_iterator/increment"/>
    <keyword type="function" name="std::experimental::filesystem::recursive_directory_iterator::pop" link="cpp/experimental/fs/recursive_directory_iterator/pop"/>
    <keyword type="function" name="std::experimental::filesystem::recursive_directory_iterator::disable_recursion_pending" link="cpp/experimental/fs/recursive_directory_iterator/disable_recursion_pending"/>
    <keyword type="function" name="std::experimental::filesystem::begin(std::experimental::filesystem::recursive_directory_iterator)" link="cpp/experimental/fs/recursive_directory_iterator/begin"/>
    <keyword type="function" name="std::experimental::filesystem::end(std::experimental::filesystem::recursive_directory_iterator)" link="cpp/experimental/fs/recursive_directory_iterator/begin"/>
    <keyword type="class" name="std::experimental::filesystem::file_status" link="cpp/experimental/fs/file_status"/>
    <keyword type="function" name="std::experimental::filesystem::file_status::file_status" link="cpp/experimental/fs/file_status/file_status"/>
    <keyword type="function" name="std::experimental::filesystem::file_status::operator=" link="cpp/experimental/fs/file_status/operator="/>
    <keyword type="function" name="std::experimental::filesystem::file_status::type" link="cpp/experimental/fs/file_status/type"/>
    <keyword type="function" name="std::experimental::filesystem::file_status::permissions" link="cpp/experimental/fs/file_status/permissions"/>
    <keyword type="class" name="std::experimental::filesystem::space_info" link="cpp/experimental/fs/space_info"/>
    <keyword type="" name="std::experimental::filesystem::space_info::capacity" link="cpp/experimental/fs/space_info"/>
    <keyword type="" name="std::experimental::filesystem::space_info::free" link="cpp/experimental/fs/space_info"/>
    <keyword type="" name="std::experimental::filesystem::space_info::available" link="cpp/experimental/fs/space_info"/>
    <keyword type="class" name="std::experimental::filesystem::file_type" link="cpp/experimental/fs/file_type"/>
    <keyword type="macro" name="std::experimental::filesystem::file_type::none" link="cpp/experimental/fs/file_type"/>
    <keyword type="macro" name="std::experimental::filesystem::file_type::not_found" link="cpp/experimental/fs/file_type"/>
    <keyword type="macro" name="std::experimental::filesystem::file_type::regular" link="cpp/experimental/fs/file_type"/>
    <keyword type="macro" name="std::experimental::filesystem::file_type::directory" link="cpp/experimental/fs/file_type"/>
    <keyword type="macro" name="std::experimental::filesystem::file_type::symlink" link="cpp/experimental/fs/file_type"/>
    <keyword type="macro" name="std::experimental::filesystem::file_type::block" link="cpp/experimental/fs/file_type"/>
    <keyword type="macro" name="std::experimental::filesystem::file_type::character" link="cpp/experimental/fs/file_type"/>
    <keyword type="macro" name="std::experimental::filesystem::file_type::fifo" link="cpp/experimental/fs/file_type"/>
    <keyword type="macro" name="std::experimental::filesystem::file_type::socket" link="cpp/experimental/fs/file_type"/>
    <keyword type="macro" name="std::experimental::filesystem::file_type::unknown" link="cpp/experimental/fs/file_type"/>
    <keyword type="class" name="std::experimental::filesystem::perms" link="cpp/experimental/fs/perms"/>
    <keyword type="macro" name="std::experimental::filesystem::perms::none" link="cpp/experimental/fs/perms"/>
    <keyword type="macro" name="std::experimental::filesystem::perms::owner_read" link="cpp/experimental/fs/perms"/>
    <keyword type="macro" name="std::experimental::filesystem::perms::owner_write" link="cpp/experimental/fs/perms"/>
    <keyword type="macro" name="std::experimental::filesystem::perms::owner_exec" link="cpp/experimental/fs/perms"/>
    <keyword type="macro" name="std::experimental::filesystem::perms::owner_all" link="cpp/experimental/fs/perms"/>
    <keyword type="macro" name="std::experimental::filesystem::perms::group_read" link="cpp/experimental/fs/perms"/>
    <keyword type="macro" name="std::experimental::filesystem::perms::group_write" link="cpp/experimental/fs/perms"/>
    <keyword type="macro" name="std::experimental::filesystem::perms::group_exec" link="cpp/experimental/fs/perms"/>
    <keyword type="macro" name="std::experimental::filesystem::perms::group_all" link="cpp/experimental/fs/perms"/>
    <keyword type="macro" name="std::experimental::filesystem::perms::others_read" link="cpp/experimental/fs/perms"/>
    <keyword type="macro" name="std::experimental::filesystem::perms::others_write" link="cpp/experimental/fs/perms"/>
    <keyword type="macro" name="std::experimental::filesystem::perms::others_exec" link="cpp/experimental/fs/perms"/>
    <keyword type="macro" name="std::experimental::filesystem::perms::others_all" link="cpp/experimental/fs/perms"/>
    <keyword type="macro" name="std::experimental::filesystem::perms::all" link="cpp/experimental/fs/perms"/>
    <keyword type="macro" name="std::experimental::filesystem::perms::set_uid" link="cpp/experimental/fs/perms"/>
    <keyword type="macro" name="std::experimental::filesystem::perms::set_gid" link="cpp/experimental/fs/perms"/>
    <keyword type="macro" name="std::experimental::filesystem::perms::sticky_bit" link="cpp/experimental/fs/perms"/>
    <keyword type="macro" name="std::experimental::filesystem::perms::mask" link="cpp/experimental/fs/perms"/>
    <keyword type="macro" name="std::experimental::filesystem::perms::unknown" link="cpp/experimental/fs/perms"/>
    <keyword type="macro" name="std::experimental::filesystem::perms::add_perms" link="cpp/experimental/fs/perms"/>
    <keyword type="macro" name="std::experimental::filesystem::perms::remove_perms" link="cpp/experimental/fs/perms"/>
    <keyword type="macro" name="std::experimental::filesystem::perms::resolve_symlinks" link="cpp/experimental/fs/perms"/>
    <keyword type="class" name="std::experimental::filesystem::copy_options" link="cpp/experimental/fs/copy_options"/>
    <keyword type="macro" name="std::experimental::filesystem::copy_options::none" link="cpp/experimental/fs/copy_options"/>
    <keyword type="macro" name="std::experimental::filesystem::copy_options::skip_existing" link="cpp/experimental/fs/copy_options"/>
    <keyword type="macro" name="std::experimental::filesystem::copy_options::overwrite_existing" link="cpp/experimental/fs/copy_options"/>
    <keyword type="macro" name="std::experimental::filesystem::copy_options::update_existing" link="cpp/experimental/fs/copy_options"/>
    <keyword type="macro" name="std::experimental::filesystem::copy_options::recursive" link="cpp/experimental/fs/copy_options"/>
    <keyword type="macro" name="std::experimental::filesystem::copy_options::copy_symlinks" link="cpp/experimental/fs/copy_options"/>
    <keyword type="macro" name="std::experimental::filesystem::copy_options::skip_symlinks" link="cpp/experimental/fs/copy_options"/>
    <keyword type="macro" name="std::experimental::filesystem::copy_options::directories_only" link="cpp/experimental/fs/copy_options"/>
    <keyword type="macro" name="std::experimental::filesystem::copy_options::create_symlinks" link="cpp/experimental/fs/copy_options"/>
    <keyword type="macro" name="std::experimental::filesystem::copy_options::create_hard_links" link="cpp/experimental/fs/copy_options"/>
    <keyword type="class" name="std::experimental::filesystem::directory_options" link="cpp/experimental/fs/directory_options"/>
    <keyword type="macro" name="std::experimental::filesystem::directory_options::none" link="cpp/experimental/fs/directory_options"/>
    <keyword type="macro" name="std::experimental::filesystem::directory_options::follow_directory_symlink" link="cpp/experimental/fs/directory_options"/>
    <keyword type="macro" name="std::experimental::filesystem::directory_options::overwrite_existing" link="cpp/experimental/fs/directory_options"/>
    <keyword type="macro" name="std::experimental::filesystem::directory_options::skip_permission_denied" link="cpp/experimental/fs/directory_options"/>
    <keyword type="typedef" name="std::experimental::filesystem::file_time_type" link="cpp/experimental/fs/file_time_type"/>
    <keyword type="function" name="std::experimental::filesystem::absolute" link="cpp/experimental/fs/absolute"/>
    <keyword type="function" name="std::experimental::filesystem::system_complete" link="cpp/experimental/fs/absolute"/>
    <keyword type="function" name="std::experimental::filesystem::canonical" link="cpp/experimental/fs/canonical"/>
    <keyword type="function" name="std::experimental::filesystem::copy" link="cpp/experimental/fs/copy"/>
    <keyword type="function" name="std::experimental::filesystem::copy_file" link="cpp/experimental/fs/copy_file"/>
    <keyword type="function" name="std::experimental::filesystem::copy_symlink" link="cpp/experimental/fs/copy_symlink"/>
    <keyword type="function" name="std::experimental::filesystem::create_directory" link="cpp/experimental/fs/create_directory"/>
    <keyword type="function" name="std::experimental::filesystem::create_directories" link="cpp/experimental/fs/create_directory"/>
    <keyword type="function" name="std::experimental::filesystem::create_hard_link" link="cpp/experimental/fs/create_hard_link"/>
    <keyword type="function" name="std::experimental::filesystem::create_symlink" link="cpp/experimental/fs/create_symlink"/>
    <keyword type="function" name="std::experimental::filesystem::create_directory_symlink" link="cpp/experimental/fs/create_symlink"/>
    <keyword type="function" name="std::experimental::filesystem::current_path" link="cpp/experimental/fs/current_path"/>
    <keyword type="function" name="std::experimental::filesystem::exists" link="cpp/experimental/fs/exists"/>
    <keyword type="function" name="std::experimental::filesystem::equivalent" link="cpp/experimental/fs/equivalent"/>
    <keyword type="function" name="std::experimental::filesystem::file_size" link="cpp/experimental/fs/file_size"/>
    <keyword type="function" name="std::experimental::filesystem::hard_link_count" link="cpp/experimental/fs/hard_link_count"/>
    <keyword type="function" name="std::experimental::filesystem::last_write_time" link="cpp/experimental/fs/last_write_time"/>
    <keyword type="function" name="std::experimental::filesystem::permissions" link="cpp/experimental/fs/permissions"/>
    <keyword type="function" name="std::experimental::filesystem::read_symlink" link="cpp/experimental/fs/read_symlink"/>
    <keyword type="function" name="std::experimental::filesystem::remove" link="cpp/experimental/fs/remove"/>
    <keyword type="function" name="std::experimental::filesystem::remove_all" link="cpp/experimental/fs/remove"/>
    <keyword type="function" name="std::experimental::filesystem::rename" link="cpp/experimental/fs/rename"/>
    <keyword type="function" name="std::experimental::filesystem::resize_file" link="cpp/experimental/fs/resize_file"/>
    <keyword type="function" name="std::experimental::filesystem::space" link="cpp/experimental/fs/space"/>
    <keyword type="function" name="std::experimental::filesystem::status" link="cpp/experimental/fs/status"/>
    <keyword type="function" name="std::experimental::filesystem::symlink_status" link="cpp/experimental/fs/status"/>
    <keyword type="function" name="std::experimental::filesystem::temp_directory_path" link="cpp/experimental/fs/temp_directory_path"/>
    <keyword type="function" name="std::experimental::filesystem::is_block_file" link="cpp/experimental/fs/is_block_file"/>
    <keyword type="function" name="std::experimental::filesystem::is_character_file" link="cpp/experimental/fs/is_character_file"/>
    <keyword type="function" name="std::experimental::filesystem::is_directory" link="cpp/experimental/fs/is_directory"/>
    <keyword type="function" name="std::experimental::filesystem::is_empty" link="cpp/experimental/fs/is_empty"/>
    <keyword type="function" name="std::experimental::filesystem::is_fifo" link="cpp/experimental/fs/is_fifo"/>
    <keyword type="function" name="std::experimental::filesystem::is_other" link="cpp/experimental/fs/is_other"/>
    <keyword type="function" name="std::experimental::filesystem::is_regular_file" link="cpp/experimental/fs/is_regular_file"/>
    <keyword type="function" name="std::experimental::filesystem::is_socket" link="cpp/experimental/fs/is_socket"/>
    <keyword type="function" name="std::experimental::filesystem::is_symlink" link="cpp/experimental/fs/is_symlink"/>
    <keyword type="function" name="std::experimental::filesystem::status_known" link="cpp/experimental/fs/status_known"/>
    <keyword type="class" name="std::experimental::future" link="cpp/experimental/future"/>
    <keyword type="function" name="std::experimental::future::future" link="cpp/experimental/future/future"/>
    <keyword type="function" name="std::experimental::future::is_ready" link="cpp/experimental/future/is_ready"/>
    <keyword type="function" name="std::experimental::future::then" link="cpp/experimental/future/then"/>
    <keyword type="function" name="std::experimental::future::operator=" link="cpp/experimental/future/operator="/>
    <keyword type="class" name="std::experimental::shared_future" link="cpp/experimental/shared_future"/>
    <keyword type="function" name="std::experimental::shared_future::shared_future" link="cpp/experimental/shared_future/shared_future"/>
    <keyword type="function" name="std::experimental::shared_future::is_ready" link="cpp/experimental/shared_future/is_ready"/>
    <keyword type="function" name="std::experimental::shared_future::then" link="cpp/experimental/shared_future/then"/>
    <keyword type="function" name="std::experimental::shared_future::operator=" link="cpp/experimental/shared_future/operator="/>
    <keyword type="class" name="std::experimental::promise (Concurrency TS)" link="cpp/experimental/concurrency/promise"/>
    <keyword type="class" name="std::experimental::packaged_task (Concurrency TS)" link="cpp/experimental/concurrency/packaged_task"/>
    <keyword type="function" name="std::experimental::when_all" link="cpp/experimental/when_all"/>
    <keyword type="function" name="std::experimental::when_any" link="cpp/experimental/when_any"/>
    <keyword type="function" name="std::experimental::make_ready_future" link="cpp/experimental/make_ready_future"/>
    <keyword type="function" name="std::experimental::make_exceptional_future" link="cpp/experimental/make_exceptional_future"/>
    <keyword type="class" name="std::experimental::latch" link="cpp/experimental/latch"/>
    <keyword type="function" name="std::experimental::latch::latch" link="cpp/experimental/latch/latch"/>
    <keyword type="function" name="std::experimental::latch::~latch" link="cpp/experimental/latch/~latch"/>
    <keyword type="function" name="std::experimental::latch::count_down_and_wait" link="cpp/experimental/latch/count_down_and_wait"/>
    <keyword type="function" name="std::experimental::latch::count_down" link="cpp/experimental/latch/count_down"/>
    <keyword type="function" name="std::experimental::latch::is_ready" link="cpp/experimental/latch/is_ready"/>
    <keyword type="function" name="std::experimental::latch::wait" link="cpp/experimental/latch/wait"/>
    <keyword type="class" name="std::experimental::barrier" link="cpp/experimental/barrier"/>
    <keyword type="function" name="std::experimental::barrier::barrier" link="cpp/experimental/barrier/barrier"/>
    <keyword type="function" name="std::experimental::barrier::~barrier" link="cpp/experimental/barrier/~barrier"/>
    <keyword type="function" name="std::experimental::barrier::arrive_and_wait" link="cpp/experimental/barrier/arrive_and_wait"/>
    <keyword type="function" name="std::experimental::barrier::arrive_and_drop" link="cpp/experimental/barrier/arrive_and_drop"/>
    <keyword type="class" name="std::experimental::flex_barrier" link="cpp/experimental/flex_barrier"/>
    <keyword type="function" name="std::experimental::flex_barrier::flex_barrier" link="cpp/experimental/flex_barrier/flex_barrier"/>
    <keyword type="function" name="std::experimental::flex_barrier::~flex_barrier" link="cpp/experimental/flex_barrier/~flex_barrier"/>
    <keyword type="function" name="std::experimental::flex_barrier::arrive_and_wait" link="cpp/experimental/flex_barrier/arrive_and_wait"/>
    <keyword type="function" name="std::experimental::flex_barrier::arrive_and_drop" link="cpp/experimental/flex_barrier/arrive_and_drop"/>
    <keyword type="class" name="std::experimental::atomic_shared_ptr" link="cpp/experimental/atomic_shared_ptr"/>
    <keyword type="function" name="std::experimental::atomic_shared_ptr::atomic_shared_ptr" link="cpp/experimental/atomic_shared_ptr/atomic_shared_ptr"/>
    <keyword type="function" name="std::experimental::atomic_shared_ptr::operator=" link="cpp/experimental/atomic_shared_ptr/operator="/>
    <keyword type="function" name="std::experimental::atomic_shared_ptr::is_lock_free" link="cpp/experimental/atomic_shared_ptr/is_lock_free"/>
    <keyword type="function" name="std::experimental::atomic_shared_ptr::store" link="cpp/experimental/atomic_shared_ptr/store"/>
    <keyword type="function" name="std::experimental::atomic_shared_ptr::load" link="cpp/experimental/atomic_shared_ptr/load"/>
    <keyword type="function" name="std::experimental::atomic_shared_ptr::operator shared_ptr&lt;T&gt;" link="cpp/experimental/atomic_shared_ptr/operator_shared_ptr"/>
    <keyword type="function" name="std::experimental::atomic_shared_ptr::exchange" link="cpp/experimental/atomic_shared_ptr/exchange"/>
    <keyword type="function" name="std::experimental::atomic_shared_ptr::compare_exchange_weak" link="cpp/experimental/atomic_shared_ptr/compare_exchange"/>
    <keyword type="function" name="std::experimental::atomic_shared_ptr::compare_exchange_strong" link="cpp/experimental/atomic_shared_ptr/compare_exchange"/>
    <keyword type="class" name="std::experimental::atomic_weak_ptr" link="cpp/experimental/atomic_weak_ptr"/>
    <keyword type="function" name="std::experimental::atomic_weak_ptr::atomic_weak_ptr" link="cpp/experimental/atomic_weak_ptr/atomic_weak_ptr"/>
    <keyword type="function" name="std::experimental::atomic_weak_ptr::operator=" link="cpp/experimental/atomic_weak_ptr/operator="/>
    <keyword type="function" name="std::experimental::atomic_weak_ptr::is_lock_free" link="cpp/experimental/atomic_weak_ptr/is_lock_free"/>
    <keyword type="function" name="std::experimental::atomic_weak_ptr::store" link="cpp/experimental/atomic_weak_ptr/store"/>
    <keyword type="function" name="std::experimental::atomic_weak_ptr::load" link="cpp/experimental/atomic_weak_ptr/load"/>
    <keyword type="function" name="std::experimental::atomic_weak_ptr::operator weak_ptr&lt;T&gt;" link="cpp/experimental/atomic_weak_ptr/operator_weak_ptr"/>
    <keyword type="function" name="std::experimental::atomic_weak_ptr::exchange" link="cpp/experimental/atomic_weak_ptr/exchange"/>
    <keyword type="function" name="std::experimental::atomic_weak_ptr::compare_exchange_weak" link="cpp/experimental/atomic_weak_ptr/compare_exchange"/>
    <keyword type="function" name="std::experimental::atomic_weak_ptr::compare_exchange_strong" link="cpp/experimental/atomic_weak_ptr/compare_exchange"/>
    <keyword type="class" name="std::experimental::parallel::sequential_execution_policy" link="cpp/experimental/execution_policy_tag_t"/>
    <keyword type="class" name="std::experimental::parallel::parallel_execution_policy" link="cpp/experimental/execution_policy_tag_t"/>
    <keyword type="class" name="std::experimental::parallel::parallel_vector_execution_policy" link="cpp/experimental/execution_policy_tag_t"/>
    <keyword type="macro" name="std::experimental::parallel::seq" link="cpp/experimental/execution_policy_tag"/>
    <keyword type="macro" name="std::experimental::parallel::par" link="cpp/experimental/execution_policy_tag"/>
    <keyword type="macro" name="std::experimental::parallel::par_vec" link="cpp/experimental/execution_policy_tag"/>
    <keyword type="class" name="std::experimental::parallel::is_execution_policy" link="cpp/experimental/is_execution_policy"/>
    <keyword type="function" name="std::experimental::parallel::reduce" link="cpp/experimental/reduce"/>
    <keyword type="function" name="std::experimental::parallel::transform_reduce" link="cpp/experimental/transform_reduce"/>
  </functions>
</book>
